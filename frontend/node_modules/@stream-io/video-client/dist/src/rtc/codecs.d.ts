import type { PreferredCodec } from '../types';
/**
 * Returns back a list of sorted codecs, with the preferred codec first.
 *
 * @param kind the kind of codec to get.
 * @param preferredCodec the codec to prioritize (vp8, h264, vp9, av1...).
 * @param codecToRemove the codec to exclude from the list.
 */
export declare const getPreferredCodecs: (kind: "audio" | "video", preferredCodec: string, codecToRemove?: string) => RTCRtpCodecCapability[] | undefined;
/**
 * Returns a generic SDP for the given direction.
 * We use this SDP to send it as part of our JoinRequest so that the SFU
 * can use it to determine client's codec capabilities.
 *
 * @param direction the direction of the transceiver.
 */
export declare const getGenericSdp: (direction: RTCRtpTransceiverDirection) => Promise<string>;
/**
 * Returns the optimal video codec for the device.
 */
export declare const getOptimalVideoCodec: (preferredCodec: PreferredCodec | undefined) => PreferredCodec;
/**
 * Returns whether the codec is an SVC codec.
 *
 * @param codecOrMimeType the codec to check.
 */
export declare const isSvcCodec: (codecOrMimeType: string | undefined) => boolean;
