interface BrowserPermissionConfig {
    constraints: DisplayMediaStreamOptions;
    queryName: PermissionName;
}
export declare class BrowserPermission {
    private readonly permission;
    private ready;
    private disposeController;
    private state;
    private wasPrompted;
    private listeners;
    private logger;
    constructor(permission: BrowserPermissionConfig);
    dispose(): void;
    getState(): Promise<PermissionState>;
    prompt({ forcePrompt, throwOnNotAllowed, }?: {
        forcePrompt?: boolean;
        throwOnNotAllowed?: boolean;
    }): Promise<void>;
    listen(cb: (state: PermissionState) => void): () => boolean;
    asObservable(): import("rxjs").Observable<boolean>;
    private setState;
}
export {};
