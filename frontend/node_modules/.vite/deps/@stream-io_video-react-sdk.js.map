{
  "version": 3,
  "sources": ["../../sdp/sdp.js", "../../ua-parser-js/src/ua-parser.js", "../../sdp-transform/lib/grammar.js", "../../sdp-transform/lib/parser.js", "../../sdp-transform/lib/writer.js", "../../sdp-transform/lib/index.js", "../../base64-js/index.js", "../../webrtc-adapter/src/js/utils.js", "../../webrtc-adapter/src/js/chrome/chrome_shim.js", "../../webrtc-adapter/src/js/chrome/getusermedia.js", "../../webrtc-adapter/src/js/chrome/getdisplaymedia.js", "../../webrtc-adapter/src/js/firefox/firefox_shim.js", "../../webrtc-adapter/src/js/firefox/getusermedia.js", "../../webrtc-adapter/src/js/firefox/getdisplaymedia.js", "../../webrtc-adapter/src/js/safari/safari_shim.js", "../../webrtc-adapter/src/js/common_shim.js", "../../webrtc-adapter/src/js/adapter_factory.js", "../../webrtc-adapter/src/js/adapter_core.js", "../../@protobuf-ts/runtime/build/es2015/json-typings.js", "../../@protobuf-ts/runtime/build/es2015/base64.js", "../../@protobuf-ts/runtime/build/es2015/binary-format-contract.js", "../../@protobuf-ts/runtime/build/es2015/goog-varint.js", "../../@protobuf-ts/runtime/build/es2015/pb-long.js", "../../@protobuf-ts/runtime/build/es2015/binary-reader.js", "../../@protobuf-ts/runtime/build/es2015/assert.js", "../../@protobuf-ts/runtime/build/es2015/binary-writer.js", "../../@protobuf-ts/runtime/build/es2015/json-format-contract.js", "../../@protobuf-ts/runtime/build/es2015/message-type-contract.js", "../../@protobuf-ts/runtime/build/es2015/lower-camel-case.js", "../../@protobuf-ts/runtime/build/es2015/reflection-info.js", "../../@protobuf-ts/runtime/build/es2015/oneof.js", "../../@protobuf-ts/runtime/build/es2015/reflection-type-check.js", "../../@protobuf-ts/runtime/build/es2015/reflection-long-convert.js", "../../@protobuf-ts/runtime/build/es2015/reflection-json-reader.js", "../../@protobuf-ts/runtime/build/es2015/reflection-json-writer.js", "../../@protobuf-ts/runtime/build/es2015/reflection-scalar-default.js", "../../@protobuf-ts/runtime/build/es2015/reflection-binary-reader.js", "../../@protobuf-ts/runtime/build/es2015/reflection-binary-writer.js", "../../@protobuf-ts/runtime/build/es2015/reflection-create.js", "../../@protobuf-ts/runtime/build/es2015/reflection-merge-partial.js", "../../@protobuf-ts/runtime/build/es2015/reflection-equals.js", "../../@protobuf-ts/runtime/build/es2015/message-type.js", "../../@protobuf-ts/runtime-rpc/build/es2015/reflection-info.js", "../../@protobuf-ts/runtime-rpc/build/es2015/service-type.js", "../../@protobuf-ts/runtime-rpc/build/es2015/rpc-error.js", "../../@protobuf-ts/runtime-rpc/build/es2015/rpc-options.js", "../../@protobuf-ts/runtime-rpc/build/es2015/deferred.js", "../../@protobuf-ts/runtime-rpc/build/es2015/rpc-output-stream.js", "../../@protobuf-ts/runtime-rpc/build/es2015/unary-call.js", "../../@protobuf-ts/runtime-rpc/build/es2015/server-streaming-call.js", "../../@protobuf-ts/runtime-rpc/build/es2015/client-streaming-call.js", "../../@protobuf-ts/runtime-rpc/build/es2015/duplex-streaming-call.js", "../../@protobuf-ts/runtime-rpc/build/es2015/test-transport.js", "../../@protobuf-ts/runtime-rpc/build/es2015/rpc-interceptor.js", "../../@protobuf-ts/twirp-transport/build/es2015/twitch-twirp-error-code.js", "../../@protobuf-ts/twirp-transport/build/es2015/twirp-format.js", "../../@protobuf-ts/twirp-transport/build/es2015/twirp-transport.js", "../../rxjs/src/internal/util/isFunction.ts", "../../rxjs/src/internal/util/createErrorClass.ts", "../../rxjs/src/internal/util/UnsubscriptionError.ts", "../../rxjs/src/internal/util/arrRemove.ts", "../../rxjs/src/internal/Subscription.ts", "../../rxjs/src/internal/config.ts", "../../rxjs/src/internal/scheduler/timeoutProvider.ts", "../../rxjs/src/internal/util/reportUnhandledError.ts", "../../rxjs/src/internal/util/noop.ts", "../../rxjs/src/internal/NotificationFactories.ts", "../../rxjs/src/internal/util/errorContext.ts", "../../rxjs/src/internal/Subscriber.ts", "../../rxjs/src/internal/symbol/observable.ts", "../../rxjs/src/internal/util/identity.ts", "../../rxjs/src/internal/util/pipe.ts", "../../rxjs/src/internal/Observable.ts", "../../rxjs/src/internal/util/lift.ts", "../../rxjs/src/internal/operators/OperatorSubscriber.ts", "../../rxjs/src/internal/operators/refCount.ts", "../../rxjs/src/internal/observable/ConnectableObservable.ts", "../../rxjs/src/internal/scheduler/performanceTimestampProvider.ts", "../../rxjs/src/internal/scheduler/animationFrameProvider.ts", "../../rxjs/src/internal/observable/dom/animationFrames.ts", "../../rxjs/src/internal/util/ObjectUnsubscribedError.ts", "../../rxjs/src/internal/Subject.ts", "../../rxjs/src/internal/BehaviorSubject.ts", "../../rxjs/src/internal/scheduler/dateTimestampProvider.ts", "../../rxjs/src/internal/ReplaySubject.ts", "../../rxjs/src/internal/AsyncSubject.ts", "../../rxjs/src/internal/scheduler/Action.ts", "../../rxjs/src/internal/scheduler/intervalProvider.ts", "../../rxjs/src/internal/scheduler/AsyncAction.ts", "../../rxjs/src/internal/util/Immediate.ts", "../../rxjs/src/internal/scheduler/immediateProvider.ts", "../../rxjs/src/internal/scheduler/AsapAction.ts", "../../rxjs/src/internal/Scheduler.ts", "../../rxjs/src/internal/scheduler/AsyncScheduler.ts", "../../rxjs/src/internal/scheduler/AsapScheduler.ts", "../../rxjs/src/internal/scheduler/asap.ts", "../../rxjs/src/internal/scheduler/async.ts", "../../rxjs/src/internal/scheduler/QueueAction.ts", "../../rxjs/src/internal/scheduler/QueueScheduler.ts", "../../rxjs/src/internal/scheduler/queue.ts", "../../rxjs/src/internal/scheduler/AnimationFrameAction.ts", "../../rxjs/src/internal/scheduler/AnimationFrameScheduler.ts", "../../rxjs/src/internal/scheduler/animationFrame.ts", "../../rxjs/src/internal/scheduler/VirtualTimeScheduler.ts", "../../rxjs/src/internal/observable/empty.ts", "../../rxjs/src/internal/util/isScheduler.ts", "../../rxjs/src/internal/util/args.ts", "../../rxjs/src/internal/util/isArrayLike.ts", "../../rxjs/src/internal/util/isPromise.ts", "../../rxjs/src/internal/util/isInteropObservable.ts", "../../rxjs/src/internal/util/isAsyncIterable.ts", "../../rxjs/src/internal/util/throwUnobservableError.ts", "../../rxjs/src/internal/symbol/iterator.ts", "../../rxjs/src/internal/util/isIterable.ts", "../../rxjs/src/internal/util/isReadableStreamLike.ts", "../../rxjs/src/internal/observable/innerFrom.ts", "../../rxjs/src/internal/util/executeSchedule.ts", "../../rxjs/src/internal/operators/observeOn.ts", "../../rxjs/src/internal/operators/subscribeOn.ts", "../../rxjs/src/internal/scheduled/scheduleObservable.ts", "../../rxjs/src/internal/scheduled/schedulePromise.ts", "../../rxjs/src/internal/scheduled/scheduleArray.ts", "../../rxjs/src/internal/scheduled/scheduleIterable.ts", "../../rxjs/src/internal/scheduled/scheduleAsyncIterable.ts", "../../rxjs/src/internal/scheduled/scheduleReadableStreamLike.ts", "../../rxjs/src/internal/scheduled/scheduled.ts", "../../rxjs/src/internal/observable/from.ts", "../../rxjs/src/internal/observable/of.ts", "../../rxjs/src/internal/observable/throwError.ts", "../../rxjs/src/internal/Notification.ts", "../../rxjs/src/internal/util/EmptyError.ts", "../../rxjs/src/internal/util/ArgumentOutOfRangeError.ts", "../../rxjs/src/internal/util/NotFoundError.ts", "../../rxjs/src/internal/util/SequenceError.ts", "../../rxjs/src/internal/operators/timeout.ts", "../../rxjs/src/internal/operators/map.ts", "../../rxjs/src/internal/util/mapOneOrManyArgs.ts", "../../rxjs/src/internal/util/argsArgArrayOrObject.ts", "../../rxjs/src/internal/util/createObject.ts", "../../rxjs/src/internal/observable/combineLatest.ts", "../../rxjs/src/internal/operators/mergeInternals.ts", "../../rxjs/src/internal/operators/mergeMap.ts", "../../rxjs/src/internal/operators/mergeAll.ts", "../../rxjs/src/internal/operators/concatAll.ts", "../../rxjs/src/internal/observable/concat.ts", "../../rxjs/src/internal/observable/fromEvent.ts", "../../rxjs/src/internal/observable/fromEventPattern.ts", "../../rxjs/src/internal/observable/merge.ts", "../../rxjs/src/internal/observable/never.ts", "../../rxjs/src/internal/util/argsOrArgArray.ts", "../../rxjs/src/internal/operators/concatMap.ts", "../../rxjs/src/internal/operators/debounceTime.ts", "../../rxjs/src/internal/operators/distinctUntilChanged.ts", "../../rxjs/src/internal/operators/distinctUntilKeyChanged.ts", "../../rxjs/src/internal/operators/pairwise.ts", "../../rxjs/src/internal/operators/share.ts", "../../rxjs/src/internal/operators/shareReplay.ts", "../../rxjs/src/internal/operators/startWith.ts", "../../rxjs/src/internal/operators/takeWhile.ts", "../../isomorphic-ws/browser.js", "../../@stream-io/src/gen/coordinator/index.ts", "../../@stream-io/src/coordinator/connection/types.ts", "../../@stream-io/src/gen/google/protobuf/struct.ts", "../../@stream-io/src/gen/google/protobuf/timestamp.ts", "../../@stream-io/src/gen/video/sfu/models/models.ts", "../../@stream-io/src/gen/video/sfu/signal_rpc/signal.ts", "../../@stream-io/src/gen/video/sfu/event/events.ts", "../../@stream-io/src/types.ts", "../../@stream-io/src/gen/video/sfu/signal_rpc/signal.client.ts", "../../@stream-io/src/rpc/createClient.ts", "../../@stream-io/src/coordinator/connection/utils.ts", "../../@stream-io/src/helpers/platforms.ts", "../../@stream-io/src/logger.ts", "../../@stream-io/src/rpc/retryable.ts", "../../@stream-io/src/client-details.ts", "../../@stream-io/src/helpers/browsers.ts", "../../@stream-io/src/rtc/codecs.ts", "../../@stream-io/src/rtc/Dispatcher.ts", "../../@stream-io/src/rtc/IceTrickleBuffer.ts", "../../@stream-io/src/rtc/helpers/iceCandidate.ts", "../../@stream-io/src/rtc/bitrateLookup.ts", "../../@stream-io/src/rtc/videoLayers.ts", "../../@stream-io/src/helpers/ensureExhausted.ts", "../../@stream-io/src/rtc/helpers/tracks.ts", "../../@stream-io/src/helpers/concurrency.ts", "../../@stream-io/src/store/rxUtils.ts", "../../@stream-io/src/store/CallingState.ts", "../../@stream-io/src/store/stateStore.ts", "../../@stream-io/src/sorting/comparator.ts", "../../@stream-io/src/helpers/participantUtils.ts", "../../@stream-io/src/sorting/participants.ts", "../../@stream-io/src/sorting/presets.ts", "../../@stream-io/src/store/CallState.ts", "../../@stream-io/src/helpers/sdp-munging.ts", "../../@stream-io/src/rtc/Publisher.ts", "../../@stream-io/src/rtc/Subscriber.ts", "../../@stream-io/src/rtc/signal.ts", "../../@stream-io/src/helpers/withResolvers.ts", "../../@stream-io/src/StreamSfuClient.ts", "../../@stream-io/src/rtc/helpers/rtcConfiguration.ts", "../../@stream-io/src/events/call.ts", "../../@stream-io/src/events/call-permissions.ts", "../../@stream-io/src/events/internal.ts", "../../@stream-io/src/events/mutes.ts", "../../@stream-io/src/events/participant.ts", "../../@stream-io/src/events/speaker.ts", "../../@stream-io/src/events/callEventHandlers.ts", "../../@stream-io/src/stats/utils.ts", "../../@stream-io/src/stats/stateStoreStatsReporter.ts", "../../@stream-io/src/stats/SfuStatsReporter.ts", "../../@stream-io/src/helpers/ViewportTracker.ts", "../../@stream-io/src/helpers/DynascaleManager.ts", "../../@stream-io/src/permissions/PermissionsContext.ts", "../../@stream-io/src/CallType.ts", "../../@stream-io/src/devices/BrowserPermission.ts", "../../@stream-io/src/helpers/lazy.ts", "../../@stream-io/src/devices/devices.ts", "../../@stream-io/src/devices/InputMediaDeviceManager.ts", "../../@stream-io/src/devices/InputMediaDeviceManagerState.ts", "../../@stream-io/src/devices/CameraManagerState.ts", "../../@stream-io/src/compatibility.ts", "../../@stream-io/src/devices/CameraManager.ts", "../../@stream-io/src/devices/MicrophoneManagerState.ts", "../../@stream-io/src/helpers/sound-detector.ts", "../../@stream-io/src/helpers/RNSpeechDetector.ts", "../../@stream-io/src/devices/MicrophoneManager.ts", "../../@stream-io/src/devices/ScreenShareState.ts", "../../@stream-io/src/devices/ScreenShareManager.ts", "../../@stream-io/src/devices/SpeakerState.ts", "../../@stream-io/src/devices/SpeakerManager.ts", "../../@stream-io/src/Call.ts", "../../@stream-io/video-client/https", "../../@stream-io/src/coordinator/connection/insights.ts", "../../@stream-io/src/coordinator/connection/connection.ts", "../../@stream-io/src/coordinator/connection/base64.ts", "../../@stream-io/src/coordinator/connection/signing.ts", "../../@stream-io/src/coordinator/connection/token_manager.ts", "../../@stream-io/src/coordinator/connection/errors.ts", "../../@stream-io/src/coordinator/connection/connection_fallback.ts", "../../@stream-io/src/coordinator/connection/location.ts", "../../@stream-io/src/coordinator/connection/client.ts", "../../@stream-io/src/StreamVideoClient.ts", "../../i18next/dist/esm/i18next.js", "../../@stream-io/src/contexts/StreamCallContext.tsx", "../../@stream-io/src/i18n/utils.ts", "../../@stream-io/src/i18n/StreamI18n.ts", "../../@stream-io/src/contexts/StreamI18nContext.tsx", "../../@stream-io/src/contexts/StreamVideoContext.tsx", "../../@stream-io/src/hooks/useObservableValue.ts", "../../@stream-io/src/helpers/platforms.ts", "../../@stream-io/src/hooks/callStateHooks.ts", "../../@stream-io/src/hooks/store.ts", "../../@stream-io/src/hooks/callUtilHooks.ts", "../../@stream-io/src/hooks/index.ts", "../../@stream-io/src/wrappers/Restricted.tsx", "../../@floating-ui/react/dist/floating-ui.react.mjs", "../../@floating-ui/react/dist/floating-ui.react.utils.mjs", "../../tabbable/src/index.js", "../../wasm-feature-detect/dist/esm/index.js", "../../@stream-io/src/compatibility.ts", "../../@stream-io/src/helpers/webglHelper.ts", "../../@stream-io/src/webgl2/backgroundBlurStage.ts", "../../@stream-io/src/webgl2/backgroundImageStage.ts", "../../@stream-io/src/webgl2/jointBilateralFilterStage.ts", "../../@stream-io/src/webgl2/resizingStage.ts", "../../@stream-io/src/webgl2/softmaxStage.ts", "../../@stream-io/src/webgl2/webgl2Pipeline.ts", "../../@stream-io/src/segmentation.ts", "../../@stream-io/src/createRenderer.ts", "../../@stream-io/video-filters-web/src/tflite-simd.js", "../../@stream-io/src/version.ts", "../../@stream-io/src/tflite.ts", "../../@stream-io/src/core/components/Audio/Audio.tsx", "../../@stream-io/src/core/components/Audio/ParticipantsAudio.tsx", "../../@stream-io/src/core/components/ParticipantView/ParticipantViewContext.tsx", "../../@stream-io/src/hooks/useFloatingUIPreset.ts", "../../@stream-io/src/hooks/usePersistedDevicePreferences.ts", "../../@stream-io/src/hooks/useScrollPosition.ts", "../../@stream-io/src/hooks/useRequestPermission.ts", "../../@stream-io/src/components/Menu/MenuToggle.tsx", "../../@stream-io/src/components/Menu/GenericMenu.tsx", "../../@stream-io/src/components/Icon/Icon.tsx", "../../@stream-io/src/core/hooks/usePictureInPictureState.ts", "../../@stream-io/src/core/components/ParticipantView/ParticipantActionsContextMenu.tsx", "../../@stream-io/src/utilities/isComponentType.ts", "../../@stream-io/src/utilities/chunk.ts", "../../@stream-io/src/utilities/applyElementToRef.ts", "../../@stream-io/src/core/components/Video/BaseVideo.tsx", "../../@stream-io/src/core/components/Video/BaseVideoPlaceholder.tsx", "../../@stream-io/src/core/components/Video/DefaultVideoPlaceholder.tsx", "../../@stream-io/src/core/components/Video/DefaultPictureInPicturePlaceholder.tsx", "../../@stream-io/src/core/components/Video/Video.tsx", "../../@stream-io/src/core/hooks/useTrackElementVisibility.ts", "../../@stream-io/src/components/Avatar/Avatar.tsx", "../../@stream-io/src/components/BackgroundFilters/BackgroundFilters.tsx", "../../@stream-io/src/components/Button/IconButton.tsx", "../../@stream-io/src/components/Button/CompositeButton.tsx", "../../@stream-io/src/components/Button/TextButton.tsx", "../../@stream-io/src/components/CallControls/AcceptCallButton.tsx", "../../@stream-io/src/components/Notification/Notification.tsx", "../../@stream-io/src/components/Notification/PermissionNotification.tsx", "../../@stream-io/src/components/Notification/SpeakingWhileMutedNotification.tsx", "../../@stream-io/src/components/Notification/RecordingInProgressNotification.tsx", "../../@stream-io/src/components/LoadingIndicator/LoadingIndicator.tsx", "../../@stream-io/src/components/Tooltip/Tooltip.tsx", "../../@stream-io/src/components/Tooltip/hooks/useEnterLeaveHandlers.ts", "../../@stream-io/src/components/Tooltip/WithTooltip.tsx", "../../@stream-io/src/components/CallControls/RecordCallButton.tsx", "../../@stream-io/src/components/Reaction/Reaction.tsx", "../../@stream-io/src/components/CallControls/ReactionsButton.tsx", "../../@stream-io/src/utilities/callControlHandler.ts", "../../@stream-io/src/components/CallControls/ScreenShareButton.tsx", "../../@stream-io/src/components/DropdownSelect/DropdownSelect.tsx", "../../@stream-io/src/components/DeviceSettings/DeviceSelector.tsx", "../../@stream-io/src/components/DeviceSettings/DeviceSelectorAudio.tsx", "../../@stream-io/src/components/DeviceSettings/DeviceSelectorVideo.tsx", "../../@stream-io/src/components/DeviceSettings/DeviceSettings.tsx", "../../@stream-io/src/components/CallControls/ToggleAudioButton.tsx", "../../@stream-io/src/components/CallControls/ToggleVideoButton.tsx", "../../@stream-io/src/components/CallControls/CancelCallButton.tsx", "../../@stream-io/src/components/CallControls/CallControls.tsx", "../../@stream-io/src/components/CallStats/CallStats.tsx", "../../@stream-io/src/components/CallControls/CallStatsButton.tsx", "../../@stream-io/src/components/CallControls/ToggleAudioOutputButton.tsx", "../../@stream-io/src/components/CallParticipantsList/BlockedUserListing.tsx", "../../@stream-io/src/components/CallParticipantsList/CallParticipantListHeader.tsx", "../../@stream-io/src/components/CallParticipantsList/CallParticipantListingItem.tsx", "../../@stream-io/src/components/CallParticipantsList/CallParticipantListing.tsx", "../../@stream-io/src/components/CallParticipantsList/EmptyParticipantSearchList.tsx", "../../@stream-io/src/components/Search/SearchInput.tsx", "../../@stream-io/src/components/Search/SearchResults.tsx", "../../@stream-io/src/components/Search/hooks/useSearch.ts", "../../@stream-io/src/components/CallParticipantsList/CallParticipantsList.tsx", "../../@stream-io/src/components/CallPreview/CallPreview.tsx", "../../@stream-io/src/components/CallRecordingList/CallRecordingListHeader.tsx", "../../@stream-io/src/components/CallRecordingList/CallRecordingListItem.tsx", "../../@stream-io/src/components/CallRecordingList/EmptyCallRecordingListing.tsx", "../../@stream-io/src/components/CallRecordingList/LoadingCallRecordingListing.tsx", "../../@stream-io/src/components/CallRecordingList/CallRecordingList.tsx", "../../@stream-io/src/components/NoiseCancellation/NoiseCancellationProvider.tsx", "../../@stream-io/src/components/RingingCall/RingingCallControls.tsx", "../../@stream-io/src/components/RingingCall/RingingCall.tsx", "../../@stream-io/src/components/Permissions/PermissionRequests.tsx", "../../@stream-io/src/components/StreamTheme/StreamTheme.tsx", "../../@stream-io/src/components/VideoPreview/VideoPreview.tsx", "../../@stream-io/src/core/components/ParticipantView/DefaultParticipantViewUI.tsx", "../../@stream-io/src/core/components/ParticipantView/ParticipantView.tsx", "../../@stream-io/src/core/components/StreamCall/StreamCall.tsx", "../../@stream-io/src/translations/index.ts", "../../@stream-io/src/core/components/StreamVideo/StreamVideo.tsx", "../../@stream-io/src/core/components/CallLayout/hooks.ts", "../../@stream-io/src/core/components/CallLayout/LivestreamLayout.tsx", "../../@stream-io/src/core/components/CallLayout/PaginatedGridLayout.tsx", "../../@stream-io/src/core/hooks/useCalculateHardLimit.ts", "../../@stream-io/src/core/components/CallLayout/SpeakerLayout.tsx", "../../@stream-io/src/wrappers/LivestreamPlayer/LivestreamPlayer.tsx", "../../@stream-io/index.ts"],
  "sourcesContent": ["/* eslint-env node */\n'use strict';\n\n// SDP helpers.\nconst SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substring(2, 12);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(line => line.trim());\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  const parts = blob.split('\\nm=');\n  return parts.map((part, index) => (index > 0 ?\n    'm=' + part : part).trim() + '\\r\\n');\n};\n\n// Returns the session description.\nSDPUtils.getDescription = function(blob) {\n  const sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// Returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  const sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(line => line.indexOf(prefix) === 0);\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\n// Input can be prefixed with a=.\nSDPUtils.parseCandidate = function(line) {\n  let parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  const candidate = {\n    foundation: parts[0],\n    component: {1: 'rtp', 2: 'rtcp'}[parts[1]] || parts[1],\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7],\n  };\n\n  for (let i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compatibility.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag. Don't overwrite.\n        if (candidate[parts[i]] === undefined) {\n          candidate[parts[i]] = parts[i + 1];\n        }\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\n// This does not include the a= prefix!\nSDPUtils.writeCandidate = function(candidate) {\n  const sdp = [];\n  sdp.push(candidate.foundation);\n\n  const component = candidate.component;\n  if (component === 'rtp') {\n    sdp.push(1);\n  } else if (component === 'rtcp') {\n    sdp.push(2);\n  } else {\n    sdp.push(component);\n  }\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  const type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// Sample input:\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substring(14).split(' ');\n};\n\n// Parses a rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  let parts = line.substring(9).split(' ');\n  const parsed = {\n    payloadType: parseInt(parts.shift(), 10), // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generates a rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  const channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses a extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  const parts = line.substring(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1],\n    attributes: parts.slice(2).join(' '),\n  };\n};\n\n// Generates an extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n        ? '/' + headerExtension.direction\n        : '') +\n      ' ' + headerExtension.uri +\n      (headerExtension.attributes ? ' ' + headerExtension.attributes : '') +\n      '\\r\\n';\n};\n\n// Parses a fmtp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  const parsed = {};\n  let kv;\n  const parts = line.substring(line.indexOf(' ') + 1).split(';');\n  for (let j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates a fmtp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  let line = '';\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    const params = [];\n    Object.keys(codec.parameters).forEach(param => {\n      if (codec.parameters[param] !== undefined) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses a rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  const parts = line.substring(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' '),\n  };\n};\n\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  let lines = '';\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(fb => {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses a RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  const sp = line.indexOf(' ');\n  const parts = {\n    ssrc: parseInt(line.substring(7, sp), 10),\n  };\n  const colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substring(sp + 1, colon);\n    parts.value = line.substring(colon + 1);\n  } else {\n    parts.attribute = line.substring(sp + 1);\n  }\n  return parts;\n};\n\n// Parse a ssrc-group line (see RFC 5576). Sample input:\n// a=ssrc-group:semantics 12 34\nSDPUtils.parseSsrcGroup = function(line) {\n  const parts = line.substring(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(ssrc => parseInt(ssrc, 10)),\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// Returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  const mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substring(6);\n  }\n};\n\n// Parses a fingerprint line for DTLS-SRTP.\nSDPUtils.parseFingerprint = function(line) {\n  const parts = line.substring(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1].toUpperCase(), // the definition is upper-case in RFC 4572.\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  const lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint),\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  let sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(fp => {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n\n// Parses a=crypto lines into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#dictionary-rtcsrtpsdesparameters-members\nSDPUtils.parseCryptoLine = function(line) {\n  const parts = line.substring(9).split(' ');\n  return {\n    tag: parseInt(parts[0], 10),\n    cryptoSuite: parts[1],\n    keyParams: parts[2],\n    sessionParams: parts.slice(3),\n  };\n};\n\nSDPUtils.writeCryptoLine = function(parameters) {\n  return 'a=crypto:' + parameters.tag + ' ' +\n    parameters.cryptoSuite + ' ' +\n    (typeof parameters.keyParams === 'object'\n      ? SDPUtils.writeCryptoKeyParams(parameters.keyParams)\n      : parameters.keyParams) +\n    (parameters.sessionParams ? ' ' + parameters.sessionParams.join(' ') : '') +\n    '\\r\\n';\n};\n\n// Parses the crypto key parameters into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#rtcsrtpkeyparam*\nSDPUtils.parseCryptoKeyParams = function(keyParams) {\n  if (keyParams.indexOf('inline:') !== 0) {\n    return null;\n  }\n  const parts = keyParams.substring(7).split('|');\n  return {\n    keyMethod: 'inline',\n    keySalt: parts[0],\n    lifeTime: parts[1],\n    mkiValue: parts[2] ? parts[2].split(':')[0] : undefined,\n    mkiLength: parts[2] ? parts[2].split(':')[1] : undefined,\n  };\n};\n\nSDPUtils.writeCryptoKeyParams = function(keyParams) {\n  return keyParams.keyMethod + ':'\n    + keyParams.keySalt +\n    (keyParams.lifeTime ? '|' + keyParams.lifeTime : '') +\n    (keyParams.mkiValue && keyParams.mkiLength\n      ? '|' + keyParams.mkiValue + ':' + keyParams.mkiLength\n      : '');\n};\n\n// Extracts all SDES parameters.\nSDPUtils.getCryptoParameters = function(mediaSection, sessionpart) {\n  const lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=crypto:');\n  return lines.map(SDPUtils.parseCryptoLine);\n};\n\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  const ufrag = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-ufrag:')[0];\n  const pwd = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-pwd:')[0];\n  if (!(ufrag && pwd)) {\n    return null;\n  }\n  return {\n    usernameFragment: ufrag.substring(12),\n    password: pwd.substring(10),\n  };\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  let sdp = 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n  if (params.iceLite) {\n    sdp += 'a=ice-lite\\r\\n';\n  }\n  return sdp;\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  const description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: [],\n  };\n  const lines = SDPUtils.splitLines(mediaSection);\n  const mline = lines[0].split(' ');\n  description.profile = mline[2];\n  for (let i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    const pt = mline[i];\n    const rtpmapline = SDPUtils.matchPrefix(\n      mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      const codec = SDPUtils.parseRtpMap(rtpmapline);\n      const fmtps = SDPUtils.matchPrefix(\n        mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(line => {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  const wildcardRtcpFb = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-fb:* ')\n    .map(SDPUtils.parseRtcpFb);\n  description.codecs.forEach(codec => {\n    wildcardRtcpFb.forEach(fb=> {\n      const duplicate = codec.rtcpFeedback.find(existingFeedback => {\n        return existingFeedback.type === fb.type &&\n          existingFeedback.parameter === fb.parameter;\n      });\n      if (!duplicate) {\n        codec.rtcpFeedback.push(fb);\n      }\n    });\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  let sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' ' + (caps.profile || 'UDP/TLS/RTP/SAVPF') + ' ';\n  sdp += caps.codecs.map(codec => {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(codec => {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  let maxptime = 0;\n  caps.codecs.forEach(codec => {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(extension => {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  const encodingParameters = [];\n  const description = SDPUtils.parseRtpParameters(mediaSection);\n  const hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  const hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  const ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(parts => parts.attribute === 'cname');\n  const primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  let secondarySsrc;\n\n  const flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n    .map(line => {\n      const parts = line.substring(17).split(' ');\n      return parts.map(part => parseInt(part, 10));\n    });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(codec => {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      let encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10),\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red',\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc,\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  let bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substring(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substring(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(params => {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  const rtcpParameters = {};\n\n  // Gets the first SSRC. Note that with RTX there might be multiple\n  // SSRCs.\n  const remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(obj => obj.attribute === 'cname')[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  const rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  const mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\nSDPUtils.writeRtcpParameters = function(rtcpParameters) {\n  let sdp = '';\n  if (rtcpParameters.reducedSize) {\n    sdp += 'a=rtcp-rsize\\r\\n';\n  }\n  if (rtcpParameters.mux) {\n    sdp += 'a=rtcp-mux\\r\\n';\n  }\n  if (rtcpParameters.ssrc !== undefined && rtcpParameters.cname) {\n    sdp += 'a=ssrc:' + rtcpParameters.ssrc +\n      ' cname:' + rtcpParameters.cname + '\\r\\n';\n  }\n  return sdp;\n};\n\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  let parts;\n  const spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substring(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  const planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(msidParts => msidParts.attribute === 'msid');\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// SCTP\n// parses draft-ietf-mmusic-sctp-sdp-26 first and falls back\n// to draft-ietf-mmusic-sctp-sdp-05\nSDPUtils.parseSctpDescription = function(mediaSection) {\n  const mline = SDPUtils.parseMLine(mediaSection);\n  const maxSizeLine = SDPUtils.matchPrefix(mediaSection, 'a=max-message-size:');\n  let maxMessageSize;\n  if (maxSizeLine.length > 0) {\n    maxMessageSize = parseInt(maxSizeLine[0].substring(19), 10);\n  }\n  if (isNaN(maxMessageSize)) {\n    maxMessageSize = 65536;\n  }\n  const sctpPort = SDPUtils.matchPrefix(mediaSection, 'a=sctp-port:');\n  if (sctpPort.length > 0) {\n    return {\n      port: parseInt(sctpPort[0].substring(12), 10),\n      protocol: mline.fmt,\n      maxMessageSize,\n    };\n  }\n  const sctpMapLines = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:');\n  if (sctpMapLines.length > 0) {\n    const parts = sctpMapLines[0]\n      .substring(10)\n      .split(' ');\n    return {\n      port: parseInt(parts[0], 10),\n      protocol: parts[1],\n      maxMessageSize,\n    };\n  }\n};\n\n// SCTP\n// outputs the draft-ietf-mmusic-sctp-sdp-26 version that all browsers\n// support by now receiving in this format, unless we originally parsed\n// as the draft-ietf-mmusic-sctp-sdp-05 format (indicated by the m-line\n// protocol of DTLS/SCTP -- without UDP/ or TCP/)\nSDPUtils.writeSctpDescription = function(media, sctp) {\n  let output = [];\n  if (media.protocol !== 'DTLS/SCTP') {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.protocol + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctp-port:' + sctp.port + '\\r\\n',\n    ];\n  } else {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.port + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctpmap:' + sctp.port + ' ' + sctp.protocol + ' 65535\\r\\n',\n    ];\n  }\n  if (sctp.maxMessageSize !== undefined) {\n    output.push('a=max-message-size:' + sctp.maxMessageSize + '\\r\\n');\n  }\n  return output.join('');\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 22);\n};\n\n// Write boiler plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  let sessionId;\n  const version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  const user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  const lines = SDPUtils.splitLines(mediaSection);\n  for (let i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substring(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  const lines = SDPUtils.splitLines(mediaSection);\n  const mline = lines[0].split(' ');\n  return mline[0].substring(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  const lines = SDPUtils.splitLines(mediaSection);\n  const parts = lines[0].substring(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' '),\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  const line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  const parts = line.substring(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5],\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  const lines = SDPUtils.splitLines(blob);\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n", "/////////////////////////////////////////////////////////////////////////////////\n/* UAParser.js v1.0.39\n   Copyright © 2012-2021 Faisal Salman <f@faisalman.com>\n   MIT License *//*\n   Detect Browser, Engine, OS, CPU, and Device type/model from User-Agent data.\n   Supports browser & node.js environment. \n   Demo   : https://faisalman.github.io/ua-parser-js\n   Source : https://github.com/faisalman/ua-parser-js */\n/////////////////////////////////////////////////////////////////////////////////\n\n(function (window, undefined) {\n\n    'use strict';\n\n    //////////////\n    // Constants\n    /////////////\n\n\n    var LIBVERSION  = '1.0.39',\n        EMPTY       = '',\n        UNKNOWN     = '?',\n        FUNC_TYPE   = 'function',\n        UNDEF_TYPE  = 'undefined',\n        OBJ_TYPE    = 'object',\n        STR_TYPE    = 'string',\n        MAJOR       = 'major',\n        MODEL       = 'model',\n        NAME        = 'name',\n        TYPE        = 'type',\n        VENDOR      = 'vendor',\n        VERSION     = 'version',\n        ARCHITECTURE= 'architecture',\n        CONSOLE     = 'console',\n        MOBILE      = 'mobile',\n        TABLET      = 'tablet',\n        SMARTTV     = 'smarttv',\n        WEARABLE    = 'wearable',\n        EMBEDDED    = 'embedded',\n        UA_MAX_LENGTH = 500;\n\n    var AMAZON  = 'Amazon',\n        APPLE   = 'Apple',\n        ASUS    = 'ASUS',\n        BLACKBERRY = 'BlackBerry',\n        BROWSER = 'Browser',\n        CHROME  = 'Chrome',\n        EDGE    = 'Edge',\n        FIREFOX = 'Firefox',\n        GOOGLE  = 'Google',\n        HUAWEI  = 'Huawei',\n        LG      = 'LG',\n        MICROSOFT = 'Microsoft',\n        MOTOROLA  = 'Motorola',\n        OPERA   = 'Opera',\n        SAMSUNG = 'Samsung',\n        SHARP   = 'Sharp',\n        SONY    = 'Sony',\n        XIAOMI  = 'Xiaomi',\n        ZEBRA   = 'Zebra',\n        FACEBOOK    = 'Facebook',\n        CHROMIUM_OS = 'Chromium OS',\n        MAC_OS  = 'Mac OS',\n        SUFFIX_BROWSER = ' Browser';\n\n    ///////////\n    // Helper\n    //////////\n\n    var extend = function (regexes, extensions) {\n            var mergedRegexes = {};\n            for (var i in regexes) {\n                if (extensions[i] && extensions[i].length % 2 === 0) {\n                    mergedRegexes[i] = extensions[i].concat(regexes[i]);\n                } else {\n                    mergedRegexes[i] = regexes[i];\n                }\n            }\n            return mergedRegexes;\n        },\n        enumerize = function (arr) {\n            var enums = {};\n            for (var i=0; i<arr.length; i++) {\n                enums[arr[i].toUpperCase()] = arr[i];\n            }\n            return enums;\n        },\n        has = function (str1, str2) {\n            return typeof str1 === STR_TYPE ? lowerize(str2).indexOf(lowerize(str1)) !== -1 : false;\n        },\n        lowerize = function (str) {\n            return str.toLowerCase();\n        },\n        majorize = function (version) {\n            return typeof(version) === STR_TYPE ? version.replace(/[^\\d\\.]/g, EMPTY).split('.')[0] : undefined;\n        },\n        trim = function (str, len) {\n            if (typeof(str) === STR_TYPE) {\n                str = str.replace(/^\\s\\s*/, EMPTY);\n                return typeof(len) === UNDEF_TYPE ? str : str.substring(0, UA_MAX_LENGTH);\n            }\n    };\n\n    ///////////////\n    // Map helper\n    //////////////\n\n    var rgxMapper = function (ua, arrays) {\n\n            var i = 0, j, k, p, q, matches, match;\n\n            // loop through all regexes maps\n            while (i < arrays.length && !matches) {\n\n                var regex = arrays[i],       // even sequence (0,2,4,..)\n                    props = arrays[i + 1];   // odd sequence (1,3,5,..)\n                j = k = 0;\n\n                // try matching uastring with regexes\n                while (j < regex.length && !matches) {\n\n                    if (!regex[j]) { break; }\n                    matches = regex[j++].exec(ua);\n\n                    if (!!matches) {\n                        for (p = 0; p < props.length; p++) {\n                            match = matches[++k];\n                            q = props[p];\n                            // check if given property is actually array\n                            if (typeof q === OBJ_TYPE && q.length > 0) {\n                                if (q.length === 2) {\n                                    if (typeof q[1] == FUNC_TYPE) {\n                                        // assign modified match\n                                        this[q[0]] = q[1].call(this, match);\n                                    } else {\n                                        // assign given value, ignore regex match\n                                        this[q[0]] = q[1];\n                                    }\n                                } else if (q.length === 3) {\n                                    // check whether function or regex\n                                    if (typeof q[1] === FUNC_TYPE && !(q[1].exec && q[1].test)) {\n                                        // call function (usually string mapper)\n                                        this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;\n                                    } else {\n                                        // sanitize match using given regex\n                                        this[q[0]] = match ? match.replace(q[1], q[2]) : undefined;\n                                    }\n                                } else if (q.length === 4) {\n                                        this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;\n                                }\n                            } else {\n                                this[q] = match ? match : undefined;\n                            }\n                        }\n                    }\n                }\n                i += 2;\n            }\n        },\n\n        strMapper = function (str, map) {\n\n            for (var i in map) {\n                // check if current value is array\n                if (typeof map[i] === OBJ_TYPE && map[i].length > 0) {\n                    for (var j = 0; j < map[i].length; j++) {\n                        if (has(map[i][j], str)) {\n                            return (i === UNKNOWN) ? undefined : i;\n                        }\n                    }\n                } else if (has(map[i], str)) {\n                    return (i === UNKNOWN) ? undefined : i;\n                }\n            }\n            return map.hasOwnProperty('*') ? map['*'] : str;\n    };\n\n    ///////////////\n    // String map\n    //////////////\n\n    // Safari < 3.0\n    var oldSafariMap = {\n            '1.0'   : '/8',\n            '1.2'   : '/1',\n            '1.3'   : '/3',\n            '2.0'   : '/412',\n            '2.0.2' : '/416',\n            '2.0.3' : '/417',\n            '2.0.4' : '/419',\n            '?'     : '/'\n        },\n        windowsVersionMap = {\n            'ME'        : '4.90',\n            'NT 3.11'   : 'NT3.51',\n            'NT 4.0'    : 'NT4.0',\n            '2000'      : 'NT 5.0',\n            'XP'        : ['NT 5.1', 'NT 5.2'],\n            'Vista'     : 'NT 6.0',\n            '7'         : 'NT 6.1',\n            '8'         : 'NT 6.2',\n            '8.1'       : 'NT 6.3',\n            '10'        : ['NT 6.4', 'NT 10.0'],\n            'RT'        : 'ARM'\n    };\n\n    //////////////\n    // Regex map\n    /////////////\n\n    var regexes = {\n\n        browser : [[\n\n            /\\b(?:crmo|crios)\\/([\\w\\.]+)/i                                      // Chrome for Android/iOS\n            ], [VERSION, [NAME, 'Chrome']], [\n            /edg(?:e|ios|a)?\\/([\\w\\.]+)/i                                       // Microsoft Edge\n            ], [VERSION, [NAME, 'Edge']], [\n\n            // Presto based\n            /(opera mini)\\/([-\\w\\.]+)/i,                                        // Opera Mini\n            /(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i,                 // Opera Mobi/Tablet\n            /(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i                           // Opera\n            ], [NAME, VERSION], [\n            /opios[\\/ ]+([\\w\\.]+)/i                                             // Opera mini on iphone >= 8.0\n            ], [VERSION, [NAME, OPERA+' Mini']], [\n            /\\bop(?:rg)?x\\/([\\w\\.]+)/i                                          // Opera GX\n            ], [VERSION, [NAME, OPERA+' GX']], [\n            /\\bopr\\/([\\w\\.]+)/i                                                 // Opera Webkit\n            ], [VERSION, [NAME, OPERA]], [\n\n            // Mixed\n            /\\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\\/ ]?([\\w\\.]+)/i            // Baidu\n            ], [VERSION, [NAME, 'Baidu']], [\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(lunascape|maxthon|netfront|jasmine|blazer|sleipnir)[\\/ ]?([\\w\\.]*)/i,      \n                                                                                // Lunascape/Maxthon/Netfront/Jasmine/Blazer/Sleipnir\n            // Trident based\n            /(avant|iemobile|slim)\\s?(?:browser)?[\\/ ]?([\\w\\.]*)/i,             // Avant/IEMobile/SlimBrowser\n            /(?:ms|\\()(ie) ([\\w\\.]+)/i,                                         // Internet Explorer\n\n            // Webkit/KHTML based                                               // Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser/QupZilla/Falkon\n            /(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|duckduckgo|klar|helio)\\/([-\\w\\.]+)/i,\n                                                                                // Rekonq/Puffin/Brave/Whale/QQBrowserLite/QQ//Vivaldi/DuckDuckGo/Klar/Helio\n            /(heytap|ovi)browser\\/([\\d\\.]+)/i,                                  // HeyTap/Ovi\n            /(weibo)__([\\d\\.]+)/i                                               // Weibo\n            ], [NAME, VERSION], [\n            /quark(?:pc)?\\/([-\\w\\.]+)/i                                         // Quark\n            ], [VERSION, [NAME, 'Quark']], [\n            /\\bddg\\/([\\w\\.]+)/i                                                 // DuckDuckGo\n            ], [VERSION, [NAME, 'DuckDuckGo']], [\n            /(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i                 // UCBrowser\n            ], [VERSION, [NAME, 'UC'+BROWSER]], [\n            /microm.+\\bqbcore\\/([\\w\\.]+)/i,                                     // WeChat Desktop for Windows Built-in Browser\n            /\\bqbcore\\/([\\w\\.]+).+microm/i,\n            /micromessenger\\/([\\w\\.]+)/i                                        // WeChat\n            ], [VERSION, [NAME, 'WeChat']], [\n            /konqueror\\/([\\w\\.]+)/i                                             // Konqueror\n            ], [VERSION, [NAME, 'Konqueror']], [\n            /trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i                       // IE11\n            ], [VERSION, [NAME, 'IE']], [\n            /ya(?:search)?browser\\/([\\w\\.]+)/i                                  // Yandex\n            ], [VERSION, [NAME, 'Yandex']], [\n            /slbrowser\\/([\\w\\.]+)/i                                             // Smart Lenovo Browser\n            ], [VERSION, [NAME, 'Smart Lenovo '+BROWSER]], [\n            /(avast|avg)\\/([\\w\\.]+)/i                                           // Avast/AVG Secure Browser\n            ], [[NAME, /(.+)/, '$1 Secure '+BROWSER], VERSION], [\n            /\\bfocus\\/([\\w\\.]+)/i                                               // Firefox Focus\n            ], [VERSION, [NAME, FIREFOX+' Focus']], [\n            /\\bopt\\/([\\w\\.]+)/i                                                 // Opera Touch\n            ], [VERSION, [NAME, OPERA+' Touch']], [\n            /coc_coc\\w+\\/([\\w\\.]+)/i                                            // Coc Coc Browser\n            ], [VERSION, [NAME, 'Coc Coc']], [\n            /dolfin\\/([\\w\\.]+)/i                                                // Dolphin\n            ], [VERSION, [NAME, 'Dolphin']], [\n            /coast\\/([\\w\\.]+)/i                                                 // Opera Coast\n            ], [VERSION, [NAME, OPERA+' Coast']], [\n            /miuibrowser\\/([\\w\\.]+)/i                                           // MIUI Browser\n            ], [VERSION, [NAME, 'MIUI '+BROWSER]], [\n            /fxios\\/([-\\w\\.]+)/i                                                // Firefox for iOS\n            ], [VERSION, [NAME, FIREFOX]], [\n            /\\bqihu|(qi?ho?o?|360)browser/i                                     // 360\n            ], [[NAME, '360' + SUFFIX_BROWSER]], [\n            /\\b(qq)\\/([\\w\\.]+)/i                                                // QQ\n            ], [[NAME, /(.+)/, '$1Browser'], VERSION], [\n            /(oculus|sailfish|huawei|vivo|pico)browser\\/([\\w\\.]+)/i\n            ], [[NAME, /(.+)/, '$1' + SUFFIX_BROWSER], VERSION], [              // Oculus/Sailfish/HuaweiBrowser/VivoBrowser/PicoBrowser\n            /samsungbrowser\\/([\\w\\.]+)/i                                        // Samsung Internet\n            ], [VERSION, [NAME, SAMSUNG + ' Internet']], [\n            /(comodo_dragon)\\/([\\w\\.]+)/i                                       // Comodo Dragon\n            ], [[NAME, /_/g, ' '], VERSION], [\n            /metasr[\\/ ]?([\\d\\.]+)/i                                            // Sogou Explorer\n            ], [VERSION, [NAME, 'Sogou Explorer']], [\n            /(sogou)mo\\w+\\/([\\d\\.]+)/i                                          // Sogou Mobile\n            ], [[NAME, 'Sogou Mobile'], VERSION], [\n            /(electron)\\/([\\w\\.]+) safari/i,                                    // Electron-based App\n            /(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i,                   // Tesla\n            /m?(qqbrowser|2345Explorer)[\\/ ]?([\\w\\.]+)/i                        // QQBrowser/2345 Browser\n            ], [NAME, VERSION], [\n            /(lbbrowser|rekonq)/i,                                              // LieBao Browser/Rekonq\n            /\\[(linkedin)app\\]/i                                                // LinkedIn App for iOS & Android\n            ], [NAME], [\n\n            // WebView\n            /((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i       // Facebook App for iOS & Android\n            ], [[NAME, FACEBOOK], VERSION], [\n            /(Klarna)\\/([\\w\\.]+)/i,                                             // Klarna Shopping Browser for iOS & Android\n            /(kakao(?:talk|story))[\\/ ]([\\w\\.]+)/i,                             // Kakao App\n            /(naver)\\(.*?(\\d+\\.[\\w\\.]+).*\\)/i,                                  // Naver InApp\n            /safari (line)\\/([\\w\\.]+)/i,                                        // Line App for iOS\n            /\\b(line)\\/([\\w\\.]+)\\/iab/i,                                        // Line App for Android\n            /(alipay)client\\/([\\w\\.]+)/i,                                       // Alipay\n            /(twitter)(?:and| f.+e\\/([\\w\\.]+))/i,                               // Twitter\n            /(chromium|instagram|snapchat)[\\/ ]([-\\w\\.]+)/i                     // Chromium/Instagram/Snapchat\n            ], [NAME, VERSION], [\n            /\\bgsa\\/([\\w\\.]+) .*safari\\//i                                      // Google Search Appliance on iOS\n            ], [VERSION, [NAME, 'GSA']], [\n            /musical_ly(?:.+app_?version\\/|_)([\\w\\.]+)/i                        // TikTok\n            ], [VERSION, [NAME, 'TikTok']], [\n\n            /headlesschrome(?:\\/([\\w\\.]+)| )/i                                  // Chrome Headless\n            ], [VERSION, [NAME, CHROME+' Headless']], [\n\n            / wv\\).+(chrome)\\/([\\w\\.]+)/i                                       // Chrome WebView\n            ], [[NAME, CHROME+' WebView'], VERSION], [\n\n            /droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i           // Android Browser\n            ], [VERSION, [NAME, 'Android '+BROWSER]], [\n\n            /(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i       // Chrome/OmniWeb/Arora/Tizen/Nokia\n            ], [NAME, VERSION], [\n\n            /version\\/([\\w\\.\\,]+) .*mobile\\/\\w+ (safari)/i                      // Mobile Safari\n            ], [VERSION, [NAME, 'Mobile Safari']], [\n            /version\\/([\\w(\\.|\\,)]+) .*(mobile ?safari|safari)/i                // Safari & Safari Mobile\n            ], [VERSION, NAME], [\n            /webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i                      // Safari < 3.0\n            ], [NAME, [VERSION, strMapper, oldSafariMap]], [\n\n            /(webkit|khtml)\\/([\\w\\.]+)/i\n            ], [NAME, VERSION], [\n\n            // Gecko based\n            /(navigator|netscape\\d?)\\/([-\\w\\.]+)/i                              // Netscape\n            ], [[NAME, 'Netscape'], VERSION], [\n            /(wolvic)\\/([\\w\\.]+)/i                                              // Wolvic\n            ], [NAME, VERSION], [\n            /mobile vr; rv:([\\w\\.]+)\\).+firefox/i                               // Firefox Reality\n            ], [VERSION, [NAME, FIREFOX+' Reality']], [\n            /ekiohf.+(flow)\\/([\\w\\.]+)/i,                                       // Flow\n            /(swiftfox)/i,                                                      // Swiftfox\n            /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror)[\\/ ]?([\\w\\.\\+]+)/i,\n                                                                                // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror\n            /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i,\n                                                                                // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix\n            /(firefox)\\/([\\w\\.]+)/i,                                            // Other Firefox-based\n            /(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i,                         // Mozilla\n\n            // Other\n            /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|obigo|mosaic|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i,\n                                                                                // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Obigo/Mosaic/Go/ICE/UP.Browser\n            /(links) \\(([\\w\\.]+)/i                                              // Links\n            ], [NAME, [VERSION, /_/g, '.']], [\n            \n            /(cobalt)\\/([\\w\\.]+)/i                                              // Cobalt\n            ], [NAME, [VERSION, /master.|lts./, \"\"]]\n        ],\n\n        cpu : [[\n\n            /(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\\)]/i                     // AMD64 (x64)\n            ], [[ARCHITECTURE, 'amd64']], [\n\n            /(ia32(?=;))/i                                                      // IA32 (quicktime)\n            ], [[ARCHITECTURE, lowerize]], [\n\n            /((?:i[346]|x)86)[;\\)]/i                                            // IA32 (x86)\n            ], [[ARCHITECTURE, 'ia32']], [\n\n            /\\b(aarch64|arm(v?8e?l?|_?64))\\b/i                                 // ARM64\n            ], [[ARCHITECTURE, 'arm64']], [\n\n            /\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i                                   // ARMHF\n            ], [[ARCHITECTURE, 'armhf']], [\n\n            // PocketPC mistakenly identified as PowerPC\n            /windows (ce|mobile); ppc;/i\n            ], [[ARCHITECTURE, 'arm']], [\n\n            /((?:ppc|powerpc)(?:64)?)(?: mac|;|\\))/i                            // PowerPC\n            ], [[ARCHITECTURE, /ower/, EMPTY, lowerize]], [\n\n            /(sun4\\w)[;\\)]/i                                                    // SPARC\n            ], [[ARCHITECTURE, 'sparc']], [\n\n            /((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i\n                                                                                // IA64, 68K, ARM/64, AVR/32, IRIX/64, MIPS/64, SPARC/64, PA-RISC\n            ], [[ARCHITECTURE, lowerize]]\n        ],\n\n        device : [[\n\n            //////////////////////////\n            // MOBILES & TABLETS\n            /////////////////////////\n\n            // Samsung\n            /\\b(sch-i[89]0\\d|shw-m380s|sm-[ptx]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, TABLET]], [\n            /\\b((?:s[cgp]h|gt|sm)-(?![lr])\\w+|sc[g-]?[\\d]+a?|galaxy nexus)/i,\n            /samsung[- ]((?!sm-[lr])[-\\w]+)/i,\n            /sec-(sgh\\w+)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, MOBILE]], [\n\n            // Apple\n            /(?:\\/|\\()(ip(?:hone|od)[\\w, ]*)(?:\\/|;)/i                          // iPod/iPhone\n            ], [MODEL, [VENDOR, APPLE], [TYPE, MOBILE]], [\n            /\\((ipad);[-\\w\\),; ]+apple/i,                                       // iPad\n            /applecoremedia\\/[\\w\\.]+ \\((ipad)/i,\n            /\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i\n            ], [MODEL, [VENDOR, APPLE], [TYPE, TABLET]], [\n            /(macintosh);/i\n            ], [MODEL, [VENDOR, APPLE]], [\n\n            // Sharp\n            /\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i\n            ], [MODEL, [VENDOR, SHARP], [TYPE, MOBILE]], [\n\n            // Huawei\n            /\\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\\d{2})\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, TABLET]], [\n            /(?:huawei|honor)([-\\w ]+)[;\\)]/i,\n            /\\b(nexus 6p|\\w{2,4}e?-[atu]?[ln][\\dx][012359c][adn]?)\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, MOBILE]], [\n\n            // Xiaomi\n            /\\b(poco[\\w ]+|m2\\d{3}j\\d\\d[a-z]{2})(?: bui|\\))/i,                  // Xiaomi POCO\n            /\\b; (\\w+) build\\/hm\\1/i,                                           // Xiaomi Hongmi 'numeric' models\n            /\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i,                             // Xiaomi Hongmi\n            /\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i,                   // Xiaomi Redmi\n            /oid[^\\)]+; (m?[12][0-389][01]\\w{3,6}[c-y])( bui|; wv|\\))/i,        // Xiaomi Redmi 'numeric' models\n            /\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite|pro)?)(?: bui|\\))/i // Xiaomi Mi\n            ], [[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, MOBILE]], [\n            /oid[^\\)]+; (2\\d{4}(283|rpbf)[cgl])( bui|\\))/i,                     // Redmi Pad\n            /\\b(mi[-_ ]?(?:pad)(?:[\\w_ ]+))(?: bui|\\))/i                        // Mi Pad tablets\n            ],[[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, TABLET]], [\n\n            // OPPO\n            /; (\\w+) bui.+ oppo/i,\n            /\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i\n            ], [MODEL, [VENDOR, 'OPPO'], [TYPE, MOBILE]], [\n            /\\b(opd2\\d{3}a?) bui/i\n            ], [MODEL, [VENDOR, 'OPPO'], [TYPE, TABLET]], [\n\n            // Vivo\n            /vivo (\\w+)(?: bui|\\))/i,\n            /\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i\n            ], [MODEL, [VENDOR, 'Vivo'], [TYPE, MOBILE]], [\n\n            // Realme\n            /\\b(rmx[1-3]\\d{3})(?: bui|;|\\))/i\n            ], [MODEL, [VENDOR, 'Realme'], [TYPE, MOBILE]], [\n\n            // Motorola\n            /\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i,\n            /\\bmot(?:orola)?[- ](\\w*)/i,\n            /((?:moto[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, MOBILE]], [\n            /\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, TABLET]], [\n\n            // LG\n            /((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i\n            ], [MODEL, [VENDOR, LG], [TYPE, TABLET]], [\n            /(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i,\n            /\\blg[-e;\\/ ]+((?!browser|netcast|android tv)\\w+)/i,\n            /\\blg-?([\\d\\w]+) bui/i\n            ], [MODEL, [VENDOR, LG], [TYPE, MOBILE]], [\n\n            // Lenovo\n            /(ideatab[-\\w ]+)/i,\n            /lenovo ?(s[56]000[-\\w]+|tab(?:[\\w ]+)|yt[-\\d\\w]{6}|tb[-\\d\\w]{6})/i\n            ], [MODEL, [VENDOR, 'Lenovo'], [TYPE, TABLET]], [\n\n            // Nokia\n            /(?:maemo|nokia).*(n900|lumia \\d+)/i,\n            /nokia[-_ ]?([-\\w\\.]*)/i\n            ], [[MODEL, /_/g, ' '], [VENDOR, 'Nokia'], [TYPE, MOBILE]], [\n\n            // Google\n            /(pixel c)\\b/i                                                      // Google Pixel C\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, TABLET]], [\n            /droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i                         // Google Pixel\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, MOBILE]], [\n\n            // Sony\n            /droid.+ (a?\\d[0-2]{2}so|[c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i\n            ], [MODEL, [VENDOR, SONY], [TYPE, MOBILE]], [\n            /sony tablet [ps]/i,\n            /\\b(?:sony)?sgp\\w+(?: bui|\\))/i\n            ], [[MODEL, 'Xperia Tablet'], [VENDOR, SONY], [TYPE, TABLET]], [\n\n            // OnePlus\n            / (kb2005|in20[12]5|be20[12][59])\\b/i,\n            /(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i\n            ], [MODEL, [VENDOR, 'OnePlus'], [TYPE, MOBILE]], [\n\n            // Amazon\n            /(alexa)webm/i,\n            /(kf[a-z]{2}wi|aeo(?!bc)\\w\\w)( bui|\\))/i,                           // Kindle Fire without Silk / Echo Show\n            /(kf[a-z]+)( bui|\\)).+silk\\//i                                      // Kindle Fire HD\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, TABLET]], [\n            /((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i                     // Fire Phone\n            ], [[MODEL, /(.+)/g, 'Fire Phone $1'], [VENDOR, AMAZON], [TYPE, MOBILE]], [\n\n            // BlackBerry\n            /(playbook);[-\\w\\),; ]+(rim)/i                                      // BlackBerry PlayBook\n            ], [MODEL, VENDOR, [TYPE, TABLET]], [\n            /\\b((?:bb[a-f]|st[hv])100-\\d)/i,\n            /\\(bb10; (\\w+)/i                                                    // BlackBerry 10\n            ], [MODEL, [VENDOR, BLACKBERRY], [TYPE, MOBILE]], [\n\n            // Asus\n            /(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, TABLET]], [\n            / (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, MOBILE]], [\n\n            // HTC\n            /(nexus 9)/i                                                        // HTC Nexus 9\n            ], [MODEL, [VENDOR, 'HTC'], [TYPE, TABLET]], [\n            /(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i,                         // HTC\n\n            // ZTE\n            /(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i,\n            /(alcatel|geeksphone|nexian|panasonic(?!(?:;|\\.))|sony(?!-bra))[-_ ]?([-\\w]*)/i         // Alcatel/GeeksPhone/Nexian/Panasonic/Sony\n            ], [VENDOR, [MODEL, /_/g, ' '], [TYPE, MOBILE]], [\n\n            // TCL\n            /droid [\\w\\.]+; ((?:8[14]9[16]|9(?:0(?:48|60|8[01])|1(?:3[27]|66)|2(?:6[69]|9[56])|466))[gqswx])\\w*(\\)| bui)/i\n            ], [MODEL, [VENDOR, 'TCL'], [TYPE, TABLET]], [\n\n            // itel\n            /(itel) ((\\w+))/i\n            ], [[VENDOR, lowerize], MODEL, [TYPE, strMapper, { 'tablet' : ['p10001l', 'w7001'], '*' : 'mobile' }]], [\n\n            // Acer\n            /droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i\n            ], [MODEL, [VENDOR, 'Acer'], [TYPE, TABLET]], [\n\n            // Meizu\n            /droid.+; (m[1-5] note) bui/i,\n            /\\bmz-([-\\w]{2,})/i\n            ], [MODEL, [VENDOR, 'Meizu'], [TYPE, MOBILE]], [\n                \n            // Ulefone\n            /; ((?:power )?armor(?:[\\w ]{0,8}))(?: bui|\\))/i\n            ], [MODEL, [VENDOR, 'Ulefone'], [TYPE, MOBILE]], [\n\n            // Nothing\n            /droid.+; (a(?:015|06[35]|142p?))/i\n            ], [MODEL, [VENDOR, 'Nothing'], [TYPE, MOBILE]], [\n\n            // MIXED\n            /(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron|infinix|tecno)[-_ ]?([-\\w]*)/i,\n                                                                                // BlackBerry/BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron\n            /(hp) ([\\w ]+\\w)/i,                                                 // HP iPAQ\n            /(asus)-?(\\w+)/i,                                                   // Asus\n            /(microsoft); (lumia[\\w ]+)/i,                                      // Microsoft Lumia\n            /(lenovo)[-_ ]?([-\\w]+)/i,                                          // Lenovo\n            /(jolla)/i,                                                         // Jolla\n            /(oppo) ?([\\w ]+) bui/i                                             // OPPO\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n\n            /(kobo)\\s(ereader|touch)/i,                                         // Kobo\n            /(archos) (gamepad2?)/i,                                            // Archos\n            /(hp).+(touchpad(?!.+tablet)|tablet)/i,                             // HP TouchPad\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(nook)[\\w ]+build\\/(\\w+)/i,                                        // Nook\n            /(dell) (strea[kpr\\d ]*[\\dko])/i,                                   // Dell Streak\n            /(le[- ]+pan)[- ]+(\\w{1,9}) bui/i,                                  // Le Pan Tablets\n            /(trinity)[- ]*(t\\d{3}) bui/i,                                      // Trinity Tablets\n            /(gigaset)[- ]+(q\\w{1,9}) bui/i,                                    // Gigaset Tablets\n            /(vodafone) ([\\w ]+)(?:\\)| bui)/i                                   // Vodafone\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /(surface duo)/i                                                    // Surface Duo\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, TABLET]], [\n            /droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i                                 // Fairphone\n            ], [MODEL, [VENDOR, 'Fairphone'], [TYPE, MOBILE]], [\n            /(u304aa)/i                                                         // AT&T\n            ], [MODEL, [VENDOR, 'AT&T'], [TYPE, MOBILE]], [\n            /\\bsie-(\\w*)/i                                                      // Siemens\n            ], [MODEL, [VENDOR, 'Siemens'], [TYPE, MOBILE]], [\n            /\\b(rct\\w+) b/i                                                     // RCA Tablets\n            ], [MODEL, [VENDOR, 'RCA'], [TYPE, TABLET]], [\n            /\\b(venue[\\d ]{2,7}) b/i                                            // Dell Venue Tablets\n            ], [MODEL, [VENDOR, 'Dell'], [TYPE, TABLET]], [\n            /\\b(q(?:mv|ta)\\w+) b/i                                              // Verizon Tablet\n            ], [MODEL, [VENDOR, 'Verizon'], [TYPE, TABLET]], [\n            /\\b(?:barnes[& ]+noble |bn[rt])([\\w\\+ ]*) b/i                       // Barnes & Noble Tablet\n            ], [MODEL, [VENDOR, 'Barnes & Noble'], [TYPE, TABLET]], [\n            /\\b(tm\\d{3}\\w+) b/i\n            ], [MODEL, [VENDOR, 'NuVision'], [TYPE, TABLET]], [\n            /\\b(k88) b/i                                                        // ZTE K Series Tablet\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, TABLET]], [\n            /\\b(nx\\d{3}j) b/i                                                   // ZTE Nubia\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, MOBILE]], [\n            /\\b(gen\\d{3}) b.+49h/i                                              // Swiss GEN Mobile\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, MOBILE]], [\n            /\\b(zur\\d{3}) b/i                                                   // Swiss ZUR Tablet\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, TABLET]], [\n            /\\b((zeki)?tb.*\\b) b/i                                              // Zeki Tablets\n            ], [MODEL, [VENDOR, 'Zeki'], [TYPE, TABLET]], [\n            /\\b([yr]\\d{2}) b/i,\n            /\\b(dragon[- ]+touch |dt)(\\w{5}) b/i                                // Dragon Touch Tablet\n            ], [[VENDOR, 'Dragon Touch'], MODEL, [TYPE, TABLET]], [\n            /\\b(ns-?\\w{0,9}) b/i                                                // Insignia Tablets\n            ], [MODEL, [VENDOR, 'Insignia'], [TYPE, TABLET]], [\n            /\\b((nxa|next)-?\\w{0,9}) b/i                                        // NextBook Tablets\n            ], [MODEL, [VENDOR, 'NextBook'], [TYPE, TABLET]], [\n            /\\b(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i                  // Voice Xtreme Phones\n            ], [[VENDOR, 'Voice'], MODEL, [TYPE, MOBILE]], [\n            /\\b(lvtel\\-)?(v1[12]) b/i                                           // LvTel Phones\n            ], [[VENDOR, 'LvTel'], MODEL, [TYPE, MOBILE]], [\n            /\\b(ph-1) /i                                                        // Essential PH-1\n            ], [MODEL, [VENDOR, 'Essential'], [TYPE, MOBILE]], [\n            /\\b(v(100md|700na|7011|917g).*\\b) b/i                               // Envizen Tablets\n            ], [MODEL, [VENDOR, 'Envizen'], [TYPE, TABLET]], [\n            /\\b(trio[-\\w\\. ]+) b/i                                              // MachSpeed Tablets\n            ], [MODEL, [VENDOR, 'MachSpeed'], [TYPE, TABLET]], [\n            /\\btu_(1491) b/i                                                    // Rotor Tablets\n            ], [MODEL, [VENDOR, 'Rotor'], [TYPE, TABLET]], [\n            /(shield[\\w ]+) b/i                                                 // Nvidia Shield Tablets\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, TABLET]], [\n            /(sprint) (\\w+)/i                                                   // Sprint Phones\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n            /(kin\\.[onetw]{3})/i                                                // Microsoft Kin\n            ], [[MODEL, /\\./g, ' '], [VENDOR, MICROSOFT], [TYPE, MOBILE]], [\n            /droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i             // Zebra\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, TABLET]], [\n            /droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, MOBILE]], [\n\n            ///////////////////\n            // SMARTTVS\n            ///////////////////\n\n            /smart-tv.+(samsung)/i                                              // Samsung\n            ], [VENDOR, [TYPE, SMARTTV]], [\n            /hbbtv.+maple;(\\d+)/i\n            ], [[MODEL, /^/, 'SmartTV'], [VENDOR, SAMSUNG], [TYPE, SMARTTV]], [\n            /(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i        // LG SmartTV\n            ], [[VENDOR, LG], [TYPE, SMARTTV]], [\n            /(apple) ?tv/i                                                      // Apple TV\n            ], [VENDOR, [MODEL, APPLE+' TV'], [TYPE, SMARTTV]], [\n            /crkey/i                                                            // Google Chromecast\n            ], [[MODEL, CHROME+'cast'], [VENDOR, GOOGLE], [TYPE, SMARTTV]], [\n            /droid.+aft(\\w+)( bui|\\))/i                                         // Fire TV\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, SMARTTV]], [\n            /\\(dtv[\\);].+(aquos)/i,\n            /(aquos-tv[\\w ]+)\\)/i                                               // Sharp\n            ], [MODEL, [VENDOR, SHARP], [TYPE, SMARTTV]],[\n            /(bravia[\\w ]+)( bui|\\))/i                                              // Sony\n            ], [MODEL, [VENDOR, SONY], [TYPE, SMARTTV]], [\n            /(mitv-\\w{5}) bui/i                                                 // Xiaomi\n            ], [MODEL, [VENDOR, XIAOMI], [TYPE, SMARTTV]], [\n            /Hbbtv.*(technisat) (.*);/i                                         // TechniSAT\n            ], [VENDOR, MODEL, [TYPE, SMARTTV]], [\n            /\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i,                          // Roku\n            /hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w\\+ ]*; *([\\w\\d][^;]*);([^;]*)/i         // HbbTV devices\n            ], [[VENDOR, trim], [MODEL, trim], [TYPE, SMARTTV]], [\n            /\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i                   // SmartTV from Unidentified Vendors\n            ], [[TYPE, SMARTTV]], [\n\n            ///////////////////\n            // CONSOLES\n            ///////////////////\n\n            /(ouya)/i,                                                          // Ouya\n            /(nintendo) ([wids3utch]+)/i                                        // Nintendo\n            ], [VENDOR, MODEL, [TYPE, CONSOLE]], [\n            /droid.+; (shield) bui/i                                            // Nvidia\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, CONSOLE]], [\n            /(playstation [345portablevi]+)/i                                   // Playstation\n            ], [MODEL, [VENDOR, SONY], [TYPE, CONSOLE]], [\n            /\\b(xbox(?: one)?(?!; xbox))[\\); ]/i                                // Microsoft Xbox\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, CONSOLE]], [\n\n            ///////////////////\n            // WEARABLES\n            ///////////////////\n\n            /\\b(sm-[lr]\\d\\d[05][fnuw]?s?)\\b/i                                   // Samsung Galaxy Watch\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, WEARABLE]], [\n            /((pebble))app/i                                                    // Pebble\n            ], [VENDOR, MODEL, [TYPE, WEARABLE]], [\n            /(watch)(?: ?os[,\\/]|\\d,\\d\\/)[\\d\\.]+/i                              // Apple Watch\n            ], [MODEL, [VENDOR, APPLE], [TYPE, WEARABLE]], [\n            /droid.+; (glass) \\d/i                                              // Google Glass\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, WEARABLE]], [\n            /droid.+; (wt63?0{2,3})\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, WEARABLE]], [\n            /(quest( \\d| pro)?)/i                                               // Oculus Quest\n            ], [MODEL, [VENDOR, FACEBOOK], [TYPE, WEARABLE]], [\n\n            ///////////////////\n            // EMBEDDED\n            ///////////////////\n\n            /(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i                              // Tesla\n            ], [VENDOR, [TYPE, EMBEDDED]], [\n            /(aeobc)\\b/i                                                        // Echo Dot\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, EMBEDDED]], [\n\n            ////////////////////\n            // MIXED (GENERIC)\n            ///////////////////\n\n            /droid .+?; ([^;]+?)(?: bui|; wv\\)|\\) applew).+? mobile safari/i    // Android Phones from Unidentified Vendors\n            ], [MODEL, [TYPE, MOBILE]], [\n            /droid .+?; ([^;]+?)(?: bui|\\) applew).+?(?! mobile) safari/i       // Android Tablets from Unidentified Vendors\n            ], [MODEL, [TYPE, TABLET]], [\n            /\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i                      // Unidentifiable Tablet\n            ], [[TYPE, TABLET]], [\n            /(phone|mobile(?:[;\\/]| [ \\w\\/\\.]*safari)|pda(?=.+windows ce))/i    // Unidentifiable Mobile\n            ], [[TYPE, MOBILE]], [\n            /(android[-\\w\\. ]{0,9});.+buil/i                                    // Generic Android Device\n            ], [MODEL, [VENDOR, 'Generic']]\n        ],\n\n        engine : [[\n\n            /windows.+ edge\\/([\\w\\.]+)/i                                       // EdgeHTML\n            ], [VERSION, [NAME, EDGE+'HTML']], [\n\n            /webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i                         // Blink\n            ], [VERSION, [NAME, 'Blink']], [\n\n            /(presto)\\/([\\w\\.]+)/i,                                             // Presto\n            /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\\/([\\w\\.]+)/i, // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m/Goanna\n            /ekioh(flow)\\/([\\w\\.]+)/i,                                          // Flow\n            /(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i,                           // KHTML/Tasman/Links\n            /(icab)[\\/ ]([23]\\.[\\d\\.]+)/i,                                      // iCab\n            /\\b(libweb)/i\n            ], [NAME, VERSION], [\n\n            /rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i                                     // Gecko\n            ], [VERSION, NAME]\n        ],\n\n        os : [[\n\n            // Windows\n            /microsoft (windows) (vista|xp)/i                                   // Windows (iTunes)\n            ], [NAME, VERSION], [\n            /(windows (?:phone(?: os)?|mobile))[\\/ ]?([\\d\\.\\w ]*)/i             // Windows Phone\n            ], [NAME, [VERSION, strMapper, windowsVersionMap]], [\n            /windows nt 6\\.2; (arm)/i,                                        // Windows RT\n            /windows[\\/ ]?([ntce\\d\\. ]+\\w)(?!.+xbox)/i,\n            /(?:win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i\n            ], [[VERSION, strMapper, windowsVersionMap], [NAME, 'Windows']], [\n\n            // iOS/macOS\n            /ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i,              // iOS\n            /(?:ios;fbsv\\/|iphone.+ios[\\/ ])([\\d\\.]+)/i,\n            /cfnetwork\\/.+darwin/i\n            ], [[VERSION, /_/g, '.'], [NAME, 'iOS']], [\n            /(mac os x) ?([\\w\\. ]*)/i,\n            /(macintosh|mac_powerpc\\b)(?!.+haiku)/i                             // Mac OS\n            ], [[NAME, MAC_OS], [VERSION, /_/g, '.']], [\n\n            // Mobile OSes\n            /droid ([\\w\\.]+)\\b.+(android[- ]x86|harmonyos)/i                    // Android-x86/HarmonyOS\n            ], [VERSION, NAME], [                                               // Android/WebOS/QNX/Bada/RIM/Maemo/MeeGo/Sailfish OS\n            /(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\\/ ]?([\\w\\.]*)/i,\n            /(blackberry)\\w*\\/([\\w\\.]*)/i,                                      // Blackberry\n            /(tizen|kaios)[\\/ ]([\\w\\.]+)/i,                                     // Tizen/KaiOS\n            /\\((series40);/i                                                    // Series 40\n            ], [NAME, VERSION], [\n            /\\(bb(10);/i                                                        // BlackBerry 10\n            ], [VERSION, [NAME, BLACKBERRY]], [\n            /(?:symbian ?os|symbos|s60(?=;)|series60)[-\\/ ]?([\\w\\.]*)/i         // Symbian\n            ], [VERSION, [NAME, 'Symbian']], [\n            /mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i // Firefox OS\n            ], [VERSION, [NAME, FIREFOX+' OS']], [\n            /web0s;.+rt(tv)/i,\n            /\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i                              // WebOS\n            ], [VERSION, [NAME, 'webOS']], [\n            /watch(?: ?os[,\\/]|\\d,\\d\\/)([\\d\\.]+)/i                              // watchOS\n            ], [VERSION, [NAME, 'watchOS']], [\n\n            // Google Chromecast\n            /crkey\\/([\\d\\.]+)/i                                                 // Google Chromecast\n            ], [VERSION, [NAME, CHROME+'cast']], [\n            /(cros) [\\w]+(?:\\)| ([\\w\\.]+)\\b)/i                                  // Chromium OS\n            ], [[NAME, CHROMIUM_OS], VERSION],[\n\n            // Smart TVs\n            /panasonic;(viera)/i,                                               // Panasonic Viera\n            /(netrange)mmh/i,                                                   // Netrange\n            /(nettv)\\/(\\d+\\.[\\w\\.]+)/i,                                         // NetTV\n\n            // Console\n            /(nintendo|playstation) ([wids345portablevuch]+)/i,                 // Nintendo/Playstation\n            /(xbox); +xbox ([^\\);]+)/i,                                         // Microsoft Xbox (360, One, X, S, Series X, Series S)\n\n            // Other\n            /\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i,                            // Joli/Palm\n            /(mint)[\\/\\(\\) ]?(\\w*)/i,                                           // Mint\n            /(mageia|vectorlinux)[; ]/i,                                        // Mageia/VectorLinux\n            /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i,\n                                                                                // Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware/Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus/Raspbian/Plan9/Minix/RISCOS/Contiki/Deepin/Manjaro/elementary/Sabayon/Linspire\n            /(hurd|linux) ?([\\w\\.]*)/i,                                         // Hurd/Linux\n            /(gnu) ?([\\w\\.]*)/i,                                                // GNU\n            /\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i, // FreeBSD/NetBSD/OpenBSD/PC-BSD/GhostBSD/DragonFly\n            /(haiku) (\\w+)/i                                                    // Haiku\n            ], [NAME, VERSION], [\n            /(sunos) ?([\\w\\.\\d]*)/i                                             // Solaris\n            ], [[NAME, 'Solaris'], VERSION], [\n            /((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i,                              // Solaris\n            /(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i,                                  // AIX\n            /\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i, // BeOS/OS2/AmigaOS/MorphOS/OpenVMS/Fuchsia/HP-UX/SerenityOS\n            /(unix) ?([\\w\\.]*)/i                                                // UNIX\n            ], [NAME, VERSION]\n        ]\n    };\n\n    /////////////////\n    // Constructor\n    ////////////////\n\n    var UAParser = function (ua, extensions) {\n\n        if (typeof ua === OBJ_TYPE) {\n            extensions = ua;\n            ua = undefined;\n        }\n\n        if (!(this instanceof UAParser)) {\n            return new UAParser(ua, extensions).getResult();\n        }\n\n        var _navigator = (typeof window !== UNDEF_TYPE && window.navigator) ? window.navigator : undefined;\n        var _ua = ua || ((_navigator && _navigator.userAgent) ? _navigator.userAgent : EMPTY);\n        var _uach = (_navigator && _navigator.userAgentData) ? _navigator.userAgentData : undefined;\n        var _rgxmap = extensions ? extend(regexes, extensions) : regexes;\n        var _isSelfNav = _navigator && _navigator.userAgent == _ua;\n\n        this.getBrowser = function () {\n            var _browser = {};\n            _browser[NAME] = undefined;\n            _browser[VERSION] = undefined;\n            rgxMapper.call(_browser, _ua, _rgxmap.browser);\n            _browser[MAJOR] = majorize(_browser[VERSION]);\n            // Brave-specific detection\n            if (_isSelfNav && _navigator && _navigator.brave && typeof _navigator.brave.isBrave == FUNC_TYPE) {\n                _browser[NAME] = 'Brave';\n            }\n            return _browser;\n        };\n        this.getCPU = function () {\n            var _cpu = {};\n            _cpu[ARCHITECTURE] = undefined;\n            rgxMapper.call(_cpu, _ua, _rgxmap.cpu);\n            return _cpu;\n        };\n        this.getDevice = function () {\n            var _device = {};\n            _device[VENDOR] = undefined;\n            _device[MODEL] = undefined;\n            _device[TYPE] = undefined;\n            rgxMapper.call(_device, _ua, _rgxmap.device);\n            if (_isSelfNav && !_device[TYPE] && _uach && _uach.mobile) {\n                _device[TYPE] = MOBILE;\n            }\n            // iPadOS-specific detection: identified as Mac, but has some iOS-only properties\n            if (_isSelfNav && _device[MODEL] == 'Macintosh' && _navigator && typeof _navigator.standalone !== UNDEF_TYPE && _navigator.maxTouchPoints && _navigator.maxTouchPoints > 2) {\n                _device[MODEL] = 'iPad';\n                _device[TYPE] = TABLET;\n            }\n            return _device;\n        };\n        this.getEngine = function () {\n            var _engine = {};\n            _engine[NAME] = undefined;\n            _engine[VERSION] = undefined;\n            rgxMapper.call(_engine, _ua, _rgxmap.engine);\n            return _engine;\n        };\n        this.getOS = function () {\n            var _os = {};\n            _os[NAME] = undefined;\n            _os[VERSION] = undefined;\n            rgxMapper.call(_os, _ua, _rgxmap.os);\n            if (_isSelfNav && !_os[NAME] && _uach && _uach.platform && _uach.platform != 'Unknown') {\n                _os[NAME] = _uach.platform  \n                                    .replace(/chrome os/i, CHROMIUM_OS)\n                                    .replace(/macos/i, MAC_OS);           // backward compatibility\n            }\n            return _os;\n        };\n        this.getResult = function () {\n            return {\n                ua      : this.getUA(),\n                browser : this.getBrowser(),\n                engine  : this.getEngine(),\n                os      : this.getOS(),\n                device  : this.getDevice(),\n                cpu     : this.getCPU()\n            };\n        };\n        this.getUA = function () {\n            return _ua;\n        };\n        this.setUA = function (ua) {\n            _ua = (typeof ua === STR_TYPE && ua.length > UA_MAX_LENGTH) ? trim(ua, UA_MAX_LENGTH) : ua;\n            return this;\n        };\n        this.setUA(_ua);\n        return this;\n    };\n\n    UAParser.VERSION = LIBVERSION;\n    UAParser.BROWSER =  enumerize([NAME, VERSION, MAJOR]);\n    UAParser.CPU = enumerize([ARCHITECTURE]);\n    UAParser.DEVICE = enumerize([MODEL, VENDOR, TYPE, CONSOLE, MOBILE, SMARTTV, TABLET, WEARABLE, EMBEDDED]);\n    UAParser.ENGINE = UAParser.OS = enumerize([NAME, VERSION]);\n\n    ///////////\n    // Export\n    //////////\n\n    // check js environment\n    if (typeof(exports) !== UNDEF_TYPE) {\n        // nodejs env\n        if (typeof module !== UNDEF_TYPE && module.exports) {\n            exports = module.exports = UAParser;\n        }\n        exports.UAParser = UAParser;\n    } else {\n        // requirejs env (optional)\n        if (typeof(define) === FUNC_TYPE && define.amd) {\n            define(function () {\n                return UAParser;\n            });\n        } else if (typeof window !== UNDEF_TYPE) {\n            // browser env\n            window.UAParser = UAParser;\n        }\n    }\n\n    // jQuery/Zepto specific (optional)\n    // Note:\n    //   In AMD env the global scope should be kept clean, but jQuery is an exception.\n    //   jQuery always exports to global scope, unless jQuery.noConflict(true) is used,\n    //   and we should catch that.\n    var $ = typeof window !== UNDEF_TYPE && (window.jQuery || window.Zepto);\n    if ($ && !$.ua) {\n        var parser = new UAParser();\n        $.ua = parser.getResult();\n        $.ua.get = function () {\n            return parser.getUA();\n        };\n        $.ua.set = function (ua) {\n            parser.setUA(ua);\n            var result = parser.getResult();\n            for (var prop in result) {\n                $.ua[prop] = result[prop];\n            }\n        };\n    }\n\n})(typeof window === 'object' ? window : this);\n", "var grammar = module.exports = {\n  v: [{\n    name: 'version',\n    reg: /^(\\d*)$/\n  }],\n  o: [{\n    // o=- 20518 0 IN IP4 203.0.113.1\n    // NB: sessionId will be a String in most cases because it is huge\n    name: 'origin',\n    reg: /^(\\S*) (\\d*) (\\d*) (\\S*) IP(\\d) (\\S*)/,\n    names: ['username', 'sessionId', 'sessionVersion', 'netType', 'ipVer', 'address'],\n    format: '%s %s %d %s IP%d %s'\n  }],\n  // default parsing of these only (though some of these feel outdated)\n  s: [{ name: 'name' }],\n  i: [{ name: 'description' }],\n  u: [{ name: 'uri' }],\n  e: [{ name: 'email' }],\n  p: [{ name: 'phone' }],\n  z: [{ name: 'timezones' }], // TODO: this one can actually be parsed properly...\n  r: [{ name: 'repeats' }],   // TODO: this one can also be parsed properly\n  // k: [{}], // outdated thing ignored\n  t: [{\n    // t=0 0\n    name: 'timing',\n    reg: /^(\\d*) (\\d*)/,\n    names: ['start', 'stop'],\n    format: '%d %d'\n  }],\n  c: [{\n    // c=IN IP4 10.47.197.26\n    name: 'connection',\n    reg: /^IN IP(\\d) (\\S*)/,\n    names: ['version', 'ip'],\n    format: 'IN IP%d %s'\n  }],\n  b: [{\n    // b=AS:4000\n    push: 'bandwidth',\n    reg: /^(TIAS|AS|CT|RR|RS):(\\d*)/,\n    names: ['type', 'limit'],\n    format: '%s:%s'\n  }],\n  m: [{\n    // m=video 51744 RTP/AVP 126 97 98 34 31\n    // NB: special - pushes to session\n    // TODO: rtp/fmtp should be filtered by the payloads found here?\n    reg: /^(\\w*) (\\d*) ([\\w/]*)(?: (.*))?/,\n    names: ['type', 'port', 'protocol', 'payloads'],\n    format: '%s %d %s %s'\n  }],\n  a: [\n    {\n      // a=rtpmap:110 opus/48000/2\n      push: 'rtp',\n      reg: /^rtpmap:(\\d*) ([\\w\\-.]*)(?:\\s*\\/(\\d*)(?:\\s*\\/(\\S*))?)?/,\n      names: ['payload', 'codec', 'rate', 'encoding'],\n      format: function (o) {\n        return (o.encoding)\n          ? 'rtpmap:%d %s/%s/%s'\n          : o.rate\n            ? 'rtpmap:%d %s/%s'\n            : 'rtpmap:%d %s';\n      }\n    },\n    {\n      // a=fmtp:108 profile-level-id=24;object=23;bitrate=64000\n      // a=fmtp:111 minptime=10; useinbandfec=1\n      push: 'fmtp',\n      reg: /^fmtp:(\\d*) ([\\S| ]*)/,\n      names: ['payload', 'config'],\n      format: 'fmtp:%d %s'\n    },\n    {\n      // a=control:streamid=0\n      name: 'control',\n      reg: /^control:(.*)/,\n      format: 'control:%s'\n    },\n    {\n      // a=rtcp:65179 IN IP4 193.84.77.194\n      name: 'rtcp',\n      reg: /^rtcp:(\\d*)(?: (\\S*) IP(\\d) (\\S*))?/,\n      names: ['port', 'netType', 'ipVer', 'address'],\n      format: function (o) {\n        return (o.address != null)\n          ? 'rtcp:%d %s IP%d %s'\n          : 'rtcp:%d';\n      }\n    },\n    {\n      // a=rtcp-fb:98 trr-int 100\n      push: 'rtcpFbTrrInt',\n      reg: /^rtcp-fb:(\\*|\\d*) trr-int (\\d*)/,\n      names: ['payload', 'value'],\n      format: 'rtcp-fb:%s trr-int %d'\n    },\n    {\n      // a=rtcp-fb:98 nack rpsi\n      push: 'rtcpFb',\n      reg: /^rtcp-fb:(\\*|\\d*) ([\\w-_]*)(?: ([\\w-_]*))?/,\n      names: ['payload', 'type', 'subtype'],\n      format: function (o) {\n        return (o.subtype != null)\n          ? 'rtcp-fb:%s %s %s'\n          : 'rtcp-fb:%s %s';\n      }\n    },\n    {\n      // a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n      // a=extmap:1/recvonly URI-gps-string\n      // a=extmap:3 urn:ietf:params:rtp-hdrext:encrypt urn:ietf:params:rtp-hdrext:smpte-tc 25@600/24\n      push: 'ext',\n      reg: /^extmap:(\\d+)(?:\\/(\\w+))?(?: (urn:ietf:params:rtp-hdrext:encrypt))? (\\S*)(?: (\\S*))?/,\n      names: ['value', 'direction', 'encrypt-uri', 'uri', 'config'],\n      format: function (o) {\n        return (\n          'extmap:%d' +\n          (o.direction ? '/%s' : '%v') +\n          (o['encrypt-uri'] ? ' %s' : '%v') +\n          ' %s' +\n          (o.config ? ' %s' : '')\n        );\n      }\n    },\n    {\n      // a=extmap-allow-mixed\n      name: 'extmapAllowMixed',\n      reg: /^(extmap-allow-mixed)/\n    },\n    {\n      // a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:PS1uQCVeeCFCanVmcjkpPywjNWhcYD0mXXtxaVBR|2^20|1:32\n      push: 'crypto',\n      reg: /^crypto:(\\d*) ([\\w_]*) (\\S*)(?: (\\S*))?/,\n      names: ['id', 'suite', 'config', 'sessionConfig'],\n      format: function (o) {\n        return (o.sessionConfig != null)\n          ? 'crypto:%d %s %s %s'\n          : 'crypto:%d %s %s';\n      }\n    },\n    {\n      // a=setup:actpass\n      name: 'setup',\n      reg: /^setup:(\\w*)/,\n      format: 'setup:%s'\n    },\n    {\n      // a=connection:new\n      name: 'connectionType',\n      reg: /^connection:(new|existing)/,\n      format: 'connection:%s'\n    },\n    {\n      // a=mid:1\n      name: 'mid',\n      reg: /^mid:([^\\s]*)/,\n      format: 'mid:%s'\n    },\n    {\n      // a=msid:0c8b064d-d807-43b4-b434-f92a889d8587 98178685-d409-46e0-8e16-7ef0db0db64a\n      name: 'msid',\n      reg: /^msid:(.*)/,\n      format: 'msid:%s'\n    },\n    {\n      // a=ptime:20\n      name: 'ptime',\n      reg: /^ptime:(\\d*(?:\\.\\d*)*)/,\n      format: 'ptime:%d'\n    },\n    {\n      // a=maxptime:60\n      name: 'maxptime',\n      reg: /^maxptime:(\\d*(?:\\.\\d*)*)/,\n      format: 'maxptime:%d'\n    },\n    {\n      // a=sendrecv\n      name: 'direction',\n      reg: /^(sendrecv|recvonly|sendonly|inactive)/\n    },\n    {\n      // a=ice-lite\n      name: 'icelite',\n      reg: /^(ice-lite)/\n    },\n    {\n      // a=ice-ufrag:F7gI\n      name: 'iceUfrag',\n      reg: /^ice-ufrag:(\\S*)/,\n      format: 'ice-ufrag:%s'\n    },\n    {\n      // a=ice-pwd:x9cml/YzichV2+XlhiMu8g\n      name: 'icePwd',\n      reg: /^ice-pwd:(\\S*)/,\n      format: 'ice-pwd:%s'\n    },\n    {\n      // a=fingerprint:SHA-1 00:11:22:33:44:55:66:77:88:99:AA:BB:CC:DD:EE:FF:00:11:22:33\n      name: 'fingerprint',\n      reg: /^fingerprint:(\\S*) (\\S*)/,\n      names: ['type', 'hash'],\n      format: 'fingerprint:%s %s'\n    },\n    {\n      // a=candidate:0 1 UDP 2113667327 203.0.113.1 54400 typ host\n      // a=candidate:1162875081 1 udp 2113937151 192.168.34.75 60017 typ host generation 0 network-id 3 network-cost 10\n      // a=candidate:3289912957 2 udp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 generation 0 network-id 3 network-cost 10\n      // a=candidate:229815620 1 tcp 1518280447 192.168.150.19 60017 typ host tcptype active generation 0 network-id 3 network-cost 10\n      // a=candidate:3289912957 2 tcp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 tcptype passive generation 0 network-id 3 network-cost 10\n      push:'candidates',\n      reg: /^candidate:(\\S*) (\\d*) (\\S*) (\\d*) (\\S*) (\\d*) typ (\\S*)(?: raddr (\\S*) rport (\\d*))?(?: tcptype (\\S*))?(?: generation (\\d*))?(?: network-id (\\d*))?(?: network-cost (\\d*))?/,\n      names: ['foundation', 'component', 'transport', 'priority', 'ip', 'port', 'type', 'raddr', 'rport', 'tcptype', 'generation', 'network-id', 'network-cost'],\n      format: function (o) {\n        var str = 'candidate:%s %d %s %d %s %d typ %s';\n\n        str += (o.raddr != null) ? ' raddr %s rport %d' : '%v%v';\n\n        // NB: candidate has three optional chunks, so %void middles one if it's missing\n        str += (o.tcptype != null) ? ' tcptype %s' : '%v';\n\n        if (o.generation != null) {\n          str += ' generation %d';\n        }\n\n        str += (o['network-id'] != null) ? ' network-id %d' : '%v';\n        str += (o['network-cost'] != null) ? ' network-cost %d' : '%v';\n        return str;\n      }\n    },\n    {\n      // a=end-of-candidates (keep after the candidates line for readability)\n      name: 'endOfCandidates',\n      reg: /^(end-of-candidates)/\n    },\n    {\n      // a=remote-candidates:1 203.0.113.1 54400 2 203.0.113.1 54401 ...\n      name: 'remoteCandidates',\n      reg: /^remote-candidates:(.*)/,\n      format: 'remote-candidates:%s'\n    },\n    {\n      // a=ice-options:google-ice\n      name: 'iceOptions',\n      reg: /^ice-options:(\\S*)/,\n      format: 'ice-options:%s'\n    },\n    {\n      // a=ssrc:2566107569 cname:t9YU8M1UxTF8Y1A1\n      push: 'ssrcs',\n      reg: /^ssrc:(\\d*) ([\\w_-]*)(?::(.*))?/,\n      names: ['id', 'attribute', 'value'],\n      format: function (o) {\n        var str = 'ssrc:%d';\n        if (o.attribute != null) {\n          str += ' %s';\n          if (o.value != null) {\n            str += ':%s';\n          }\n        }\n        return str;\n      }\n    },\n    {\n      // a=ssrc-group:FEC 1 2\n      // a=ssrc-group:FEC-FR 3004364195 1080772241\n      push: 'ssrcGroups',\n      // token-char = %x21 / %x23-27 / %x2A-2B / %x2D-2E / %x30-39 / %x41-5A / %x5E-7E\n      reg: /^ssrc-group:([\\x21\\x23\\x24\\x25\\x26\\x27\\x2A\\x2B\\x2D\\x2E\\w]*) (.*)/,\n      names: ['semantics', 'ssrcs'],\n      format: 'ssrc-group:%s %s'\n    },\n    {\n      // a=msid-semantic: WMS Jvlam5X3SX1OP6pn20zWogvaKJz5Hjf9OnlV\n      name: 'msidSemantic',\n      reg: /^msid-semantic:\\s?(\\w*) (\\S*)/,\n      names: ['semantic', 'token'],\n      format: 'msid-semantic: %s %s' // space after ':' is not accidental\n    },\n    {\n      // a=group:BUNDLE audio video\n      push: 'groups',\n      reg: /^group:(\\w*) (.*)/,\n      names: ['type', 'mids'],\n      format: 'group:%s %s'\n    },\n    {\n      // a=rtcp-mux\n      name: 'rtcpMux',\n      reg: /^(rtcp-mux)/\n    },\n    {\n      // a=rtcp-rsize\n      name: 'rtcpRsize',\n      reg: /^(rtcp-rsize)/\n    },\n    {\n      // a=sctpmap:5000 webrtc-datachannel 1024\n      name: 'sctpmap',\n      reg: /^sctpmap:([\\w_/]*) (\\S*)(?: (\\S*))?/,\n      names: ['sctpmapNumber', 'app', 'maxMessageSize'],\n      format: function (o) {\n        return (o.maxMessageSize != null)\n          ? 'sctpmap:%s %s %s'\n          : 'sctpmap:%s %s';\n      }\n    },\n    {\n      // a=x-google-flag:conference\n      name: 'xGoogleFlag',\n      reg: /^x-google-flag:([^\\s]*)/,\n      format: 'x-google-flag:%s'\n    },\n    {\n      // a=rid:1 send max-width=1280;max-height=720;max-fps=30;depend=0\n      push: 'rids',\n      reg: /^rid:([\\d\\w]+) (\\w+)(?: ([\\S| ]*))?/,\n      names: ['id', 'direction', 'params'],\n      format: function (o) {\n        return (o.params) ? 'rid:%s %s %s' : 'rid:%s %s';\n      }\n    },\n    {\n      // a=imageattr:97 send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320] recv [x=330,y=250]\n      // a=imageattr:* send [x=800,y=640] recv *\n      // a=imageattr:100 recv [x=320,y=240]\n      push: 'imageattrs',\n      reg: new RegExp(\n        // a=imageattr:97\n        '^imageattr:(\\\\d+|\\\\*)' +\n        // send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320]\n        '[\\\\s\\\\t]+(send|recv)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*)' +\n        // recv [x=330,y=250]\n        '(?:[\\\\s\\\\t]+(recv|send)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*))?'\n      ),\n      names: ['pt', 'dir1', 'attrs1', 'dir2', 'attrs2'],\n      format: function (o) {\n        return 'imageattr:%s %s %s' + (o.dir2 ? ' %s %s' : '');\n      }\n    },\n    {\n      // a=simulcast:send 1,2,3;~4,~5 recv 6;~7,~8\n      // a=simulcast:recv 1;4,5 send 6;7\n      name: 'simulcast',\n      reg: new RegExp(\n        // a=simulcast:\n        '^simulcast:' +\n        // send 1,2,3;~4,~5\n        '(send|recv) ([a-zA-Z0-9\\\\-_~;,]+)' +\n        // space + recv 6;~7,~8\n        '(?:\\\\s?(send|recv) ([a-zA-Z0-9\\\\-_~;,]+))?' +\n        // end\n        '$'\n      ),\n      names: ['dir1', 'list1', 'dir2', 'list2'],\n      format: function (o) {\n        return 'simulcast:%s %s' + (o.dir2 ? ' %s %s' : '');\n      }\n    },\n    {\n      // old simulcast draft 03 (implemented by Firefox)\n      //   https://tools.ietf.org/html/draft-ietf-mmusic-sdp-simulcast-03\n      // a=simulcast: recv pt=97;98 send pt=97\n      // a=simulcast: send rid=5;6;7 paused=6,7\n      name: 'simulcast_03',\n      reg: /^simulcast:[\\s\\t]+([\\S+\\s\\t]+)$/,\n      names: ['value'],\n      format: 'simulcast: %s'\n    },\n    {\n      // a=framerate:25\n      // a=framerate:29.97\n      name: 'framerate',\n      reg: /^framerate:(\\d+(?:$|\\.\\d+))/,\n      format: 'framerate:%s'\n    },\n    {\n      // RFC4570\n      // a=source-filter: incl IN IP4 239.5.2.31 10.1.15.5\n      name: 'sourceFilter',\n      reg: /^source-filter: *(excl|incl) (\\S*) (IP4|IP6|\\*) (\\S*) (.*)/,\n      names: ['filterMode', 'netType', 'addressTypes', 'destAddress', 'srcList'],\n      format: 'source-filter: %s %s %s %s %s'\n    },\n    {\n      // a=bundle-only\n      name: 'bundleOnly',\n      reg: /^(bundle-only)/\n    },\n    {\n      // a=label:1\n      name: 'label',\n      reg: /^label:(.+)/,\n      format: 'label:%s'\n    },\n    {\n      // RFC version 26 for SCTP over DTLS\n      // https://tools.ietf.org/html/draft-ietf-mmusic-sctp-sdp-26#section-5\n      name: 'sctpPort',\n      reg: /^sctp-port:(\\d+)$/,\n      format: 'sctp-port:%s'\n    },\n    {\n      // RFC version 26 for SCTP over DTLS\n      // https://tools.ietf.org/html/draft-ietf-mmusic-sctp-sdp-26#section-6\n      name: 'maxMessageSize',\n      reg: /^max-message-size:(\\d+)$/,\n      format: 'max-message-size:%s'\n    },\n    {\n      // RFC7273\n      // a=ts-refclk:ptp=IEEE1588-2008:39-A7-94-FF-FE-07-CB-D0:37\n      push:'tsRefClocks',\n      reg: /^ts-refclk:([^\\s=]*)(?:=(\\S*))?/,\n      names: ['clksrc', 'clksrcExt'],\n      format: function (o) {\n        return 'ts-refclk:%s' + (o.clksrcExt != null ? '=%s' : '');\n      }\n    },\n    {\n      // RFC7273\n      // a=mediaclk:direct=963214424\n      name:'mediaClk',\n      reg: /^mediaclk:(?:id=(\\S*))? *([^\\s=]*)(?:=(\\S*))?(?: *rate=(\\d+)\\/(\\d+))?/,\n      names: ['id', 'mediaClockName', 'mediaClockValue', 'rateNumerator', 'rateDenominator'],\n      format: function (o) {\n        var str = 'mediaclk:';\n        str += (o.id != null ? 'id=%s %s' : '%v%s');\n        str += (o.mediaClockValue != null ? '=%s' : '');\n        str += (o.rateNumerator != null ? ' rate=%s' : '');\n        str += (o.rateDenominator != null ? '/%s' : '');\n        return str;\n      }\n    },\n    {\n      // a=keywds:keywords\n      name: 'keywords',\n      reg: /^keywds:(.+)$/,\n      format: 'keywds:%s'\n    },\n    {\n      // a=content:main\n      name: 'content',\n      reg: /^content:(.+)/,\n      format: 'content:%s'\n    },\n    // BFCP https://tools.ietf.org/html/rfc4583\n    {\n      // a=floorctrl:c-s\n      name: 'bfcpFloorCtrl',\n      reg: /^floorctrl:(c-only|s-only|c-s)/,\n      format: 'floorctrl:%s'\n    },\n    {\n      // a=confid:1\n      name: 'bfcpConfId',\n      reg: /^confid:(\\d+)/,\n      format: 'confid:%s'\n    },\n    {\n      // a=userid:1\n      name: 'bfcpUserId',\n      reg: /^userid:(\\d+)/,\n      format: 'userid:%s'\n    },\n    {\n      // a=floorid:1\n      name: 'bfcpFloorId',\n      reg: /^floorid:(.+) (?:m-stream|mstrm):(.+)/,\n      names: ['id', 'mStream'],\n      format: 'floorid:%s mstrm:%s'\n    },\n    {\n      // any a= that we don't understand is kept verbatim on media.invalid\n      push: 'invalid',\n      names: ['value']\n    }\n  ]\n};\n\n// set sensible defaults to avoid polluting the grammar with boring details\nObject.keys(grammar).forEach(function (key) {\n  var objs = grammar[key];\n  objs.forEach(function (obj) {\n    if (!obj.reg) {\n      obj.reg = /(.*)/;\n    }\n    if (!obj.format) {\n      obj.format = '%s';\n    }\n  });\n});\n", "var toIntIfInt = function (v) {\n  return String(Number(v)) === v ? Number(v) : v;\n};\n\nvar attachProperties = function (match, location, names, rawName) {\n  if (rawName && !names) {\n    location[rawName] = toIntIfInt(match[1]);\n  }\n  else {\n    for (var i = 0; i < names.length; i += 1) {\n      if (match[i+1] != null) {\n        location[names[i]] = toIntIfInt(match[i+1]);\n      }\n    }\n  }\n};\n\nvar parseReg = function (obj, location, content) {\n  var needsBlank = obj.name && obj.names;\n  if (obj.push && !location[obj.push]) {\n    location[obj.push] = [];\n  }\n  else if (needsBlank && !location[obj.name]) {\n    location[obj.name] = {};\n  }\n  var keyLocation = obj.push ?\n    {} :  // blank object that will be pushed\n    needsBlank ? location[obj.name] : location; // otherwise, named location or root\n\n  attachProperties(content.match(obj.reg), keyLocation, obj.names, obj.name);\n\n  if (obj.push) {\n    location[obj.push].push(keyLocation);\n  }\n};\n\nvar grammar = require('./grammar');\nvar validLine = RegExp.prototype.test.bind(/^([a-z])=(.*)/);\n\nexports.parse = function (sdp) {\n  var session = {}\n    , media = []\n    , location = session; // points at where properties go under (one of the above)\n\n  // parse lines we understand\n  sdp.split(/(\\r\\n|\\r|\\n)/).filter(validLine).forEach(function (l) {\n    var type = l[0];\n    var content = l.slice(2);\n    if (type === 'm') {\n      media.push({rtp: [], fmtp: []});\n      location = media[media.length-1]; // point at latest media line\n    }\n\n    for (var j = 0; j < (grammar[type] || []).length; j += 1) {\n      var obj = grammar[type][j];\n      if (obj.reg.test(content)) {\n        return parseReg(obj, location, content);\n      }\n    }\n  });\n\n  session.media = media; // link it up\n  return session;\n};\n\nvar paramReducer = function (acc, expr) {\n  var s = expr.split(/=(.+)/, 2);\n  if (s.length === 2) {\n    acc[s[0]] = toIntIfInt(s[1]);\n  } else if (s.length === 1 && expr.length > 1) {\n    acc[s[0]] = undefined;\n  }\n  return acc;\n};\n\nexports.parseParams = function (str) {\n  return str.split(/;\\s?/).reduce(paramReducer, {});\n};\n\n// For backward compatibility - alias will be removed in 3.0.0\nexports.parseFmtpConfig = exports.parseParams;\n\nexports.parsePayloads = function (str) {\n  return str.toString().split(' ').map(Number);\n};\n\nexports.parseRemoteCandidates = function (str) {\n  var candidates = [];\n  var parts = str.split(' ').map(toIntIfInt);\n  for (var i = 0; i < parts.length; i += 3) {\n    candidates.push({\n      component: parts[i],\n      ip: parts[i + 1],\n      port: parts[i + 2]\n    });\n  }\n  return candidates;\n};\n\nexports.parseImageAttributes = function (str) {\n  return str.split(' ').map(function (item) {\n    return item.substring(1, item.length-1).split(',').reduce(paramReducer, {});\n  });\n};\n\nexports.parseSimulcastStreamList = function (str) {\n  return str.split(';').map(function (stream) {\n    return stream.split(',').map(function (format) {\n      var scid, paused = false;\n\n      if (format[0] !== '~') {\n        scid = toIntIfInt(format);\n      } else {\n        scid = toIntIfInt(format.substring(1, format.length));\n        paused = true;\n      }\n\n      return {\n        scid: scid,\n        paused: paused\n      };\n    });\n  });\n};\n", "var grammar = require('./grammar');\n\n// customized util.format - discards excess arguments and can void middle ones\nvar formatRegExp = /%[sdv%]/g;\nvar format = function (formatStr) {\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  return formatStr.replace(formatRegExp, function (x) {\n    if (i >= len) {\n      return x; // missing argument\n    }\n    var arg = args[i];\n    i += 1;\n    switch (x) {\n    case '%%':\n      return '%';\n    case '%s':\n      return String(arg);\n    case '%d':\n      return Number(arg);\n    case '%v':\n      return '';\n    }\n  });\n  // NB: we discard excess arguments - they are typically undefined from makeLine\n};\n\nvar makeLine = function (type, obj, location) {\n  var str = obj.format instanceof Function ?\n    (obj.format(obj.push ? location : location[obj.name])) :\n    obj.format;\n\n  var args = [type + '=' + str];\n  if (obj.names) {\n    for (var i = 0; i < obj.names.length; i += 1) {\n      var n = obj.names[i];\n      if (obj.name) {\n        args.push(location[obj.name][n]);\n      }\n      else { // for mLine and push attributes\n        args.push(location[obj.names[i]]);\n      }\n    }\n  }\n  else {\n    args.push(location[obj.name]);\n  }\n  return format.apply(null, args);\n};\n\n// RFC specified order\n// TODO: extend this with all the rest\nvar defaultOuterOrder = [\n  'v', 'o', 's', 'i',\n  'u', 'e', 'p', 'c',\n  'b', 't', 'r', 'z', 'a'\n];\nvar defaultInnerOrder = ['i', 'c', 'b', 'a'];\n\n\nmodule.exports = function (session, opts) {\n  opts = opts || {};\n  // ensure certain properties exist\n  if (session.version == null) {\n    session.version = 0; // 'v=0' must be there (only defined version atm)\n  }\n  if (session.name == null) {\n    session.name = ' '; // 's= ' must be there if no meaningful name set\n  }\n  session.media.forEach(function (mLine) {\n    if (mLine.payloads == null) {\n      mLine.payloads = '';\n    }\n  });\n\n  var outerOrder = opts.outerOrder || defaultOuterOrder;\n  var innerOrder = opts.innerOrder || defaultInnerOrder;\n  var sdp = [];\n\n  // loop through outerOrder for matching properties on session\n  outerOrder.forEach(function (type) {\n    grammar[type].forEach(function (obj) {\n      if (obj.name in session && session[obj.name] != null) {\n        sdp.push(makeLine(type, obj, session));\n      }\n      else if (obj.push in session && session[obj.push] != null) {\n        session[obj.push].forEach(function (el) {\n          sdp.push(makeLine(type, obj, el));\n        });\n      }\n    });\n  });\n\n  // then for each media line, follow the innerOrder\n  session.media.forEach(function (mLine) {\n    sdp.push(makeLine('m', grammar.m[0], mLine));\n\n    innerOrder.forEach(function (type) {\n      grammar[type].forEach(function (obj) {\n        if (obj.name in mLine && mLine[obj.name] != null) {\n          sdp.push(makeLine(type, obj, mLine));\n        }\n        else if (obj.push in mLine && mLine[obj.push] != null) {\n          mLine[obj.push].forEach(function (el) {\n            sdp.push(makeLine(type, obj, el));\n          });\n        }\n      });\n    });\n  });\n\n  return sdp.join('\\r\\n') + '\\r\\n';\n};\n", "var parser = require('./parser');\nvar writer = require('./writer');\n\nexports.write = writer;\nexports.parse = parser.parse;\nexports.parseParams = parser.parseParams;\nexports.parseFmtpConfig = parser.parseFmtpConfig; // Alias of parseParams().\nexports.parsePayloads = parser.parsePayloads;\nexports.parseRemoteCandidates = parser.parseRemoteCandidates;\nexports.parseImageAttributes = parser.parseImageAttributes;\nexports.parseSimulcastStreamList = parser.parseSimulcastStreamList;\n", "'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nlet logDisabled_ = true;\nlet deprecationWarnings_ = true;\n\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\nexport function extractVersion(uastring, expr, pos) {\n  const match = uastring.match(expr);\n  return match && match.length >= pos && parseInt(match[pos], 10);\n}\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\nexport function wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  const nativeAddEventListener = proto.addEventListener;\n  proto.addEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n    const wrappedCallback = (e) => {\n      const modifiedEvent = wrapper(e);\n      if (modifiedEvent) {\n        if (cb.handleEvent) {\n          cb.handleEvent(modifiedEvent);\n        } else {\n          cb(modifiedEvent);\n        }\n      }\n    };\n    this._eventMap = this._eventMap || {};\n    if (!this._eventMap[eventNameToWrap]) {\n      this._eventMap[eventNameToWrap] = new Map();\n    }\n    this._eventMap[eventNameToWrap].set(cb, wrappedCallback);\n    return nativeAddEventListener.apply(this, [nativeEventName,\n      wrappedCallback]);\n  };\n\n  const nativeRemoveEventListener = proto.removeEventListener;\n  proto.removeEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap\n        || !this._eventMap[eventNameToWrap]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    if (!this._eventMap[eventNameToWrap].has(cb)) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    const unwrappedCb = this._eventMap[eventNameToWrap].get(cb);\n    this._eventMap[eventNameToWrap].delete(cb);\n    if (this._eventMap[eventNameToWrap].size === 0) {\n      delete this._eventMap[eventNameToWrap];\n    }\n    if (Object.keys(this._eventMap).length === 0) {\n      delete this._eventMap;\n    }\n    return nativeRemoveEventListener.apply(this, [nativeEventName,\n      unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get() {\n      return this['_on' + eventNameToWrap];\n    },\n    set(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap,\n          this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n      if (cb) {\n        this.addEventListener(eventNameToWrap,\n          this['_on' + eventNameToWrap] = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\n\nexport function disableLog(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  logDisabled_ = bool;\n  return (bool) ? 'adapter.js logging disabled' :\n    'adapter.js logging enabled';\n}\n\n/**\n * Disable or enable deprecation warnings\n * @param {!boolean} bool set to true to disable warnings.\n */\nexport function disableWarnings(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  deprecationWarnings_ = !bool;\n  return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n}\n\nexport function log() {\n  if (typeof window === 'object') {\n    if (logDisabled_) {\n      return;\n    }\n    if (typeof console !== 'undefined' && typeof console.log === 'function') {\n      console.log.apply(console, arguments);\n    }\n  }\n}\n\n/**\n * Shows a deprecation warning suggesting the modern and spec-compatible API.\n */\nexport function deprecated(oldMethod, newMethod) {\n  if (!deprecationWarnings_) {\n    return;\n  }\n  console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\n      ' instead.');\n}\n\n/**\n * Browser detector.\n *\n * @return {object} result containing browser and version\n *     properties.\n */\nexport function detectBrowser(window) {\n  // Returned result object.\n  const result = {browser: null, version: null};\n\n  // Fail early if it's not a browser\n  if (typeof window === 'undefined' || !window.navigator ||\n      !window.navigator.userAgent) {\n    result.browser = 'Not a browser.';\n    return result;\n  }\n\n  const {navigator} = window;\n\n  if (navigator.mozGetUserMedia) { // Firefox.\n    result.browser = 'firefox';\n    result.version = extractVersion(navigator.userAgent,\n      /Firefox\\/(\\d+)\\./, 1);\n  } else if (navigator.webkitGetUserMedia ||\n      (window.isSecureContext === false && window.webkitRTCPeerConnection)) {\n    // Chrome, Chromium, Webview, Opera.\n    // Version matches Chrome/WebRTC version.\n    // Chrome 74 removed webkitGetUserMedia on http as well so we need the\n    // more complicated fallback to webkitRTCPeerConnection.\n    result.browser = 'chrome';\n    result.version = extractVersion(navigator.userAgent,\n      /Chrom(e|ium)\\/(\\d+)\\./, 2);\n  } else if (window.RTCPeerConnection &&\n      navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) { // Safari.\n    result.browser = 'safari';\n    result.version = extractVersion(navigator.userAgent,\n      /AppleWebKit\\/(\\d+)\\./, 1);\n    result.supportsUnifiedPlan = window.RTCRtpTransceiver &&\n        'currentDirection' in window.RTCRtpTransceiver.prototype;\n  } else { // Default fallthrough: not supported.\n    result.browser = 'Not a supported browser.';\n    return result;\n  }\n\n  return result;\n}\n\n/**\n * Checks if something is an object.\n *\n * @param {*} val The something you want to check.\n * @return true if val is an object, false otherwise.\n */\nfunction isObject(val) {\n  return Object.prototype.toString.call(val) === '[object Object]';\n}\n\n/**\n * Remove all empty objects and undefined values\n * from a nested object -- an enhanced and vanilla version\n * of Lodash's `compact`.\n */\nexport function compactObject(data) {\n  if (!isObject(data)) {\n    return data;\n  }\n\n  return Object.keys(data).reduce(function(accumulator, key) {\n    const isObj = isObject(data[key]);\n    const value = isObj ? compactObject(data[key]) : data[key];\n    const isEmptyObject = isObj && !Object.keys(value).length;\n    if (value === undefined || isEmptyObject) {\n      return accumulator;\n    }\n    return Object.assign(accumulator, {[key]: value});\n  }, {});\n}\n\n/* iterates the stats graph recursively. */\nexport function walkStats(stats, base, resultSet) {\n  if (!base || resultSet.has(base.id)) {\n    return;\n  }\n  resultSet.set(base.id, base);\n  Object.keys(base).forEach(name => {\n    if (name.endsWith('Id')) {\n      walkStats(stats, stats.get(base[name]), resultSet);\n    } else if (name.endsWith('Ids')) {\n      base[name].forEach(id => {\n        walkStats(stats, stats.get(id), resultSet);\n      });\n    }\n  });\n}\n\n/* filter getStats for a sender/receiver track. */\nexport function filterStats(result, track, outbound) {\n  const streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n  const filteredResult = new Map();\n  if (track === null) {\n    return filteredResult;\n  }\n  const trackStats = [];\n  result.forEach(value => {\n    if (value.type === 'track' &&\n        value.trackIdentifier === track.id) {\n      trackStats.push(value);\n    }\n  });\n  trackStats.forEach(trackStat => {\n    result.forEach(stats => {\n      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {\n        walkStats(result, stats, filteredResult);\n      }\n    });\n  });\n  return filteredResult;\n}\n\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimMediaStream(window) {\n  window.MediaStream = window.MediaStream || window.webkitMediaStream;\n}\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n      window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n      get() {\n        return this._ontrack;\n      },\n      set(f) {\n        if (this._ontrack) {\n          this.removeEventListener('track', this._ontrack);\n        }\n        this.addEventListener('track', this._ontrack = f);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    const origSetRemoteDescription =\n        window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        if (!this._ontrackpoly) {\n          this._ontrackpoly = (e) => {\n            // onaddstream does not fire when a track is added to an existing\n            // stream. But stream.onaddtrack is implemented so we use that.\n            e.stream.addEventListener('addtrack', te => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === te.track.id);\n              } else {\n                receiver = {track: te.track};\n              }\n\n              const event = new Event('track');\n              event.track = te.track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n            e.stream.getTracks().forEach(track => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === track.id);\n              } else {\n                receiver = {track};\n              }\n              const event = new Event('track');\n              event.track = track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n          };\n          this.addEventListener('addstream', this._ontrackpoly);\n        }\n        return origSetRemoteDescription.apply(this, arguments);\n      };\n  } else {\n    // even if RTCRtpTransceiver is in window, it is only used and\n    // emitted in unified-plan. Unfortunately this means we need\n    // to unconditionally wrap the event.\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      if (!e.transceiver) {\n        Object.defineProperty(e, 'transceiver',\n          {value: {receiver: e.receiver}});\n      }\n      return e;\n    });\n  }\n}\n\nexport function shimGetSendersWithDtmf(window) {\n  // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n  if (typeof window === 'object' && window.RTCPeerConnection &&\n      !('getSenders' in window.RTCPeerConnection.prototype) &&\n      'createDTMFSender' in window.RTCPeerConnection.prototype) {\n    const shimSenderWithDtmf = function(pc, track) {\n      return {\n        track,\n        get dtmf() {\n          if (this._dtmf === undefined) {\n            if (track.kind === 'audio') {\n              this._dtmf = pc.createDTMFSender(track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        },\n        _pc: pc\n      };\n    };\n\n    // augment addTrack when getSenders is not available.\n    if (!window.RTCPeerConnection.prototype.getSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        this._senders = this._senders || [];\n        return this._senders.slice(); // return a copy of the internal state.\n      };\n      const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addTrack =\n        function addTrack(track, stream) {\n          let sender = origAddTrack.apply(this, arguments);\n          if (!sender) {\n            sender = shimSenderWithDtmf(this, track);\n            this._senders.push(sender);\n          }\n          return sender;\n        };\n\n      const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n      window.RTCPeerConnection.prototype.removeTrack =\n        function removeTrack(sender) {\n          origRemoveTrack.apply(this, arguments);\n          const idx = this._senders.indexOf(sender);\n          if (idx !== -1) {\n            this._senders.splice(idx, 1);\n          }\n        };\n    }\n    const origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      this._senders = this._senders || [];\n      origAddStream.apply(this, [stream]);\n      stream.getTracks().forEach(track => {\n        this._senders.push(shimSenderWithDtmf(this, track));\n      });\n    };\n\n    const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        this._senders = this._senders || [];\n        origRemoveStream.apply(this, [stream]);\n\n        stream.getTracks().forEach(track => {\n          const sender = this._senders.find(s => s.track === track);\n          if (sender) { // remove sender\n            this._senders.splice(this._senders.indexOf(sender), 1);\n          }\n        });\n      };\n  } else if (typeof window === 'object' && window.RTCPeerConnection &&\n             'getSenders' in window.RTCPeerConnection.prototype &&\n             'createDTMFSender' in window.RTCPeerConnection.prototype &&\n             window.RTCRtpSender &&\n             !('dtmf' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = this._pc.createDTMFSender(this.track);\n          } else {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n}\n\nexport function shimGetStats(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n\n    // If selector is a function then we are in the old style stats so just\n    // pass back the original getStats format to avoid breaking old users.\n    if (arguments.length > 0 && typeof selector === 'function') {\n      return origGetStats.apply(this, arguments);\n    }\n\n    // When spec-style getStats is supported, return those when called with\n    // either no arguments or the selector argument is null.\n    if (origGetStats.length === 0 && (arguments.length === 0 ||\n        typeof selector !== 'function')) {\n      return origGetStats.apply(this, []);\n    }\n\n    const fixChromeStats_ = function(response) {\n      const standardReport = {};\n      const reports = response.result();\n      reports.forEach(report => {\n        const standardStats = {\n          id: report.id,\n          timestamp: report.timestamp,\n          type: {\n            localcandidate: 'local-candidate',\n            remotecandidate: 'remote-candidate'\n          }[report.type] || report.type\n        };\n        report.names().forEach(name => {\n          standardStats[name] = report.stat(name);\n        });\n        standardReport[standardStats.id] = standardStats;\n      });\n\n      return standardReport;\n    };\n\n    // shim getStats with maplike support\n    const makeMapStats = function(stats) {\n      return new Map(Object.keys(stats).map(key => [key, stats[key]]));\n    };\n\n    if (arguments.length >= 2) {\n      const successCallbackWrapper_ = function(response) {\n        onSucc(makeMapStats(fixChromeStats_(response)));\n      };\n\n      return origGetStats.apply(this, [successCallbackWrapper_,\n        selector]);\n    }\n\n    // promise-support\n    return new Promise((resolve, reject) => {\n      origGetStats.apply(this, [\n        function(response) {\n          resolve(makeMapStats(fixChromeStats_(response)));\n        }, reject]);\n    }).then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender && window.RTCRtpReceiver)) {\n    return;\n  }\n\n  // shim sender stats.\n  if (!('getStats' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        const senders = origGetSenders.apply(this, []);\n        senders.forEach(sender => sender._pc = this);\n        return senders;\n      };\n    }\n\n    const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n        const sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n    window.RTCRtpSender.prototype.getStats = function getStats() {\n      const sender = this;\n      return this._pc.getStats().then(result =>\n        /* Note: this will include stats of all senders that\n         *   send a track with the same id as sender.track as\n         *   it is not possible to identify the RTCRtpSender.\n         */\n        utils.filterStats(result, sender.track, true));\n    };\n  }\n\n  // shim receiver stats.\n  if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n    const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers =\n        function getReceivers() {\n          const receivers = origGetReceivers.apply(this, []);\n          receivers.forEach(receiver => receiver._pc = this);\n          return receivers;\n        };\n    }\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function getStats() {\n      const receiver = this;\n      return this._pc.getStats().then(result =>\n        utils.filterStats(result, receiver.track, false));\n    };\n  }\n\n  if (!('getStats' in window.RTCRtpSender.prototype &&\n      'getStats' in window.RTCRtpReceiver.prototype)) {\n    return;\n  }\n\n  // shim RTCPeerConnection.getStats(track).\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    if (arguments.length > 0 &&\n        arguments[0] instanceof window.MediaStreamTrack) {\n      const track = arguments[0];\n      let sender;\n      let receiver;\n      let err;\n      this.getSenders().forEach(s => {\n        if (s.track === track) {\n          if (sender) {\n            err = true;\n          } else {\n            sender = s;\n          }\n        }\n      });\n      this.getReceivers().forEach(r => {\n        if (r.track === track) {\n          if (receiver) {\n            err = true;\n          } else {\n            receiver = r;\n          }\n        }\n        return r.track === track;\n      });\n      if (err || (sender && receiver)) {\n        return Promise.reject(new DOMException(\n          'There are more than one sender or receiver for the track.',\n          'InvalidAccessError'));\n      } else if (sender) {\n        return sender.getStats();\n      } else if (receiver) {\n        return receiver.getStats();\n      }\n      return Promise.reject(new DOMException(\n        'There is no sender or receiver for the track.',\n        'InvalidAccessError'));\n    }\n    return origGetStats.apply(this, arguments);\n  };\n}\n\nexport function shimAddTrackRemoveTrackWithNative(window) {\n  // shim addTrack/removeTrack with native variants in order to make\n  // the interactions with legacy getLocalStreams behave as in other browsers.\n  // Keeps a mapping stream.id => [stream, rtpsenders...]\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      return Object.keys(this._shimmedLocalStreams)\n        .map(streamId => this._shimmedLocalStreams[streamId][0]);\n    };\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (!stream) {\n        return origAddTrack.apply(this, arguments);\n      }\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n      const sender = origAddTrack.apply(this, arguments);\n      if (!this._shimmedLocalStreams[stream.id]) {\n        this._shimmedLocalStreams[stream.id] = [stream, sender];\n      } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n        this._shimmedLocalStreams[stream.id].push(sender);\n      }\n      return sender;\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n          'InvalidAccessError');\n      }\n    });\n    const existingSenders = this.getSenders();\n    origAddStream.apply(this, arguments);\n    const newSenders = this.getSenders()\n      .filter(newSender => existingSenders.indexOf(newSender) === -1);\n    this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      delete this._shimmedLocalStreams[stream.id];\n      return origRemoveStream.apply(this, arguments);\n    };\n\n  const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      if (sender) {\n        Object.keys(this._shimmedLocalStreams).forEach(streamId => {\n          const idx = this._shimmedLocalStreams[streamId].indexOf(sender);\n          if (idx !== -1) {\n            this._shimmedLocalStreams[streamId].splice(idx, 1);\n          }\n          if (this._shimmedLocalStreams[streamId].length === 1) {\n            delete this._shimmedLocalStreams[streamId];\n          }\n        });\n      }\n      return origRemoveTrack.apply(this, arguments);\n    };\n}\n\nexport function shimAddTrackRemoveTrack(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // shim addTrack and removeTrack.\n  if (window.RTCPeerConnection.prototype.addTrack &&\n      browserDetails.version >= 65) {\n    return shimAddTrackRemoveTrackWithNative(window);\n  }\n\n  // also shim pc.getLocalStreams when addTrack is shimmed\n  // to return the original streams.\n  const origGetLocalStreams = window.RTCPeerConnection.prototype\n    .getLocalStreams;\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      const nativeStreams = origGetLocalStreams.apply(this);\n      this._reverseStreams = this._reverseStreams || {};\n      return nativeStreams.map(stream => this._reverseStreams[stream.id]);\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n          'InvalidAccessError');\n      }\n    });\n    // Add identity mapping for consistency with addTrack.\n    // Unless this is being used with a stream from addTrack.\n    if (!this._reverseStreams[stream.id]) {\n      const newStream = new window.MediaStream(stream.getTracks());\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      stream = newStream;\n    }\n    origAddStream.apply(this, [stream]);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n\n      origRemoveStream.apply(this, [(this._streams[stream.id] || stream)]);\n      delete this._reverseStreams[(this._streams[stream.id] ?\n        this._streams[stream.id].id : stream.id)];\n      delete this._streams[stream.id];\n    };\n\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      const streams = [].slice.call(arguments, 1);\n      if (streams.length !== 1 ||\n          !streams[0].getTracks().find(t => t === track)) {\n        // this is not fully correct but all we can manage without\n        // [[associated MediaStreams]] internal slot.\n        throw new DOMException(\n          'The adapter.js addTrack polyfill only supports a single ' +\n          ' stream which is associated with the specified track.',\n          'NotSupportedError');\n      }\n\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n          'InvalidAccessError');\n      }\n\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n      const oldStream = this._streams[stream.id];\n      if (oldStream) {\n        // this is using odd Chrome behaviour, use with caution:\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n        // Note: we rely on the high-level addTrack/dtmf shim to\n        // create the sender with a dtmf sender.\n        oldStream.addTrack(track);\n\n        // Trigger ONN async.\n        Promise.resolve().then(() => {\n          this.dispatchEvent(new Event('negotiationneeded'));\n        });\n      } else {\n        const newStream = new window.MediaStream([track]);\n        this._streams[stream.id] = newStream;\n        this._reverseStreams[newStream.id] = stream;\n        this.addStream(newStream);\n      }\n      return this.getSenders().find(s => s.track === track);\n    };\n\n  // replace the internal stream id with the external one and\n  // vice versa.\n  function replaceInternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\n        externalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  function replaceExternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\n        internalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  ['createOffer', 'createAnswer'].forEach(function(method) {\n    const nativeMethod = window.RTCPeerConnection.prototype[method];\n    const methodObj = {[method]() {\n      const args = arguments;\n      const isLegacyCall = arguments.length &&\n          typeof arguments[0] === 'function';\n      if (isLegacyCall) {\n        return nativeMethod.apply(this, [\n          (description) => {\n            const desc = replaceInternalStreamId(this, description);\n            args[0].apply(null, [desc]);\n          },\n          (err) => {\n            if (args[1]) {\n              args[1].apply(null, err);\n            }\n          }, arguments[2]\n        ]);\n      }\n      return nativeMethod.apply(this, arguments)\n        .then(description => replaceInternalStreamId(this, description));\n    }};\n    window.RTCPeerConnection.prototype[method] = methodObj[method];\n  });\n\n  const origSetLocalDescription =\n      window.RTCPeerConnection.prototype.setLocalDescription;\n  window.RTCPeerConnection.prototype.setLocalDescription =\n    function setLocalDescription() {\n      if (!arguments.length || !arguments[0].type) {\n        return origSetLocalDescription.apply(this, arguments);\n      }\n      arguments[0] = replaceExternalStreamId(this, arguments[0]);\n      return origSetLocalDescription.apply(this, arguments);\n    };\n\n  // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n  const origLocalDescription = Object.getOwnPropertyDescriptor(\n    window.RTCPeerConnection.prototype, 'localDescription');\n  Object.defineProperty(window.RTCPeerConnection.prototype,\n    'localDescription', {\n      get() {\n        const description = origLocalDescription.get.apply(this);\n        if (description.type === '') {\n          return description;\n        }\n        return replaceInternalStreamId(this, description);\n      }\n    });\n\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      // We can not yet check for sender instanceof RTCRtpSender\n      // since we shim RTPSender. So we check if sender._pc is set.\n      if (!sender._pc) {\n        throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\n            'does not implement interface RTCRtpSender.', 'TypeError');\n      }\n      const isLocal = sender._pc === this;\n      if (!isLocal) {\n        throw new DOMException('Sender was not created by this connection.',\n          'InvalidAccessError');\n      }\n\n      // Search for the native stream the senders track belongs to.\n      this._streams = this._streams || {};\n      let stream;\n      Object.keys(this._streams).forEach(streamid => {\n        const hasTrack = this._streams[streamid].getTracks()\n          .find(track => sender.track === track);\n        if (hasTrack) {\n          stream = this._streams[streamid];\n        }\n      });\n\n      if (stream) {\n        if (stream.getTracks().length === 1) {\n          // if this is the last track of the stream, remove the stream. This\n          // takes care of any shimmed _senders.\n          this.removeStream(this._reverseStreams[stream.id]);\n        } else {\n          // relying on the same odd chrome behaviour as above.\n          stream.removeTrack(sender.track);\n        }\n        this.dispatchEvent(new Event('negotiationneeded'));\n      }\n    };\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.webkitRTCPeerConnection;\n  }\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n  if (browserDetails.version < 53) {\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n      .forEach(function(method) {\n        const nativeMethod = window.RTCPeerConnection.prototype[method];\n        const methodObj = {[method]() {\n          arguments[0] = new ((method === 'addIceCandidate') ?\n            window.RTCIceCandidate :\n            window.RTCSessionDescription)(arguments[0]);\n          return nativeMethod.apply(this, arguments);\n        }};\n        window.RTCPeerConnection.prototype[method] = methodObj[method];\n      });\n  }\n}\n\n// Attempt to fix ONN in plan-b mode.\nexport function fixNegotiationNeeded(window, browserDetails) {\n  utils.wrapPeerConnectionEvent(window, 'negotiationneeded', e => {\n    const pc = e.target;\n    if (browserDetails.version < 72 || (pc.getConfiguration &&\n        pc.getConfiguration().sdpSemantics === 'plan-b')) {\n      if (pc.signalingState !== 'stable') {\n        return;\n      }\n    }\n    return e;\n  });\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\nconst logging = utils.log;\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n\n  if (!navigator.mediaDevices) {\n    return;\n  }\n\n  const constraintsToChrome_ = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    const cc = {};\n    Object.keys(c).forEach(key => {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      const r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      const oldname_ = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        let oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(mix => {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  const shimConstraints_ = function(constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && typeof constraints.audio === 'object') {\n      const remap = function(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      let face = constraints.video.facingMode;\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\n      const getSupportedFacingModeLies = browserDetails.version < 66;\n\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\n          !(navigator.mediaDevices.getSupportedConstraints &&\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\n            !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        let matches;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices()\n            .then(devices => {\n              devices = devices.filter(d => d.kind === 'videoinput');\n              let dev = devices.find(d => matches.some(match =>\n                d.label.toLowerCase().includes(match)));\n              if (!dev && devices.length && matches.includes('back')) {\n                dev = devices[devices.length - 1]; // more likely the back cam\n              }\n              if (dev) {\n                constraints.video.deviceId = face.exact\n                  ? {exact: dev.deviceId}\n                  : {ideal: dev.deviceId};\n              }\n              constraints.video = constraintsToChrome_(constraints.video);\n              logging('chrome: ' + JSON.stringify(constraints));\n              return func(constraints);\n            });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  const shimError_ = function(e) {\n    if (browserDetails.version >= 64) {\n      return e;\n    }\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        PermissionDismissedError: 'NotAllowedError',\n        InvalidStateError: 'NotAllowedError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n        MediaDeviceKillSwitchOn: 'NotAllowedError',\n        TabCaptureError: 'AbortError',\n        ScreenCaptureError: 'AbortError',\n        DeviceCaptureError: 'AbortError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint || e.constraintName,\n      toString() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  const getUserMedia_ = function(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, c => {\n      navigator.webkitGetUserMedia(c, onSuccess, e => {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n  navigator.getUserMedia = getUserMedia_.bind(navigator);\n\n  // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n  // function which returns a Promise, it does not accept spec-style\n  // constraints.\n  if (navigator.mediaDevices.getUserMedia) {\n    const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(cs) {\n      return shimConstraints_(cs, c => origGetUserMedia(c).then(stream => {\n        if (c.audio && !stream.getAudioTracks().length ||\n            c.video && !stream.getVideoTracks().length) {\n          stream.getTracks().forEach(track => {\n            track.stop();\n          });\n          throw new DOMException('', 'NotFoundError');\n        }\n        return stream;\n      }, e => Promise.reject(shimError_(e))));\n    };\n  }\n}\n", "/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nexport function shimGetDisplayMedia(window, getSourceId) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  // getSourceId is a function that returns a promise resolving with\n  // the sourceId of the screen/window/tab to be shared.\n  if (typeof getSourceId !== 'function') {\n    console.error('shimGetDisplayMedia: getSourceId argument is not ' +\n        'a function');\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      return getSourceId(constraints)\n        .then(sourceId => {\n          const widthSpecified = constraints.video && constraints.video.width;\n          const heightSpecified = constraints.video &&\n            constraints.video.height;\n          const frameRateSpecified = constraints.video &&\n            constraints.video.frameRate;\n          constraints.video = {\n            mandatory: {\n              chromeMediaSource: 'desktop',\n              chromeMediaSourceId: sourceId,\n              maxFrameRate: frameRateSpecified || 3\n            }\n          };\n          if (widthSpecified) {\n            constraints.video.mandatory.maxWidth = widthSpecified;\n          }\n          if (heightSpecified) {\n            constraints.video.mandatory.maxHeight = heightSpecified;\n          }\n          return window.navigator.mediaDevices.getUserMedia(constraints);\n        });\n    };\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      ('receiver' in window.RTCTrackEvent.prototype) &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (typeof window !== 'object' ||\n      !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\n    return; // probably media.peerconnection.enabled=false in about:config\n  }\n  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\n  }\n\n  if (browserDetails.version < 53) {\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n      .forEach(function(method) {\n        const nativeMethod = window.RTCPeerConnection.prototype[method];\n        const methodObj = {[method]() {\n          arguments[0] = new ((method === 'addIceCandidate') ?\n            window.RTCIceCandidate :\n            window.RTCSessionDescription)(arguments[0]);\n          return nativeMethod.apply(this, arguments);\n        }};\n        window.RTCPeerConnection.prototype[method] = methodObj[method];\n      });\n  }\n\n  const modernStatsTypes = {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  };\n\n  const nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n    return nativeGetStats.apply(this, [selector || null])\n      .then(stats => {\n        if (browserDetails.version < 53 && !onSucc) {\n          // Shim only promise getStats with spec-hyphens in type names\n          // Leave callback version alone; misc old uses of forEach before Map\n          try {\n            stats.forEach(stat => {\n              stat.type = modernStatsTypes[stat.type] || stat.type;\n            });\n          } catch (e) {\n            if (e.name !== 'TypeError') {\n              throw e;\n            }\n            // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n            stats.forEach((stat, i) => {\n              stats.set(i, Object.assign({}, stat, {\n                type: modernStatsTypes[stat.type] || stat.type\n              }));\n            });\n          }\n        }\n        return stats;\n      })\n      .then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n    return;\n  }\n  const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n  if (origGetSenders) {\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n  }\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  if (origAddTrack) {\n    window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n      const sender = origAddTrack.apply(this, arguments);\n      sender._pc = this;\n      return sender;\n    };\n  }\n  window.RTCRtpSender.prototype.getStats = function getStats() {\n    return this.track ? this._pc.getStats(this.track) :\n      Promise.resolve(new Map());\n  };\n}\n\nexport function shimReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n    return;\n  }\n  const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n  if (origGetReceivers) {\n    window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n      const receivers = origGetReceivers.apply(this, []);\n      receivers.forEach(receiver => receiver._pc = this);\n      return receivers;\n    };\n  }\n  utils.wrapPeerConnectionEvent(window, 'track', e => {\n    e.receiver._pc = e.srcElement;\n    return e;\n  });\n  window.RTCRtpReceiver.prototype.getStats = function getStats() {\n    return this._pc.getStats(this.track);\n  };\n}\n\nexport function shimRemoveStream(window) {\n  if (!window.RTCPeerConnection ||\n      'removeStream' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      utils.deprecated('removeStream', 'removeTrack');\n      this.getSenders().forEach(sender => {\n        if (sender.track && stream.getTracks().includes(sender.track)) {\n          this.removeTrack(sender);\n        }\n      });\n    };\n}\n\nexport function shimRTCDataChannel(window) {\n  // rename DataChannel to RTCDataChannel (native fix in FF60):\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n  if (window.DataChannel && !window.RTCDataChannel) {\n    window.RTCDataChannel = window.DataChannel;\n  }\n}\n\nexport function shimAddTransceiver(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origAddTransceiver = window.RTCPeerConnection.prototype.addTransceiver;\n  if (origAddTransceiver) {\n    window.RTCPeerConnection.prototype.addTransceiver =\n      function addTransceiver() {\n        this.setParametersPromises = [];\n        // WebIDL input coercion and validation\n        let sendEncodings = arguments[1] && arguments[1].sendEncodings;\n        if (sendEncodings === undefined) {\n          sendEncodings = [];\n        }\n        sendEncodings = [...sendEncodings];\n        const shouldPerformCheck = sendEncodings.length > 0;\n        if (shouldPerformCheck) {\n          // If sendEncodings params are provided, validate grammar\n          sendEncodings.forEach((encodingParam) => {\n            if ('rid' in encodingParam) {\n              const ridRegex = /^[a-z0-9]{0,16}$/i;\n              if (!ridRegex.test(encodingParam.rid)) {\n                throw new TypeError('Invalid RID value provided.');\n              }\n            }\n            if ('scaleResolutionDownBy' in encodingParam) {\n              if (!(parseFloat(encodingParam.scaleResolutionDownBy) >= 1.0)) {\n                throw new RangeError('scale_resolution_down_by must be >= 1.0');\n              }\n            }\n            if ('maxFramerate' in encodingParam) {\n              if (!(parseFloat(encodingParam.maxFramerate) >= 0)) {\n                throw new RangeError('max_framerate must be >= 0.0');\n              }\n            }\n          });\n        }\n        const transceiver = origAddTransceiver.apply(this, arguments);\n        if (shouldPerformCheck) {\n          // Check if the init options were applied. If not we do this in an\n          // asynchronous way and save the promise reference in a global object.\n          // This is an ugly hack, but at the same time is way more robust than\n          // checking the sender parameters before and after the createOffer\n          // Also note that after the createoffer we are not 100% sure that\n          // the params were asynchronously applied so we might miss the\n          // opportunity to recreate offer.\n          const {sender} = transceiver;\n          const params = sender.getParameters();\n          if (!('encodings' in params) ||\n              // Avoid being fooled by patched getParameters() below.\n              (params.encodings.length === 1 &&\n               Object.keys(params.encodings[0]).length === 0)) {\n            params.encodings = sendEncodings;\n            sender.sendEncodings = sendEncodings;\n            this.setParametersPromises.push(sender.setParameters(params)\n              .then(() => {\n                delete sender.sendEncodings;\n              }).catch(() => {\n                delete sender.sendEncodings;\n              })\n            );\n          }\n        }\n        return transceiver;\n      };\n  }\n}\n\nexport function shimGetParameters(window) {\n  if (!(typeof window === 'object' && window.RTCRtpSender)) {\n    return;\n  }\n  const origGetParameters = window.RTCRtpSender.prototype.getParameters;\n  if (origGetParameters) {\n    window.RTCRtpSender.prototype.getParameters =\n      function getParameters() {\n        const params = origGetParameters.apply(this, arguments);\n        if (!('encodings' in params)) {\n          params.encodings = [].concat(this.sendEncodings || [{}]);\n        }\n        return params;\n      };\n  }\n}\n\nexport function shimCreateOffer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer = function createOffer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n        .then(() => {\n          return origCreateOffer.apply(this, arguments);\n        })\n        .finally(() => {\n          this.setParametersPromises = [];\n        });\n    }\n    return origCreateOffer.apply(this, arguments);\n  };\n}\n\nexport function shimCreateAnswer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateAnswer = window.RTCPeerConnection.prototype.createAnswer;\n  window.RTCPeerConnection.prototype.createAnswer = function createAnswer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n        .then(() => {\n          return origCreateAnswer.apply(this, arguments);\n        })\n        .finally(() => {\n          this.setParametersPromises = [];\n        });\n    }\n    return origCreateAnswer.apply(this, arguments);\n  };\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n  const MediaStreamTrack = window && window.MediaStreamTrack;\n\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia',\n      'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n\n  if (!(browserDetails.version > 55 &&\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    const remap = function(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    const nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      const nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function() {\n        const obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      const nativeApplyConstraints =\n        MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n}\n", "/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window, preferredMediaSource) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      if (!(constraints && constraints.video)) {\n        const err = new DOMException('getDisplayMedia without video ' +\n            'constraints is undefined');\n        err.name = 'NotFoundError';\n        // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n        err.code = 8;\n        return Promise.reject(err);\n      }\n      if (constraints.video === true) {\n        constraints.video = {mediaSource: preferredMediaSource};\n      } else {\n        constraints.video.mediaSource = preferredMediaSource;\n      }\n      return window.navigator.mediaDevices.getUserMedia(constraints);\n    };\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\nimport * as utils from '../utils';\n\nexport function shimLocalStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getLocalStreams =\n      function getLocalStreams() {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        return this._localStreams;\n      };\n  }\n  if (!('addStream' in window.RTCPeerConnection.prototype)) {\n    const _addTrack = window.RTCPeerConnection.prototype.addTrack;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      if (!this._localStreams.includes(stream)) {\n        this._localStreams.push(stream);\n      }\n      // Try to emulate Chrome's behaviour of adding in audio-video order.\n      // Safari orders by track id.\n      stream.getAudioTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n      stream.getVideoTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n    };\n\n    window.RTCPeerConnection.prototype.addTrack =\n      function addTrack(track, ...streams) {\n        if (streams) {\n          streams.forEach((stream) => {\n            if (!this._localStreams) {\n              this._localStreams = [stream];\n            } else if (!this._localStreams.includes(stream)) {\n              this._localStreams.push(stream);\n            }\n          });\n        }\n        return _addTrack.apply(this, arguments);\n      };\n  }\n  if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        const index = this._localStreams.indexOf(stream);\n        if (index === -1) {\n          return;\n        }\n        this._localStreams.splice(index, 1);\n        const tracks = stream.getTracks();\n        this.getSenders().forEach(sender => {\n          if (tracks.includes(sender.track)) {\n            this.removeTrack(sender);\n          }\n        });\n      };\n  }\n}\n\nexport function shimRemoteStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getRemoteStreams =\n      function getRemoteStreams() {\n        return this._remoteStreams ? this._remoteStreams : [];\n      };\n  }\n  if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n      get() {\n        return this._onaddstream;\n      },\n      set(f) {\n        if (this._onaddstream) {\n          this.removeEventListener('addstream', this._onaddstream);\n          this.removeEventListener('track', this._onaddstreampoly);\n        }\n        this.addEventListener('addstream', this._onaddstream = f);\n        this.addEventListener('track', this._onaddstreampoly = (e) => {\n          e.streams.forEach(stream => {\n            if (!this._remoteStreams) {\n              this._remoteStreams = [];\n            }\n            if (this._remoteStreams.includes(stream)) {\n              return;\n            }\n            this._remoteStreams.push(stream);\n            const event = new Event('addstream');\n            event.stream = stream;\n            this.dispatchEvent(event);\n          });\n        });\n      }\n    });\n    const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        const pc = this;\n        if (!this._onaddstreampoly) {\n          this.addEventListener('track', this._onaddstreampoly = function(e) {\n            e.streams.forEach(stream => {\n              if (!pc._remoteStreams) {\n                pc._remoteStreams = [];\n              }\n              if (pc._remoteStreams.indexOf(stream) >= 0) {\n                return;\n              }\n              pc._remoteStreams.push(stream);\n              const event = new Event('addstream');\n              event.stream = stream;\n              pc.dispatchEvent(event);\n            });\n          });\n        }\n        return origSetRemoteDescription.apply(pc, arguments);\n      };\n  }\n}\n\nexport function shimCallbacksAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  const prototype = window.RTCPeerConnection.prototype;\n  const origCreateOffer = prototype.createOffer;\n  const origCreateAnswer = prototype.createAnswer;\n  const setLocalDescription = prototype.setLocalDescription;\n  const setRemoteDescription = prototype.setRemoteDescription;\n  const addIceCandidate = prototype.addIceCandidate;\n\n  prototype.createOffer =\n    function createOffer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateOffer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  prototype.createAnswer =\n    function createAnswer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateAnswer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  let withCallback = function(description, successCallback, failureCallback) {\n    const promise = setLocalDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setLocalDescription = withCallback;\n\n  withCallback = function(description, successCallback, failureCallback) {\n    const promise = setRemoteDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setRemoteDescription = withCallback;\n\n  withCallback = function(candidate, successCallback, failureCallback) {\n    const promise = addIceCandidate.apply(this, [candidate]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.addIceCandidate = withCallback;\n}\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    // shim not needed in Safari 12.1\n    const mediaDevices = navigator.mediaDevices;\n    const _getUserMedia = mediaDevices.getUserMedia.bind(mediaDevices);\n    navigator.mediaDevices.getUserMedia = (constraints) => {\n      return _getUserMedia(shimConstraints(constraints));\n    };\n  }\n\n  if (!navigator.getUserMedia && navigator.mediaDevices &&\n    navigator.mediaDevices.getUserMedia) {\n    navigator.getUserMedia = function getUserMedia(constraints, cb, errcb) {\n      navigator.mediaDevices.getUserMedia(constraints)\n        .then(cb, errcb);\n    }.bind(navigator);\n  }\n}\n\nexport function shimConstraints(constraints) {\n  if (constraints && constraints.video !== undefined) {\n    return Object.assign({},\n      constraints,\n      {video: utils.compactObject(constraints.video)}\n    );\n  }\n\n  return constraints;\n}\n\nexport function shimRTCIceServerUrls(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n  const OrigPeerConnection = window.RTCPeerConnection;\n  window.RTCPeerConnection =\n    function RTCPeerConnection(pcConfig, pcConstraints) {\n      if (pcConfig && pcConfig.iceServers) {\n        const newIceServers = [];\n        for (let i = 0; i < pcConfig.iceServers.length; i++) {\n          let server = pcConfig.iceServers[i];\n          if (server.urls === undefined && server.url) {\n            utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n            server = JSON.parse(JSON.stringify(server));\n            server.urls = server.url;\n            delete server.url;\n            newIceServers.push(server);\n          } else {\n            newIceServers.push(pcConfig.iceServers[i]);\n          }\n        }\n        pcConfig.iceServers = newIceServers;\n      }\n      return new OrigPeerConnection(pcConfig, pcConstraints);\n    };\n  window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n  // wrap static methods. Currently just generateCertificate.\n  if ('generateCertificate' in OrigPeerConnection) {\n    Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n      get() {\n        return OrigPeerConnection.generateCertificate;\n      }\n    });\n  }\n}\n\nexport function shimTrackEventTransceiver(window) {\n  // Add event.transceiver member over deprecated event.receiver\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      'receiver' in window.RTCTrackEvent.prototype &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimCreateOfferLegacy(window) {\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer =\n    function createOffer(offerOptions) {\n      if (offerOptions) {\n        if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveAudio =\n            !!offerOptions.offerToReceiveAudio;\n        }\n        const audioTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'audio');\n        if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n          if (audioTransceiver.direction === 'sendrecv') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('sendonly');\n            } else {\n              audioTransceiver.direction = 'sendonly';\n            }\n          } else if (audioTransceiver.direction === 'recvonly') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('inactive');\n            } else {\n              audioTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveAudio === true &&\n            !audioTransceiver) {\n          this.addTransceiver('audio', {direction: 'recvonly'});\n        }\n\n        if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveVideo =\n            !!offerOptions.offerToReceiveVideo;\n        }\n        const videoTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'video');\n        if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n          if (videoTransceiver.direction === 'sendrecv') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('sendonly');\n            } else {\n              videoTransceiver.direction = 'sendonly';\n            }\n          } else if (videoTransceiver.direction === 'recvonly') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('inactive');\n            } else {\n              videoTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveVideo === true &&\n            !videoTransceiver) {\n          this.addTransceiver('video', {direction: 'recvonly'});\n        }\n      }\n      return origCreateOffer.apply(this, arguments);\n    };\n}\n\nexport function shimAudioContext(window) {\n  if (typeof window !== 'object' || window.AudioContext) {\n    return;\n  }\n  window.AudioContext = window.webkitAudioContext;\n}\n\n", "/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport SDPUtils from 'sdp';\nimport * as utils from './utils';\n\nexport function shimRTCIceCandidate(window) {\n  // foundation is arbitrarily chosen as an indicator for full support for\n  // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'foundation' in\n      window.RTCIceCandidate.prototype)) {\n    return;\n  }\n\n  const NativeRTCIceCandidate = window.RTCIceCandidate;\n  window.RTCIceCandidate = function RTCIceCandidate(args) {\n    // Remove the a= which shouldn't be part of the candidate string.\n    if (typeof args === 'object' && args.candidate &&\n        args.candidate.indexOf('a=') === 0) {\n      args = JSON.parse(JSON.stringify(args));\n      args.candidate = args.candidate.substring(2);\n    }\n\n    if (args.candidate && args.candidate.length) {\n      // Augment the native candidate with the parsed fields.\n      const nativeCandidate = new NativeRTCIceCandidate(args);\n      const parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n      for (const key in parsedCandidate) {\n        if (!(key in nativeCandidate)) {\n          Object.defineProperty(nativeCandidate, key,\n            {value: parsedCandidate[key]});\n        }\n      }\n\n      // Override serializer to not serialize the extra attributes.\n      nativeCandidate.toJSON = function toJSON() {\n        return {\n          candidate: nativeCandidate.candidate,\n          sdpMid: nativeCandidate.sdpMid,\n          sdpMLineIndex: nativeCandidate.sdpMLineIndex,\n          usernameFragment: nativeCandidate.usernameFragment,\n        };\n      };\n      return nativeCandidate;\n    }\n    return new NativeRTCIceCandidate(args);\n  };\n  window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      Object.defineProperty(e, 'candidate', {\n        value: new window.RTCIceCandidate(e.candidate),\n        writable: 'false'\n      });\n    }\n    return e;\n  });\n}\n\nexport function shimRTCIceCandidateRelayProtocol(window) {\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'relayProtocol' in\n      window.RTCIceCandidate.prototype)) {\n    return;\n  }\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      const parsedCandidate = SDPUtils.parseCandidate(e.candidate.candidate);\n      if (parsedCandidate.type === 'relay') {\n        // This is a libwebrtc-specific mapping of local type preference\n        // to relayProtocol.\n        e.candidate.relayProtocol = {\n          0: 'tls',\n          1: 'tcp',\n          2: 'udp',\n        }[parsedCandidate.priority >> 24];\n      }\n    }\n    return e;\n  });\n}\n\nexport function shimMaxMessageSize(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  if (!('sctp' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n      get() {\n        return typeof this._sctp === 'undefined' ? null : this._sctp;\n      }\n    });\n  }\n\n  const sctpInDescription = function(description) {\n    if (!description || !description.sdp) {\n      return false;\n    }\n    const sections = SDPUtils.splitSections(description.sdp);\n    sections.shift();\n    return sections.some(mediaSection => {\n      const mLine = SDPUtils.parseMLine(mediaSection);\n      return mLine && mLine.kind === 'application'\n          && mLine.protocol.indexOf('SCTP') !== -1;\n    });\n  };\n\n  const getRemoteFirefoxVersion = function(description) {\n    // TODO: Is there a better solution for detecting Firefox?\n    const match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n    if (match === null || match.length < 2) {\n      return -1;\n    }\n    const version = parseInt(match[1], 10);\n    // Test for NaN (yes, this is ugly)\n    return version !== version ? -1 : version;\n  };\n\n  const getCanSendMaxMessageSize = function(remoteIsFirefox) {\n    // Every implementation we know can send at least 64 KiB.\n    // Note: Although Chrome is technically able to send up to 256 KiB, the\n    //       data does not reach the other peer reliably.\n    //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n    let canSendMaxMessageSize = 65536;\n    if (browserDetails.browser === 'firefox') {\n      if (browserDetails.version < 57) {\n        if (remoteIsFirefox === -1) {\n          // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n          // fragmentation.\n          canSendMaxMessageSize = 16384;\n        } else {\n          // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n          // messages. Thus, supporting ~2 GiB when sending.\n          canSendMaxMessageSize = 2147483637;\n        }\n      } else if (browserDetails.version < 60) {\n        // Currently, all FF >= 57 will reset the remote maximum message size\n        // to the default value when a data channel is created at a later\n        // stage. :(\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n        canSendMaxMessageSize =\n          browserDetails.version === 57 ? 65535 : 65536;\n      } else {\n        // FF >= 60 supports sending ~2 GiB\n        canSendMaxMessageSize = 2147483637;\n      }\n    }\n    return canSendMaxMessageSize;\n  };\n\n  const getMaxMessageSize = function(description, remoteIsFirefox) {\n    // Note: 65536 bytes is the default value from the SDP spec. Also,\n    //       every implementation we know supports receiving 65536 bytes.\n    let maxMessageSize = 65536;\n\n    // FF 57 has a slightly incorrect default remote max message size, so\n    // we need to adjust it here to avoid a failure when sending.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n    if (browserDetails.browser === 'firefox'\n         && browserDetails.version === 57) {\n      maxMessageSize = 65535;\n    }\n\n    const match = SDPUtils.matchPrefix(description.sdp,\n      'a=max-message-size:');\n    if (match.length > 0) {\n      maxMessageSize = parseInt(match[0].substring(19), 10);\n    } else if (browserDetails.browser === 'firefox' &&\n                remoteIsFirefox !== -1) {\n      // If the maximum message size is not present in the remote SDP and\n      // both local and remote are Firefox, the remote peer can receive\n      // ~2 GiB.\n      maxMessageSize = 2147483637;\n    }\n    return maxMessageSize;\n  };\n\n  const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n    function setRemoteDescription() {\n      this._sctp = null;\n      // Chrome decided to not expose .sctp in plan-b mode.\n      // As usual, adapter.js has to do an 'ugly worakaround'\n      // to cover up the mess.\n      if (browserDetails.browser === 'chrome' && browserDetails.version >= 76) {\n        const {sdpSemantics} = this.getConfiguration();\n        if (sdpSemantics === 'plan-b') {\n          Object.defineProperty(this, 'sctp', {\n            get() {\n              return typeof this._sctp === 'undefined' ? null : this._sctp;\n            },\n            enumerable: true,\n            configurable: true,\n          });\n        }\n      }\n\n      if (sctpInDescription(arguments[0])) {\n        // Check if the remote is FF.\n        const isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n        // Get the maximum message size the local peer is capable of sending\n        const canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n        // Get the maximum message size of the remote peer.\n        const remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n        // Determine final maximum message size\n        let maxMessageSize;\n        if (canSendMMS === 0 && remoteMMS === 0) {\n          maxMessageSize = Number.POSITIVE_INFINITY;\n        } else if (canSendMMS === 0 || remoteMMS === 0) {\n          maxMessageSize = Math.max(canSendMMS, remoteMMS);\n        } else {\n          maxMessageSize = Math.min(canSendMMS, remoteMMS);\n        }\n\n        // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n        // attribute.\n        const sctp = {};\n        Object.defineProperty(sctp, 'maxMessageSize', {\n          get() {\n            return maxMessageSize;\n          }\n        });\n        this._sctp = sctp;\n      }\n\n      return origSetRemoteDescription.apply(this, arguments);\n    };\n}\n\nexport function shimSendThrowTypeError(window) {\n  if (!(window.RTCPeerConnection &&\n      'createDataChannel' in window.RTCPeerConnection.prototype)) {\n    return;\n  }\n\n  // Note: Although Firefox >= 57 has a native implementation, the maximum\n  //       message size can be reset for all data channels at a later stage.\n  //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n  function wrapDcSend(dc, pc) {\n    const origDataChannelSend = dc.send;\n    dc.send = function send() {\n      const data = arguments[0];\n      const length = data.length || data.size || data.byteLength;\n      if (dc.readyState === 'open' &&\n          pc.sctp && length > pc.sctp.maxMessageSize) {\n        throw new TypeError('Message too large (can send a maximum of ' +\n          pc.sctp.maxMessageSize + ' bytes)');\n      }\n      return origDataChannelSend.apply(dc, arguments);\n    };\n  }\n  const origCreateDataChannel =\n    window.RTCPeerConnection.prototype.createDataChannel;\n  window.RTCPeerConnection.prototype.createDataChannel =\n    function createDataChannel() {\n      const dataChannel = origCreateDataChannel.apply(this, arguments);\n      wrapDcSend(dataChannel, this);\n      return dataChannel;\n    };\n  utils.wrapPeerConnectionEvent(window, 'datachannel', e => {\n    wrapDcSend(e.channel, e.target);\n    return e;\n  });\n}\n\n\n/* shims RTCConnectionState by pretending it is the same as iceConnectionState.\n * See https://bugs.chromium.org/p/webrtc/issues/detail?id=6145#c12\n * for why this is a valid hack in Chrome. In Firefox it is slightly incorrect\n * since DTLS failures would be hidden. See\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1265827\n * for the Firefox tracking bug.\n */\nexport function shimConnectionState(window) {\n  if (!window.RTCPeerConnection ||\n      'connectionState' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  Object.defineProperty(proto, 'connectionState', {\n    get() {\n      return {\n        completed: 'connected',\n        checking: 'connecting'\n      }[this.iceConnectionState] || this.iceConnectionState;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(proto, 'onconnectionstatechange', {\n    get() {\n      return this._onconnectionstatechange || null;\n    },\n    set(cb) {\n      if (this._onconnectionstatechange) {\n        this.removeEventListener('connectionstatechange',\n          this._onconnectionstatechange);\n        delete this._onconnectionstatechange;\n      }\n      if (cb) {\n        this.addEventListener('connectionstatechange',\n          this._onconnectionstatechange = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ['setLocalDescription', 'setRemoteDescription'].forEach((method) => {\n    const origMethod = proto[method];\n    proto[method] = function() {\n      if (!this._connectionstatechangepoly) {\n        this._connectionstatechangepoly = e => {\n          const pc = e.target;\n          if (pc._lastConnectionState !== pc.connectionState) {\n            pc._lastConnectionState = pc.connectionState;\n            const newEvent = new Event('connectionstatechange', e);\n            pc.dispatchEvent(newEvent);\n          }\n          return e;\n        };\n        this.addEventListener('iceconnectionstatechange',\n          this._connectionstatechangepoly);\n      }\n      return origMethod.apply(this, arguments);\n    };\n  });\n}\n\nexport function removeExtmapAllowMixed(window, browserDetails) {\n  /* remove a=extmap-allow-mixed for webrtc.org < M71 */\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  if (browserDetails.browser === 'chrome' && browserDetails.version >= 71) {\n    return;\n  }\n  if (browserDetails.browser === 'safari' && browserDetails.version >= 605) {\n    return;\n  }\n  const nativeSRD = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n  function setRemoteDescription(desc) {\n    if (desc && desc.sdp && desc.sdp.indexOf('\\na=extmap-allow-mixed') !== -1) {\n      const sdp = desc.sdp.split('\\n').filter((line) => {\n        return line.trim() !== 'a=extmap-allow-mixed';\n      }).join('\\n');\n      // Safari enforces read-only-ness of RTCSessionDescription fields.\n      if (window.RTCSessionDescription &&\n          desc instanceof window.RTCSessionDescription) {\n        arguments[0] = new window.RTCSessionDescription({\n          type: desc.type,\n          sdp,\n        });\n      } else {\n        desc.sdp = sdp;\n      }\n    }\n    return nativeSRD.apply(this, arguments);\n  };\n}\n\nexport function shimAddIceCandidateNullOrEmpty(window, browserDetails) {\n  // Support for addIceCandidate(null or undefined)\n  // as well as addIceCandidate({candidate: \"\", ...})\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=978582\n  // Note: must be called before other polyfills which change the signature.\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\n    return;\n  }\n  const nativeAddIceCandidate =\n      window.RTCPeerConnection.prototype.addIceCandidate;\n  if (!nativeAddIceCandidate || nativeAddIceCandidate.length === 0) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.addIceCandidate =\n    function addIceCandidate() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n      // in older versions.\n      // Native support for ignoring exists for Chrome M77+.\n      // Safari ignores as well, exact version unknown but works in the same\n      // version that also ignores addIceCandidate(null).\n      if (((browserDetails.browser === 'chrome' && browserDetails.version < 78)\n           || (browserDetails.browser === 'firefox'\n               && browserDetails.version < 68)\n           || (browserDetails.browser === 'safari'))\n          && arguments[0] && arguments[0].candidate === '') {\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n}\n\n// Note: Make sure to call this ahead of APIs that modify\n// setLocalDescription.length\nexport function shimParameterlessSetLocalDescription(window, browserDetails) {\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\n    return;\n  }\n  const nativeSetLocalDescription =\n      window.RTCPeerConnection.prototype.setLocalDescription;\n  if (!nativeSetLocalDescription || nativeSetLocalDescription.length === 0) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.setLocalDescription =\n    function setLocalDescription() {\n      let desc = arguments[0] || {};\n      if (typeof desc !== 'object' || (desc.type && desc.sdp)) {\n        return nativeSetLocalDescription.apply(this, arguments);\n      }\n      // The remaining steps should technically happen when SLD comes off the\n      // RTCPeerConnection's operations chain (not ahead of going on it), but\n      // this is too difficult to shim. Instead, this shim only covers the\n      // common case where the operations chain is empty. This is imperfect, but\n      // should cover many cases. Rationale: Even if we can't reduce the glare\n      // window to zero on imperfect implementations, there's value in tapping\n      // into the perfect negotiation pattern that several browsers support.\n      desc = {type: desc.type, sdp: desc.sdp};\n      if (!desc.type) {\n        switch (this.signalingState) {\n          case 'stable':\n          case 'have-local-offer':\n          case 'have-remote-pranswer':\n            desc.type = 'offer';\n            break;\n          default:\n            desc.type = 'answer';\n            break;\n        }\n      }\n      if (desc.sdp || (desc.type !== 'offer' && desc.type !== 'answer')) {\n        return nativeSetLocalDescription.apply(this, [desc]);\n      }\n      const func = desc.type === 'offer' ? this.createOffer : this.createAnswer;\n      return func.apply(this)\n        .then(d => nativeSetLocalDescription.apply(this, [d]));\n    };\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\nimport * as utils from './utils';\n\n// Browser shims.\nimport * as chromeShim from './chrome/chrome_shim';\nimport * as firefoxShim from './firefox/firefox_shim';\nimport * as safariShim from './safari/safari_shim';\nimport * as commonShim from './common_shim';\nimport * as sdp from 'sdp';\n\n// Shimming starts here.\nexport function adapterFactory({window} = {}, options = {\n  shimChrome: true,\n  shimFirefox: true,\n  shimSafari: true,\n}) {\n  // Utils.\n  const logging = utils.log;\n  const browserDetails = utils.detectBrowser(window);\n\n  const adapter = {\n    browserDetails,\n    commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings,\n    // Expose sdp as a convenience. For production apps include directly.\n    sdp,\n  };\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\n          !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      if (browserDetails.version === null) {\n        logging('Chrome shim can not determine version, not shimming.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      commonShim.shimParameterlessSetLocalDescription(window, browserDetails);\n\n      chromeShim.shimGetUserMedia(window, browserDetails);\n      chromeShim.shimMediaStream(window, browserDetails);\n      chromeShim.shimPeerConnection(window, browserDetails);\n      chromeShim.shimOnTrack(window, browserDetails);\n      chromeShim.shimAddTrackRemoveTrack(window, browserDetails);\n      chromeShim.shimGetSendersWithDtmf(window, browserDetails);\n      chromeShim.shimGetStats(window, browserDetails);\n      chromeShim.shimSenderReceiverGetStats(window, browserDetails);\n      chromeShim.fixNegotiationNeeded(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimRTCIceCandidateRelayProtocol(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\n          !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      commonShim.shimParameterlessSetLocalDescription(window, browserDetails);\n\n      firefoxShim.shimGetUserMedia(window, browserDetails);\n      firefoxShim.shimPeerConnection(window, browserDetails);\n      firefoxShim.shimOnTrack(window, browserDetails);\n      firefoxShim.shimRemoveStream(window, browserDetails);\n      firefoxShim.shimSenderGetStats(window, browserDetails);\n      firefoxShim.shimReceiverGetStats(window, browserDetails);\n      firefoxShim.shimRTCDataChannel(window, browserDetails);\n      firefoxShim.shimAddTransceiver(window, browserDetails);\n      firefoxShim.shimGetParameters(window, browserDetails);\n      firefoxShim.shimCreateOffer(window, browserDetails);\n      firefoxShim.shimCreateAnswer(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n\n      // Must be called before shimCallbackAPI.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      commonShim.shimParameterlessSetLocalDescription(window, browserDetails);\n\n      safariShim.shimRTCIceServerUrls(window, browserDetails);\n      safariShim.shimCreateOfferLegacy(window, browserDetails);\n      safariShim.shimCallbacksAPI(window, browserDetails);\n      safariShim.shimLocalStreamsAPI(window, browserDetails);\n      safariShim.shimRemoteStreamsAPI(window, browserDetails);\n      safariShim.shimTrackEventTransceiver(window, browserDetails);\n      safariShim.shimGetUserMedia(window, browserDetails);\n      safariShim.shimAudioContext(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimRTCIceCandidateRelayProtocol(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n\n'use strict';\n\nimport {adapterFactory} from './adapter_factory.js';\n\nconst adapter =\n  adapterFactory({window: typeof window === 'undefined' ? undefined : window});\nexport default adapter;\n", "/**\n * Get the type of a JSON value.\n * Distinguishes between array, null and object.\n */\nexport function typeofJsonValue(value) {\n    let t = typeof value;\n    if (t == \"object\") {\n        if (Array.isArray(value))\n            return \"array\";\n        if (value === null)\n            return \"null\";\n    }\n    return t;\n}\n/**\n * Is this a JSON object (instead of an array or null)?\n */\nexport function isJsonObject(value) {\n    return value !== null && typeof value == \"object\" && !Array.isArray(value);\n}\n", "// lookup table from base64 character to byte\nlet encTable = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n// lookup table from base64 character *code* to byte because lookup by number is fast\nlet decTable = [];\nfor (let i = 0; i < encTable.length; i++)\n    decTable[encTable[i].charCodeAt(0)] = i;\n// support base64url variants\ndecTable[\"-\".charCodeAt(0)] = encTable.indexOf(\"+\");\ndecTable[\"_\".charCodeAt(0)] = encTable.indexOf(\"/\");\n/**\n * Decodes a base64 string to a byte array.\n *\n * - ignores white-space, including line breaks and tabs\n * - allows inner padding (can decode concatenated base64 strings)\n * - does not require padding\n * - understands base64url encoding:\n *   \"-\" instead of \"+\",\n *   \"_\" instead of \"/\",\n *   no padding\n */\nexport function base64decode(base64Str) {\n    // estimate byte size, not accounting for inner padding and whitespace\n    let es = base64Str.length * 3 / 4;\n    // if (es % 3 !== 0)\n    // throw new Error('invalid base64 string');\n    if (base64Str[base64Str.length - 2] == '=')\n        es -= 2;\n    else if (base64Str[base64Str.length - 1] == '=')\n        es -= 1;\n    let bytes = new Uint8Array(es), bytePos = 0, // position in byte array\n    groupPos = 0, // position in base64 group\n    b, // current byte\n    p = 0 // previous byte\n    ;\n    for (let i = 0; i < base64Str.length; i++) {\n        b = decTable[base64Str.charCodeAt(i)];\n        if (b === undefined) {\n            // noinspection FallThroughInSwitchStatementJS\n            switch (base64Str[i]) {\n                case '=':\n                    groupPos = 0; // reset state when padding found\n                case '\\n':\n                case '\\r':\n                case '\\t':\n                case ' ':\n                    continue; // skip white-space, and padding\n                default:\n                    throw Error(`invalid base64 string.`);\n            }\n        }\n        switch (groupPos) {\n            case 0:\n                p = b;\n                groupPos = 1;\n                break;\n            case 1:\n                bytes[bytePos++] = p << 2 | (b & 48) >> 4;\n                p = b;\n                groupPos = 2;\n                break;\n            case 2:\n                bytes[bytePos++] = (p & 15) << 4 | (b & 60) >> 2;\n                p = b;\n                groupPos = 3;\n                break;\n            case 3:\n                bytes[bytePos++] = (p & 3) << 6 | b;\n                groupPos = 0;\n                break;\n        }\n    }\n    if (groupPos == 1)\n        throw Error(`invalid base64 string.`);\n    return bytes.subarray(0, bytePos);\n}\n/**\n * Encodes a byte array to a base64 string.\n * Adds padding at the end.\n * Does not insert newlines.\n */\nexport function base64encode(bytes) {\n    let base64 = '', groupPos = 0, // position in base64 group\n    b, // current byte\n    p = 0; // carry over from previous byte\n    for (let i = 0; i < bytes.length; i++) {\n        b = bytes[i];\n        switch (groupPos) {\n            case 0:\n                base64 += encTable[b >> 2];\n                p = (b & 3) << 4;\n                groupPos = 1;\n                break;\n            case 1:\n                base64 += encTable[p | b >> 4];\n                p = (b & 15) << 2;\n                groupPos = 2;\n                break;\n            case 2:\n                base64 += encTable[p | b >> 6];\n                base64 += encTable[b & 63];\n                groupPos = 0;\n                break;\n        }\n    }\n    // padding required?\n    if (groupPos) {\n        base64 += encTable[p];\n        base64 += '=';\n        if (groupPos == 1)\n            base64 += '=';\n    }\n    return base64;\n}\n", "/**\n * This handler implements the default behaviour for unknown fields.\n * When reading data, unknown fields are stored on the message, in a\n * symbol property.\n * When writing data, the symbol property is queried and unknown fields\n * are serialized into the output again.\n */\nexport var UnknownFieldHandler;\n(function (UnknownFieldHandler) {\n    /**\n     * The symbol used to store unknown fields for a message.\n     * The property must conform to `UnknownFieldContainer`.\n     */\n    UnknownFieldHandler.symbol = Symbol.for(\"protobuf-ts/unknown\");\n    /**\n     * Store an unknown field during binary read directly on the message.\n     * This method is compatible with `BinaryReadOptions.readUnknownField`.\n     */\n    UnknownFieldHandler.onRead = (typeName, message, fieldNo, wireType, data) => {\n        let container = is(message) ? message[UnknownFieldHandler.symbol] : message[UnknownFieldHandler.symbol] = [];\n        container.push({ no: fieldNo, wireType, data });\n    };\n    /**\n     * Write unknown fields stored for the message to the writer.\n     * This method is compatible with `BinaryWriteOptions.writeUnknownFields`.\n     */\n    UnknownFieldHandler.onWrite = (typeName, message, writer) => {\n        for (let { no, wireType, data } of UnknownFieldHandler.list(message))\n            writer.tag(no, wireType).raw(data);\n    };\n    /**\n     * List unknown fields stored for the message.\n     * Note that there may be multiples fields with the same number.\n     */\n    UnknownFieldHandler.list = (message, fieldNo) => {\n        if (is(message)) {\n            let all = message[UnknownFieldHandler.symbol];\n            return fieldNo ? all.filter(uf => uf.no == fieldNo) : all;\n        }\n        return [];\n    };\n    /**\n     * Returns the last unknown field by field number.\n     */\n    UnknownFieldHandler.last = (message, fieldNo) => UnknownFieldHandler.list(message, fieldNo).slice(-1)[0];\n    const is = (message) => message && Array.isArray(message[UnknownFieldHandler.symbol]);\n})(UnknownFieldHandler || (UnknownFieldHandler = {}));\n/**\n * Merges binary write or read options. Later values override earlier values.\n */\nexport function mergeBinaryOptions(a, b) {\n    return Object.assign(Object.assign({}, a), b);\n}\n/**\n * Protobuf binary format wire types.\n *\n * A wire type provides just enough information to find the length of the\n * following value.\n *\n * See https://developers.google.com/protocol-buffers/docs/encoding#structure\n */\nexport var WireType;\n(function (WireType) {\n    /**\n     * Used for int32, int64, uint32, uint64, sint32, sint64, bool, enum\n     */\n    WireType[WireType[\"Varint\"] = 0] = \"Varint\";\n    /**\n     * Used for fixed64, sfixed64, double.\n     * Always 8 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit64\"] = 1] = \"Bit64\";\n    /**\n     * Used for string, bytes, embedded messages, packed repeated fields\n     *\n     * Only repeated numeric types (types which use the varint, 32-bit,\n     * or 64-bit wire types) can be packed. In proto3, such fields are\n     * packed by default.\n     */\n    WireType[WireType[\"LengthDelimited\"] = 2] = \"LengthDelimited\";\n    /**\n     * Used for groups\n     * @deprecated\n     */\n    WireType[WireType[\"StartGroup\"] = 3] = \"StartGroup\";\n    /**\n     * Used for groups\n     * @deprecated\n     */\n    WireType[WireType[\"EndGroup\"] = 4] = \"EndGroup\";\n    /**\n     * Used for fixed32, sfixed32, float.\n     * Always 4 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit32\"] = 5] = \"Bit32\";\n})(WireType || (WireType = {}));\n", "// Copyright 2008 Google Inc.  All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n// Code generated by the Protocol Buffer compiler is owned by the owner\n// of the input file used when generating it.  This code is not\n// standalone and requires a support library to be linked with it.  This\n// support library is itself covered by the above license.\n/**\n * Read a 64 bit varint as two JS numbers.\n *\n * Returns tuple:\n * [0]: low bits\n * [0]: high bits\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L175\n */\nexport function varint64read() {\n    let lowBits = 0;\n    let highBits = 0;\n    for (let shift = 0; shift < 28; shift += 7) {\n        let b = this.buf[this.pos++];\n        lowBits |= (b & 0x7F) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    let middleByte = this.buf[this.pos++];\n    // last four bits of the first 32 bit number\n    lowBits |= (middleByte & 0x0F) << 28;\n    // 3 upper bits are part of the next 32 bit number\n    highBits = (middleByte & 0x70) >> 4;\n    if ((middleByte & 0x80) == 0) {\n        this.assertBounds();\n        return [lowBits, highBits];\n    }\n    for (let shift = 3; shift <= 31; shift += 7) {\n        let b = this.buf[this.pos++];\n        highBits |= (b & 0x7F) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    throw new Error('invalid varint');\n}\n/**\n * Write a 64 bit varint, given as two JS numbers, to the given bytes array.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/writer.js#L344\n */\nexport function varint64write(lo, hi, bytes) {\n    for (let i = 0; i < 28; i = i + 7) {\n        const shift = lo >>> i;\n        const hasNext = !((shift >>> 7) == 0 && hi == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xFF;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    const splitBits = ((lo >>> 28) & 0x0F) | ((hi & 0x07) << 4);\n    const hasMoreBits = !((hi >> 3) == 0);\n    bytes.push((hasMoreBits ? splitBits | 0x80 : splitBits) & 0xFF);\n    if (!hasMoreBits) {\n        return;\n    }\n    for (let i = 3; i < 31; i = i + 7) {\n        const shift = hi >>> i;\n        const hasNext = !((shift >>> 7) == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xFF;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    bytes.push((hi >>> 31) & 0x01);\n}\n// constants for binary math\nconst TWO_PWR_32_DBL = (1 << 16) * (1 << 16);\n/**\n * Parse decimal string of 64 bit integer value as two JS numbers.\n *\n * Returns tuple:\n * [0]: minus sign?\n * [1]: low bits\n * [2]: high bits\n *\n * Copyright 2008 Google Inc.\n */\nexport function int64fromString(dec) {\n    // Check for minus sign.\n    let minus = dec[0] == '-';\n    if (minus)\n        dec = dec.slice(1);\n    // Work 6 decimal digits at a time, acting like we're converting base 1e6\n    // digits to binary. This is safe to do with floating point math because\n    // Number.isSafeInteger(ALL_32_BITS * 1e6) == true.\n    const base = 1e6;\n    let lowBits = 0;\n    let highBits = 0;\n    function add1e6digit(begin, end) {\n        // Note: Number('') is 0.\n        const digit1e6 = Number(dec.slice(begin, end));\n        highBits *= base;\n        lowBits = lowBits * base + digit1e6;\n        // Carry bits from lowBits to highBits\n        if (lowBits >= TWO_PWR_32_DBL) {\n            highBits = highBits + ((lowBits / TWO_PWR_32_DBL) | 0);\n            lowBits = lowBits % TWO_PWR_32_DBL;\n        }\n    }\n    add1e6digit(-24, -18);\n    add1e6digit(-18, -12);\n    add1e6digit(-12, -6);\n    add1e6digit(-6);\n    return [minus, lowBits, highBits];\n}\n/**\n * Format 64 bit integer value (as two JS numbers) to decimal string.\n *\n * Copyright 2008 Google Inc.\n */\nexport function int64toString(bitsLow, bitsHigh) {\n    // Skip the expensive conversion if the number is small enough to use the\n    // built-in conversions.\n    if ((bitsHigh >>> 0) <= 0x1FFFFF) {\n        return '' + (TWO_PWR_32_DBL * bitsHigh + (bitsLow >>> 0));\n    }\n    // What this code is doing is essentially converting the input number from\n    // base-2 to base-1e7, which allows us to represent the 64-bit range with\n    // only 3 (very large) digits. Those digits are then trivial to convert to\n    // a base-10 string.\n    // The magic numbers used here are -\n    // 2^24 = 16777216 = (1,6777216) in base-1e7.\n    // 2^48 = 281474976710656 = (2,8147497,6710656) in base-1e7.\n    // Split 32:32 representation into 16:24:24 representation so our\n    // intermediate digits don't overflow.\n    let low = bitsLow & 0xFFFFFF;\n    let mid = (((bitsLow >>> 24) | (bitsHigh << 8)) >>> 0) & 0xFFFFFF;\n    let high = (bitsHigh >> 16) & 0xFFFF;\n    // Assemble our three base-1e7 digits, ignoring carries. The maximum\n    // value in a digit at this step is representable as a 48-bit integer, which\n    // can be stored in a 64-bit floating point number.\n    let digitA = low + (mid * 6777216) + (high * 6710656);\n    let digitB = mid + (high * 8147497);\n    let digitC = (high * 2);\n    // Apply carries from A to B and from B to C.\n    let base = 10000000;\n    if (digitA >= base) {\n        digitB += Math.floor(digitA / base);\n        digitA %= base;\n    }\n    if (digitB >= base) {\n        digitC += Math.floor(digitB / base);\n        digitB %= base;\n    }\n    // Convert base-1e7 digits to base-10, with optional leading zeroes.\n    function decimalFrom1e7(digit1e7, needLeadingZeros) {\n        let partial = digit1e7 ? String(digit1e7) : '';\n        if (needLeadingZeros) {\n            return '0000000'.slice(partial.length) + partial;\n        }\n        return partial;\n    }\n    return decimalFrom1e7(digitC, /*needLeadingZeros=*/ 0) +\n        decimalFrom1e7(digitB, /*needLeadingZeros=*/ digitC) +\n        // If the final 1e7 digit didn't need leading zeros, we would have\n        // returned via the trivial code path at the top.\n        decimalFrom1e7(digitA, /*needLeadingZeros=*/ 1);\n}\n/**\n * Write a 32 bit varint, signed or unsigned. Same as `varint64write(0, value, bytes)`\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/1b18833f4f2a2f681f4e4a25cdf3b0a43115ec26/js/binary/encoder.js#L144\n */\nexport function varint32write(value, bytes) {\n    if (value >= 0) {\n        // write value as varint 32\n        while (value > 0x7f) {\n            bytes.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        bytes.push(value);\n    }\n    else {\n        for (let i = 0; i < 9; i++) {\n            bytes.push(value & 127 | 128);\n            value = value >> 7;\n        }\n        bytes.push(1);\n    }\n}\n/**\n * Read an unsigned 32 bit varint.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L220\n */\nexport function varint32read() {\n    let b = this.buf[this.pos++];\n    let result = b & 0x7F;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7F) << 7;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7F) << 14;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7F) << 21;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    // Extract only last 4 bits\n    b = this.buf[this.pos++];\n    result |= (b & 0x0F) << 28;\n    for (let readBytes = 5; ((b & 0x80) !== 0) && readBytes < 10; readBytes++)\n        b = this.buf[this.pos++];\n    if ((b & 0x80) != 0)\n        throw new Error('invalid varint');\n    this.assertBounds();\n    // Result can have 32 bits, convert it to unsigned\n    return result >>> 0;\n}\n", "import { int64fromString, int64toString } from \"./goog-varint\";\nlet BI;\nexport function detectBi() {\n    const dv = new DataView(new ArrayBuffer(8));\n    const ok = globalThis.BigInt !== undefined\n        && typeof dv.getBigInt64 === \"function\"\n        && typeof dv.getBigUint64 === \"function\"\n        && typeof dv.setBigInt64 === \"function\"\n        && typeof dv.setBigUint64 === \"function\";\n    BI = ok ? {\n        MIN: BigInt(\"-9223372036854775808\"),\n        MAX: BigInt(\"9223372036854775807\"),\n        UMIN: BigInt(\"0\"),\n        UMAX: BigInt(\"18446744073709551615\"),\n        C: BigInt,\n        V: dv,\n    } : undefined;\n}\ndetectBi();\nfunction assertBi(bi) {\n    if (!bi)\n        throw new Error(\"BigInt unavailable, see https://github.com/timostamm/protobuf-ts/blob/v1.0.8/MANUAL.md#bigint-support\");\n}\n// used to validate from(string) input (when bigint is unavailable)\nconst RE_DECIMAL_STR = /^-?[0-9]+$/;\n// constants for binary math\nconst TWO_PWR_32_DBL = 0x100000000;\nconst HALF_2_PWR_32 = 0x080000000;\n// base class for PbLong and PbULong provides shared code\nclass SharedPbLong {\n    /**\n     * Create a new instance with the given bits.\n     */\n    constructor(lo, hi) {\n        this.lo = lo | 0;\n        this.hi = hi | 0;\n    }\n    /**\n     * Is this instance equal to 0?\n     */\n    isZero() {\n        return this.lo == 0 && this.hi == 0;\n    }\n    /**\n     * Convert to a native number.\n     */\n    toNumber() {\n        let result = this.hi * TWO_PWR_32_DBL + (this.lo >>> 0);\n        if (!Number.isSafeInteger(result))\n            throw new Error(\"cannot convert to safe number\");\n        return result;\n    }\n}\n/**\n * 64-bit unsigned integer as two 32-bit values.\n * Converts between `string`, `number` and `bigint` representations.\n */\nexport class PbULong extends SharedPbLong {\n    /**\n     * Create instance from a `string`, `number` or `bigint`.\n     */\n    static from(value) {\n        if (BI)\n            // noinspection FallThroughInSwitchStatementJS\n            switch (typeof value) {\n                case \"string\":\n                    if (value == \"0\")\n                        return this.ZERO;\n                    if (value == \"\")\n                        throw new Error('string is no integer');\n                    value = BI.C(value);\n                case \"number\":\n                    if (value === 0)\n                        return this.ZERO;\n                    value = BI.C(value);\n                case \"bigint\":\n                    if (!value)\n                        return this.ZERO;\n                    if (value < BI.UMIN)\n                        throw new Error('signed value for ulong');\n                    if (value > BI.UMAX)\n                        throw new Error('ulong too large');\n                    BI.V.setBigUint64(0, value, true);\n                    return new PbULong(BI.V.getInt32(0, true), BI.V.getInt32(4, true));\n            }\n        else\n            switch (typeof value) {\n                case \"string\":\n                    if (value == \"0\")\n                        return this.ZERO;\n                    value = value.trim();\n                    if (!RE_DECIMAL_STR.test(value))\n                        throw new Error('string is no integer');\n                    let [minus, lo, hi] = int64fromString(value);\n                    if (minus)\n                        throw new Error('signed value for ulong');\n                    return new PbULong(lo, hi);\n                case \"number\":\n                    if (value == 0)\n                        return this.ZERO;\n                    if (!Number.isSafeInteger(value))\n                        throw new Error('number is no integer');\n                    if (value < 0)\n                        throw new Error('signed value for ulong');\n                    return new PbULong(value, value / TWO_PWR_32_DBL);\n            }\n        throw new Error('unknown value ' + typeof value);\n    }\n    /**\n     * Convert to decimal string.\n     */\n    toString() {\n        return BI ? this.toBigInt().toString() : int64toString(this.lo, this.hi);\n    }\n    /**\n     * Convert to native bigint.\n     */\n    toBigInt() {\n        assertBi(BI);\n        BI.V.setInt32(0, this.lo, true);\n        BI.V.setInt32(4, this.hi, true);\n        return BI.V.getBigUint64(0, true);\n    }\n}\n/**\n * ulong 0 singleton.\n */\nPbULong.ZERO = new PbULong(0, 0);\n/**\n * 64-bit signed integer as two 32-bit values.\n * Converts between `string`, `number` and `bigint` representations.\n */\nexport class PbLong extends SharedPbLong {\n    /**\n     * Create instance from a `string`, `number` or `bigint`.\n     */\n    static from(value) {\n        if (BI)\n            // noinspection FallThroughInSwitchStatementJS\n            switch (typeof value) {\n                case \"string\":\n                    if (value == \"0\")\n                        return this.ZERO;\n                    if (value == \"\")\n                        throw new Error('string is no integer');\n                    value = BI.C(value);\n                case \"number\":\n                    if (value === 0)\n                        return this.ZERO;\n                    value = BI.C(value);\n                case \"bigint\":\n                    if (!value)\n                        return this.ZERO;\n                    if (value < BI.MIN)\n                        throw new Error('signed long too small');\n                    if (value > BI.MAX)\n                        throw new Error('signed long too large');\n                    BI.V.setBigInt64(0, value, true);\n                    return new PbLong(BI.V.getInt32(0, true), BI.V.getInt32(4, true));\n            }\n        else\n            switch (typeof value) {\n                case \"string\":\n                    if (value == \"0\")\n                        return this.ZERO;\n                    value = value.trim();\n                    if (!RE_DECIMAL_STR.test(value))\n                        throw new Error('string is no integer');\n                    let [minus, lo, hi] = int64fromString(value);\n                    if (minus) {\n                        if (hi > HALF_2_PWR_32 || (hi == HALF_2_PWR_32 && lo != 0))\n                            throw new Error('signed long too small');\n                    }\n                    else if (hi >= HALF_2_PWR_32)\n                        throw new Error('signed long too large');\n                    let pbl = new PbLong(lo, hi);\n                    return minus ? pbl.negate() : pbl;\n                case \"number\":\n                    if (value == 0)\n                        return this.ZERO;\n                    if (!Number.isSafeInteger(value))\n                        throw new Error('number is no integer');\n                    return value > 0\n                        ? new PbLong(value, value / TWO_PWR_32_DBL)\n                        : new PbLong(-value, -value / TWO_PWR_32_DBL).negate();\n            }\n        throw new Error('unknown value ' + typeof value);\n    }\n    /**\n     * Do we have a minus sign?\n     */\n    isNegative() {\n        return (this.hi & HALF_2_PWR_32) !== 0;\n    }\n    /**\n     * Negate two's complement.\n     * Invert all the bits and add one to the result.\n     */\n    negate() {\n        let hi = ~this.hi, lo = this.lo;\n        if (lo)\n            lo = ~lo + 1;\n        else\n            hi += 1;\n        return new PbLong(lo, hi);\n    }\n    /**\n     * Convert to decimal string.\n     */\n    toString() {\n        if (BI)\n            return this.toBigInt().toString();\n        if (this.isNegative()) {\n            let n = this.negate();\n            return '-' + int64toString(n.lo, n.hi);\n        }\n        return int64toString(this.lo, this.hi);\n    }\n    /**\n     * Convert to native bigint.\n     */\n    toBigInt() {\n        assertBi(BI);\n        BI.V.setInt32(0, this.lo, true);\n        BI.V.setInt32(4, this.hi, true);\n        return BI.V.getBigInt64(0, true);\n    }\n}\n/**\n * long 0 singleton.\n */\nPbLong.ZERO = new PbLong(0, 0);\n", "import { WireType } from \"./binary-format-contract\";\nimport { PbLong, PbULong } from \"./pb-long\";\nimport { varint32read, varint64read } from \"./goog-varint\";\nconst defaultsRead = {\n    readUnknownField: true,\n    readerFactory: bytes => new BinaryReader(bytes),\n};\n/**\n * Make options for reading binary data form partial options.\n */\nexport function binaryReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, defaultsRead), options) : defaultsRead;\n}\nexport class BinaryReader {\n    constructor(buf, textDecoder) {\n        this.varint64 = varint64read; // dirty cast for `this`\n        /**\n         * Read a `uint32` field, an unsigned 32 bit varint.\n         */\n        this.uint32 = varint32read; // dirty cast for `this` and access to protected `buf`\n        this.buf = buf;\n        this.len = buf.length;\n        this.pos = 0;\n        this.view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        this.textDecoder = textDecoder !== null && textDecoder !== void 0 ? textDecoder : new TextDecoder(\"utf-8\", {\n            fatal: true,\n            ignoreBOM: true,\n        });\n    }\n    /**\n     * Reads a tag - field number and wire type.\n     */\n    tag() {\n        let tag = this.uint32(), fieldNo = tag >>> 3, wireType = tag & 7;\n        if (fieldNo <= 0 || wireType < 0 || wireType > 5)\n            throw new Error(\"illegal tag: field no \" + fieldNo + \" wire type \" + wireType);\n        return [fieldNo, wireType];\n    }\n    /**\n     * Skip one element on the wire and return the skipped data.\n     * Supports WireType.StartGroup since v2.0.0-alpha.23.\n     */\n    skip(wireType) {\n        let start = this.pos;\n        // noinspection FallThroughInSwitchStatementJS\n        switch (wireType) {\n            case WireType.Varint:\n                while (this.buf[this.pos++] & 0x80) {\n                    // ignore\n                }\n                break;\n            case WireType.Bit64:\n                this.pos += 4;\n            case WireType.Bit32:\n                this.pos += 4;\n                break;\n            case WireType.LengthDelimited:\n                let len = this.uint32();\n                this.pos += len;\n                break;\n            case WireType.StartGroup:\n                // From descriptor.proto: Group type is deprecated, not supported in proto3.\n                // But we must still be able to parse and treat as unknown.\n                let t;\n                while ((t = this.tag()[1]) !== WireType.EndGroup) {\n                    this.skip(t);\n                }\n                break;\n            default:\n                throw new Error(\"cant skip wire type \" + wireType);\n        }\n        this.assertBounds();\n        return this.buf.subarray(start, this.pos);\n    }\n    /**\n     * Throws error if position in byte array is out of range.\n     */\n    assertBounds() {\n        if (this.pos > this.len)\n            throw new RangeError(\"premature EOF\");\n    }\n    /**\n     * Read a `int32` field, a signed 32 bit varint.\n     */\n    int32() {\n        return this.uint32() | 0;\n    }\n    /**\n     * Read a `sint32` field, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32() {\n        let zze = this.uint32();\n        // decode zigzag\n        return (zze >>> 1) ^ -(zze & 1);\n    }\n    /**\n     * Read a `int64` field, a signed 64-bit varint.\n     */\n    int64() {\n        return new PbLong(...this.varint64());\n    }\n    /**\n     * Read a `uint64` field, an unsigned 64-bit varint.\n     */\n    uint64() {\n        return new PbULong(...this.varint64());\n    }\n    /**\n     * Read a `sint64` field, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64() {\n        let [lo, hi] = this.varint64();\n        // decode zig zag\n        let s = -(lo & 1);\n        lo = ((lo >>> 1 | (hi & 1) << 31) ^ s);\n        hi = (hi >>> 1 ^ s);\n        return new PbLong(lo, hi);\n    }\n    /**\n     * Read a `bool` field, a variant.\n     */\n    bool() {\n        let [lo, hi] = this.varint64();\n        return lo !== 0 || hi !== 0;\n    }\n    /**\n     * Read a `fixed32` field, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32() {\n        return this.view.getUint32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `sfixed32` field, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32() {\n        return this.view.getInt32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `fixed64` field, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64() {\n        return new PbULong(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `fixed64` field, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64() {\n        return new PbLong(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `float` field, 32-bit floating point number.\n     */\n    float() {\n        return this.view.getFloat32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `double` field, a 64-bit floating point number.\n     */\n    double() {\n        return this.view.getFloat64((this.pos += 8) - 8, true);\n    }\n    /**\n     * Read a `bytes` field, length-delimited arbitrary data.\n     */\n    bytes() {\n        let len = this.uint32();\n        let start = this.pos;\n        this.pos += len;\n        this.assertBounds();\n        return this.buf.subarray(start, start + len);\n    }\n    /**\n     * Read a `string` field, length-delimited data converted to UTF-8 text.\n     */\n    string() {\n        return this.textDecoder.decode(this.bytes());\n    }\n}\n", "/**\n * assert that condition is true or throw error (with message)\n */\nexport function assert(condition, msg) {\n    if (!condition) {\n        throw new Error(msg);\n    }\n}\n/**\n * assert that value cannot exist = type `never`. throw runtime error if it does.\n */\nexport function assertNever(value, msg) {\n    throw new Error(msg !== null && msg !== void 0 ? msg : 'Unexpected object: ' + value);\n}\nconst FLOAT32_MAX = 3.4028234663852886e+38, FLOAT32_MIN = -3.4028234663852886e+38, UINT32_MAX = 0xFFFFFFFF, INT32_MAX = 0X7FFFFFFF, INT32_MIN = -0X80000000;\nexport function assertInt32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error('invalid int 32: ' + typeof arg);\n    if (!Number.isInteger(arg) || arg > INT32_MAX || arg < INT32_MIN)\n        throw new Error('invalid int 32: ' + arg);\n}\nexport function assertUInt32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error('invalid uint 32: ' + typeof arg);\n    if (!Number.isInteger(arg) || arg > UINT32_MAX || arg < 0)\n        throw new Error('invalid uint 32: ' + arg);\n}\nexport function assertFloat32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error('invalid float 32: ' + typeof arg);\n    if (!Number.isFinite(arg))\n        return;\n    if (arg > FLOAT32_MAX || arg < FLOAT32_MIN)\n        throw new Error('invalid float 32: ' + arg);\n}\n", "import { PbLong, PbULong } from \"./pb-long\";\nimport { varint32write, varint64write } from \"./goog-varint\";\nimport { assertFloat32, assertInt32, assertUInt32 } from \"./assert\";\nconst defaultsWrite = {\n    writeUnknownFields: true,\n    writerFactory: () => new BinaryWriter(),\n};\n/**\n * Make options for writing binary data form partial options.\n */\nexport function binaryWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, defaultsWrite), options) : defaultsWrite;\n}\nexport class BinaryWriter {\n    constructor(textEncoder) {\n        /**\n         * Previous fork states.\n         */\n        this.stack = [];\n        this.textEncoder = textEncoder !== null && textEncoder !== void 0 ? textEncoder : new TextEncoder();\n        this.chunks = [];\n        this.buf = [];\n    }\n    /**\n     * Return all bytes written and reset this writer.\n     */\n    finish() {\n        this.chunks.push(new Uint8Array(this.buf)); // flush the buffer\n        let len = 0;\n        for (let i = 0; i < this.chunks.length; i++)\n            len += this.chunks[i].length;\n        let bytes = new Uint8Array(len);\n        let offset = 0;\n        for (let i = 0; i < this.chunks.length; i++) {\n            bytes.set(this.chunks[i], offset);\n            offset += this.chunks[i].length;\n        }\n        this.chunks = [];\n        return bytes;\n    }\n    /**\n     * Start a new fork for length-delimited data like a message\n     * or a packed repeated field.\n     *\n     * Must be joined later with `join()`.\n     */\n    fork() {\n        this.stack.push({ chunks: this.chunks, buf: this.buf });\n        this.chunks = [];\n        this.buf = [];\n        return this;\n    }\n    /**\n     * Join the last fork. Write its length and bytes, then\n     * return to the previous state.\n     */\n    join() {\n        // get chunk of fork\n        let chunk = this.finish();\n        // restore previous state\n        let prev = this.stack.pop();\n        if (!prev)\n            throw new Error('invalid state, fork stack empty');\n        this.chunks = prev.chunks;\n        this.buf = prev.buf;\n        // write length of chunk as varint\n        this.uint32(chunk.byteLength);\n        return this.raw(chunk);\n    }\n    /**\n     * Writes a tag (field number and wire type).\n     *\n     * Equivalent to `uint32( (fieldNo << 3 | type) >>> 0 )`.\n     *\n     * Generated code should compute the tag ahead of time and call `uint32()`.\n     */\n    tag(fieldNo, type) {\n        return this.uint32((fieldNo << 3 | type) >>> 0);\n    }\n    /**\n     * Write a chunk of raw bytes.\n     */\n    raw(chunk) {\n        if (this.buf.length) {\n            this.chunks.push(new Uint8Array(this.buf));\n            this.buf = [];\n        }\n        this.chunks.push(chunk);\n        return this;\n    }\n    /**\n     * Write a `uint32` value, an unsigned 32 bit varint.\n     */\n    uint32(value) {\n        assertUInt32(value);\n        // write value as varint 32, inlined for speed\n        while (value > 0x7f) {\n            this.buf.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        this.buf.push(value);\n        return this;\n    }\n    /**\n     * Write a `int32` value, a signed 32 bit varint.\n     */\n    int32(value) {\n        assertInt32(value);\n        varint32write(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `bool` value, a variant.\n     */\n    bool(value) {\n        this.buf.push(value ? 1 : 0);\n        return this;\n    }\n    /**\n     * Write a `bytes` value, length-delimited arbitrary data.\n     */\n    bytes(value) {\n        this.uint32(value.byteLength); // write length of chunk as varint\n        return this.raw(value);\n    }\n    /**\n     * Write a `string` value, length-delimited data converted to UTF-8 text.\n     */\n    string(value) {\n        let chunk = this.textEncoder.encode(value);\n        this.uint32(chunk.byteLength); // write length of chunk as varint\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `float` value, 32-bit floating point number.\n     */\n    float(value) {\n        assertFloat32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setFloat32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `double` value, a 64-bit floating point number.\n     */\n    double(value) {\n        let chunk = new Uint8Array(8);\n        new DataView(chunk.buffer).setFloat64(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed32` value, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32(value) {\n        assertUInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setUint32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sfixed32` value, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32(value) {\n        assertInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setInt32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sint32` value, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32(value) {\n        assertInt32(value);\n        // zigzag encode\n        value = ((value << 1) ^ (value >> 31)) >>> 0;\n        varint32write(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `fixed64` value, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64(value) {\n        let chunk = new Uint8Array(8);\n        let view = new DataView(chunk.buffer);\n        let long = PbLong.from(value);\n        view.setInt32(0, long.lo, true);\n        view.setInt32(4, long.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed64` value, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64(value) {\n        let chunk = new Uint8Array(8);\n        let view = new DataView(chunk.buffer);\n        let long = PbULong.from(value);\n        view.setInt32(0, long.lo, true);\n        view.setInt32(4, long.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `int64` value, a signed 64-bit varint.\n     */\n    int64(value) {\n        let long = PbLong.from(value);\n        varint64write(long.lo, long.hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `sint64` value, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64(value) {\n        let long = PbLong.from(value), \n        // zigzag encode\n        sign = long.hi >> 31, lo = (long.lo << 1) ^ sign, hi = ((long.hi << 1) | (long.lo >>> 31)) ^ sign;\n        varint64write(lo, hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `uint64` value, an unsigned 64-bit varint.\n     */\n    uint64(value) {\n        let long = PbULong.from(value);\n        varint64write(long.lo, long.hi, this.buf);\n        return this;\n    }\n}\n", "const defaultsWrite = {\n    emitDefaultValues: false,\n    enumAsInteger: false,\n    useProtoFieldName: false,\n    prettySpaces: 0,\n}, defaultsRead = {\n    ignoreUnknownFields: false,\n};\n/**\n * Make options for reading JSON data from partial options.\n */\nexport function jsonReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, defaultsRead), options) : defaultsRead;\n}\n/**\n * Make options for writing JSON data from partial options.\n */\nexport function jsonWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, defaultsWrite), options) : defaultsWrite;\n}\n/**\n * Merges JSON write or read options. Later values override earlier values. Type registries are merged.\n */\nexport function mergeJsonOptions(a, b) {\n    var _a, _b;\n    let c = Object.assign(Object.assign({}, a), b);\n    c.typeRegistry = [...((_a = a === null || a === void 0 ? void 0 : a.typeRegistry) !== null && _a !== void 0 ? _a : []), ...((_b = b === null || b === void 0 ? void 0 : b.typeRegistry) !== null && _b !== void 0 ? _b : [])];\n    return c;\n}\n", "/**\n * The symbol used as a key on message objects to store the message type.\n *\n * Note that this is an experimental feature - it is here to stay, but\n * implementation details may change without notice.\n */\nexport const MESSAGE_TYPE = Symbol.for(\"protobuf-ts/message-type\");\n", "/**\n * Converts snake_case to lowerCamelCase.\n *\n * Should behave like protoc:\n * https://github.com/protocolbuffers/protobuf/blob/e8ae137c96444ea313485ed1118c5e43b2099cf1/src/google/protobuf/compiler/java/java_helpers.cc#L118\n */\nexport function lowerCamelCase(snakeCase) {\n    let capNext = false;\n    const sb = [];\n    for (let i = 0; i < snakeCase.length; i++) {\n        let next = snakeCase.charAt(i);\n        if (next == '_') {\n            capNext = true;\n        }\n        else if (/\\d/.test(next)) {\n            sb.push(next);\n            capNext = true;\n        }\n        else if (capNext) {\n            sb.push(next.toUpperCase());\n            capNext = false;\n        }\n        else if (i == 0) {\n            sb.push(next.toLowerCase());\n        }\n        else {\n            sb.push(next);\n        }\n    }\n    return sb.join('');\n}\n", "import { lowerCamelCase } from \"./lower-camel-case\";\n/**\n * Scalar value types. This is a subset of field types declared by protobuf\n * enum google.protobuf.FieldDescriptorProto.Type The types GROUP and MESSAGE\n * are omitted, but the numerical values are identical.\n */\nexport var ScalarType;\n(function (ScalarType) {\n    // 0 is reserved for errors.\n    // Order is weird for historical reasons.\n    ScalarType[ScalarType[\"DOUBLE\"] = 1] = \"DOUBLE\";\n    ScalarType[ScalarType[\"FLOAT\"] = 2] = \"FLOAT\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT64\"] = 3] = \"INT64\";\n    ScalarType[ScalarType[\"UINT64\"] = 4] = \"UINT64\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT32\"] = 5] = \"INT32\";\n    ScalarType[ScalarType[\"FIXED64\"] = 6] = \"FIXED64\";\n    ScalarType[ScalarType[\"FIXED32\"] = 7] = \"FIXED32\";\n    ScalarType[ScalarType[\"BOOL\"] = 8] = \"BOOL\";\n    ScalarType[ScalarType[\"STRING\"] = 9] = \"STRING\";\n    // Tag-delimited aggregate.\n    // Group type is deprecated and not supported in proto3. However, Proto3\n    // implementations should still be able to parse the group wire format and\n    // treat group fields as unknown fields.\n    // TYPE_GROUP = 10,\n    // TYPE_MESSAGE = 11,  // Length-delimited aggregate.\n    // New in version 2.\n    ScalarType[ScalarType[\"BYTES\"] = 12] = \"BYTES\";\n    ScalarType[ScalarType[\"UINT32\"] = 13] = \"UINT32\";\n    // TYPE_ENUM = 14,\n    ScalarType[ScalarType[\"SFIXED32\"] = 15] = \"SFIXED32\";\n    ScalarType[ScalarType[\"SFIXED64\"] = 16] = \"SFIXED64\";\n    ScalarType[ScalarType[\"SINT32\"] = 17] = \"SINT32\";\n    ScalarType[ScalarType[\"SINT64\"] = 18] = \"SINT64\";\n})(ScalarType || (ScalarType = {}));\n/**\n * JavaScript representation of 64 bit integral types. Equivalent to the\n * field option \"jstype\".\n *\n * By default, protobuf-ts represents 64 bit types as `bigint`.\n *\n * You can change the default behaviour by enabling the plugin parameter\n * `long_type_string`, which will represent 64 bit types as `string`.\n *\n * Alternatively, you can change the behaviour for individual fields\n * with the field option \"jstype\":\n *\n * ```protobuf\n * uint64 my_field = 1 [jstype = JS_STRING];\n * uint64 other_field = 2 [jstype = JS_NUMBER];\n * ```\n */\nexport var LongType;\n(function (LongType) {\n    /**\n     * Use JavaScript `bigint`.\n     *\n     * Field option `[jstype = JS_NORMAL]`.\n     */\n    LongType[LongType[\"BIGINT\"] = 0] = \"BIGINT\";\n    /**\n     * Use JavaScript `string`.\n     *\n     * Field option `[jstype = JS_STRING]`.\n     */\n    LongType[LongType[\"STRING\"] = 1] = \"STRING\";\n    /**\n     * Use JavaScript `number`.\n     *\n     * Large values will loose precision.\n     *\n     * Field option `[jstype = JS_NUMBER]`.\n     */\n    LongType[LongType[\"NUMBER\"] = 2] = \"NUMBER\";\n})(LongType || (LongType = {}));\n/**\n * Protobuf 2.1.0 introduced packed repeated fields.\n * Setting the field option `[packed = true]` enables packing.\n *\n * In proto3, all repeated fields are packed by default.\n * Setting the field option `[packed = false]` disables packing.\n *\n * Packed repeated fields are encoded with a single tag,\n * then a length-delimiter, then the element values.\n *\n * Unpacked repeated fields are encoded with a tag and\n * value for each element.\n *\n * `bytes` and `string` cannot be packed.\n */\nexport var RepeatType;\n(function (RepeatType) {\n    /**\n     * The field is not repeated.\n     */\n    RepeatType[RepeatType[\"NO\"] = 0] = \"NO\";\n    /**\n     * The field is repeated and should be packed.\n     * Invalid for `bytes` and `string`, they cannot be packed.\n     */\n    RepeatType[RepeatType[\"PACKED\"] = 1] = \"PACKED\";\n    /**\n     * The field is repeated but should not be packed.\n     * The only valid repeat type for repeated `bytes` and `string`.\n     */\n    RepeatType[RepeatType[\"UNPACKED\"] = 2] = \"UNPACKED\";\n})(RepeatType || (RepeatType = {}));\n/**\n * Turns PartialFieldInfo into FieldInfo.\n */\nexport function normalizeFieldInfo(field) {\n    var _a, _b, _c, _d;\n    field.localName = (_a = field.localName) !== null && _a !== void 0 ? _a : lowerCamelCase(field.name);\n    field.jsonName = (_b = field.jsonName) !== null && _b !== void 0 ? _b : lowerCamelCase(field.name);\n    field.repeat = (_c = field.repeat) !== null && _c !== void 0 ? _c : RepeatType.NO;\n    field.opt = (_d = field.opt) !== null && _d !== void 0 ? _d : (field.repeat ? false : field.oneof ? false : field.kind == \"message\");\n    return field;\n}\n/**\n * Read custom field options from a generated message type.\n *\n * @deprecated use readFieldOption()\n */\nexport function readFieldOptions(messageType, fieldName, extensionName, extensionType) {\n    var _a;\n    const options = (_a = messageType.fields.find((m, i) => m.localName == fieldName || i == fieldName)) === null || _a === void 0 ? void 0 : _a.options;\n    return options && options[extensionName] ? extensionType.fromJson(options[extensionName]) : undefined;\n}\nexport function readFieldOption(messageType, fieldName, extensionName, extensionType) {\n    var _a;\n    const options = (_a = messageType.fields.find((m, i) => m.localName == fieldName || i == fieldName)) === null || _a === void 0 ? void 0 : _a.options;\n    if (!options) {\n        return undefined;\n    }\n    const optionVal = options[extensionName];\n    if (optionVal === undefined) {\n        return optionVal;\n    }\n    return extensionType ? extensionType.fromJson(optionVal) : optionVal;\n}\nexport function readMessageOption(messageType, extensionName, extensionType) {\n    const options = messageType.options;\n    const optionVal = options[extensionName];\n    if (optionVal === undefined) {\n        return optionVal;\n    }\n    return extensionType ? extensionType.fromJson(optionVal) : optionVal;\n}\n", "/**\n * Is the given value a valid oneof group?\n *\n * We represent protobuf `oneof` as algebraic data types (ADT) in generated\n * code. But when working with messages of unknown type, the ADT does not\n * help us.\n *\n * This type guard checks if the given object adheres to the ADT rules, which\n * are as follows:\n *\n * 1) Must be an object.\n *\n * 2) Must have a \"oneofKind\" discriminator property.\n *\n * 3) If \"oneofKind\" is `undefined`, no member field is selected. The object\n * must not have any other properties.\n *\n * 4) If \"oneofKind\" is a `string`, the member field with this name is\n * selected.\n *\n * 5) If a member field is selected, the object must have a second property\n * with this name. The property must not be `undefined`.\n *\n * 6) No extra properties are allowed. The object has either one property\n * (no selection) or two properties (selection).\n *\n */\nexport function isOneofGroup(any) {\n    if (typeof any != 'object' || any === null || !any.hasOwnProperty('oneofKind')) {\n        return false;\n    }\n    switch (typeof any.oneofKind) {\n        case \"string\":\n            if (any[any.oneofKind] === undefined)\n                return false;\n            return Object.keys(any).length == 2;\n        case \"undefined\":\n            return Object.keys(any).length == 1;\n        default:\n            return false;\n    }\n}\n/**\n * Returns the value of the given field in a oneof group.\n */\nexport function getOneofValue(oneof, kind) {\n    return oneof[kind];\n}\nexport function setOneofValue(oneof, kind, value) {\n    if (oneof.oneofKind !== undefined) {\n        delete oneof[oneof.oneofKind];\n    }\n    oneof.oneofKind = kind;\n    if (value !== undefined) {\n        oneof[kind] = value;\n    }\n}\nexport function setUnknownOneofValue(oneof, kind, value) {\n    if (oneof.oneofKind !== undefined) {\n        delete oneof[oneof.oneofKind];\n    }\n    oneof.oneofKind = kind;\n    if (value !== undefined && kind !== undefined) {\n        oneof[kind] = value;\n    }\n}\n/**\n * Removes the selected field in a oneof group.\n *\n * Note that the recommended way to modify a oneof group is to set\n * a new object:\n *\n * ```ts\n * message.result = { oneofKind: undefined };\n * ```\n */\nexport function clearOneofValue(oneof) {\n    if (oneof.oneofKind !== undefined) {\n        delete oneof[oneof.oneofKind];\n    }\n    oneof.oneofKind = undefined;\n}\n/**\n * Returns the selected value of the given oneof group.\n *\n * Not that the recommended way to access a oneof group is to check\n * the \"oneofKind\" property and let TypeScript narrow down the union\n * type for you:\n *\n * ```ts\n * if (message.result.oneofKind === \"error\") {\n *   message.result.error; // string\n * }\n * ```\n *\n * In the rare case you just need the value, and do not care about\n * which protobuf field is selected, you can use this function\n * for convenience.\n */\nexport function getSelectedOneofValue(oneof) {\n    if (oneof.oneofKind === undefined) {\n        return undefined;\n    }\n    return oneof[oneof.oneofKind];\n}\n", "import { LongType, ScalarType } from \"./reflection-info\";\nimport { isOneofGroup } from \"./oneof\";\n// noinspection JSMethodCanBeStatic\nexport class ReflectionTypeCheck {\n    constructor(info) {\n        var _a;\n        this.fields = (_a = info.fields) !== null && _a !== void 0 ? _a : [];\n    }\n    prepare() {\n        if (this.data)\n            return;\n        const req = [], known = [], oneofs = [];\n        for (let field of this.fields) {\n            if (field.oneof) {\n                if (!oneofs.includes(field.oneof)) {\n                    oneofs.push(field.oneof);\n                    req.push(field.oneof);\n                    known.push(field.oneof);\n                }\n            }\n            else {\n                known.push(field.localName);\n                switch (field.kind) {\n                    case \"scalar\":\n                    case \"enum\":\n                        if (!field.opt || field.repeat)\n                            req.push(field.localName);\n                        break;\n                    case \"message\":\n                        if (field.repeat)\n                            req.push(field.localName);\n                        break;\n                    case \"map\":\n                        req.push(field.localName);\n                        break;\n                }\n            }\n        }\n        this.data = { req, known, oneofs: Object.values(oneofs) };\n    }\n    /**\n     * Is the argument a valid message as specified by the\n     * reflection information?\n     *\n     * Checks all field types recursively. The `depth`\n     * specifies how deep into the structure the check will be.\n     *\n     * With a depth of 0, only the presence of fields\n     * is checked.\n     *\n     * With a depth of 1 or more, the field types are checked.\n     *\n     * With a depth of 2 or more, the members of map, repeated\n     * and message fields are checked.\n     *\n     * Message fields will be checked recursively with depth - 1.\n     *\n     * The number of map entries / repeated values being checked\n     * is < depth.\n     */\n    is(message, depth, allowExcessProperties = false) {\n        if (depth < 0)\n            return true;\n        if (message === null || message === undefined || typeof message != 'object')\n            return false;\n        this.prepare();\n        let keys = Object.keys(message), data = this.data;\n        // if a required field is missing in arg, this cannot be a T\n        if (keys.length < data.req.length || data.req.some(n => !keys.includes(n)))\n            return false;\n        if (!allowExcessProperties) {\n            // if the arg contains a key we dont know, this is not a literal T\n            if (keys.some(k => !data.known.includes(k)))\n                return false;\n        }\n        // \"With a depth of 0, only the presence and absence of fields is checked.\"\n        // \"With a depth of 1 or more, the field types are checked.\"\n        if (depth < 1) {\n            return true;\n        }\n        // check oneof group\n        for (const name of data.oneofs) {\n            const group = message[name];\n            if (!isOneofGroup(group))\n                return false;\n            if (group.oneofKind === undefined)\n                continue;\n            const field = this.fields.find(f => f.localName === group.oneofKind);\n            if (!field)\n                return false; // we found no field, but have a kind, something is wrong\n            if (!this.field(group[group.oneofKind], field, allowExcessProperties, depth))\n                return false;\n        }\n        // check types\n        for (const field of this.fields) {\n            if (field.oneof !== undefined)\n                continue;\n            if (!this.field(message[field.localName], field, allowExcessProperties, depth))\n                return false;\n        }\n        return true;\n    }\n    field(arg, field, allowExcessProperties, depth) {\n        let repeated = field.repeat;\n        switch (field.kind) {\n            case \"scalar\":\n                if (arg === undefined)\n                    return field.opt;\n                if (repeated)\n                    return this.scalars(arg, field.T, depth, field.L);\n                return this.scalar(arg, field.T, field.L);\n            case \"enum\":\n                if (arg === undefined)\n                    return field.opt;\n                if (repeated)\n                    return this.scalars(arg, ScalarType.INT32, depth);\n                return this.scalar(arg, ScalarType.INT32);\n            case \"message\":\n                if (arg === undefined)\n                    return true;\n                if (repeated)\n                    return this.messages(arg, field.T(), allowExcessProperties, depth);\n                return this.message(arg, field.T(), allowExcessProperties, depth);\n            case \"map\":\n                if (typeof arg != 'object' || arg === null)\n                    return false;\n                if (depth < 2)\n                    return true;\n                if (!this.mapKeys(arg, field.K, depth))\n                    return false;\n                switch (field.V.kind) {\n                    case \"scalar\":\n                        return this.scalars(Object.values(arg), field.V.T, depth, field.V.L);\n                    case \"enum\":\n                        return this.scalars(Object.values(arg), ScalarType.INT32, depth);\n                    case \"message\":\n                        return this.messages(Object.values(arg), field.V.T(), allowExcessProperties, depth);\n                }\n                break;\n        }\n        return true;\n    }\n    message(arg, type, allowExcessProperties, depth) {\n        if (allowExcessProperties) {\n            return type.isAssignable(arg, depth);\n        }\n        return type.is(arg, depth);\n    }\n    messages(arg, type, allowExcessProperties, depth) {\n        if (!Array.isArray(arg))\n            return false;\n        if (depth < 2)\n            return true;\n        if (allowExcessProperties) {\n            for (let i = 0; i < arg.length && i < depth; i++)\n                if (!type.isAssignable(arg[i], depth - 1))\n                    return false;\n        }\n        else {\n            for (let i = 0; i < arg.length && i < depth; i++)\n                if (!type.is(arg[i], depth - 1))\n                    return false;\n        }\n        return true;\n    }\n    scalar(arg, type, longType) {\n        let argType = typeof arg;\n        switch (type) {\n            case ScalarType.UINT64:\n            case ScalarType.FIXED64:\n            case ScalarType.INT64:\n            case ScalarType.SFIXED64:\n            case ScalarType.SINT64:\n                switch (longType) {\n                    case LongType.BIGINT:\n                        return argType == \"bigint\";\n                    case LongType.NUMBER:\n                        return argType == \"number\" && !isNaN(arg);\n                    default:\n                        return argType == \"string\";\n                }\n            case ScalarType.BOOL:\n                return argType == 'boolean';\n            case ScalarType.STRING:\n                return argType == 'string';\n            case ScalarType.BYTES:\n                return arg instanceof Uint8Array;\n            case ScalarType.DOUBLE:\n            case ScalarType.FLOAT:\n                return argType == 'number' && !isNaN(arg);\n            default:\n                // case ScalarType.UINT32:\n                // case ScalarType.FIXED32:\n                // case ScalarType.INT32:\n                // case ScalarType.SINT32:\n                // case ScalarType.SFIXED32:\n                return argType == 'number' && Number.isInteger(arg);\n        }\n    }\n    scalars(arg, type, depth, longType) {\n        if (!Array.isArray(arg))\n            return false;\n        if (depth < 2)\n            return true;\n        if (Array.isArray(arg))\n            for (let i = 0; i < arg.length && i < depth; i++)\n                if (!this.scalar(arg[i], type, longType))\n                    return false;\n        return true;\n    }\n    mapKeys(map, type, depth) {\n        let keys = Object.keys(map);\n        switch (type) {\n            case ScalarType.INT32:\n            case ScalarType.FIXED32:\n            case ScalarType.SFIXED32:\n            case ScalarType.SINT32:\n            case ScalarType.UINT32:\n                return this.scalars(keys.slice(0, depth).map(k => parseInt(k)), type, depth);\n            case ScalarType.BOOL:\n                return this.scalars(keys.slice(0, depth).map(k => k == 'true' ? true : k == 'false' ? false : k), type, depth);\n            default:\n                return this.scalars(keys, type, depth, LongType.STRING);\n        }\n    }\n}\n", "import { LongType } from \"./reflection-info\";\n/**\n * Utility method to convert a PbLong or PbUlong to a JavaScript\n * representation during runtime.\n *\n * Works with generated field information, `undefined` is equivalent\n * to `STRING`.\n */\nexport function reflectionLongConvert(long, type) {\n    switch (type) {\n        case LongType.BIGINT:\n            return long.toBigInt();\n        case LongType.NUMBER:\n            return long.toNumber();\n        default:\n            // case undefined:\n            // case LongType.STRING:\n            return long.toString();\n    }\n}\n", "import { isJsonObject, typeofJsonValue } from \"./json-typings\";\nimport { base64decode } from \"./base64\";\nimport { LongType, ScalarType } from \"./reflection-info\";\nimport { PbLong, PbULong } from \"./pb-long\";\nimport { assert, assertFloat32, assertInt32, assertUInt32 } from \"./assert\";\nimport { reflectionLongConvert } from \"./reflection-long-convert\";\n/**\n * Reads proto3 messages in canonical JSON format using reflection information.\n *\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n */\nexport class ReflectionJsonReader {\n    constructor(info) {\n        this.info = info;\n    }\n    prepare() {\n        var _a;\n        if (this.fMap === undefined) {\n            this.fMap = {};\n            const fieldsInput = (_a = this.info.fields) !== null && _a !== void 0 ? _a : [];\n            for (const field of fieldsInput) {\n                this.fMap[field.name] = field;\n                this.fMap[field.jsonName] = field;\n                this.fMap[field.localName] = field;\n            }\n        }\n    }\n    // Cannot parse JSON <type of jsonValue> for <type name>#<fieldName>.\n    assert(condition, fieldName, jsonValue) {\n        if (!condition) {\n            let what = typeofJsonValue(jsonValue);\n            if (what == \"number\" || what == \"boolean\")\n                what = jsonValue.toString();\n            throw new Error(`Cannot parse JSON ${what} for ${this.info.typeName}#${fieldName}`);\n        }\n    }\n    /**\n     * Reads a message from canonical JSON format into the target message.\n     *\n     * Repeated fields are appended. Map entries are added, overwriting\n     * existing keys.\n     *\n     * If a message field is already present, it will be merged with the\n     * new data.\n     */\n    read(input, message, options) {\n        this.prepare();\n        const oneofsHandled = [];\n        for (const [jsonKey, jsonValue] of Object.entries(input)) {\n            const field = this.fMap[jsonKey];\n            if (!field) {\n                if (!options.ignoreUnknownFields)\n                    throw new Error(`Found unknown field while reading ${this.info.typeName} from JSON format. JSON key: ${jsonKey}`);\n                continue;\n            }\n            const localName = field.localName;\n            // handle oneof ADT\n            let target; // this will be the target for the field value, whether it is member of a oneof or not\n            if (field.oneof) {\n                if (jsonValue === null && (field.kind !== 'enum' || field.T()[0] !== 'google.protobuf.NullValue')) {\n                    continue;\n                }\n                // since json objects are unordered by specification, it is not possible to take the last of multiple oneofs\n                if (oneofsHandled.includes(field.oneof))\n                    throw new Error(`Multiple members of the oneof group \"${field.oneof}\" of ${this.info.typeName} are present in JSON.`);\n                oneofsHandled.push(field.oneof);\n                target = message[field.oneof] = {\n                    oneofKind: localName\n                };\n            }\n            else {\n                target = message;\n            }\n            // we have handled oneof above. we just have read the value into `target`.\n            if (field.kind == 'map') {\n                if (jsonValue === null) {\n                    continue;\n                }\n                // check input\n                this.assert(isJsonObject(jsonValue), field.name, jsonValue);\n                // our target to put map entries into\n                const fieldObj = target[localName];\n                // read entries\n                for (const [jsonObjKey, jsonObjValue] of Object.entries(jsonValue)) {\n                    this.assert(jsonObjValue !== null, field.name + \" map value\", null);\n                    // read value\n                    let val;\n                    switch (field.V.kind) {\n                        case \"message\":\n                            val = field.V.T().internalJsonRead(jsonObjValue, options);\n                            break;\n                        case \"enum\":\n                            val = this.enum(field.V.T(), jsonObjValue, field.name, options.ignoreUnknownFields);\n                            if (val === false)\n                                continue;\n                            break;\n                        case \"scalar\":\n                            val = this.scalar(jsonObjValue, field.V.T, field.V.L, field.name);\n                            break;\n                    }\n                    this.assert(val !== undefined, field.name + \" map value\", jsonObjValue);\n                    // read key\n                    let key = jsonObjKey;\n                    if (field.K == ScalarType.BOOL)\n                        key = key == \"true\" ? true : key == \"false\" ? false : key;\n                    key = this.scalar(key, field.K, LongType.STRING, field.name).toString();\n                    fieldObj[key] = val;\n                }\n            }\n            else if (field.repeat) {\n                if (jsonValue === null)\n                    continue;\n                // check input\n                this.assert(Array.isArray(jsonValue), field.name, jsonValue);\n                // our target to put array entries into\n                const fieldArr = target[localName];\n                // read array entries\n                for (const jsonItem of jsonValue) {\n                    this.assert(jsonItem !== null, field.name, null);\n                    let val;\n                    switch (field.kind) {\n                        case \"message\":\n                            val = field.T().internalJsonRead(jsonItem, options);\n                            break;\n                        case \"enum\":\n                            val = this.enum(field.T(), jsonItem, field.name, options.ignoreUnknownFields);\n                            if (val === false)\n                                continue;\n                            break;\n                        case \"scalar\":\n                            val = this.scalar(jsonItem, field.T, field.L, field.name);\n                            break;\n                    }\n                    this.assert(val !== undefined, field.name, jsonValue);\n                    fieldArr.push(val);\n                }\n            }\n            else {\n                switch (field.kind) {\n                    case \"message\":\n                        if (jsonValue === null && field.T().typeName != 'google.protobuf.Value') {\n                            this.assert(field.oneof === undefined, field.name + \" (oneof member)\", null);\n                            continue;\n                        }\n                        target[localName] = field.T().internalJsonRead(jsonValue, options, target[localName]);\n                        break;\n                    case \"enum\":\n                        let val = this.enum(field.T(), jsonValue, field.name, options.ignoreUnknownFields);\n                        if (val === false)\n                            continue;\n                        target[localName] = val;\n                        break;\n                    case \"scalar\":\n                        target[localName] = this.scalar(jsonValue, field.T, field.L, field.name);\n                        break;\n                }\n            }\n        }\n    }\n    /**\n     * Returns `false` for unrecognized string representations.\n     *\n     * google.protobuf.NullValue accepts only JSON `null` (or the old `\"NULL_VALUE\"`).\n     */\n    enum(type, json, fieldName, ignoreUnknownFields) {\n        if (type[0] == 'google.protobuf.NullValue')\n            assert(json === null || json === \"NULL_VALUE\", `Unable to parse field ${this.info.typeName}#${fieldName}, enum ${type[0]} only accepts null.`);\n        if (json === null)\n            // we require 0 to be default value for all enums\n            return 0;\n        switch (typeof json) {\n            case \"number\":\n                assert(Number.isInteger(json), `Unable to parse field ${this.info.typeName}#${fieldName}, enum can only be integral number, got ${json}.`);\n                return json;\n            case \"string\":\n                let localEnumName = json;\n                if (type[2] && json.substring(0, type[2].length) === type[2])\n                    // lookup without the shared prefix\n                    localEnumName = json.substring(type[2].length);\n                let enumNumber = type[1][localEnumName];\n                if (typeof enumNumber === 'undefined' && ignoreUnknownFields) {\n                    return false;\n                }\n                assert(typeof enumNumber == \"number\", `Unable to parse field ${this.info.typeName}#${fieldName}, enum ${type[0]} has no value for \"${json}\".`);\n                return enumNumber;\n        }\n        assert(false, `Unable to parse field ${this.info.typeName}#${fieldName}, cannot parse enum value from ${typeof json}\".`);\n    }\n    scalar(json, type, longType, fieldName) {\n        let e;\n        try {\n            switch (type) {\n                // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n                // Either numbers or strings are accepted. Exponent notation is also accepted.\n                case ScalarType.DOUBLE:\n                case ScalarType.FLOAT:\n                    if (json === null)\n                        return .0;\n                    if (json === \"NaN\")\n                        return Number.NaN;\n                    if (json === \"Infinity\")\n                        return Number.POSITIVE_INFINITY;\n                    if (json === \"-Infinity\")\n                        return Number.NEGATIVE_INFINITY;\n                    if (json === \"\") {\n                        e = \"empty string\";\n                        break;\n                    }\n                    if (typeof json == \"string\" && json.trim().length !== json.length) {\n                        e = \"extra whitespace\";\n                        break;\n                    }\n                    if (typeof json != \"string\" && typeof json != \"number\") {\n                        break;\n                    }\n                    let float = Number(json);\n                    if (Number.isNaN(float)) {\n                        e = \"not a number\";\n                        break;\n                    }\n                    if (!Number.isFinite(float)) {\n                        // infinity and -infinity are handled by string representation above, so this is an error\n                        e = \"too large or small\";\n                        break;\n                    }\n                    if (type == ScalarType.FLOAT)\n                        assertFloat32(float);\n                    return float;\n                // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n                case ScalarType.INT32:\n                case ScalarType.FIXED32:\n                case ScalarType.SFIXED32:\n                case ScalarType.SINT32:\n                case ScalarType.UINT32:\n                    if (json === null)\n                        return 0;\n                    let int32;\n                    if (typeof json == \"number\")\n                        int32 = json;\n                    else if (json === \"\")\n                        e = \"empty string\";\n                    else if (typeof json == \"string\") {\n                        if (json.trim().length !== json.length)\n                            e = \"extra whitespace\";\n                        else\n                            int32 = Number(json);\n                    }\n                    if (int32 === undefined)\n                        break;\n                    if (type == ScalarType.UINT32)\n                        assertUInt32(int32);\n                    else\n                        assertInt32(int32);\n                    return int32;\n                // int64, fixed64, uint64: JSON value will be a decimal string. Either numbers or strings are accepted.\n                case ScalarType.INT64:\n                case ScalarType.SFIXED64:\n                case ScalarType.SINT64:\n                    if (json === null)\n                        return reflectionLongConvert(PbLong.ZERO, longType);\n                    if (typeof json != \"number\" && typeof json != \"string\")\n                        break;\n                    return reflectionLongConvert(PbLong.from(json), longType);\n                case ScalarType.FIXED64:\n                case ScalarType.UINT64:\n                    if (json === null)\n                        return reflectionLongConvert(PbULong.ZERO, longType);\n                    if (typeof json != \"number\" && typeof json != \"string\")\n                        break;\n                    return reflectionLongConvert(PbULong.from(json), longType);\n                // bool:\n                case ScalarType.BOOL:\n                    if (json === null)\n                        return false;\n                    if (typeof json !== \"boolean\")\n                        break;\n                    return json;\n                // string:\n                case ScalarType.STRING:\n                    if (json === null)\n                        return \"\";\n                    if (typeof json !== \"string\") {\n                        e = \"extra whitespace\";\n                        break;\n                    }\n                    try {\n                        encodeURIComponent(json);\n                    }\n                    catch (e) {\n                        e = \"invalid UTF8\";\n                        break;\n                    }\n                    return json;\n                // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n                // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n                case ScalarType.BYTES:\n                    if (json === null || json === \"\")\n                        return new Uint8Array(0);\n                    if (typeof json !== 'string')\n                        break;\n                    return base64decode(json);\n            }\n        }\n        catch (error) {\n            e = error.message;\n        }\n        this.assert(false, fieldName + (e ? \" - \" + e : \"\"), json);\n    }\n}\n", "import { base64encode } from \"./base64\";\nimport { PbLong, PbULong } from \"./pb-long\";\nimport { ScalarType } from \"./reflection-info\";\nimport { assert, assertFloat32, assertInt32, assertUInt32 } from \"./assert\";\n/**\n * Writes proto3 messages in canonical JSON format using reflection\n * information.\n *\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n */\nexport class ReflectionJsonWriter {\n    constructor(info) {\n        var _a;\n        this.fields = (_a = info.fields) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * Converts the message to a JSON object, based on the field descriptors.\n     */\n    write(message, options) {\n        const json = {}, source = message;\n        for (const field of this.fields) {\n            // field is not part of a oneof, simply write as is\n            if (!field.oneof) {\n                let jsonValue = this.field(field, source[field.localName], options);\n                if (jsonValue !== undefined)\n                    json[options.useProtoFieldName ? field.name : field.jsonName] = jsonValue;\n                continue;\n            }\n            // field is part of a oneof\n            const group = source[field.oneof];\n            if (group.oneofKind !== field.localName)\n                continue; // not selected, skip\n            const opt = field.kind == 'scalar' || field.kind == 'enum'\n                ? Object.assign(Object.assign({}, options), { emitDefaultValues: true }) : options;\n            let jsonValue = this.field(field, group[field.localName], opt);\n            assert(jsonValue !== undefined);\n            json[options.useProtoFieldName ? field.name : field.jsonName] = jsonValue;\n        }\n        return json;\n    }\n    field(field, value, options) {\n        let jsonValue = undefined;\n        if (field.kind == 'map') {\n            assert(typeof value == \"object\" && value !== null);\n            const jsonObj = {};\n            switch (field.V.kind) {\n                case \"scalar\":\n                    for (const [entryKey, entryValue] of Object.entries(value)) {\n                        const val = this.scalar(field.V.T, entryValue, field.name, false, true);\n                        assert(val !== undefined);\n                        jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                    }\n                    break;\n                case \"message\":\n                    const messageType = field.V.T();\n                    for (const [entryKey, entryValue] of Object.entries(value)) {\n                        const val = this.message(messageType, entryValue, field.name, options);\n                        assert(val !== undefined);\n                        jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                    }\n                    break;\n                case \"enum\":\n                    const enumInfo = field.V.T();\n                    for (const [entryKey, entryValue] of Object.entries(value)) {\n                        assert(entryValue === undefined || typeof entryValue == 'number');\n                        const val = this.enum(enumInfo, entryValue, field.name, false, true, options.enumAsInteger);\n                        assert(val !== undefined);\n                        jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                    }\n                    break;\n            }\n            if (options.emitDefaultValues || Object.keys(jsonObj).length > 0)\n                jsonValue = jsonObj;\n        }\n        else if (field.repeat) {\n            assert(Array.isArray(value));\n            const jsonArr = [];\n            switch (field.kind) {\n                case \"scalar\":\n                    for (let i = 0; i < value.length; i++) {\n                        const val = this.scalar(field.T, value[i], field.name, field.opt, true);\n                        assert(val !== undefined);\n                        jsonArr.push(val);\n                    }\n                    break;\n                case \"enum\":\n                    const enumInfo = field.T();\n                    for (let i = 0; i < value.length; i++) {\n                        assert(value[i] === undefined || typeof value[i] == 'number');\n                        const val = this.enum(enumInfo, value[i], field.name, field.opt, true, options.enumAsInteger);\n                        assert(val !== undefined);\n                        jsonArr.push(val);\n                    }\n                    break;\n                case \"message\":\n                    const messageType = field.T();\n                    for (let i = 0; i < value.length; i++) {\n                        const val = this.message(messageType, value[i], field.name, options);\n                        assert(val !== undefined);\n                        jsonArr.push(val);\n                    }\n                    break;\n            }\n            // add converted array to json output\n            if (options.emitDefaultValues || jsonArr.length > 0 || options.emitDefaultValues)\n                jsonValue = jsonArr;\n        }\n        else {\n            switch (field.kind) {\n                case \"scalar\":\n                    jsonValue = this.scalar(field.T, value, field.name, field.opt, options.emitDefaultValues);\n                    break;\n                case \"enum\":\n                    jsonValue = this.enum(field.T(), value, field.name, field.opt, options.emitDefaultValues, options.enumAsInteger);\n                    break;\n                case \"message\":\n                    jsonValue = this.message(field.T(), value, field.name, options);\n                    break;\n            }\n        }\n        return jsonValue;\n    }\n    /**\n     * Returns `null` as the default for google.protobuf.NullValue.\n     */\n    enum(type, value, fieldName, optional, emitDefaultValues, enumAsInteger) {\n        if (type[0] == 'google.protobuf.NullValue')\n            return !emitDefaultValues && !optional ? undefined : null;\n        if (value === undefined) {\n            assert(optional);\n            return undefined;\n        }\n        if (value === 0 && !emitDefaultValues && !optional)\n            // we require 0 to be default value for all enums\n            return undefined;\n        assert(typeof value == 'number');\n        assert(Number.isInteger(value));\n        if (enumAsInteger || !type[1].hasOwnProperty(value))\n            // if we don't now the enum value, just return the number\n            return value;\n        if (type[2])\n            // restore the dropped prefix\n            return type[2] + type[1][value];\n        return type[1][value];\n    }\n    message(type, value, fieldName, options) {\n        if (value === undefined)\n            return options.emitDefaultValues ? null : undefined;\n        return type.internalJsonWrite(value, options);\n    }\n    scalar(type, value, fieldName, optional, emitDefaultValues) {\n        if (value === undefined) {\n            assert(optional);\n            return undefined;\n        }\n        const ed = emitDefaultValues || optional;\n        // noinspection FallThroughInSwitchStatementJS\n        switch (type) {\n            // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n            case ScalarType.INT32:\n            case ScalarType.SFIXED32:\n            case ScalarType.SINT32:\n                if (value === 0)\n                    return ed ? 0 : undefined;\n                assertInt32(value);\n                return value;\n            case ScalarType.FIXED32:\n            case ScalarType.UINT32:\n                if (value === 0)\n                    return ed ? 0 : undefined;\n                assertUInt32(value);\n                return value;\n            // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n            // Either numbers or strings are accepted. Exponent notation is also accepted.\n            case ScalarType.FLOAT:\n                assertFloat32(value);\n            case ScalarType.DOUBLE:\n                if (value === 0)\n                    return ed ? 0 : undefined;\n                assert(typeof value == 'number');\n                if (Number.isNaN(value))\n                    return 'NaN';\n                if (value === Number.POSITIVE_INFINITY)\n                    return 'Infinity';\n                if (value === Number.NEGATIVE_INFINITY)\n                    return '-Infinity';\n                return value;\n            // string:\n            case ScalarType.STRING:\n                if (value === \"\")\n                    return ed ? '' : undefined;\n                assert(typeof value == 'string');\n                return value;\n            // bool:\n            case ScalarType.BOOL:\n                if (value === false)\n                    return ed ? false : undefined;\n                assert(typeof value == 'boolean');\n                return value;\n            // JSON value will be a decimal string. Either numbers or strings are accepted.\n            case ScalarType.UINT64:\n            case ScalarType.FIXED64:\n                assert(typeof value == 'number' || typeof value == 'string' || typeof value == 'bigint');\n                let ulong = PbULong.from(value);\n                if (ulong.isZero() && !ed)\n                    return undefined;\n                return ulong.toString();\n            // JSON value will be a decimal string. Either numbers or strings are accepted.\n            case ScalarType.INT64:\n            case ScalarType.SFIXED64:\n            case ScalarType.SINT64:\n                assert(typeof value == 'number' || typeof value == 'string' || typeof value == 'bigint');\n                let long = PbLong.from(value);\n                if (long.isZero() && !ed)\n                    return undefined;\n                return long.toString();\n            // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n            // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n            case ScalarType.BYTES:\n                assert(value instanceof Uint8Array);\n                if (!value.byteLength)\n                    return ed ? \"\" : undefined;\n                return base64encode(value);\n        }\n    }\n}\n", "import { LongType, ScalarType } from \"./reflection-info\";\nimport { reflectionLongConvert } from \"./reflection-long-convert\";\nimport { PbLong, PbULong } from \"./pb-long\";\n/**\n * Creates the default value for a scalar type.\n */\nexport function reflectionScalarDefault(type, longType = LongType.STRING) {\n    switch (type) {\n        case ScalarType.BOOL:\n            return false;\n        case ScalarType.UINT64:\n        case ScalarType.FIXED64:\n            return reflectionLongConvert(PbULong.ZERO, longType);\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            return reflectionLongConvert(PbLong.ZERO, longType);\n        case ScalarType.DOUBLE:\n        case ScalarType.FLOAT:\n            return 0.0;\n        case ScalarType.BYTES:\n            return new Uint8Array(0);\n        case ScalarType.STRING:\n            return \"\";\n        default:\n            // case ScalarType.INT32:\n            // case ScalarType.UINT32:\n            // case ScalarType.SINT32:\n            // case ScalarType.FIXED32:\n            // case ScalarType.SFIXED32:\n            return 0;\n    }\n}\n", "import { UnknownFieldHandler, WireType } from \"./binary-format-contract\";\nimport { LongType, ScalarType } from \"./reflection-info\";\nimport { reflectionLongConvert } from \"./reflection-long-convert\";\nimport { reflectionScalarDefault } from \"./reflection-scalar-default\";\n/**\n * Reads proto3 messages in binary format using reflection information.\n *\n * https://developers.google.com/protocol-buffers/docs/encoding\n */\nexport class ReflectionBinaryReader {\n    constructor(info) {\n        this.info = info;\n    }\n    prepare() {\n        var _a;\n        if (!this.fieldNoToField) {\n            const fieldsInput = (_a = this.info.fields) !== null && _a !== void 0 ? _a : [];\n            this.fieldNoToField = new Map(fieldsInput.map(field => [field.no, field]));\n        }\n    }\n    /**\n     * Reads a message from binary format into the target message.\n     *\n     * Repeated fields are appended. Map entries are added, overwriting\n     * existing keys.\n     *\n     * If a message field is already present, it will be merged with the\n     * new data.\n     */\n    read(reader, message, options, length) {\n        this.prepare();\n        const end = length === undefined ? reader.len : reader.pos + length;\n        while (reader.pos < end) {\n            // read the tag and find the field\n            const [fieldNo, wireType] = reader.tag(), field = this.fieldNoToField.get(fieldNo);\n            if (!field) {\n                let u = options.readUnknownField;\n                if (u == \"throw\")\n                    throw new Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.info.typeName}`);\n                let d = reader.skip(wireType);\n                if (u !== false)\n                    (u === true ? UnknownFieldHandler.onRead : u)(this.info.typeName, message, fieldNo, wireType, d);\n                continue;\n            }\n            // target object for the field we are reading\n            let target = message, repeated = field.repeat, localName = field.localName;\n            // if field is member of oneof ADT, use ADT as target\n            if (field.oneof) {\n                target = target[field.oneof];\n                // if other oneof member selected, set new ADT\n                if (target.oneofKind !== localName)\n                    target = message[field.oneof] = {\n                        oneofKind: localName\n                    };\n            }\n            // we have handled oneof above, we just have read the value into `target[localName]`\n            switch (field.kind) {\n                case \"scalar\":\n                case \"enum\":\n                    let T = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n                    let L = field.kind == \"scalar\" ? field.L : undefined;\n                    if (repeated) {\n                        let arr = target[localName]; // safe to assume presence of array, oneof cannot contain repeated values\n                        if (wireType == WireType.LengthDelimited && T != ScalarType.STRING && T != ScalarType.BYTES) {\n                            let e = reader.uint32() + reader.pos;\n                            while (reader.pos < e)\n                                arr.push(this.scalar(reader, T, L));\n                        }\n                        else\n                            arr.push(this.scalar(reader, T, L));\n                    }\n                    else\n                        target[localName] = this.scalar(reader, T, L);\n                    break;\n                case \"message\":\n                    if (repeated) {\n                        let arr = target[localName]; // safe to assume presence of array, oneof cannot contain repeated values\n                        let msg = field.T().internalBinaryRead(reader, reader.uint32(), options);\n                        arr.push(msg);\n                    }\n                    else\n                        target[localName] = field.T().internalBinaryRead(reader, reader.uint32(), options, target[localName]);\n                    break;\n                case \"map\":\n                    let [mapKey, mapVal] = this.mapEntry(field, reader, options);\n                    // safe to assume presence of map object, oneof cannot contain repeated values\n                    target[localName][mapKey] = mapVal;\n                    break;\n            }\n        }\n    }\n    /**\n     * Read a map field, expecting key field = 1, value field = 2\n     */\n    mapEntry(field, reader, options) {\n        let length = reader.uint32();\n        let end = reader.pos + length;\n        let key = undefined; // javascript only allows number or string for object properties\n        let val = undefined;\n        while (reader.pos < end) {\n            let [fieldNo, wireType] = reader.tag();\n            switch (fieldNo) {\n                case 1:\n                    if (field.K == ScalarType.BOOL)\n                        key = reader.bool().toString();\n                    else\n                        // long types are read as string, number types are okay as number\n                        key = this.scalar(reader, field.K, LongType.STRING);\n                    break;\n                case 2:\n                    switch (field.V.kind) {\n                        case \"scalar\":\n                            val = this.scalar(reader, field.V.T, field.V.L);\n                            break;\n                        case \"enum\":\n                            val = reader.int32();\n                            break;\n                        case \"message\":\n                            val = field.V.T().internalBinaryRead(reader, reader.uint32(), options);\n                            break;\n                    }\n                    break;\n                default:\n                    throw new Error(`Unknown field ${fieldNo} (wire type ${wireType}) in map entry for ${this.info.typeName}#${field.name}`);\n            }\n        }\n        if (key === undefined) {\n            let keyRaw = reflectionScalarDefault(field.K);\n            key = field.K == ScalarType.BOOL ? keyRaw.toString() : keyRaw;\n        }\n        if (val === undefined)\n            switch (field.V.kind) {\n                case \"scalar\":\n                    val = reflectionScalarDefault(field.V.T, field.V.L);\n                    break;\n                case \"enum\":\n                    val = 0;\n                    break;\n                case \"message\":\n                    val = field.V.T().create();\n                    break;\n            }\n        return [key, val];\n    }\n    scalar(reader, type, longType) {\n        switch (type) {\n            case ScalarType.INT32:\n                return reader.int32();\n            case ScalarType.STRING:\n                return reader.string();\n            case ScalarType.BOOL:\n                return reader.bool();\n            case ScalarType.DOUBLE:\n                return reader.double();\n            case ScalarType.FLOAT:\n                return reader.float();\n            case ScalarType.INT64:\n                return reflectionLongConvert(reader.int64(), longType);\n            case ScalarType.UINT64:\n                return reflectionLongConvert(reader.uint64(), longType);\n            case ScalarType.FIXED64:\n                return reflectionLongConvert(reader.fixed64(), longType);\n            case ScalarType.FIXED32:\n                return reader.fixed32();\n            case ScalarType.BYTES:\n                return reader.bytes();\n            case ScalarType.UINT32:\n                return reader.uint32();\n            case ScalarType.SFIXED32:\n                return reader.sfixed32();\n            case ScalarType.SFIXED64:\n                return reflectionLongConvert(reader.sfixed64(), longType);\n            case ScalarType.SINT32:\n                return reader.sint32();\n            case ScalarType.SINT64:\n                return reflectionLongConvert(reader.sint64(), longType);\n        }\n    }\n}\n", "import { UnknownFieldHandler, WireType } from \"./binary-format-contract\";\nimport { RepeatType, ScalarType } from \"./reflection-info\";\nimport { assert } from \"./assert\";\nimport { PbLong, PbULong } from \"./pb-long\";\n/**\n * Writes proto3 messages in binary format using reflection information.\n *\n * https://developers.google.com/protocol-buffers/docs/encoding\n */\nexport class ReflectionBinaryWriter {\n    constructor(info) {\n        this.info = info;\n    }\n    prepare() {\n        if (!this.fields) {\n            const fieldsInput = this.info.fields ? this.info.fields.concat() : [];\n            this.fields = fieldsInput.sort((a, b) => a.no - b.no);\n        }\n    }\n    /**\n     * Writes the message to binary format.\n     */\n    write(message, writer, options) {\n        this.prepare();\n        for (const field of this.fields) {\n            let value, // this will be our field value, whether it is member of a oneof or not\n            emitDefault, // whether we emit the default value (only true for oneof members)\n            repeated = field.repeat, localName = field.localName;\n            // handle oneof ADT\n            if (field.oneof) {\n                const group = message[field.oneof];\n                if (group.oneofKind !== localName)\n                    continue; // if field is not selected, skip\n                value = group[localName];\n                emitDefault = true;\n            }\n            else {\n                value = message[localName];\n                emitDefault = false;\n            }\n            // we have handled oneof above. we just have to honor `emitDefault`.\n            switch (field.kind) {\n                case \"scalar\":\n                case \"enum\":\n                    let T = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n                    if (repeated) {\n                        assert(Array.isArray(value));\n                        if (repeated == RepeatType.PACKED)\n                            this.packed(writer, T, field.no, value);\n                        else\n                            for (const item of value)\n                                this.scalar(writer, T, field.no, item, true);\n                    }\n                    else if (value === undefined)\n                        assert(field.opt);\n                    else\n                        this.scalar(writer, T, field.no, value, emitDefault || field.opt);\n                    break;\n                case \"message\":\n                    if (repeated) {\n                        assert(Array.isArray(value));\n                        for (const item of value)\n                            this.message(writer, options, field.T(), field.no, item);\n                    }\n                    else {\n                        this.message(writer, options, field.T(), field.no, value);\n                    }\n                    break;\n                case \"map\":\n                    assert(typeof value == 'object' && value !== null);\n                    for (const [key, val] of Object.entries(value))\n                        this.mapEntry(writer, options, field, key, val);\n                    break;\n            }\n        }\n        let u = options.writeUnknownFields;\n        if (u !== false)\n            (u === true ? UnknownFieldHandler.onWrite : u)(this.info.typeName, message, writer);\n    }\n    mapEntry(writer, options, field, key, value) {\n        writer.tag(field.no, WireType.LengthDelimited);\n        writer.fork();\n        // javascript only allows number or string for object properties\n        // we convert from our representation to the protobuf type\n        let keyValue = key;\n        switch (field.K) {\n            case ScalarType.INT32:\n            case ScalarType.FIXED32:\n            case ScalarType.UINT32:\n            case ScalarType.SFIXED32:\n            case ScalarType.SINT32:\n                keyValue = Number.parseInt(key);\n                break;\n            case ScalarType.BOOL:\n                assert(key == 'true' || key == 'false');\n                keyValue = key == 'true';\n                break;\n        }\n        // write key, expecting key field number = 1\n        this.scalar(writer, field.K, 1, keyValue, true);\n        // write value, expecting value field number = 2\n        switch (field.V.kind) {\n            case 'scalar':\n                this.scalar(writer, field.V.T, 2, value, true);\n                break;\n            case 'enum':\n                this.scalar(writer, ScalarType.INT32, 2, value, true);\n                break;\n            case 'message':\n                this.message(writer, options, field.V.T(), 2, value);\n                break;\n        }\n        writer.join();\n    }\n    message(writer, options, handler, fieldNo, value) {\n        if (value === undefined)\n            return;\n        handler.internalBinaryWrite(value, writer.tag(fieldNo, WireType.LengthDelimited).fork(), options);\n        writer.join();\n    }\n    /**\n     * Write a single scalar value.\n     */\n    scalar(writer, type, fieldNo, value, emitDefault) {\n        let [wireType, method, isDefault] = this.scalarInfo(type, value);\n        if (!isDefault || emitDefault) {\n            writer.tag(fieldNo, wireType);\n            writer[method](value);\n        }\n    }\n    /**\n     * Write an array of scalar values in packed format.\n     */\n    packed(writer, type, fieldNo, value) {\n        if (!value.length)\n            return;\n        assert(type !== ScalarType.BYTES && type !== ScalarType.STRING);\n        // write tag\n        writer.tag(fieldNo, WireType.LengthDelimited);\n        // begin length-delimited\n        writer.fork();\n        // write values without tags\n        let [, method,] = this.scalarInfo(type);\n        for (let i = 0; i < value.length; i++)\n            writer[method](value[i]);\n        // end length delimited\n        writer.join();\n    }\n    /**\n     * Get information for writing a scalar value.\n     *\n     * Returns tuple:\n     * [0]: appropriate WireType\n     * [1]: name of the appropriate method of IBinaryWriter\n     * [2]: whether the given value is a default value\n     *\n     * If argument `value` is omitted, [2] is always false.\n     */\n    scalarInfo(type, value) {\n        let t = WireType.Varint;\n        let m;\n        let i = value === undefined;\n        let d = value === 0;\n        switch (type) {\n            case ScalarType.INT32:\n                m = \"int32\";\n                break;\n            case ScalarType.STRING:\n                d = i || !value.length;\n                t = WireType.LengthDelimited;\n                m = \"string\";\n                break;\n            case ScalarType.BOOL:\n                d = value === false;\n                m = \"bool\";\n                break;\n            case ScalarType.UINT32:\n                m = \"uint32\";\n                break;\n            case ScalarType.DOUBLE:\n                t = WireType.Bit64;\n                m = \"double\";\n                break;\n            case ScalarType.FLOAT:\n                t = WireType.Bit32;\n                m = \"float\";\n                break;\n            case ScalarType.INT64:\n                d = i || PbLong.from(value).isZero();\n                m = \"int64\";\n                break;\n            case ScalarType.UINT64:\n                d = i || PbULong.from(value).isZero();\n                m = \"uint64\";\n                break;\n            case ScalarType.FIXED64:\n                d = i || PbULong.from(value).isZero();\n                t = WireType.Bit64;\n                m = \"fixed64\";\n                break;\n            case ScalarType.BYTES:\n                d = i || !value.byteLength;\n                t = WireType.LengthDelimited;\n                m = \"bytes\";\n                break;\n            case ScalarType.FIXED32:\n                t = WireType.Bit32;\n                m = \"fixed32\";\n                break;\n            case ScalarType.SFIXED32:\n                t = WireType.Bit32;\n                m = \"sfixed32\";\n                break;\n            case ScalarType.SFIXED64:\n                d = i || PbLong.from(value).isZero();\n                t = WireType.Bit64;\n                m = \"sfixed64\";\n                break;\n            case ScalarType.SINT32:\n                m = \"sint32\";\n                break;\n            case ScalarType.SINT64:\n                d = i || PbLong.from(value).isZero();\n                m = \"sint64\";\n                break;\n        }\n        return [t, m, i || d];\n    }\n}\n", "import { reflectionScalarDefault } from \"./reflection-scalar-default\";\nimport { MESSAGE_TYPE } from './message-type-contract';\n/**\n * Creates an instance of the generic message, using the field\n * information.\n */\nexport function reflectionCreate(type) {\n    /**\n     * This ternary can be removed in the next major version.\n     * The `Object.create()` code path utilizes a new `messagePrototype`\n     * property on the `IMessageType` which has this same `MESSAGE_TYPE`\n     * non-enumerable property on it. Doing it this way means that we only\n     * pay the cost of `Object.defineProperty()` once per `IMessageType`\n     * class of once per \"instance\". The falsy code path is only provided\n     * for backwards compatibility in cases where the runtime library is\n     * updated without also updating the generated code.\n     */\n    const msg = type.messagePrototype\n        ? Object.create(type.messagePrototype)\n        : Object.defineProperty({}, MESSAGE_TYPE, { value: type });\n    for (let field of type.fields) {\n        let name = field.localName;\n        if (field.opt)\n            continue;\n        if (field.oneof)\n            msg[field.oneof] = { oneofKind: undefined };\n        else if (field.repeat)\n            msg[name] = [];\n        else\n            switch (field.kind) {\n                case \"scalar\":\n                    msg[name] = reflectionScalarDefault(field.T, field.L);\n                    break;\n                case \"enum\":\n                    // we require 0 to be default value for all enums\n                    msg[name] = 0;\n                    break;\n                case \"map\":\n                    msg[name] = {};\n                    break;\n            }\n    }\n    return msg;\n}\n", "/**\n * Copy partial data into the target message.\n *\n * If a singular scalar or enum field is present in the source, it\n * replaces the field in the target.\n *\n * If a singular message field is present in the source, it is merged\n * with the target field by calling mergePartial() of the responsible\n * message type.\n *\n * If a repeated field is present in the source, its values replace\n * all values in the target array, removing extraneous values.\n * Repeated message fields are copied, not merged.\n *\n * If a map field is present in the source, entries are added to the\n * target map, replacing entries with the same key. Entries that only\n * exist in the target remain. Entries with message values are copied,\n * not merged.\n *\n * Note that this function differs from protobuf merge semantics,\n * which appends repeated fields.\n */\nexport function reflectionMergePartial(info, target, source) {\n    let fieldValue, // the field value we are working with\n    input = source, output; // where we want our field value to go\n    for (let field of info.fields) {\n        let name = field.localName;\n        if (field.oneof) {\n            const group = input[field.oneof]; // this is the oneof`s group in the source\n            if ((group === null || group === void 0 ? void 0 : group.oneofKind) == undefined) { // the user is free to omit\n                continue; // we skip this field, and all other members too\n            }\n            fieldValue = group[name]; // our value comes from the the oneof group of the source\n            output = target[field.oneof]; // and our output is the oneof group of the target\n            output.oneofKind = group.oneofKind; // always update discriminator\n            if (fieldValue == undefined) {\n                delete output[name]; // remove any existing value\n                continue; // skip further work on field\n            }\n        }\n        else {\n            fieldValue = input[name]; // we are using the source directly\n            output = target; // we want our field value to go directly into the target\n            if (fieldValue == undefined) {\n                continue; // skip further work on field, existing value is used as is\n            }\n        }\n        if (field.repeat)\n            output[name].length = fieldValue.length; // resize target array to match source array\n        // now we just work with `fieldValue` and `output` to merge the value\n        switch (field.kind) {\n            case \"scalar\":\n            case \"enum\":\n                if (field.repeat)\n                    for (let i = 0; i < fieldValue.length; i++)\n                        output[name][i] = fieldValue[i]; // not a reference type\n                else\n                    output[name] = fieldValue; // not a reference type\n                break;\n            case \"message\":\n                let T = field.T();\n                if (field.repeat)\n                    for (let i = 0; i < fieldValue.length; i++)\n                        output[name][i] = T.create(fieldValue[i]);\n                else if (output[name] === undefined)\n                    output[name] = T.create(fieldValue); // nothing to merge with\n                else\n                    T.mergePartial(output[name], fieldValue);\n                break;\n            case \"map\":\n                // Map and repeated fields are simply overwritten, not appended or merged\n                switch (field.V.kind) {\n                    case \"scalar\":\n                    case \"enum\":\n                        Object.assign(output[name], fieldValue); // elements are not reference types\n                        break;\n                    case \"message\":\n                        let T = field.V.T();\n                        for (let k of Object.keys(fieldValue))\n                            output[name][k] = T.create(fieldValue[k]);\n                        break;\n                }\n                break;\n        }\n    }\n}\n", "import { ScalarType } from \"./reflection-info\";\n/**\n * Determines whether two message of the same type have the same field values.\n * Checks for deep equality, traversing repeated fields, oneof groups, maps\n * and messages recursively.\n * Will also return true if both messages are `undefined`.\n */\nexport function reflectionEquals(info, a, b) {\n    if (a === b)\n        return true;\n    if (!a || !b)\n        return false;\n    for (let field of info.fields) {\n        let localName = field.localName;\n        let val_a = field.oneof ? a[field.oneof][localName] : a[localName];\n        let val_b = field.oneof ? b[field.oneof][localName] : b[localName];\n        switch (field.kind) {\n            case \"enum\":\n            case \"scalar\":\n                let t = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n                if (!(field.repeat\n                    ? repeatedPrimitiveEq(t, val_a, val_b)\n                    : primitiveEq(t, val_a, val_b)))\n                    return false;\n                break;\n            case \"map\":\n                if (!(field.V.kind == \"message\"\n                    ? repeatedMsgEq(field.V.T(), objectValues(val_a), objectValues(val_b))\n                    : repeatedPrimitiveEq(field.V.kind == \"enum\" ? ScalarType.INT32 : field.V.T, objectValues(val_a), objectValues(val_b))))\n                    return false;\n                break;\n            case \"message\":\n                let T = field.T();\n                if (!(field.repeat\n                    ? repeatedMsgEq(T, val_a, val_b)\n                    : T.equals(val_a, val_b)))\n                    return false;\n                break;\n        }\n    }\n    return true;\n}\nconst objectValues = Object.values;\nfunction primitiveEq(type, a, b) {\n    if (a === b)\n        return true;\n    if (type !== ScalarType.BYTES)\n        return false;\n    let ba = a;\n    let bb = b;\n    if (ba.length !== bb.length)\n        return false;\n    for (let i = 0; i < ba.length; i++)\n        if (ba[i] != bb[i])\n            return false;\n    return true;\n}\nfunction repeatedPrimitiveEq(type, a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!primitiveEq(type, a[i], b[i]))\n            return false;\n    return true;\n}\nfunction repeatedMsgEq(type, a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!type.equals(a[i], b[i]))\n            return false;\n    return true;\n}\n", "import { MESSAGE_TYPE } from \"./message-type-contract\";\nimport { normalizeFieldInfo } from \"./reflection-info\";\nimport { ReflectionTypeCheck } from \"./reflection-type-check\";\nimport { ReflectionJsonReader } from \"./reflection-json-reader\";\nimport { ReflectionJsonWriter } from \"./reflection-json-writer\";\nimport { ReflectionBinaryReader } from \"./reflection-binary-reader\";\nimport { ReflectionBinaryWriter } from \"./reflection-binary-writer\";\nimport { reflectionCreate } from \"./reflection-create\";\nimport { reflectionMergePartial } from \"./reflection-merge-partial\";\nimport { typeofJsonValue } from \"./json-typings\";\nimport { jsonReadOptions, jsonWriteOptions, } from \"./json-format-contract\";\nimport { reflectionEquals } from \"./reflection-equals\";\nimport { binaryWriteOptions } from \"./binary-writer\";\nimport { binaryReadOptions } from \"./binary-reader\";\nconst baseDescriptors = Object.getOwnPropertyDescriptors(Object.getPrototypeOf({}));\n/**\n * This standard message type provides reflection-based\n * operations to work with a message.\n */\nexport class MessageType {\n    constructor(name, fields, options) {\n        this.defaultCheckDepth = 16;\n        this.typeName = name;\n        this.fields = fields.map(normalizeFieldInfo);\n        this.options = options !== null && options !== void 0 ? options : {};\n        this.messagePrototype = Object.create(null, Object.assign(Object.assign({}, baseDescriptors), { [MESSAGE_TYPE]: { value: this } }));\n        this.refTypeCheck = new ReflectionTypeCheck(this);\n        this.refJsonReader = new ReflectionJsonReader(this);\n        this.refJsonWriter = new ReflectionJsonWriter(this);\n        this.refBinReader = new ReflectionBinaryReader(this);\n        this.refBinWriter = new ReflectionBinaryWriter(this);\n    }\n    create(value) {\n        let message = reflectionCreate(this);\n        if (value !== undefined) {\n            reflectionMergePartial(this, message, value);\n        }\n        return message;\n    }\n    /**\n     * Clone the message.\n     *\n     * Unknown fields are discarded.\n     */\n    clone(message) {\n        let copy = this.create();\n        reflectionMergePartial(this, copy, message);\n        return copy;\n    }\n    /**\n     * Determines whether two message of the same type have the same field values.\n     * Checks for deep equality, traversing repeated fields, oneof groups, maps\n     * and messages recursively.\n     * Will also return true if both messages are `undefined`.\n     */\n    equals(a, b) {\n        return reflectionEquals(this, a, b);\n    }\n    /**\n     * Is the given value assignable to our message type\n     * and contains no [excess properties](https://www.typescriptlang.org/docs/handbook/interfaces.html#excess-property-checks)?\n     */\n    is(arg, depth = this.defaultCheckDepth) {\n        return this.refTypeCheck.is(arg, depth, false);\n    }\n    /**\n     * Is the given value assignable to our message type,\n     * regardless of [excess properties](https://www.typescriptlang.org/docs/handbook/interfaces.html#excess-property-checks)?\n     */\n    isAssignable(arg, depth = this.defaultCheckDepth) {\n        return this.refTypeCheck.is(arg, depth, true);\n    }\n    /**\n     * Copy partial data into the target message.\n     */\n    mergePartial(target, source) {\n        reflectionMergePartial(this, target, source);\n    }\n    /**\n     * Create a new message from binary format.\n     */\n    fromBinary(data, options) {\n        let opt = binaryReadOptions(options);\n        return this.internalBinaryRead(opt.readerFactory(data), data.byteLength, opt);\n    }\n    /**\n     * Read a new message from a JSON value.\n     */\n    fromJson(json, options) {\n        return this.internalJsonRead(json, jsonReadOptions(options));\n    }\n    /**\n     * Read a new message from a JSON string.\n     * This is equivalent to `T.fromJson(JSON.parse(json))`.\n     */\n    fromJsonString(json, options) {\n        let value = JSON.parse(json);\n        return this.fromJson(value, options);\n    }\n    /**\n     * Write the message to canonical JSON value.\n     */\n    toJson(message, options) {\n        return this.internalJsonWrite(message, jsonWriteOptions(options));\n    }\n    /**\n     * Convert the message to canonical JSON string.\n     * This is equivalent to `JSON.stringify(T.toJson(t))`\n     */\n    toJsonString(message, options) {\n        var _a;\n        let value = this.toJson(message, options);\n        return JSON.stringify(value, null, (_a = options === null || options === void 0 ? void 0 : options.prettySpaces) !== null && _a !== void 0 ? _a : 0);\n    }\n    /**\n     * Write the message to binary format.\n     */\n    toBinary(message, options) {\n        let opt = binaryWriteOptions(options);\n        return this.internalBinaryWrite(message, opt.writerFactory(), opt).finish();\n    }\n    /**\n     * This is an internal method. If you just want to read a message from\n     * JSON, use `fromJson()` or `fromJsonString()`.\n     *\n     * Reads JSON value and merges the fields into the target\n     * according to protobuf rules. If the target is omitted,\n     * a new instance is created first.\n     */\n    internalJsonRead(json, options, target) {\n        if (json !== null && typeof json == \"object\" && !Array.isArray(json)) {\n            let message = target !== null && target !== void 0 ? target : this.create();\n            this.refJsonReader.read(json, message, options);\n            return message;\n        }\n        throw new Error(`Unable to parse message ${this.typeName} from JSON ${typeofJsonValue(json)}.`);\n    }\n    /**\n     * This is an internal method. If you just want to write a message\n     * to JSON, use `toJson()` or `toJsonString().\n     *\n     * Writes JSON value and returns it.\n     */\n    internalJsonWrite(message, options) {\n        return this.refJsonWriter.write(message, options);\n    }\n    /**\n     * This is an internal method. If you just want to write a message\n     * in binary format, use `toBinary()`.\n     *\n     * Serializes the message in binary format and appends it to the given\n     * writer. Returns passed writer.\n     */\n    internalBinaryWrite(message, writer, options) {\n        this.refBinWriter.write(message, writer, options);\n        return writer;\n    }\n    /**\n     * This is an internal method. If you just want to read a message from\n     * binary data, use `fromBinary()`.\n     *\n     * Reads data from binary format and merges the fields into\n     * the target according to protobuf rules. If the target is\n     * omitted, a new instance is created first.\n     */\n    internalBinaryRead(reader, length, options, target) {\n        let message = target !== null && target !== void 0 ? target : this.create();\n        this.refBinReader.read(reader, message, options, length);\n        return message;\n    }\n}\n", "import { lowerCamelCase } from \"@protobuf-ts/runtime\";\n/**\n * Turns PartialMethodInfo into MethodInfo.\n */\nexport function normalizeMethodInfo(method, service) {\n    var _a, _b, _c;\n    let m = method;\n    m.service = service;\n    m.localName = (_a = m.localName) !== null && _a !== void 0 ? _a : lowerCamelCase(m.name);\n    // noinspection PointlessBooleanExpressionJS\n    m.serverStreaming = !!m.serverStreaming;\n    // noinspection PointlessBooleanExpressionJS\n    m.clientStreaming = !!m.clientStreaming;\n    m.options = (_b = m.options) !== null && _b !== void 0 ? _b : {};\n    m.idempotency = (_c = m.idempotency) !== null && _c !== void 0 ? _c : undefined;\n    return m;\n}\n/**\n * Read custom method options from a generated service client.\n *\n * @deprecated use readMethodOption()\n */\nexport function readMethodOptions(service, methodName, extensionName, extensionType) {\n    var _a;\n    const options = (_a = service.methods.find((m, i) => m.localName === methodName || i === methodName)) === null || _a === void 0 ? void 0 : _a.options;\n    return options && options[extensionName] ? extensionType.fromJson(options[extensionName]) : undefined;\n}\nexport function readMethodOption(service, methodName, extensionName, extensionType) {\n    var _a;\n    const options = (_a = service.methods.find((m, i) => m.localName === methodName || i === methodName)) === null || _a === void 0 ? void 0 : _a.options;\n    if (!options) {\n        return undefined;\n    }\n    const optionVal = options[extensionName];\n    if (optionVal === undefined) {\n        return optionVal;\n    }\n    return extensionType ? extensionType.fromJson(optionVal) : optionVal;\n}\nexport function readServiceOption(service, extensionName, extensionType) {\n    const options = service.options;\n    if (!options) {\n        return undefined;\n    }\n    const optionVal = options[extensionName];\n    if (optionVal === undefined) {\n        return optionVal;\n    }\n    return extensionType ? extensionType.fromJson(optionVal) : optionVal;\n}\n", "import { normalizeMethodInfo } from \"./reflection-info\";\nexport class ServiceType {\n    constructor(typeName, methods, options) {\n        this.typeName = typeName;\n        this.methods = methods.map(i => normalizeMethodInfo(i, this));\n        this.options = options !== null && options !== void 0 ? options : {};\n    }\n}\n", "/**\n * An error that occurred while calling a RPC method.\n */\nexport class RpcError extends Error {\n    constructor(message, code = 'UNKNOWN', meta) {\n        super(message);\n        this.name = 'RpcError';\n        // see https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html#example\n        Object.setPrototypeOf(this, new.target.prototype);\n        this.code = code;\n        this.meta = meta !== null && meta !== void 0 ? meta : {};\n    }\n    toString() {\n        const l = [this.name + ': ' + this.message];\n        if (this.code) {\n            l.push('');\n            l.push('Code: ' + this.code);\n        }\n        if (this.serviceName && this.methodName) {\n            l.push('Method: ' + this.serviceName + '/' + this.methodName);\n        }\n        let m = Object.entries(this.meta);\n        if (m.length) {\n            l.push('');\n            l.push('Meta:');\n            for (let [k, v] of m) {\n                l.push(`  ${k}: ${v}`);\n            }\n        }\n        return l.join('\\n');\n    }\n}\n", "import { mergeBinaryOptions, mergeJsonOptions } from \"@protobuf-ts/runtime\";\n/**\n * Merges custom RPC options with defaults. Returns a new instance and keeps\n * the \"defaults\" and the \"options\" unmodified.\n *\n * Merges `RpcMetadata` \"meta\", overwriting values from \"defaults\" with\n * values from \"options\". Does not append values to existing entries.\n *\n * Merges \"jsonOptions\", including \"jsonOptions.typeRegistry\", by creating\n * a new array that contains types from \"options.jsonOptions.typeRegistry\"\n * first, then types from \"defaults.jsonOptions.typeRegistry\".\n *\n * Merges \"binaryOptions\".\n *\n * Merges \"interceptors\" by creating a new array that contains interceptors\n * from \"defaults\" first, then interceptors from \"options\".\n *\n * Works with objects that extend `RpcOptions`, but only if the added\n * properties are of type Date, primitive like string, boolean, or Array\n * of primitives. If you have other property types, you have to merge them\n * yourself.\n */\nexport function mergeRpcOptions(defaults, options) {\n    if (!options)\n        return defaults;\n    let o = {};\n    copy(defaults, o);\n    copy(options, o);\n    for (let key of Object.keys(options)) {\n        let val = options[key];\n        switch (key) {\n            case \"jsonOptions\":\n                o.jsonOptions = mergeJsonOptions(defaults.jsonOptions, o.jsonOptions);\n                break;\n            case \"binaryOptions\":\n                o.binaryOptions = mergeBinaryOptions(defaults.binaryOptions, o.binaryOptions);\n                break;\n            case \"meta\":\n                o.meta = {};\n                copy(defaults.meta, o.meta);\n                copy(options.meta, o.meta);\n                break;\n            case \"interceptors\":\n                o.interceptors = defaults.interceptors ? defaults.interceptors.concat(val) : val.concat();\n                break;\n        }\n    }\n    return o;\n}\nfunction copy(a, into) {\n    if (!a)\n        return;\n    let c = into;\n    for (let [k, v] of Object.entries(a)) {\n        if (v instanceof Date)\n            c[k] = new Date(v.getTime());\n        else if (Array.isArray(v))\n            c[k] = v.concat();\n        else\n            c[k] = v;\n    }\n}\n", "export var DeferredState;\n(function (DeferredState) {\n    DeferredState[DeferredState[\"PENDING\"] = 0] = \"PENDING\";\n    DeferredState[DeferredState[\"REJECTED\"] = 1] = \"REJECTED\";\n    DeferredState[DeferredState[\"RESOLVED\"] = 2] = \"RESOLVED\";\n})(DeferredState || (DeferredState = {}));\n/**\n * A deferred promise. This is a \"controller\" for a promise, which lets you\n * pass a promise around and reject or resolve it from the outside.\n *\n * Warning: This class is to be used with care. Using it can make code very\n * difficult to read. It is intended for use in library code that exposes\n * promises, not for regular business logic.\n */\nexport class Deferred {\n    /**\n     * @param preventUnhandledRejectionWarning - prevents the warning\n     * \"Unhandled Promise rejection\" by adding a noop rejection handler.\n     * Working with calls returned from the runtime-rpc package in an\n     * async function usually means awaiting one call property after\n     * the other. This means that the \"status\" is not being awaited when\n     * an earlier await for the \"headers\" is rejected. This causes the\n     * \"unhandled promise reject\" warning. A more correct behaviour for\n     * calls might be to become aware whether at least one of the\n     * promises is handled and swallow the rejection warning for the\n     * others.\n     */\n    constructor(preventUnhandledRejectionWarning = true) {\n        this._state = DeferredState.PENDING;\n        this._promise = new Promise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n        if (preventUnhandledRejectionWarning) {\n            this._promise.catch(_ => { });\n        }\n    }\n    /**\n     * Get the current state of the promise.\n     */\n    get state() {\n        return this._state;\n    }\n    /**\n     * Get the deferred promise.\n     */\n    get promise() {\n        return this._promise;\n    }\n    /**\n     * Resolve the promise. Throws if the promise is already resolved or rejected.\n     */\n    resolve(value) {\n        if (this.state !== DeferredState.PENDING)\n            throw new Error(`cannot resolve ${DeferredState[this.state].toLowerCase()}`);\n        this._resolve(value);\n        this._state = DeferredState.RESOLVED;\n    }\n    /**\n     * Reject the promise. Throws if the promise is already resolved or rejected.\n     */\n    reject(reason) {\n        if (this.state !== DeferredState.PENDING)\n            throw new Error(`cannot reject ${DeferredState[this.state].toLowerCase()}`);\n        this._reject(reason);\n        this._state = DeferredState.REJECTED;\n    }\n    /**\n     * Resolve the promise. Ignore if not pending.\n     */\n    resolvePending(val) {\n        if (this._state === DeferredState.PENDING)\n            this.resolve(val);\n    }\n    /**\n     * Reject the promise. Ignore if not pending.\n     */\n    rejectPending(reason) {\n        if (this._state === DeferredState.PENDING)\n            this.reject(reason);\n    }\n}\n", "import { Deferred, DeferredState } from \"./deferred\";\nimport { assert } from \"@protobuf-ts/runtime\";\n/**\n * A `RpcOutputStream` that you control.\n */\nexport class RpcOutputStreamController {\n    constructor() {\n        this._lis = {\n            nxt: [],\n            msg: [],\n            err: [],\n            cmp: [],\n        };\n        this._closed = false;\n    }\n    // --- RpcOutputStream callback API\n    onNext(callback) {\n        return this.addLis(callback, this._lis.nxt);\n    }\n    onMessage(callback) {\n        return this.addLis(callback, this._lis.msg);\n    }\n    onError(callback) {\n        return this.addLis(callback, this._lis.err);\n    }\n    onComplete(callback) {\n        return this.addLis(callback, this._lis.cmp);\n    }\n    addLis(callback, list) {\n        list.push(callback);\n        return () => {\n            let i = list.indexOf(callback);\n            if (i >= 0)\n                list.splice(i, 1);\n        };\n    }\n    // remove all listeners\n    clearLis() {\n        for (let l of Object.values(this._lis))\n            l.splice(0, l.length);\n    }\n    // --- Controller API\n    /**\n     * Is this stream already closed by a completion or error?\n     */\n    get closed() {\n        return this._closed !== false;\n    }\n    /**\n     * Emit message, close with error, or close successfully, but only one\n     * at a time.\n     * Can be used to wrap a stream by using the other stream's `onNext`.\n     */\n    notifyNext(message, error, complete) {\n        assert((message ? 1 : 0) + (error ? 1 : 0) + (complete ? 1 : 0) <= 1, 'only one emission at a time');\n        if (message)\n            this.notifyMessage(message);\n        if (error)\n            this.notifyError(error);\n        if (complete)\n            this.notifyComplete();\n    }\n    /**\n     * Emits a new message. Throws if stream is closed.\n     *\n     * Triggers onNext and onMessage callbacks.\n     */\n    notifyMessage(message) {\n        assert(!this.closed, 'stream is closed');\n        this.pushIt({ value: message, done: false });\n        this._lis.msg.forEach(l => l(message));\n        this._lis.nxt.forEach(l => l(message, undefined, false));\n    }\n    /**\n     * Closes the stream with an error. Throws if stream is closed.\n     *\n     * Triggers onNext and onError callbacks.\n     */\n    notifyError(error) {\n        assert(!this.closed, 'stream is closed');\n        this._closed = error;\n        this.pushIt(error);\n        this._lis.err.forEach(l => l(error));\n        this._lis.nxt.forEach(l => l(undefined, error, false));\n        this.clearLis();\n    }\n    /**\n     * Closes the stream successfully. Throws if stream is closed.\n     *\n     * Triggers onNext and onComplete callbacks.\n     */\n    notifyComplete() {\n        assert(!this.closed, 'stream is closed');\n        this._closed = true;\n        this.pushIt({ value: null, done: true });\n        this._lis.cmp.forEach(l => l());\n        this._lis.nxt.forEach(l => l(undefined, undefined, true));\n        this.clearLis();\n    }\n    /**\n     * Creates an async iterator (that can be used with `for await {...}`)\n     * to consume the stream.\n     *\n     * Some things to note:\n     * - If an error occurs, the `for await` will throw it.\n     * - If an error occurred before the `for await` was started, `for await`\n     *   will re-throw it.\n     * - If the stream is already complete, the `for await` will be empty.\n     * - If your `for await` consumes slower than the stream produces,\n     *   for example because you are relaying messages in a slow operation,\n     *   messages are queued.\n     */\n    [Symbol.asyncIterator]() {\n        // init the iterator state, enabling pushIt()\n        if (!this._itState) {\n            this._itState = { q: [] };\n        }\n        // if we are closed, we are definitely not receiving any more messages.\n        // but we can't let the iterator get stuck. we want to either:\n        // a) finish the new iterator immediately, because we are completed\n        // b) reject the new iterator, because we errored\n        if (this._closed === true)\n            this.pushIt({ value: null, done: true });\n        else if (this._closed !== false)\n            this.pushIt(this._closed);\n        // the async iterator\n        return {\n            next: () => {\n                let state = this._itState;\n                assert(state, \"bad state\"); // if we don't have a state here, code is broken\n                // there should be no pending result.\n                // did the consumer call next() before we resolved our previous result promise?\n                assert(!state.p, \"iterator contract broken\");\n                // did we produce faster than the iterator consumed?\n                // return the oldest result from the queue.\n                let first = state.q.shift();\n                if (first)\n                    return (\"value\" in first) ? Promise.resolve(first) : Promise.reject(first);\n                // we have no result ATM, but we promise one.\n                // as soon as we have a result, we must resolve promise.\n                state.p = new Deferred();\n                return state.p.promise;\n            },\n        };\n    }\n    // \"push\" a new iterator result.\n    // this either resolves a pending promise, or enqueues the result.\n    pushIt(result) {\n        let state = this._itState;\n        if (!state)\n            return;\n        // is the consumer waiting for us?\n        if (state.p) {\n            // yes, consumer is waiting for this promise.\n            const p = state.p;\n            assert(p.state == DeferredState.PENDING, \"iterator contract broken\");\n            // resolve the promise\n            (\"value\" in result) ? p.resolve(result) : p.reject(result);\n            // must cleanup, otherwise iterator.next() would pick it up again.\n            delete state.p;\n        }\n        else {\n            // we are producing faster than the iterator consumes.\n            // push result onto queue.\n            state.q.push(result);\n        }\n    }\n}\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n * A unary RPC call. Unary means there is exactly one input message and\n * exactly one output message unless an error occurred.\n */\nexport class UnaryCall {\n    constructor(method, requestHeaders, request, headers, response, status, trailers) {\n        this.method = method;\n        this.requestHeaders = requestHeaders;\n        this.request = request;\n        this.headers = headers;\n        this.response = response;\n        this.status = status;\n        this.trailers = trailers;\n    }\n    /**\n     * If you are only interested in the final outcome of this call,\n     * you can await it to receive a `FinishedUnaryCall`.\n     */\n    then(onfulfilled, onrejected) {\n        return this.promiseFinished().then(value => onfulfilled ? Promise.resolve(onfulfilled(value)) : value, reason => onrejected ? Promise.resolve(onrejected(reason)) : Promise.reject(reason));\n    }\n    promiseFinished() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let [headers, response, status, trailers] = yield Promise.all([this.headers, this.response, this.status, this.trailers]);\n            return {\n                method: this.method,\n                requestHeaders: this.requestHeaders,\n                request: this.request,\n                headers,\n                response,\n                status,\n                trailers\n            };\n        });\n    }\n}\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n * A server streaming RPC call. The client provides exactly one input message\n * but the server may respond with 0, 1, or more messages.\n */\nexport class ServerStreamingCall {\n    constructor(method, requestHeaders, request, headers, response, status, trailers) {\n        this.method = method;\n        this.requestHeaders = requestHeaders;\n        this.request = request;\n        this.headers = headers;\n        this.responses = response;\n        this.status = status;\n        this.trailers = trailers;\n    }\n    /**\n     * Instead of awaiting the response status and trailers, you can\n     * just as well await this call itself to receive the server outcome.\n     * You should first setup some listeners to the `request` to\n     * see the actual messages the server replied with.\n     */\n    then(onfulfilled, onrejected) {\n        return this.promiseFinished().then(value => onfulfilled ? Promise.resolve(onfulfilled(value)) : value, reason => onrejected ? Promise.resolve(onrejected(reason)) : Promise.reject(reason));\n    }\n    promiseFinished() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let [headers, status, trailers] = yield Promise.all([this.headers, this.status, this.trailers]);\n            return {\n                method: this.method,\n                requestHeaders: this.requestHeaders,\n                request: this.request,\n                headers,\n                status,\n                trailers,\n            };\n        });\n    }\n}\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n * A client streaming RPC call. This means that the clients sends 0, 1, or\n * more messages to the server, and the server replies with exactly one\n * message.\n */\nexport class ClientStreamingCall {\n    constructor(method, requestHeaders, request, headers, response, status, trailers) {\n        this.method = method;\n        this.requestHeaders = requestHeaders;\n        this.requests = request;\n        this.headers = headers;\n        this.response = response;\n        this.status = status;\n        this.trailers = trailers;\n    }\n    /**\n     * Instead of awaiting the response status and trailers, you can\n     * just as well await this call itself to receive the server outcome.\n     * Note that it may still be valid to send more request messages.\n     */\n    then(onfulfilled, onrejected) {\n        return this.promiseFinished().then(value => onfulfilled ? Promise.resolve(onfulfilled(value)) : value, reason => onrejected ? Promise.resolve(onrejected(reason)) : Promise.reject(reason));\n    }\n    promiseFinished() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let [headers, response, status, trailers] = yield Promise.all([this.headers, this.response, this.status, this.trailers]);\n            return {\n                method: this.method,\n                requestHeaders: this.requestHeaders,\n                headers,\n                response,\n                status,\n                trailers\n            };\n        });\n    }\n}\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n * A duplex streaming RPC call. This means that the clients sends an\n * arbitrary amount of messages to the server, while at the same time,\n * the server sends an arbitrary amount of messages to the client.\n */\nexport class DuplexStreamingCall {\n    constructor(method, requestHeaders, request, headers, response, status, trailers) {\n        this.method = method;\n        this.requestHeaders = requestHeaders;\n        this.requests = request;\n        this.headers = headers;\n        this.responses = response;\n        this.status = status;\n        this.trailers = trailers;\n    }\n    /**\n     * Instead of awaiting the response status and trailers, you can\n     * just as well await this call itself to receive the server outcome.\n     * Note that it may still be valid to send more request messages.\n     */\n    then(onfulfilled, onrejected) {\n        return this.promiseFinished().then(value => onfulfilled ? Promise.resolve(onfulfilled(value)) : value, reason => onrejected ? Promise.resolve(onrejected(reason)) : Promise.reject(reason));\n    }\n    promiseFinished() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let [headers, status, trailers] = yield Promise.all([this.headers, this.status, this.trailers]);\n            return {\n                method: this.method,\n                requestHeaders: this.requestHeaders,\n                headers,\n                status,\n                trailers,\n            };\n        });\n    }\n}\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { RpcError } from \"./rpc-error\";\nimport { assert } from \"@protobuf-ts/runtime\";\nimport { RpcOutputStreamController } from \"./rpc-output-stream\";\nimport { mergeRpcOptions } from \"./rpc-options\";\nimport { UnaryCall } from \"./unary-call\";\nimport { ServerStreamingCall } from \"./server-streaming-call\";\nimport { ClientStreamingCall } from \"./client-streaming-call\";\nimport { DuplexStreamingCall } from \"./duplex-streaming-call\";\n/**\n * Transport for testing.\n */\nexport class TestTransport {\n    /**\n     * Initialize with mock data. Omitted fields have default value.\n     */\n    constructor(data) {\n        /**\n         * Suppress warning / error about uncaught rejections of\n         * \"status\" and \"trailers\".\n         */\n        this.suppressUncaughtRejections = true;\n        this.headerDelay = 10;\n        this.responseDelay = 50;\n        this.betweenResponseDelay = 10;\n        this.afterResponseDelay = 10;\n        this.data = data !== null && data !== void 0 ? data : {};\n    }\n    /**\n     * Sent message(s) during the last operation.\n     */\n    get sentMessages() {\n        if (this.lastInput instanceof TestInputStream) {\n            return this.lastInput.sent;\n        }\n        else if (typeof this.lastInput == \"object\") {\n            return [this.lastInput.single];\n        }\n        return [];\n    }\n    /**\n     * Sending message(s) completed?\n     */\n    get sendComplete() {\n        if (this.lastInput instanceof TestInputStream) {\n            return this.lastInput.completed;\n        }\n        else if (typeof this.lastInput == \"object\") {\n            return true;\n        }\n        return false;\n    }\n    // Creates a promise for response headers from the mock data.\n    promiseHeaders() {\n        var _a;\n        const headers = (_a = this.data.headers) !== null && _a !== void 0 ? _a : TestTransport.defaultHeaders;\n        return headers instanceof RpcError\n            ? Promise.reject(headers)\n            : Promise.resolve(headers);\n    }\n    // Creates a promise for a single, valid, message from the mock data.\n    promiseSingleResponse(method) {\n        if (this.data.response instanceof RpcError) {\n            return Promise.reject(this.data.response);\n        }\n        let r;\n        if (Array.isArray(this.data.response)) {\n            assert(this.data.response.length > 0);\n            r = this.data.response[0];\n        }\n        else if (this.data.response !== undefined) {\n            r = this.data.response;\n        }\n        else {\n            r = method.O.create();\n        }\n        assert(method.O.is(r));\n        return Promise.resolve(r);\n    }\n    /**\n     * Pushes response messages from the mock data to the output stream.\n     * If an error response, status or trailers are mocked, the stream is\n     * closed with the respective error.\n     * Otherwise, stream is completed successfully.\n     *\n     * The returned promise resolves when the stream is closed. It should\n     * not reject. If it does, code is broken.\n     */\n    streamResponses(method, stream, abort) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // normalize \"data.response\" into an array of valid output messages\n            const messages = [];\n            if (this.data.response === undefined) {\n                messages.push(method.O.create());\n            }\n            else if (Array.isArray(this.data.response)) {\n                for (let msg of this.data.response) {\n                    assert(method.O.is(msg));\n                    messages.push(msg);\n                }\n            }\n            else if (!(this.data.response instanceof RpcError)) {\n                assert(method.O.is(this.data.response));\n                messages.push(this.data.response);\n            }\n            // start the stream with an initial delay.\n            // if the request is cancelled, notify() error and exit.\n            try {\n                yield delay(this.responseDelay, abort)(undefined);\n            }\n            catch (error) {\n                stream.notifyError(error);\n                return;\n            }\n            // if error response was mocked, notify() error (stream is now closed with error) and exit.\n            if (this.data.response instanceof RpcError) {\n                stream.notifyError(this.data.response);\n                return;\n            }\n            // regular response messages were mocked. notify() them.\n            for (let msg of messages) {\n                stream.notifyMessage(msg);\n                // add a short delay between responses\n                // if the request is cancelled, notify() error and exit.\n                try {\n                    yield delay(this.betweenResponseDelay, abort)(undefined);\n                }\n                catch (error) {\n                    stream.notifyError(error);\n                    return;\n                }\n            }\n            // error status was mocked, notify() error (stream is now closed with error) and exit.\n            if (this.data.status instanceof RpcError) {\n                stream.notifyError(this.data.status);\n                return;\n            }\n            // error trailers were mocked, notify() error (stream is now closed with error) and exit.\n            if (this.data.trailers instanceof RpcError) {\n                stream.notifyError(this.data.trailers);\n                return;\n            }\n            // stream completed successfully\n            stream.notifyComplete();\n        });\n    }\n    // Creates a promise for response status from the mock data.\n    promiseStatus() {\n        var _a;\n        const status = (_a = this.data.status) !== null && _a !== void 0 ? _a : TestTransport.defaultStatus;\n        return status instanceof RpcError\n            ? Promise.reject(status)\n            : Promise.resolve(status);\n    }\n    // Creates a promise for response trailers from the mock data.\n    promiseTrailers() {\n        var _a;\n        const trailers = (_a = this.data.trailers) !== null && _a !== void 0 ? _a : TestTransport.defaultTrailers;\n        return trailers instanceof RpcError\n            ? Promise.reject(trailers)\n            : Promise.resolve(trailers);\n    }\n    maybeSuppressUncaught(...promise) {\n        if (this.suppressUncaughtRejections) {\n            for (let p of promise) {\n                p.catch(() => {\n                });\n            }\n        }\n    }\n    mergeOptions(options) {\n        return mergeRpcOptions({}, options);\n    }\n    unary(method, input, options) {\n        var _a;\n        const requestHeaders = (_a = options.meta) !== null && _a !== void 0 ? _a : {}, headersPromise = this.promiseHeaders()\n            .then(delay(this.headerDelay, options.abort)), responsePromise = headersPromise\n            .catch(_ => {\n        })\n            .then(delay(this.responseDelay, options.abort))\n            .then(_ => this.promiseSingleResponse(method)), statusPromise = responsePromise\n            .catch(_ => {\n        })\n            .then(delay(this.afterResponseDelay, options.abort))\n            .then(_ => this.promiseStatus()), trailersPromise = responsePromise\n            .catch(_ => {\n        })\n            .then(delay(this.afterResponseDelay, options.abort))\n            .then(_ => this.promiseTrailers());\n        this.maybeSuppressUncaught(statusPromise, trailersPromise);\n        this.lastInput = { single: input };\n        return new UnaryCall(method, requestHeaders, input, headersPromise, responsePromise, statusPromise, trailersPromise);\n    }\n    serverStreaming(method, input, options) {\n        var _a;\n        const requestHeaders = (_a = options.meta) !== null && _a !== void 0 ? _a : {}, headersPromise = this.promiseHeaders()\n            .then(delay(this.headerDelay, options.abort)), outputStream = new RpcOutputStreamController(), responseStreamClosedPromise = headersPromise\n            .then(delay(this.responseDelay, options.abort))\n            .catch(() => {\n        })\n            .then(() => this.streamResponses(method, outputStream, options.abort))\n            .then(delay(this.afterResponseDelay, options.abort)), statusPromise = responseStreamClosedPromise\n            .then(() => this.promiseStatus()), trailersPromise = responseStreamClosedPromise\n            .then(() => this.promiseTrailers());\n        this.maybeSuppressUncaught(statusPromise, trailersPromise);\n        this.lastInput = { single: input };\n        return new ServerStreamingCall(method, requestHeaders, input, headersPromise, outputStream, statusPromise, trailersPromise);\n    }\n    clientStreaming(method, options) {\n        var _a;\n        const requestHeaders = (_a = options.meta) !== null && _a !== void 0 ? _a : {}, headersPromise = this.promiseHeaders()\n            .then(delay(this.headerDelay, options.abort)), responsePromise = headersPromise\n            .catch(_ => {\n        })\n            .then(delay(this.responseDelay, options.abort))\n            .then(_ => this.promiseSingleResponse(method)), statusPromise = responsePromise\n            .catch(_ => {\n        })\n            .then(delay(this.afterResponseDelay, options.abort))\n            .then(_ => this.promiseStatus()), trailersPromise = responsePromise\n            .catch(_ => {\n        })\n            .then(delay(this.afterResponseDelay, options.abort))\n            .then(_ => this.promiseTrailers());\n        this.maybeSuppressUncaught(statusPromise, trailersPromise);\n        this.lastInput = new TestInputStream(this.data, options.abort);\n        return new ClientStreamingCall(method, requestHeaders, this.lastInput, headersPromise, responsePromise, statusPromise, trailersPromise);\n    }\n    duplex(method, options) {\n        var _a;\n        const requestHeaders = (_a = options.meta) !== null && _a !== void 0 ? _a : {}, headersPromise = this.promiseHeaders()\n            .then(delay(this.headerDelay, options.abort)), outputStream = new RpcOutputStreamController(), responseStreamClosedPromise = headersPromise\n            .then(delay(this.responseDelay, options.abort))\n            .catch(() => {\n        })\n            .then(() => this.streamResponses(method, outputStream, options.abort))\n            .then(delay(this.afterResponseDelay, options.abort)), statusPromise = responseStreamClosedPromise\n            .then(() => this.promiseStatus()), trailersPromise = responseStreamClosedPromise\n            .then(() => this.promiseTrailers());\n        this.maybeSuppressUncaught(statusPromise, trailersPromise);\n        this.lastInput = new TestInputStream(this.data, options.abort);\n        return new DuplexStreamingCall(method, requestHeaders, this.lastInput, headersPromise, outputStream, statusPromise, trailersPromise);\n    }\n}\nTestTransport.defaultHeaders = {\n    responseHeader: \"test\"\n};\nTestTransport.defaultStatus = {\n    code: \"OK\", detail: \"all good\"\n};\nTestTransport.defaultTrailers = {\n    responseTrailer: \"test\"\n};\nfunction delay(ms, abort) {\n    return (v) => new Promise((resolve, reject) => {\n        if (abort === null || abort === void 0 ? void 0 : abort.aborted) {\n            reject(new RpcError(\"user cancel\", \"CANCELLED\"));\n        }\n        else {\n            const id = setTimeout(() => resolve(v), ms);\n            if (abort) {\n                abort.addEventListener(\"abort\", ev => {\n                    clearTimeout(id);\n                    reject(new RpcError(\"user cancel\", \"CANCELLED\"));\n                });\n            }\n        }\n    });\n}\nclass TestInputStream {\n    constructor(data, abort) {\n        this._completed = false;\n        this._sent = [];\n        this.data = data;\n        this.abort = abort;\n    }\n    get sent() {\n        return this._sent;\n    }\n    get completed() {\n        return this._completed;\n    }\n    send(message) {\n        if (this.data.inputMessage instanceof RpcError) {\n            return Promise.reject(this.data.inputMessage);\n        }\n        const delayMs = this.data.inputMessage === undefined\n            ? 10\n            : this.data.inputMessage;\n        return Promise.resolve(undefined)\n            .then(() => {\n            this._sent.push(message);\n        })\n            .then(delay(delayMs, this.abort));\n    }\n    complete() {\n        if (this.data.inputComplete instanceof RpcError) {\n            return Promise.reject(this.data.inputComplete);\n        }\n        const delayMs = this.data.inputComplete === undefined\n            ? 10\n            : this.data.inputComplete;\n        return Promise.resolve(undefined)\n            .then(() => {\n            this._completed = true;\n        })\n            .then(delay(delayMs, this.abort));\n    }\n}\n", "import { assertNever } from \"@protobuf-ts/runtime\";\n/**\n * Creates a \"stack\" of of all interceptors specified in the given `RpcOptions`.\n * Used by generated client implementations.\n * @internal\n */\nexport function stackIntercept(kind, transport, method, options, input) {\n    var _a, _b, _c, _d;\n    if (kind == \"unary\") {\n        let tail = (mtd, inp, opt) => transport.unary(mtd, inp, opt);\n        for (const curr of ((_a = options.interceptors) !== null && _a !== void 0 ? _a : []).filter(i => i.interceptUnary).reverse()) {\n            const next = tail;\n            tail = (mtd, inp, opt) => curr.interceptUnary(next, mtd, inp, opt);\n        }\n        return tail(method, input, options);\n    }\n    if (kind == \"serverStreaming\") {\n        let tail = (mtd, inp, opt) => transport.serverStreaming(mtd, inp, opt);\n        for (const curr of ((_b = options.interceptors) !== null && _b !== void 0 ? _b : []).filter(i => i.interceptServerStreaming).reverse()) {\n            const next = tail;\n            tail = (mtd, inp, opt) => curr.interceptServerStreaming(next, mtd, inp, opt);\n        }\n        return tail(method, input, options);\n    }\n    if (kind == \"clientStreaming\") {\n        let tail = (mtd, opt) => transport.clientStreaming(mtd, opt);\n        for (const curr of ((_c = options.interceptors) !== null && _c !== void 0 ? _c : []).filter(i => i.interceptClientStreaming).reverse()) {\n            const next = tail;\n            tail = (mtd, opt) => curr.interceptClientStreaming(next, mtd, opt);\n        }\n        return tail(method, options);\n    }\n    if (kind == \"duplex\") {\n        let tail = (mtd, opt) => transport.duplex(mtd, opt);\n        for (const curr of ((_d = options.interceptors) !== null && _d !== void 0 ? _d : []).filter(i => i.interceptDuplex).reverse()) {\n            const next = tail;\n            tail = (mtd, opt) => curr.interceptDuplex(next, mtd, opt);\n        }\n        return tail(method, options);\n    }\n    assertNever(kind);\n}\n/**\n * @deprecated replaced by `stackIntercept()`, still here to support older generated code\n */\nexport function stackUnaryInterceptors(transport, method, input, options) {\n    return stackIntercept(\"unary\", transport, method, options, input);\n}\n/**\n * @deprecated replaced by `stackIntercept()`, still here to support older generated code\n */\nexport function stackServerStreamingInterceptors(transport, method, input, options) {\n    return stackIntercept(\"serverStreaming\", transport, method, options, input);\n}\n/**\n * @deprecated replaced by `stackIntercept()`, still here to support older generated code\n */\nexport function stackClientStreamingInterceptors(transport, method, options) {\n    return stackIntercept(\"clientStreaming\", transport, method, options);\n}\n/**\n * @deprecated replaced by `stackIntercept()`, still here to support older generated code\n */\nexport function stackDuplexStreamingInterceptors(transport, method, options) {\n    return stackIntercept(\"duplex\", transport, method, options);\n}\n", "// Copyright 2018 Twitch Interactive, Inc.  All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"). You may not\n// use this file except in compliance with the License. A copy of the License is\n// located at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n// CONDITIONS OF ANY KIND, either express or implied. See the License\n// for the specific language governing permissions and limitations under\n// the License.\n/**\n * See https://twitchtv.github.io/twirp/docs/spec_v5.html#error-codes\n *\n * Names and descriptions from [twirp / errors.go](https://github.com/twitchtv/twirp/blob/b2ecb97cf02a9bb55d730920f6a1cb5243899093/errors.go)\n *\n * Copyright 2018 by Twitch Interactive, Inc.\n */\nexport var TwirpErrorCode;\n(function (TwirpErrorCode) {\n    /**\n     * The operation was cancelled.\n     */\n    TwirpErrorCode[TwirpErrorCode[\"cancelled\"] = 0] = \"cancelled\";\n    /**\n     * An unknown error occurred. For example, this can be used when handling\n     * errors raised by APIs that do not return any error information.\n     */\n    TwirpErrorCode[TwirpErrorCode[\"unknown\"] = 1] = \"unknown\";\n    /**\n     * The client specified an invalid argument. This indicates arguments that\n     * are invalid regardless of the state of the system (i.e. a malformed\n     * file name, required argument, number out of range, etc.).\n     */\n    TwirpErrorCode[TwirpErrorCode[\"invalid_argument\"] = 2] = \"invalid_argument\";\n    /**\n     * The client sent a message which could not be decoded. This may mean that\n     * the message was encoded improperly or that the client and server have\n     * incompatible message definitions.\n     */\n    TwirpErrorCode[TwirpErrorCode[\"malformed\"] = 3] = \"malformed\";\n    /**\n     * Operation expired before completion. For operations that change the state\n     * of the system, this error may be returned even if the operation has\n     * completed successfully (timeout).\n     */\n    TwirpErrorCode[TwirpErrorCode[\"deadline_exceeded\"] = 4] = \"deadline_exceeded\";\n    /**\n     * Some requested entity was not found.\n     */\n    TwirpErrorCode[TwirpErrorCode[\"not_found\"] = 5] = \"not_found\";\n    /**\n     * The requested URL path wasn't routable to a Twirp service and method.\n     * This is returned by generated server code and should not be returned\n     * by application code (use \"not_found\" or \"unimplemented\" instead).\n     */\n    TwirpErrorCode[TwirpErrorCode[\"bad_route\"] = 6] = \"bad_route\";\n    /**\n     * An attempt to create an entity failed because one already exists.\n     */\n    TwirpErrorCode[TwirpErrorCode[\"already_exists\"] = 7] = \"already_exists\";\n    /**\n     * The caller does not have permission to execute the specified operation.\n     * It must not be used if the caller cannot be identified (use\n     * \"unauthenticated\" instead).\n     */\n    TwirpErrorCode[TwirpErrorCode[\"permission_denied\"] = 8] = \"permission_denied\";\n    /**\n     * The request does not have valid authentication credentials for the\n     * operation.\n     */\n    TwirpErrorCode[TwirpErrorCode[\"unauthenticated\"] = 9] = \"unauthenticated\";\n    /**\n     * Some resource has been exhausted, perhaps a per-user quota, or\n     * perhaps the entire file system is out of space.\n     */\n    TwirpErrorCode[TwirpErrorCode[\"resource_exhausted\"] = 10] = \"resource_exhausted\";\n    /**\n     * The operation was rejected because the system is not in a state\n     * required for the operation's execution. For example, doing an rmdir\n     * operation on a directory that is non-empty, or on a non-directory\n     * object, or when having conflicting read-modify-write on the same\n     * resource.\n     */\n    TwirpErrorCode[TwirpErrorCode[\"failed_precondition\"] = 11] = \"failed_precondition\";\n    /**\n     * The operation was aborted, typically due to a concurrency issue\n     * like sequencer check failures, transaction aborts, etc.\n     */\n    TwirpErrorCode[TwirpErrorCode[\"aborted\"] = 12] = \"aborted\";\n    /**\n     * The operation was attempted past the valid range. For example, seeking\n     * or reading past end of a paginated collection. Unlike\n     * \"invalid_argument\", this error indicates a problem that may be fixed if\n     * the system state changes (i.e. adding more items to the collection).\n     * There is a fair bit of overlap between \"failed_precondition\" and\n     * \"out_of_range\". We recommend using \"out_of_range\" (the more specific\n     * error) when it applies so that callers who are iterating through a space\n     * can easily look for an \"out_of_range\" error to detect when they are done.\n     */\n    TwirpErrorCode[TwirpErrorCode[\"out_of_range\"] = 13] = \"out_of_range\";\n    /**\n     * The operation is not implemented or not supported/enabled in this service.\n     */\n    TwirpErrorCode[TwirpErrorCode[\"unimplemented\"] = 14] = \"unimplemented\";\n    /**\n     * When some invariants expected by the underlying system have been broken.\n     * In other words, something bad happened in the library or backend service.\n     * Twirp specific issues like wire and serialization problems are also\n     * reported as \"internal\" errors.\n     */\n    TwirpErrorCode[TwirpErrorCode[\"internal\"] = 15] = \"internal\";\n    /**\n     * The service is currently unavailable. This is most likely a transient\n     * condition and may be corrected by retrying with a backoff.\n     */\n    TwirpErrorCode[TwirpErrorCode[\"unavailable\"] = 16] = \"unavailable\";\n    /**\n     * The operation resulted in unrecoverable data loss or corruption.\n     */\n    TwirpErrorCode[TwirpErrorCode[\"dataloss\"] = 17] = \"dataloss\";\n})(TwirpErrorCode || (TwirpErrorCode = {}));\n", "import { isJsonObject } from \"@protobuf-ts/runtime\";\nimport { RpcError } from \"@protobuf-ts/runtime-rpc\";\nimport { TwirpErrorCode } from \"./twitch-twirp-error-code\";\n/**\n * Create fetch API headers for a Twirp request.\n */\nexport function createTwirpRequestHeader(headers, sendJson, meta) {\n    // add meta as headers\n    if (meta) {\n        for (let [k, v] of Object.entries(meta)) {\n            if (typeof v == \"string\")\n                headers.append(k, v);\n            else\n                for (let i of v)\n                    headers.append(k, i);\n        }\n    }\n    // set standard headers (possibly overwriting meta)\n    headers.set('Content-Type', sendJson ? \"application/json\" : \"application/protobuf\");\n    headers.set('Accept', sendJson ? \"application/json\" : \"application/protobuf, application/json\");\n    return headers;\n}\n/**\n * Parse Twirp error message from JSON and create RpcError from the Twirp error.\n *\n * see https://twitchtv.github.io/twirp/docs/spec_v5.html\n */\nexport function parseTwirpErrorResponse(json) {\n    if (!isJsonObject(json) || typeof json.code !== \"string\" || typeof json.msg !== \"string\")\n        return new RpcError('cannot read twirp error response', TwirpErrorCode[TwirpErrorCode.internal]);\n    let meta = {};\n    if (isJsonObject(json.meta)) {\n        for (let [k, v] of Object.entries(json.meta)) {\n            if (typeof v == \"string\")\n                meta[k] = v;\n        }\n    }\n    return new RpcError(json.msg, json.code, meta);\n}\n/**\n * Parses fetch API response headers to RpcMetaData.\n * Drops the headers Content-Type and Content-Length.\n */\nexport function parseMetadataFromResponseHeaders(headers) {\n    let meta = {};\n    headers.forEach((value, key) => {\n        if (key.toLowerCase() === 'content-type')\n            return;\n        if (key.toLowerCase() === 'content-length')\n            return;\n        if (meta.hasOwnProperty(key))\n            meta[key].push(value);\n        else\n            meta[key] = value;\n    });\n    return meta;\n}\n", "import { createTwirpRequestHeader, parseMetadataFromResponseHeaders, parseTwirpErrorResponse } from \"./twirp-format\";\nimport { Deferred, mergeRpcOptions, RpcError, UnaryCall } from \"@protobuf-ts/runtime-rpc\";\nimport { lowerCamelCase } from \"@protobuf-ts/runtime\";\nimport { TwirpErrorCode } from \"./twitch-twirp-error-code\";\n/**\n * Implements the Twirp protocol, supporting JSON or binary format on\n * the wire. Uses the fetch API to do the HTTP requests.\n *\n * See https://twitchtv.github.io/twirp/docs/spec_v5.html\n */\nexport class TwirpFetchTransport {\n    constructor(options) {\n        this.defaultOptions = options;\n    }\n    mergeOptions(options) {\n        return mergeRpcOptions(this.defaultOptions, options);\n    }\n    unary(method, input, options) {\n        var _a, _b, _c;\n        let opt = options, url = this.makeUrl(method, opt), fetchInit = (_a = opt.fetchInit) !== null && _a !== void 0 ? _a : {}, requestBody = opt.sendJson ? method.I.toJsonString(input, opt.jsonOptions) : method.I.toBinary(input, opt.binaryOptions), defHeader = new Deferred(), defMessage = new Deferred(), defStatus = new Deferred(), defTrailer = new Deferred();\n        globalThis.fetch(url, Object.assign(Object.assign({}, fetchInit), { method: 'POST', headers: createTwirpRequestHeader(new globalThis.Headers(), !!opt.sendJson, opt.meta), body: requestBody, signal: (_b = options.abort) !== null && _b !== void 0 ? _b : null // node-fetch@3.0.0-beta.9 rejects `undefined`\n         }))\n            .then(fetchResponse => {\n            defHeader.resolve(parseMetadataFromResponseHeaders(fetchResponse.headers));\n            // Cloudflare Workers throw when the type property of a fetch response\n            // is accessed, so wrap access with try/catch. See:\n            // * https://developers.cloudflare.com/workers/runtime-apis/response/#properties\n            // * https://github.com/cloudflare/miniflare/blob/72f046e/packages/core/src/standards/http.ts#L646\n            let responseType;\n            try {\n                responseType = fetchResponse.type;\n            }\n            catch (_a) { }\n            switch (responseType) {\n                case \"error\":\n                case \"opaque\":\n                case \"opaqueredirect\":\n                    // see https://developer.mozilla.org/en-US/docs/Web/API/Response/type\n                    throw new RpcError(`fetch response type ${fetchResponse.type}`, TwirpErrorCode[TwirpErrorCode.unknown]);\n            }\n            if (!fetchResponse.ok) {\n                return fetchResponse.json().then(value => {\n                    throw parseTwirpErrorResponse(value);\n                }, () => {\n                    throw new RpcError('received HTTP ' + fetchResponse.status + ', unable to read response body as json', TwirpErrorCode[TwirpErrorCode.internal]);\n                });\n            }\n            if (opt.sendJson) {\n                return fetchResponse.json().then(value => method.O.fromJson(value, opt.jsonOptions), () => {\n                    throw new RpcError('unable to read response body as json', TwirpErrorCode[TwirpErrorCode.dataloss]);\n                });\n            }\n            return fetchResponse.arrayBuffer().then(value => method.O.fromBinary(new Uint8Array(value), opt.binaryOptions), () => {\n                throw new RpcError('unable to read response body', TwirpErrorCode[TwirpErrorCode.dataloss]);\n            });\n        }, (reason) => {\n            // failed to fetch, aborted, wrong url or network problem\n            if (reason instanceof Error && reason.name === 'AbortError')\n                throw new RpcError(reason.message, TwirpErrorCode[TwirpErrorCode.cancelled]);\n            throw new RpcError(reason instanceof Error ? reason.message : reason);\n        })\n            .then(message => {\n            defMessage.resolve(message);\n            defStatus.resolve({ code: 'OK', detail: '' });\n            defTrailer.resolve({});\n        })\n            .catch((reason) => {\n            // RpcErrors are thrown by us, everything else is an internal error\n            let error = reason instanceof RpcError ? reason\n                : new RpcError(reason instanceof Error ? reason.message : reason, TwirpErrorCode[TwirpErrorCode.internal]);\n            error.methodName = method.name;\n            error.serviceName = method.service.typeName;\n            defHeader.rejectPending(error);\n            defMessage.rejectPending(error);\n            defStatus.rejectPending(error);\n            defTrailer.rejectPending(error);\n        });\n        return new UnaryCall(method, (_c = opt.meta) !== null && _c !== void 0 ? _c : {}, input, defHeader.promise, defMessage.promise, defStatus.promise, defTrailer.promise);\n    }\n    /**\n     * Create an URI for a RPC call.\n     *\n     * Takes the `baseUrl` option and appends:\n     * - slash \"/\"\n     * - package name\n     * - dot \".\"\n     * - service name\n     * - slash \"/\"\n     * - method name\n     *\n     * If the service was declared without a package, the package name and dot\n     * are omitted.\n     *\n     * The method name is CamelCased just as it would be in Go, unless the\n     * option `useProtoMethodName` is `true`.\n     */\n    makeUrl(method, options) {\n        let base = options.baseUrl;\n        if (base.endsWith('/'))\n            base = base.substring(0, base.length - 1);\n        let methodName = method.name;\n        if (options.useProtoMethodName !== true) {\n            methodName = lowerCamelCase(methodName);\n            methodName = methodName.substring(0, 1).toUpperCase() + methodName.substring(1);\n        }\n        return `${base}/${method.service.typeName}/${methodName}`;\n    }\n    clientStreaming(method /*, options: RpcOptions*/) {\n        const e = new RpcError('Client streaming is not supported by Twirp', TwirpErrorCode[TwirpErrorCode.unimplemented]);\n        e.methodName = method.name;\n        e.serviceName = method.service.typeName;\n        throw e;\n    }\n    duplex(method /*, options: RpcOptions*/) {\n        const e = new RpcError('Duplex streaming is not supported by Twirp', TwirpErrorCode[TwirpErrorCode.unimplemented]);\n        e.methodName = method.name;\n        e.serviceName = method.service.typeName;\n        throw e;\n    }\n    serverStreaming(method /*, input: I, options?: RpcOptions*/) {\n        const e = new RpcError('Server streaming is not supported by Twirp', TwirpErrorCode[TwirpErrorCode.unimplemented]);\n        e.methodName = method.name;\n        e.serviceName = method.service.typeName;\n        throw e;\n    }\n}\n", "/**\n * Returns true if the object is a function.\n * @param value The value to check\n */\nexport function isFunction(value: any): value is (...args: any[]) => any {\n  return typeof value === 'function';\n}\n", "/**\n * Used to create Error subclasses until the community moves away from ES5.\n *\n * This is because compiling from TypeScript down to ES5 has issues with subclassing Errors\n * as well as other built-in types: https://github.com/Microsoft/TypeScript/issues/12123\n *\n * @param createImpl A factory function to create the actual constructor implementation. The returned\n * function should be a named function that calls `_super` internally.\n */\nexport function createErrorClass<T>(createImpl: (_super: any) => any): T {\n  const _super = (instance: any) => {\n    Error.call(instance);\n    instance.stack = new Error().stack;\n  };\n\n  const ctorFunc = createImpl(_super);\n  ctorFunc.prototype = Object.create(Error.prototype);\n  ctorFunc.prototype.constructor = ctorFunc;\n  return ctorFunc;\n}\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (errors: any[]): UnsubscriptionError;\n}\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = createErrorClass(\n  (_super) =>\n    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {\n      _super(this);\n      this.message = errors\n        ? `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}`\n        : '';\n      this.name = 'UnsubscriptionError';\n      this.errors = errors;\n    }\n);\n", "/**\n * Removes an item from an array, mutating it.\n * @param arr The array to remove the item from\n * @param item The item to remove\n */\nexport function arrRemove<T>(arr: T[] | undefined | null, item: T) {\n  if (arr) {\n    const index = arr.indexOf(item);\n    0 <= index && arr.splice(index, 1);\n  }\n}\n", "import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic, Unsubscribable } from './types';\nimport { arrRemove } from './util/arrRemove';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n  })();\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   */\n  public closed = false;\n\n  private _parentage: Subscription[] | Subscription | null = null;\n\n  /**\n   * The list of registered finalizers to execute upon unsubscription. Adding and removing from this\n   * list occurs in the {@link #add} and {@link #remove} methods.\n   */\n  private _finalizers: Exclude<TeardownLogic, void>[] | null = null;\n\n  /**\n   * @param initialTeardown A function executed first as part of the finalization\n   * process that is kicked off when {@link #unsubscribe} is called.\n   */\n  constructor(private initialTeardown?: () => void) {}\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[] | undefined;\n\n    if (!this.closed) {\n      this.closed = true;\n\n      // Remove this from it's parents.\n      const { _parentage } = this;\n      if (_parentage) {\n        this._parentage = null;\n        if (Array.isArray(_parentage)) {\n          for (const parent of _parentage) {\n            parent.remove(this);\n          }\n        } else {\n          _parentage.remove(this);\n        }\n      }\n\n      const { initialTeardown: initialFinalizer } = this;\n      if (isFunction(initialFinalizer)) {\n        try {\n          initialFinalizer();\n        } catch (e) {\n          errors = e instanceof UnsubscriptionError ? e.errors : [e];\n        }\n      }\n\n      const { _finalizers } = this;\n      if (_finalizers) {\n        this._finalizers = null;\n        for (const finalizer of _finalizers) {\n          try {\n            execFinalizer(finalizer);\n          } catch (err) {\n            errors = errors ?? [];\n            if (err instanceof UnsubscriptionError) {\n              errors = [...errors, ...err.errors];\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n\n      if (errors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }\n\n  /**\n   * Adds a finalizer to this subscription, so that finalization will be unsubscribed/called\n   * when this subscription is unsubscribed. If this subscription is already {@link #closed},\n   * because it has already been unsubscribed, then whatever finalizer is passed to it\n   * will automatically be executed (unless the finalizer itself is also a closed subscription).\n   *\n   * Closed Subscriptions cannot be added as finalizers to any subscription. Adding a closed\n   * subscription to a any subscription will result in no operation. (A noop).\n   *\n   * Adding a subscription to itself, or adding `null` or `undefined` will not perform any\n   * operation at all. (A noop).\n   *\n   * `Subscription` instances that are added to this instance will automatically remove themselves\n   * if they are unsubscribed. Functions and {@link Unsubscribable} objects that you wish to remove\n   * will need to be removed manually with {@link #remove}\n   *\n   * @param teardown The finalization logic to add to this subscription.\n   */\n  add(teardown: TeardownLogic): void {\n    // Only add the finalizer if it's not undefined\n    // and don't add a subscription to itself.\n    if (teardown && teardown !== this) {\n      if (this.closed) {\n        // If this subscription is already closed,\n        // execute whatever finalizer is handed to it automatically.\n        execFinalizer(teardown);\n      } else {\n        if (teardown instanceof Subscription) {\n          // We don't add closed subscriptions, and we don't add the same subscription\n          // twice. Subscription unsubscribe is idempotent.\n          if (teardown.closed || teardown._hasParent(this)) {\n            return;\n          }\n          teardown._addParent(this);\n        }\n        (this._finalizers = this._finalizers ?? []).push(teardown);\n      }\n    }\n  }\n\n  /**\n   * Checks to see if a this subscription already has a particular parent.\n   * This will signal that this subscription has already been added to the parent in question.\n   * @param parent the parent to check for\n   */\n  private _hasParent(parent: Subscription) {\n    const { _parentage } = this;\n    return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n  }\n\n  /**\n   * Adds a parent to this subscription so it can be removed from the parent if it\n   * unsubscribes on it's own.\n   *\n   * NOTE: THIS ASSUMES THAT {@link _hasParent} HAS ALREADY BEEN CHECKED.\n   * @param parent The parent subscription to add\n   */\n  private _addParent(parent: Subscription) {\n    const { _parentage } = this;\n    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n  }\n\n  /**\n   * Called on a child when it is removed via {@link #remove}.\n   * @param parent The parent to remove\n   */\n  private _removeParent(parent: Subscription) {\n    const { _parentage } = this;\n    if (_parentage === parent) {\n      this._parentage = null;\n    } else if (Array.isArray(_parentage)) {\n      arrRemove(_parentage, parent);\n    }\n  }\n\n  /**\n   * Removes a finalizer from this subscription that was previously added with the {@link #add} method.\n   *\n   * Note that `Subscription` instances, when unsubscribed, will automatically remove themselves\n   * from every other `Subscription` they have been added to. This means that using the `remove` method\n   * is not a common thing and should be used thoughtfully.\n   *\n   * If you add the same finalizer instance of a function or an unsubscribable object to a `Subscription` instance\n   * more than once, you will need to call `remove` the same number of times to remove all instances.\n   *\n   * All finalizer instances are removed to free up memory upon unsubscription.\n   *\n   * @param teardown The finalizer to remove from this subscription\n   */\n  remove(teardown: Exclude<TeardownLogic, void>): void {\n    const { _finalizers } = this;\n    _finalizers && arrRemove(_finalizers, teardown);\n\n    if (teardown instanceof Subscription) {\n      teardown._removeParent(this);\n    }\n  }\n}\n\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\n\nexport function isSubscription(value: any): value is Subscription {\n  return (\n    value instanceof Subscription ||\n    (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe))\n  );\n}\n\nfunction execFinalizer(finalizer: Unsubscribable | (() => void)) {\n  if (isFunction(finalizer)) {\n    finalizer();\n  } else {\n    finalizer.unsubscribe();\n  }\n}\n", "import { Subscriber } from './Subscriber';\nimport { ObservableNotification } from './types';\n\n/**\n * The {@link GlobalConfig} object for RxJS. It is used to configure things\n * like how to react on unhandled errors.\n */\nexport const config: GlobalConfig = {\n  onUnhandledError: null,\n  onStoppedNotification: null,\n  Promise: undefined,\n  useDeprecatedSynchronousErrorHandling: false,\n  useDeprecatedNextContext: false,\n};\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like how to react on unhandled errors. Accessible via {@link config}\n * object.\n */\nexport interface GlobalConfig {\n  /**\n   * A registration point for unhandled errors from RxJS. These are errors that\n   * cannot were not handled by consuming code in the usual subscription path. For\n   * example, if you have this configured, and you subscribe to an observable without\n   * providing an error handler, errors from that subscription will end up here. This\n   * will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onUnhandledError: ((err: any) => void) | null;\n\n  /**\n   * A registration point for notifications that cannot be sent to subscribers because they\n   * have completed, errored or have been explicitly unsubscribed. By default, next, complete\n   * and error notifications sent to stopped subscribers are noops. However, sometimes callers\n   * might want a different behavior. For example, with sources that attempt to report errors\n   * to stopped subscribers, a caller can configure RxJS to throw an unhandled error instead.\n   * This will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onStoppedNotification: ((notification: ObservableNotification<any>, subscriber: Subscriber<any>) => void) | null;\n\n  /**\n   * The promise constructor used by default for {@link Observable#toPromise toPromise} and {@link Observable#forEach forEach}\n   * methods.\n   *\n   * @deprecated As of version 8, RxJS will no longer support this sort of injection of a\n   * Promise constructor. If you need a Promise implementation other than native promises,\n   * please polyfill/patch Promise as you see appropriate. Will be removed in v8.\n   */\n  Promise?: PromiseConstructorLike;\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BUY TIME\n   * FOR MIGRATION REASONS.\n   *\n   * @deprecated As of version 8, RxJS will no longer support synchronous throwing\n   * of unhandled errors. All errors will be thrown on a separate call stack to prevent bad\n   * behaviors described above. Will be removed in v8.\n   */\n  useDeprecatedSynchronousErrorHandling: boolean;\n\n  /**\n   * If true, enables an as-of-yet undocumented feature from v5: The ability to access\n   * `unsubscribe()` via `this` context in `next` functions created in observers passed\n   * to `subscribe`.\n   *\n   * This is being removed because the performance was severely problematic, and it could also cause\n   * issues when types other than POJOs are passed to subscribe as subscribers, as they will likely have\n   * their `this` context overwritten.\n   *\n   * @deprecated As of version 8, RxJS will no longer support altering the\n   * context of next functions provided as part of an observer to Subscribe. Instead,\n   * you will have access to a subscription or a signal or token that will allow you to do things like\n   * unsubscribe and test closed status. Will be removed in v8.\n   */\n  useDeprecatedNextContext: boolean;\n}\n", "import type { TimerHandle } from './timerHandle';\ntype SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearTimeoutFunction = (handle: TimerHandle) => void;\n\ninterface TimeoutProvider {\n  setTimeout: SetTimeoutFunction;\n  clearTimeout: ClearTimeoutFunction;\n  delegate:\n    | {\n        setTimeout: SetTimeoutFunction;\n        clearTimeout: ClearTimeoutFunction;\n      }\n    | undefined;\n}\n\nexport const timeoutProvider: TimeoutProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setTimeout(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = timeoutProvider;\n    if (delegate?.setTimeout) {\n      return delegate.setTimeout(handler, timeout, ...args);\n    }\n    return setTimeout(handler, timeout, ...args);\n  },\n  clearTimeout(handle) {\n    const { delegate } = timeoutProvider;\n    return (delegate?.clearTimeout || clearTimeout)(handle as any);\n  },\n  delegate: undefined,\n};\n", "import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\n\n/**\n * Handles an error on another job either with the user-configured {@link onUnhandledError},\n * or by throwing it on that new job so it can be picked up by `window.onerror`, `process.on('error')`, etc.\n *\n * This should be called whenever there is an error that is out-of-band with the subscription\n * or when an error hits a terminal boundary of the subscription and no error handler was provided.\n *\n * @param err the error to report\n */\nexport function reportUnhandledError(err: any) {\n  timeoutProvider.setTimeout(() => {\n    const { onUnhandledError } = config;\n    if (onUnhandledError) {\n      // Execute the user-configured error handler.\n      onUnhandledError(err);\n    } else {\n      // Throw so it is picked up by the runtime's uncaught error mechanism.\n      throw err;\n    }\n  });\n}\n", "/* tslint:disable:no-empty */\nexport function noop() { }\n", "import { CompleteNotification, NextNotification, ErrorNotification } from './types';\n\n/**\n * A completion object optimized for memory use and created to be the\n * same \"shape\" as other notifications in v8.\n * @internal\n */\nexport const COMPLETE_NOTIFICATION = (() => createNotification('C', undefined, undefined) as CompleteNotification)();\n\n/**\n * Internal use only. Creates an optimized error notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function errorNotification(error: any): ErrorNotification {\n  return createNotification('E', undefined, error) as any;\n}\n\n/**\n * Internal use only. Creates an optimized next notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function nextNotification<T>(value: T) {\n  return createNotification('N', value, undefined) as NextNotification<T>;\n}\n\n/**\n * Ensures that all notifications created internally have the same \"shape\" in v8.\n *\n * TODO: This is only exported to support a crazy legacy test in `groupBy`.\n * @internal\n */\nexport function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {\n  return {\n    kind,\n    value,\n    error,\n  };\n}\n", "import { config } from '../config';\n\nlet context: { errorThrown: boolean; error: any } | null = null;\n\n/**\n * Handles dealing with errors for super-gross mode. Creates a context, in which\n * any synchronously thrown errors will be passed to {@link captureError}. Which\n * will record the error such that it will be rethrown after the call back is complete.\n * TODO: Remove in v8\n * @param cb An immediately executed function.\n */\nexport function errorContext(cb: () => void) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    const isRoot = !context;\n    if (isRoot) {\n      context = { errorThrown: false, error: null };\n    }\n    cb();\n    if (isRoot) {\n      const { errorThrown, error } = context!;\n      context = null;\n      if (errorThrown) {\n        throw error;\n      }\n    }\n  } else {\n    // This is the general non-deprecated path for everyone that\n    // isn't crazy enough to use super-gross mode (useDeprecatedSynchronousErrorHandling)\n    cb();\n  }\n}\n\n/**\n * Captures errors only in super-gross mode.\n * @param err the error to capture\n */\nexport function captureError(err: any) {\n  if (config.useDeprecatedSynchronousErrorHandling && context) {\n    context.errorThrown = true;\n    context.error = err;\n  }\n}\n", "import { isFunction } from './util/isFunction';\nimport { Observer, ObservableNotification } from './types';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param next The `next` callback of an Observer.\n   * @param error The `error` callback of an\n   * Observer.\n   * @param complete The `complete` callback of an\n   * Observer.\n   * @return A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   * @deprecated Do not use. Will be removed in v8. There is no replacement for this\n   * method, and there is no reason to be creating instances of `Subscriber` directly.\n   * If you have a specific use case, please file an issue.\n   */\n  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {\n    return new SafeSubscriber(next, error, complete);\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected isStopped: boolean = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected destination: Subscriber<any> | Observer<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * There is no reason to directly create an instance of Subscriber. This type is exported for typings reasons.\n   */\n  constructor(destination?: Subscriber<any> | Observer<any>) {\n    super();\n    if (destination) {\n      this.destination = destination;\n      // Automatically chain subscriptions together here.\n      // if destination is a Subscription, then it is a Subscriber.\n      if (isSubscription(destination)) {\n        destination.add(this);\n      }\n    } else {\n      this.destination = EMPTY_OBSERVER;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (this.isStopped) {\n      handleStoppedNotification(nextNotification(value), this);\n    } else {\n      this._next(value!);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (this.isStopped) {\n      handleStoppedNotification(errorNotification(err), this);\n    } else {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (this.isStopped) {\n      handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n    } else {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (!this.closed) {\n      this.isStopped = true;\n      super.unsubscribe();\n      this.destination = null!;\n    }\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    try {\n      this.destination.error(err);\n    } finally {\n      this.unsubscribe();\n    }\n  }\n\n  protected _complete(): void {\n    try {\n      this.destination.complete();\n    } finally {\n      this.unsubscribe();\n    }\n  }\n}\n\n/**\n * This bind is captured here because we want to be able to have\n * compatibility with monoid libraries that tend to use a method named\n * `bind`. In particular, a library called Monio requires this.\n */\nconst _bind = Function.prototype.bind;\n\nfunction bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {\n  return _bind.call(fn, thisArg);\n}\n\n/**\n * Internal optimization only, DO NOT EXPOSE.\n * @internal\n */\nclass ConsumerObserver<T> implements Observer<T> {\n  constructor(private partialObserver: Partial<Observer<T>>) {}\n\n  next(value: T): void {\n    const { partialObserver } = this;\n    if (partialObserver.next) {\n      try {\n        partialObserver.next(value);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n\n  error(err: any): void {\n    const { partialObserver } = this;\n    if (partialObserver.error) {\n      try {\n        partialObserver.error(err);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    } else {\n      handleUnhandledError(err);\n    }\n  }\n\n  complete(): void {\n    const { partialObserver } = this;\n    if (partialObserver.complete) {\n      try {\n        partialObserver.complete();\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n}\n\nexport class SafeSubscriber<T> extends Subscriber<T> {\n  constructor(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((e?: any) => void) | null,\n    complete?: (() => void) | null\n  ) {\n    super();\n\n    let partialObserver: Partial<Observer<T>>;\n    if (isFunction(observerOrNext) || !observerOrNext) {\n      // The first argument is a function, not an observer. The next\n      // two arguments *could* be observers, or they could be empty.\n      partialObserver = {\n        next: (observerOrNext ?? undefined) as (((value: T) => void) | undefined),\n        error: error ?? undefined,\n        complete: complete ?? undefined,\n      };\n    } else {\n      // The first argument is a partial observer.\n      let context: any;\n      if (this && config.useDeprecatedNextContext) {\n        // This is a deprecated path that made `this.unsubscribe()` available in\n        // next handler functions passed to subscribe. This only exists behind a flag\n        // now, as it is *very* slow.\n        context = Object.create(observerOrNext);\n        context.unsubscribe = () => this.unsubscribe();\n        partialObserver = {\n          next: observerOrNext.next && bind(observerOrNext.next, context),\n          error: observerOrNext.error && bind(observerOrNext.error, context),\n          complete: observerOrNext.complete && bind(observerOrNext.complete, context),\n        };\n      } else {\n        // The \"normal\" path. Just use the partial observer directly.\n        partialObserver = observerOrNext;\n      }\n    }\n\n    // Wrap the partial observer to ensure it's a full observer, and\n    // make sure proper error handling is accounted for.\n    this.destination = new ConsumerObserver(partialObserver);\n  }\n}\n\nfunction handleUnhandledError(error: any) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    captureError(error);\n  } else {\n    // Ideal path, we report this as an unhandled error,\n    // which is thrown on a new call stack.\n    reportUnhandledError(error);\n  }\n}\n\n/**\n * An error handler used when no error handler was supplied\n * to the SafeSubscriber -- meaning no error handler was supplied\n * do the `subscribe` call on our observable.\n * @param err The error to handle\n */\nfunction defaultErrorHandler(err: any) {\n  throw err;\n}\n\n/**\n * A handler for notifications that cannot be sent to a stopped subscriber.\n * @param notification The notification being sent\n * @param subscriber The stopped subscriber\n */\nfunction handleStoppedNotification(notification: ObservableNotification<any>, subscriber: Subscriber<any>) {\n  const { onStoppedNotification } = config;\n  onStoppedNotification && timeoutProvider.setTimeout(() => onStoppedNotification(notification, subscriber));\n}\n\n/**\n * The observer used as a stub for subscriptions where the user did not\n * pass any arguments to `subscribe`. Comes with the default error handling\n * behavior.\n */\nexport const EMPTY_OBSERVER: Readonly<Observer<any>> & { closed: true } = {\n  closed: true,\n  next: noop,\n  error: defaultErrorHandler,\n  complete: noop,\n};\n", "/**\n * Symbol.observable or a string \"@@observable\". Used for interop\n *\n * @deprecated We will no longer be exporting this symbol in upcoming versions of RxJS.\n * Instead polyfill and use Symbol.observable directly *or* use https://www.npmjs.com/package/symbol-observable\n */\nexport const observable: string | symbol = (() => (typeof Symbol === 'function' && Symbol.observable) || '@@observable')();\n", "/**\n * This function takes one parameter and just returns it. Simply put,\n * this is like `<T>(x: T): T => x`.\n *\n * ## Examples\n *\n * This is useful in some cases when using things like `mergeMap`\n *\n * ```ts\n * import { interval, take, map, range, mergeMap, identity } from 'rxjs';\n *\n * const source$ = interval(1000).pipe(take(5));\n *\n * const result$ = source$.pipe(\n *   map(i => range(i)),\n *   mergeMap(identity) // same as mergeMap(x => x)\n * );\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * Or when you want to selectively apply an operator\n *\n * ```ts\n * import { interval, take, identity } from 'rxjs';\n *\n * const shouldLimit = () => Math.random() < 0.5;\n *\n * const source$ = interval(1000);\n *\n * const result$ = source$.pipe(shouldLimit() ? take(5) : identity);\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * @param x Any value that is returned by this function\n * @returns The value passed as the first parameter to this function\n */\nexport function identity<T>(x: T): T {\n  return x;\n}\n", "import { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\nexport function pipe(): typeof identity;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>\n): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>\n): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>\n): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>\n): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>\n): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>\n): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>,\n  ...fns: UnaryFunction<any, any>[]\n): UnaryFunction<T, unknown>;\n\n/**\n * pipe() can be called on one or more functions, each of which can take one argument (\"UnaryFunction\")\n * and uses it to return a value.\n * It returns a function that takes one argument, passes it to the first UnaryFunction, and then\n * passes the result to the next one, passes that result to the next one, and so on.  \n */\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n", "import { Operator } from './Operator';\nimport { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription, Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, Subscribable, Observer } from './types';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  source: Observable<any> | undefined;\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  operator: Operator<any, T> | undefined;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new Observable by calling the Observable constructor\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new observable\n   * @nocollapse\n   * @deprecated Use `new Observable()` instead. Will be removed in v8.\n   */\n  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  };\n\n  /**\n   * Creates a new Observable, with this Observable instance as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param operator the operator defining the operation to take on the observable\n   * @return a new observable with the Operator applied\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * If you have implemented an operator using `lift`, it is recommended that you create an\n   * operator by simply returning `new Observable()` directly. See \"Creating new operators from\n   * scratch\" section here: https://rxjs.dev/guide/operators\n   */\n  lift<R>(operator?: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observerOrNext?: Partial<Observer<T>> | ((value: T) => void)): Subscription;\n  /** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\n  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular, do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided and an error happens,\n   * it will be thrown asynchronously. Errors thrown asynchronously cannot be caught using `try`/`catch`. Instead,\n   * use the {@link onUnhandledError} configuration option or use a runtime handler (like `window.onerror` or\n   * `process.on('error)`) to be notified of unhandled errors. Because of this, it's recommended that you provide\n   * an `error` method to avoid missing thrown errors.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of an Observer,\n   * if you do not need to listen for something, you can omit a function by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to the `error` function, as with an Observer, if not provided, errors emitted by an Observable will be thrown asynchronously.\n   *\n   * You can, however, subscribe with no parameters at all. This may be the case where you're not interested in terminal events\n   * and you also handled emissions internally by using operators (e.g. using `tap`).\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * #### Examples\n   *\n   * Subscribe with an {@link guide/observer Observer}\n   *\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Subscribe with functions ({@link deprecations/subscribe-arguments deprecated})\n   *\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Cancel a subscription\n   *\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe({\n   *   next(num) {\n   *     console.log(num)\n   *   },\n   *   complete() {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * });\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // 'unsubscribed!' after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   * or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   * Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   * the error will be thrown asynchronously as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {Subscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((error: any) => void) | null,\n    complete?: (() => void) | null\n  ): Subscription {\n    const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n\n    errorContext(() => {\n      const { operator, source } = this;\n      subscriber.add(\n        operator\n          ? // We're dealing with a subscription in the\n            // operator chain to one of our lifted operators.\n            operator.call(subscriber, source)\n          : source\n          ? // If `source` has a value, but `operator` does not, something that\n            // had intimate knowledge of our API, like our `Subject`, must have\n            // set it. We're going to just call `_subscribe` directly.\n            this._subscribe(subscriber)\n          : // In all other cases, we're likely wrapping a user-provided initializer\n            // function, so we need to catch errors and handle them appropriately.\n            this._trySubscribe(subscriber)\n      );\n    });\n\n    return subscriber;\n  }\n\n  /** @internal */\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      // We don't need to return anything in this case,\n      // because it's just going to try to `add()` to a subscription\n      // above.\n      sink.error(err);\n    }\n  }\n\n  /**\n   * Used as a NON-CANCELLABLE means of subscribing to an observable, for use with\n   * APIs that expect promises, like `async/await`. You cannot unsubscribe from this.\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * #### Example\n   *\n   * ```ts\n   * import { interval, take } from 'rxjs';\n   *\n   * const source$ = interval(1000).pipe(take(4));\n   *\n   * async function getTotal() {\n   *   let total = 0;\n   *\n   *   await source$.forEach(value => {\n   *     total += value;\n   *     console.log('observable -> ' + value);\n   *   });\n   *\n   *   return total;\n   * }\n   *\n   * getTotal().then(\n   *   total => console.log('Total: ' + total)\n   * );\n   *\n   * // Expected:\n   * // 'observable -> 0'\n   * // 'observable -> 1'\n   * // 'observable -> 2'\n   * // 'observable -> 3'\n   * // 'Total: 6'\n   * ```\n   *\n   * @param next a handler for each value emitted by the observable\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void): Promise<void>;\n\n  /**\n   * @param next a handler for each value emitted by the observable\n   * @param promiseCtor a constructor function used to instantiate the Promise\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   * @deprecated Passing a Promise constructor will no longer be available\n   * in upcoming versions of RxJS. This is because it adds weight to the library, for very\n   * little benefit. If you need this functionality, it is recommended that you either\n   * polyfill Promise, or you create an adapter to convert the returned native promise\n   * to whatever promise implementation you wanted. Will be removed in v8.\n   */\n  forEach(next: (value: T) => void, promiseCtor: PromiseConstructorLike): Promise<void>;\n\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      const subscriber = new SafeSubscriber<T>({\n        next: (value) => {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscriber.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve,\n      });\n      this.subscribe(subscriber);\n    }) as Promise<void>;\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source?.subscribe(subscriber);\n  }\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>\n  ): Observable<D>;\n  pipe<A, B, C, D, E>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>\n  ): Observable<E>;\n  pipe<A, B, C, D, E, F>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>\n  ): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>\n  ): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>\n  ): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>\n  ): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>,\n    ...operations: OperatorFunction<any, any>[]\n  ): Observable<unknown>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ## Example\n   *\n   * ```ts\n   * import { interval, filter, map, scan } from 'rxjs';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x));\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: typeof Promise): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: PromiseConstructorLike): Promise<T | undefined>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Subscribe to this Observable and get a Promise resolving on\n   * `complete` with the last emission (if any).\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * @method toPromise\n   * @param [promiseCtor] a constructor function used to instantiate\n   * the Promise\n   * @return A Promise that resolves with the last value emit, or\n   * rejects on an error. If there were no emissions, Promise\n   * resolves with undefined.\n   * @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise\n   */\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T | undefined> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: T | undefined;\n      this.subscribe(\n        (x: T) => (value = x),\n        (err: any) => reject(err),\n        () => resolve(value)\n      );\n    }) as Promise<T | undefined>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  return promiseCtor ?? config.Promise ?? Promise;\n}\n\nfunction isObserver<T>(value: any): value is Observer<T> {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\n\nfunction isSubscriber<T>(value: any): value is Subscriber<T> {\n  return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\nimport { isFunction } from './isFunction';\n\n/**\n * Used to determine if an object is an Observable with a lift function.\n */\nexport function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {\n  return isFunction(source?.lift);\n}\n\n/**\n * Creates an `OperatorFunction`. Used to define operators throughout the library in a concise way.\n * @param init The logic to connect the liftedSource to the subscriber at the moment of subscription.\n */\nexport function operate<T, R>(\n  init: (liftedSource: Observable<T>, subscriber: Subscriber<R>) => (() => void) | void\n): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    if (hasLift(source)) {\n      return source.lift(function (this: Subscriber<R>, liftedSource: Observable<T>) {\n        try {\n          return init(liftedSource, this);\n        } catch (err) {\n          this.error(err);\n        }\n      });\n    }\n    throw new TypeError('Unable to lift unknown Observable type');\n  };\n}\n", "import { Subscriber } from '../Subscriber';\n\n/**\n * Creates an instance of an `OperatorSubscriber`.\n * @param destination The downstream subscriber.\n * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n * and send to the `destination` error handler.\n * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n * this handler are sent to the `destination` error handler.\n * @param onFinalize Additional teardown logic here. This will only be called on teardown if the\n * subscriber itself is not already closed. This is called after all other teardown logic is executed.\n */\nexport function createOperatorSubscriber<T>(\n  destination: Subscriber<any>,\n  onNext?: (value: T) => void,\n  onComplete?: () => void,\n  onError?: (err: any) => void,\n  onFinalize?: () => void\n): Subscriber<T> {\n  return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\n\n/**\n * A generic helper for allowing operators to be created with a Subscriber and\n * use closures to capture necessary state from the operator function itself.\n */\nexport class OperatorSubscriber<T> extends Subscriber<T> {\n  /**\n   * Creates an instance of an `OperatorSubscriber`.\n   * @param destination The downstream subscriber.\n   * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n   * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n   * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n   * and send to the `destination` error handler.\n   * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n   * this handler are sent to the `destination` error handler.\n   * @param onFinalize Additional finalization logic here. This will only be called on finalization if the\n   * subscriber itself is not already closed. This is called after all other finalization logic is executed.\n   * @param shouldUnsubscribe An optional check to see if an unsubscribe call should truly unsubscribe.\n   * NOTE: This currently **ONLY** exists to support the strange behavior of {@link groupBy}, where unsubscription\n   * to the resulting observable does not actually disconnect from the source if there are active subscriptions\n   * to any grouped observable. (DO NOT EXPOSE OR USE EXTERNALLY!!!)\n   */\n  constructor(\n    destination: Subscriber<any>,\n    onNext?: (value: T) => void,\n    onComplete?: () => void,\n    onError?: (err: any) => void,\n    private onFinalize?: () => void,\n    private shouldUnsubscribe?: () => boolean\n  ) {\n    // It's important - for performance reasons - that all of this class's\n    // members are initialized and that they are always initialized in the same\n    // order. This will ensure that all OperatorSubscriber instances have the\n    // same hidden class in V8. This, in turn, will help keep the number of\n    // hidden classes involved in property accesses within the base class as\n    // low as possible. If the number of hidden classes involved exceeds four,\n    // the property accesses will become megamorphic and performance penalties\n    // will be incurred - i.e. inline caches won't be used.\n    //\n    // The reasons for ensuring all instances have the same hidden class are\n    // further discussed in this blog post from Benedikt Meurer:\n    // https://benediktmeurer.de/2018/03/23/impact-of-polymorphism-on-component-based-frameworks-like-react/\n    super(destination);\n    this._next = onNext\n      ? function (this: OperatorSubscriber<T>, value: T) {\n          try {\n            onNext(value);\n          } catch (err) {\n            destination.error(err);\n          }\n        }\n      : super._next;\n    this._error = onError\n      ? function (this: OperatorSubscriber<T>, err: any) {\n          try {\n            onError(err);\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._error;\n    this._complete = onComplete\n      ? function (this: OperatorSubscriber<T>) {\n          try {\n            onComplete();\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._complete;\n  }\n\n  unsubscribe() {\n    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n      const { closed } = this;\n      super.unsubscribe();\n      // Execute additional teardown if we have any and we didn't already do so.\n      !closed && this.onFinalize?.();\n    }\n  }\n}\n", "import { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Make a {@link ConnectableObservable} behave like a ordinary observable and automates the way\n * you can connect to it.\n *\n * Internally it counts the subscriptions to the observable and subscribes (only once) to the source if\n * the number of subscriptions is larger than 0. If the number of subscriptions is smaller than 1, it\n * unsubscribes from the source. This way you can make sure that everything before the *published*\n * refCount has only a single subscription independently of the number of subscribers to the target\n * observable.\n *\n * Note that using the {@link share} operator is exactly the same as using the `multicast(() => new Subject())` operator\n * (making the observable hot) and the *refCount* operator in a sequence.\n *\n * ![](refCount.png)\n *\n * ## Example\n *\n * In the following example there are two intervals turned into connectable observables\n * by using the *publish* operator. The first one uses the *refCount* operator, the\n * second one does not use it. You will notice that a connectable observable does nothing\n * until you call its connect function.\n *\n * ```ts\n * import { interval, tap, publish, refCount } from 'rxjs';\n *\n * // Turn the interval observable into a ConnectableObservable (hot)\n * const refCountInterval = interval(400).pipe(\n *   tap(num => console.log(`refCount ${ num }`)),\n *   publish(),\n *   refCount()\n * );\n *\n * const publishedInterval = interval(400).pipe(\n *   tap(num => console.log(`publish ${ num }`)),\n *   publish()\n * );\n *\n * refCountInterval.subscribe();\n * refCountInterval.subscribe();\n * // 'refCount 0' -----> 'refCount 1' -----> etc\n * // All subscriptions will receive the same value and the tap (and\n * // every other operator) before the `publish` operator will be executed\n * // only once per event independently of the number of subscriptions.\n *\n * publishedInterval.subscribe();\n * // Nothing happens until you call .connect() on the observable.\n * ```\n *\n * @return A function that returns an Observable that automates the connection\n * to ConnectableObservable.\n * @see {@link ConnectableObservable}\n * @see {@link share}\n * @see {@link publish}\n * @deprecated Replaced with the {@link share} operator. How `share` is used\n * will depend on the connectable observable you created just prior to the\n * `refCount` operator.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let connection: Subscription | null = null;\n\n    (source as any)._refCount++;\n\n    const refCounter = createOperatorSubscriber(subscriber, undefined, undefined, undefined, () => {\n      if (!source || (source as any)._refCount <= 0 || 0 < --(source as any)._refCount) {\n        connection = null;\n        return;\n      }\n\n      ///\n      // Compare the local RefCountSubscriber's connection Subscription to the\n      // connection Subscription on the shared ConnectableObservable. In cases\n      // where the ConnectableObservable source synchronously emits values, and\n      // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n      // execution continues to here before the RefCountOperator has a chance to\n      // supply the RefCountSubscriber with the shared connection Subscription.\n      // For example:\n      // ```\n      // range(0, 10).pipe(\n      //   publish(),\n      //   refCount(),\n      //   take(5),\n      // )\n      // .subscribe();\n      // ```\n      // In order to account for this case, RefCountSubscriber should only dispose\n      // the ConnectableObservable's shared connection Subscription if the\n      // connection Subscription exists, *and* either:\n      //   a. RefCountSubscriber doesn't have a reference to the shared connection\n      //      Subscription yet, or,\n      //   b. RefCountSubscriber's connection Subscription reference is identical\n      //      to the shared connection Subscription\n      ///\n\n      const sharedConnection = (source as any)._connection;\n      const conn = connection;\n      connection = null;\n\n      if (sharedConnection && (!conn || sharedConnection === conn)) {\n        sharedConnection.unsubscribe();\n      }\n\n      subscriber.unsubscribe();\n    });\n\n    source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      connection = (source as ConnectableObservable<T>).connect();\n    }\n  });\n}\n", "import { Subject } from '../Subject';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { hasLift } from '../util/lift';\n\n/**\n * @class ConnectableObservable<T>\n * @deprecated Will be removed in v8. Use {@link connectable} to create a connectable observable.\n * If you are using the `refCount` method of `ConnectableObservable`, use the {@link share} operator\n * instead.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n  protected _subject: Subject<T> | null = null;\n  protected _refCount: number = 0;\n  protected _connection: Subscription | null = null;\n\n  /**\n   * @param source The source observable\n   * @param subjectFactory The factory that creates the subject used internally.\n   * @deprecated Will be removed in v8. Use {@link connectable} to create a connectable observable.\n   * `new ConnectableObservable(source, factory)` is equivalent to\n   * `connectable(source, { connector: factory })`.\n   * When the `refCount()` method is needed, the {@link share} operator should be used instead:\n   * `new ConnectableObservable(source, factory).refCount()` is equivalent to\n   * `source.pipe(share({ connector: factory }))`.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  constructor(public source: Observable<T>, protected subjectFactory: () => Subject<T>) {\n    super();\n    // If we have lift, monkey patch that here. This is done so custom observable\n    // types will compose through multicast. Otherwise the resulting observable would\n    // simply be an instance of `ConnectableObservable`.\n    if (hasLift(source)) {\n      this.lift = source.lift;\n    }\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject!;\n  }\n\n  protected _teardown() {\n    this._refCount = 0;\n    const { _connection } = this;\n    this._subject = this._connection = null;\n    _connection?.unsubscribe();\n  }\n\n  /**\n   * @deprecated {@link ConnectableObservable} will be removed in v8. Use {@link connectable} instead.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      connection = this._connection = new Subscription();\n      const subject = this.getSubject();\n      connection.add(\n        this.source.subscribe(\n          createOperatorSubscriber(\n            subject as any,\n            undefined,\n            () => {\n              this._teardown();\n              subject.complete();\n            },\n            (err) => {\n              this._teardown();\n              subject.error(err);\n            },\n            () => this._teardown()\n          )\n        )\n      );\n\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      }\n    }\n    return connection;\n  }\n\n  /**\n   * @deprecated {@link ConnectableObservable} will be removed in v8. Use the {@link share} operator instead.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n", "import { TimestampProvider } from '../types';\n\ninterface PerformanceTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const performanceTimestampProvider: PerformanceTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (performanceTimestampProvider.delegate || performance).now();\n  },\n  delegate: undefined,\n};\n", "import { Subscription } from '../Subscription';\n\ninterface AnimationFrameProvider {\n  schedule(callback: FrameRequestCallback): Subscription;\n  requestAnimationFrame: typeof requestAnimationFrame;\n  cancelAnimationFrame: typeof cancelAnimationFrame;\n  delegate:\n    | {\n        requestAnimationFrame: typeof requestAnimationFrame;\n        cancelAnimationFrame: typeof cancelAnimationFrame;\n      }\n    | undefined;\n}\n\nexport const animationFrameProvider: AnimationFrameProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  schedule(callback) {\n    let request = requestAnimationFrame;\n    let cancel: typeof cancelAnimationFrame | undefined = cancelAnimationFrame;\n    const { delegate } = animationFrameProvider;\n    if (delegate) {\n      request = delegate.requestAnimationFrame;\n      cancel = delegate.cancelAnimationFrame;\n    }\n    const handle = request((timestamp) => {\n      // Clear the cancel function. The request has been fulfilled, so\n      // attempting to cancel the request upon unsubscription would be\n      // pointless.\n      cancel = undefined;\n      callback(timestamp);\n    });\n    return new Subscription(() => cancel?.(handle));\n  },\n  requestAnimationFrame(...args) {\n    const { delegate } = animationFrameProvider;\n    return (delegate?.requestAnimationFrame || requestAnimationFrame)(...args);\n  },\n  cancelAnimationFrame(...args) {\n    const { delegate } = animationFrameProvider;\n    return (delegate?.cancelAnimationFrame || cancelAnimationFrame)(...args);\n  },\n  delegate: undefined,\n};\n", "import { Observable } from '../../Observable';\nimport { TimestampProvider } from '../../types';\nimport { performanceTimestampProvider } from '../../scheduler/performanceTimestampProvider';\nimport { animationFrameProvider } from '../../scheduler/animationFrameProvider';\n\n/**\n * An observable of animation frames\n *\n * Emits the amount of time elapsed since subscription and the timestamp on each animation frame.\n * Defaults to milliseconds provided to the requestAnimationFrame's callback. Does not end on its own.\n *\n * Every subscription will start a separate animation loop. Since animation frames are always scheduled\n * by the browser to occur directly before a repaint, scheduling more than one animation frame synchronously\n * should not be much different or have more overhead than looping over an array of events during\n * a single animation frame. However, if for some reason the developer would like to ensure the\n * execution of animation-related handlers are all executed during the same task by the engine,\n * the `share` operator can be used.\n *\n * This is useful for setting up animations with RxJS.\n *\n * ## Examples\n *\n * Tweening a div to move it on the screen\n *\n * ```ts\n * import { animationFrames, map, takeWhile, endWith } from 'rxjs';\n *\n * function tween(start: number, end: number, duration: number) {\n *   const diff = end - start;\n *   return animationFrames().pipe(\n *     // Figure out what percentage of time has passed\n *     map(({ elapsed }) => elapsed / duration),\n *     // Take the vector while less than 100%\n *     takeWhile(v => v < 1),\n *     // Finish with 100%\n *     endWith(1),\n *     // Calculate the distance traveled between start and end\n *     map(v => v * diff + start)\n *   );\n * }\n *\n * // Setup a div for us to move around\n * const div = document.createElement('div');\n * document.body.appendChild(div);\n * div.style.position = 'absolute';\n * div.style.width = '40px';\n * div.style.height = '40px';\n * div.style.backgroundColor = 'lime';\n * div.style.transform = 'translate3d(10px, 0, 0)';\n *\n * tween(10, 200, 4000).subscribe(x => {\n *   div.style.transform = `translate3d(${ x }px, 0, 0)`;\n * });\n * ```\n *\n * Providing a custom timestamp provider\n *\n * ```ts\n * import { animationFrames, TimestampProvider } from 'rxjs';\n *\n * // A custom timestamp provider\n * let now = 0;\n * const customTSProvider: TimestampProvider = {\n *   now() { return now++; }\n * };\n *\n * const source$ = animationFrames(customTSProvider);\n *\n * // Log increasing numbers 0...1...2... on every animation frame.\n * source$.subscribe(({ elapsed }) => console.log(elapsed));\n * ```\n *\n * @param timestampProvider An object with a `now` method that provides a numeric timestamp\n */\nexport function animationFrames(timestampProvider?: TimestampProvider) {\n  return timestampProvider ? animationFramesFactory(timestampProvider) : DEFAULT_ANIMATION_FRAMES;\n}\n\n/**\n * Does the work of creating the observable for `animationFrames`.\n * @param timestampProvider The timestamp provider to use to create the observable\n */\nfunction animationFramesFactory(timestampProvider?: TimestampProvider) {\n  return new Observable<{ timestamp: number; elapsed: number }>((subscriber) => {\n    // If no timestamp provider is specified, use performance.now() - as it\n    // will return timestamps 'compatible' with those passed to the run\n    // callback and won't be affected by NTP adjustments, etc.\n    const provider = timestampProvider || performanceTimestampProvider;\n\n    // Capture the start time upon subscription, as the run callback can remain\n    // queued for a considerable period of time and the elapsed time should\n    // represent the time elapsed since subscription - not the time since the\n    // first rendered animation frame.\n    const start = provider.now();\n\n    let id = 0;\n    const run = () => {\n      if (!subscriber.closed) {\n        id = animationFrameProvider.requestAnimationFrame((timestamp: DOMHighResTimeStamp | number) => {\n          id = 0;\n          // Use the provider's timestamp to calculate the elapsed time. Note that\n          // this means - if the caller hasn't passed a provider - that\n          // performance.now() will be used instead of the timestamp that was\n          // passed to the run callback. The reason for this is that the timestamp\n          // passed to the callback can be earlier than the start time, as it\n          // represents the time at which the browser decided it would render any\n          // queued frames - and that time can be earlier the captured start time.\n          const now = provider.now();\n          subscriber.next({\n            timestamp: timestampProvider ? now : timestamp,\n            elapsed: now - start,\n          });\n          run();\n        });\n      }\n    };\n\n    run();\n\n    return () => {\n      if (id) {\n        animationFrameProvider.cancelAnimationFrame(id);\n      }\n    };\n  });\n}\n\n/**\n * In the common case, where the timestamp provided by the rAF API is used,\n * we use this shared observable to reduce overhead.\n */\nconst DEFAULT_ANIMATION_FRAMES = animationFramesFactory();\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface ObjectUnsubscribedError extends Error {}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ObjectUnsubscribedError;\n}\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = createErrorClass(\n  (_super) =>\n    function ObjectUnsubscribedErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ObjectUnsubscribedError';\n      this.message = 'object unsubscribed';\n    }\n);\n", "import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n  closed = false;\n\n  private currentObservers: Observer<T>[] | null = null;\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  observers: Observer<T>[] = [];\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  isStopped = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  hasError = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  thrownError: any = null;\n\n  /**\n   * Creates a \"subject\" by basically gluing an observer to an observable.\n   *\n   * @nocollapse\n   * @deprecated Recommended you do not use. Will be removed at some point in the future. Plans for replacement still under discussion.\n   */\n  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  };\n\n  constructor() {\n    // NOTE: This must be here to obscure Observable's constructor.\n    super();\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = operator as any;\n    return subject as any;\n  }\n\n  /** @internal */\n  protected _throwIfClosed() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n  }\n\n  next(value: T) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        if (!this.currentObservers) {\n          this.currentObservers = Array.from(this.observers);\n        }\n        for (const observer of this.currentObservers) {\n          observer.next(value);\n        }\n      }\n    });\n  }\n\n  error(err: any) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.hasError = this.isStopped = true;\n        this.thrownError = err;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.error(err);\n        }\n      }\n    });\n  }\n\n  complete() {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.isStopped = true;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.complete();\n        }\n      }\n    });\n  }\n\n  unsubscribe() {\n    this.isStopped = this.closed = true;\n    this.observers = this.currentObservers = null!;\n  }\n\n  get observed() {\n    return this.observers?.length > 0;\n  }\n\n  /** @internal */\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    this._throwIfClosed();\n    return super._trySubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._checkFinalizedStatuses(subscriber);\n    return this._innerSubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _innerSubscribe(subscriber: Subscriber<any>) {\n    const { hasError, isStopped, observers } = this;\n    if (hasError || isStopped) {\n      return EMPTY_SUBSCRIPTION;\n    }\n    this.currentObservers = null;\n    observers.push(subscriber);\n    return new Subscription(() => {\n      this.currentObservers = null;\n      arrRemove(observers, subscriber);\n    });\n  }\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<any>) {\n    const { hasError, thrownError, isStopped } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped) {\n      subscriber.complete();\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create custom Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable: any = new Observable<T>();\n    observable.source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(\n    /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n    public destination?: Observer<T>,\n    source?: Observable<T>\n  ) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    this.destination?.next?.(value);\n  }\n\n  error(err: any) {\n    this.destination?.error?.(err);\n  }\n\n  complete() {\n    this.destination?.complete?.();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    return this.source?.subscribe(subscriber) ?? EMPTY_SUBSCRIPTION;\n  }\n}\n", "import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * A variant of Subject that requires an initial value and emits its current\n * value whenever it is subscribed to.\n *\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    !subscription.closed && subscriber.next(this._value);\n    return subscription;\n  }\n\n  getValue(): T {\n    const { hasError, thrownError, _value } = this;\n    if (hasError) {\n      throw thrownError;\n    }\n    this._throwIfClosed();\n    return _value;\n  }\n\n  next(value: T): void {\n    super.next((this._value = value));\n  }\n}\n", "import { TimestampProvider } from '../types';\n\ninterface DateTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const dateTimestampProvider: DateTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (dateTimestampProvider.delegate || Date).now();\n  },\n  delegate: undefined,\n};\n", "import { Subject } from './Subject';\nimport { TimestampProvider } from './types';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * A variant of {@link Subject} that \"replays\" old values to new subscribers by emitting them when they first subscribe.\n *\n * `ReplaySubject` has an internal buffer that will store a specified number of values that it has observed. Like `Subject`,\n * `ReplaySubject` \"observes\" values by having them passed to its `next` method. When it observes a value, it will store that\n * value for a time determined by the configuration of the `ReplaySubject`, as passed to its constructor.\n *\n * When a new subscriber subscribes to the `ReplaySubject` instance, it will synchronously emit all values in its buffer in\n * a First-In-First-Out (FIFO) manner. The `ReplaySubject` will also complete, if it has observed completion; and it will\n * error if it has observed an error.\n *\n * There are two main configuration items to be concerned with:\n *\n * 1. `bufferSize` - This will determine how many items are stored in the buffer, defaults to infinite.\n * 2. `windowTime` - The amount of time to hold a value in the buffer before removing it from the buffer.\n *\n * Both configurations may exist simultaneously. So if you would like to buffer a maximum of 3 values, as long as the values\n * are less than 2 seconds old, you could do so with a `new ReplaySubject(3, 2000)`.\n *\n * ### Differences with BehaviorSubject\n *\n * `BehaviorSubject` is similar to `new ReplaySubject(1)`, with a couple of exceptions:\n *\n * 1. `BehaviorSubject` comes \"primed\" with a single value upon construction.\n * 2. `ReplaySubject` will replay values, even after observing an error, where `BehaviorSubject` will not.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n * @see {@link shareReplay}\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _buffer: (T | number)[] = [];\n  private _infiniteTimeWindow = true;\n\n  /**\n   * @param bufferSize The size of the buffer to replay on subscription\n   * @param windowTime The amount of time the buffered items will stay buffered\n   * @param timestampProvider An object with a `now()` method that provides the current timestamp. This is used to\n   * calculate the amount of time something has been buffered.\n   */\n  constructor(\n    private _bufferSize = Infinity,\n    private _windowTime = Infinity,\n    private _timestampProvider: TimestampProvider = dateTimestampProvider\n  ) {\n    super();\n    this._infiniteTimeWindow = _windowTime === Infinity;\n    this._bufferSize = Math.max(1, _bufferSize);\n    this._windowTime = Math.max(1, _windowTime);\n  }\n\n  next(value: T): void {\n    const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\n    if (!isStopped) {\n      _buffer.push(value);\n      !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n    }\n    this._trimBuffer();\n    super.next(value);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._trimBuffer();\n\n    const subscription = this._innerSubscribe(subscriber);\n\n    const { _infiniteTimeWindow, _buffer } = this;\n    // We use a copy here, so reentrant code does not mutate our array while we're\n    // emitting it to a new subscriber.\n    const copy = _buffer.slice();\n    for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n      subscriber.next(copy[i] as T);\n    }\n\n    this._checkFinalizedStatuses(subscriber);\n\n    return subscription;\n  }\n\n  private _trimBuffer() {\n    const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\n    // If we don't have an infinite buffer size, and we're over the length,\n    // use splice to truncate the old buffer values off. Note that we have to\n    // double the size for instances where we're not using an infinite time window\n    // because we're storing the values and the timestamps in the same array.\n    const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n    _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n\n    // Now, if we're not in an infinite time window, remove all values where the time is\n    // older than what is allowed.\n    if (!_infiniteTimeWindow) {\n      const now = _timestampProvider.now();\n      let last = 0;\n      // Search the array for the first timestamp that isn't expired and\n      // truncate the buffer up to that point.\n      for (let i = 1; i < _buffer.length && (_buffer[i] as number) <= now; i += 2) {\n        last = i;\n      }\n      last && _buffer.splice(0, last + 1);\n    }\n  }\n}\n", "import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\n\n/**\n * A variant of Subject that only emits a value when it completes. It will emit\n * its latest value to all its observers on completion.\n *\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private _value: T | null = null;\n  private _hasValue = false;\n  private _isComplete = false;\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<T>) {\n    const { hasError, _hasValue, _value, thrownError, isStopped, _isComplete } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped || _isComplete) {\n      _hasValue && subscriber.next(_value!);\n      subscriber.complete();\n    }\n  }\n\n  next(value: T): void {\n    if (!this.isStopped) {\n      this._value = value;\n      this._hasValue = true;\n    }\n  }\n\n  complete(): void {\n    const { _hasValue, _value, _isComplete } = this;\n    if (!_isComplete) {\n      this._isComplete = true;\n      _hasValue && super.next(_value!);\n      super.complete();\n    }\n  }\n}\n", "import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n", "import type { TimerHandle } from './timerHandle';\ntype SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearIntervalFunction = (handle: TimerHandle) => void;\n\ninterface IntervalProvider {\n  setInterval: SetIntervalFunction;\n  clearInterval: ClearIntervalFunction;\n  delegate:\n    | {\n        setInterval: SetIntervalFunction;\n        clearInterval: ClearIntervalFunction;\n      }\n    | undefined;\n}\n\nexport const intervalProvider: IntervalProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setInterval(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = intervalProvider;\n    if (delegate?.setInterval) {\n      return delegate.setInterval(handler, timeout, ...args);\n    }\n    return setInterval(handler, timeout, ...args);\n  },\n  clearInterval(handle) {\n    const { delegate } = intervalProvider;\n    return (delegate?.clearInterval || clearInterval)(handle as any);\n  },\n  delegate: undefined,\n};\n", "import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncAction<T> extends Action<T> {\n  public id: TimerHandle | undefined;\n  public state?: T;\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id ?? this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, _id?: TimerHandle, delay: number = 0): TimerHandle {\n    return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(_scheduler: AsyncScheduler, id?: TimerHandle, delay: number | null = 0): TimerHandle | undefined {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay != null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    if (id != null) {\n      intervalProvider.clearInterval(id);\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, _delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      // HACK: Since code elsewhere is relying on the \"truthiness\" of the\n      // return here, we can't have it return \"\" or 0 or false.\n      // TODO: Clean this up when we refactor schedulers mid-version-8 or so.\n      errorValue = e ? e : new Error('Scheduled action threw falsy error');\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      const { id, scheduler } = this;\n      const { actions } = scheduler;\n\n      this.work = this.state = this.scheduler = null!;\n      this.pending = false;\n\n      arrRemove(actions, this);\n      if (id != null) {\n        this.id = this.recycleAsyncId(scheduler, id, null);\n      }\n\n      this.delay = null!;\n      super.unsubscribe();\n    }\n  }\n}\n", "let nextHandle = 1;\n// The promise needs to be created lazily otherwise it won't be patched by Zones\nlet resolved: Promise<any>;\nconst activeHandles: { [key: number]: any } = {};\n\n/**\n * Finds the handle in the list of active handles, and removes it.\n * Returns `true` if found, `false` otherwise. Used both to clear\n * Immediate scheduled tasks, and to identify if a task should be scheduled.\n */\nfunction findAndClearHandle(handle: number): boolean {\n  if (handle in activeHandles) {\n    delete activeHandles[handle];\n    return true;\n  }\n  return false;\n}\n\n/**\n * Helper functions to schedule and unschedule microtasks.\n */\nexport const Immediate = {\n  setImmediate(cb: () => void): number {\n    const handle = nextHandle++;\n    activeHandles[handle] = true;\n    if (!resolved) {\n      resolved = Promise.resolve();\n    }\n    resolved.then(() => findAndClearHandle(handle) && cb());\n    return handle;\n  },\n\n  clearImmediate(handle: number): void {\n    findAndClearHandle(handle);\n  },\n};\n\n/**\n * Used for internal testing purposes only. Do not export from library.\n */\nexport const TestTools = {\n  pending() {\n    return Object.keys(activeHandles).length;\n  }\n};\n", "import { Immediate } from '../util/Immediate';\nimport type { TimerHandle } from './timerHandle';\nconst { setImmediate, clearImmediate } = Immediate;\n\ntype SetImmediateFunction = (handler: () => void, ...args: any[]) => TimerHandle;\ntype ClearImmediateFunction = (handle: TimerHandle) => void;\n\ninterface ImmediateProvider {\n  setImmediate: SetImmediateFunction;\n  clearImmediate: ClearImmediateFunction;\n  delegate:\n    | {\n        setImmediate: SetImmediateFunction;\n        clearImmediate: ClearImmediateFunction;\n      }\n    | undefined;\n}\n\nexport const immediateProvider: ImmediateProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setImmediate(...args) {\n    const { delegate } = immediateProvider;\n    return (delegate?.setImmediate || setImmediate)(...args);\n  },\n  clearImmediate(handle) {\n    const { delegate } = immediateProvider;\n    return (delegate?.clearImmediate || clearImmediate)(handle as any);\n  },\n  delegate: undefined,\n};\n", "import { AsyncAction } from './AsyncAction';\nimport { AsapScheduler } from './AsapScheduler';\nimport { SchedulerAction } from '../types';\nimport { immediateProvider } from './immediateProvider';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsapAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: AsapScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AsapScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If a microtask has already been scheduled, don't schedule another\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n    // the current scheduled microtask id.\n    return scheduler._scheduled || (scheduler._scheduled = immediateProvider.setImmediate(scheduler.flush.bind(scheduler, undefined)));\n  }\n\n  protected recycleAsyncId(scheduler: AsapScheduler, id?: TimerHandle, delay: number = 0): TimerHandle | undefined {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if (delay != null ? delay > 0 : this.delay > 0) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue has no remaining actions with the same async id,\n    // cancel the requested microtask and set the scheduled flag to undefined\n    // so the next AsapAction will request its own.\n    const { actions } = scheduler;\n    if (id != null && actions[actions.length - 1]?.id !== id) {\n      immediateProvider.clearImmediate(id);\n      if (scheduler._scheduled === id) {\n        scheduler._scheduled = undefined;\n      }\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n", "import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}. Will be made internal in v8.\n */\nexport class Scheduler implements SchedulerLike {\n  public static now: () => number = dateTimestampProvider.now;\n\n  constructor(private schedulerActionCtor: typeof Action, now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.schedulerActionCtor<T>(this, work).schedule(state, delay);\n  }\n}\n", "import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @internal\n   */\n  public _active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @internal\n   */\n  public _scheduled: TimerHandle | undefined;\n\n  constructor(SchedulerAction: typeof Action, now: () => number = Scheduler.now) {\n    super(SchedulerAction, now);\n  }\n\n  public flush(action: AsyncAction<any>): void {\n    const { actions } = this;\n\n    if (this._active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this._active = true;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions.shift()!)); // exhaust the scheduler queue\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions.shift()!)) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n", "import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n    this._active = true;\n    // The async id that effects a call to flush is stored in _scheduled.\n    // Before executing an action, it's necessary to check the action's async\n    // id to determine whether it's supposed to be executed in the current\n    // flush.\n    // Previous implementations of this method used a count to determine this,\n    // but that was unsound, as actions that are unsubscribed - i.e. cancelled -\n    // are removed from the actions array and that can shift actions that are\n    // scheduled to be executed in a subsequent flush into positions at which\n    // they are executed within the current flush.\n    const flushId = this._scheduled;\n    this._scheduled = undefined;\n\n    const { actions } = this;\n    let error: any;\n    action = action || actions.shift()!;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions[0]) && action.id === flushId && actions.shift());\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n", "import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\n\n/**\n *\n * Asap Scheduler\n *\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\n *\n * `asap` scheduler behaves the same as {@link asyncScheduler} scheduler when you use it to delay task\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\n * code to end and then it will try to execute given task as fast as possible.\n *\n * `asap` scheduler will do its best to minimize time between end of currently executing code\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\n * some (although minimal) unwanted delay.\n *\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\n * as soon as possible, `asap` scheduler is your best bet.\n *\n * ## Example\n * Compare async and asap scheduler<\n * ```ts\n * import { asapScheduler, asyncScheduler } from 'rxjs';\n *\n * asyncScheduler.schedule(() => console.log('async')); // scheduling 'async' first...\n * asapScheduler.schedule(() => console.log('asap'));\n *\n * // Logs:\n * // \"asap\"\n * // \"async\"\n * // ... but 'asap' goes first!\n * ```\n */\n\nexport const asapScheduler = new AsapScheduler(AsapAction);\n\n/**\n * @deprecated Renamed to {@link asapScheduler}. Will be removed in v8.\n */\nexport const asap = asapScheduler;\n", "import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asapScheduler} scheduler.\n *\n * ## Examples\n * Use async scheduler to delay task\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * const task = () => console.log('it works!');\n *\n * asyncScheduler.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n * ```\n *\n * Use async scheduler to repeat task in intervals\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * asyncScheduler.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n * ```\n */\n\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\n\n/**\n * @deprecated Renamed to {@link asyncScheduler}. Will be removed in v8.\n */\nexport const async = asyncScheduler;\n", "import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\nimport { SchedulerAction } from '../types';\nimport { TimerHandle } from './timerHandle';\n\nexport class QueueAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: QueueScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return delay > 0 || this.closed ? super.execute(state, delay) : this._execute(state, delay);\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n\n    if ((delay != null && delay > 0) || (delay == null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n\n    // Otherwise flush the scheduler starting with this action.\n    scheduler.flush(this);\n\n    // HACK: In the past, this was returning `void`. However, `void` isn't a valid\n    // `TimerHandle`, and generally the return value here isn't really used. So the\n    // compromise is to return `0` which is both \"falsy\" and a valid `TimerHandle`,\n    // as opposed to refactoring every other instanceo of `requestAsyncId`.\n    return 0;\n  }\n}\n", "import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n", "import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link asyncScheduler} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * ## Examples\n * Schedule recursively first, then do something\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(() => {\n *   queueScheduler.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n * ```\n *\n * Reschedule itself recursively\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n * ```\n */\n\nexport const queueScheduler = new QueueScheduler(QueueAction);\n\n/**\n * @deprecated Renamed to {@link queueScheduler}. Will be removed in v8.\n */\nexport const queue = queueScheduler;\n", "import { AsyncAction } from './AsyncAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nimport { SchedulerAction } from '../types';\nimport { animationFrameProvider } from './animationFrameProvider';\nimport { TimerHandle } from './timerHandle';\n\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: AnimationFrameScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return scheduler._scheduled || (scheduler._scheduled = animationFrameProvider.requestAnimationFrame(() => scheduler.flush(undefined)));\n  }\n\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: TimerHandle, delay: number = 0): TimerHandle | undefined {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if (delay != null ? delay > 0 : this.delay > 0) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue has no remaining actions with the same async id,\n    // cancel the requested animation frame and set the scheduled flag to\n    // undefined so the next AnimationFrameAction will request its own.\n    const { actions } = scheduler;\n    if (id != null && actions[actions.length - 1]?.id !== id) {\n      animationFrameProvider.cancelAnimationFrame(id as number);\n      scheduler._scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n", "import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AnimationFrameScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n    this._active = true;\n    // The async id that effects a call to flush is stored in _scheduled.\n    // Before executing an action, it's necessary to check the action's async\n    // id to determine whether it's supposed to be executed in the current\n    // flush.\n    // Previous implementations of this method used a count to determine this,\n    // but that was unsound, as actions that are unsubscribed - i.e. cancelled -\n    // are removed from the actions array and that can shift actions that are\n    // scheduled to be executed in a subsequent flush into positions at which\n    // they are executed within the current flush.\n    const flushId = this._scheduled;\n    this._scheduled = undefined;\n\n    const { actions } = this;\n    let error: any;\n    action = action || actions.shift()!;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions[0]) && action.id === flushId && actions.shift());\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n", "import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\n\n/**\n *\n * Animation Frame Scheduler\n *\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\n *\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link asyncScheduler} scheduler\n * behaviour.\n *\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\n * It makes sure scheduled task will happen just before next browser content repaint,\n * thus performing animations as efficiently as possible.\n *\n * ## Example\n * Schedule div height animation\n * ```ts\n * // html: <div style=\"background: #0ff;\"></div>\n * import { animationFrameScheduler } from 'rxjs';\n *\n * const div = document.querySelector('div');\n *\n * animationFrameScheduler.schedule(function(height) {\n *   div.style.height = height + \"px\";\n *\n *   this.schedule(height + 1);  // `this` references currently executing Action,\n *                               // which we reschedule with new state\n * }, 0, 0);\n *\n * // You will see a div element growing in height\n * ```\n */\n\nexport const animationFrameScheduler = new AnimationFrameScheduler(AnimationFrameAction);\n\n/**\n * @deprecated Renamed to {@link animationFrameScheduler}. Will be removed in v8.\n */\nexport const animationFrame = animationFrameScheduler;\n", "import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { SchedulerAction } from '../types';\nimport { TimerHandle } from './timerHandle';\n\nexport class VirtualTimeScheduler extends AsyncScheduler {\n  /** @deprecated Not used in VirtualTimeScheduler directly. Will be removed in v8. */\n  static frameTimeFactor = 10;\n\n  /**\n   * The current frame for the state of the virtual scheduler instance. The difference\n   * between two \"frames\" is synonymous with the passage of \"virtual time units\". So if\n   * you record `scheduler.frame` to be `1`, then later, observe `scheduler.frame` to be at `11`,\n   * that means `10` virtual time units have passed.\n   */\n  public frame: number = 0;\n\n  /**\n   * Used internally to examine the current virtual action index being processed.\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  public index: number = -1;\n\n  /**\n   * This creates an instance of a `VirtualTimeScheduler`. Experts only. The signature of\n   * this constructor is likely to change in the long run.\n   *\n   * @param schedulerActionCtor The type of Action to initialize when initializing actions during scheduling.\n   * @param maxFrames The maximum number of frames to process before stopping. Used to prevent endless flush cycles.\n   */\n  constructor(schedulerActionCtor: typeof AsyncAction = VirtualAction as any, public maxFrames: number = Infinity) {\n    super(schedulerActionCtor, () => this.frame);\n  }\n\n  /**\n   * Prompt the Scheduler to execute all of its queued actions, therefore\n   * clearing its queue.\n   * @return {void}\n   */\n  public flush(): void {\n    const { actions, maxFrames } = this;\n    let error: any;\n    let action: AsyncAction<any> | undefined;\n\n    while ((action = actions[0]) && action.delay <= maxFrames) {\n      actions.shift();\n      this.frame = action.delay;\n\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    }\n\n    if (error) {\n      while ((action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n\nexport class VirtualAction<T> extends AsyncAction<T> {\n  protected active: boolean = true;\n\n  constructor(\n    protected scheduler: VirtualTimeScheduler,\n    protected work: (this: SchedulerAction<T>, state?: T) => void,\n    protected index: number = (scheduler.index += 1)\n  ) {\n    super(scheduler, work);\n    this.index = scheduler.index = index;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (Number.isFinite(delay)) {\n      if (!this.id) {\n        return super.schedule(state, delay);\n      }\n      this.active = false;\n      // If an action is rescheduled, we save allocations by mutating its state,\n      // pushing it to the end of the scheduler queue, and recycling the action.\n      // But since the VirtualTimeScheduler is used for testing, VirtualActions\n      // must be immutable so they can be inspected later.\n      const action = new VirtualAction(this.scheduler, this.work);\n      this.add(action);\n      return action.schedule(state, delay);\n    } else {\n      // If someone schedules something with Infinity, it'll never happen. So we\n      // don't even schedule it.\n      return Subscription.EMPTY;\n    }\n  }\n\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle {\n    this.delay = scheduler.frame + delay;\n    const { actions } = scheduler;\n    actions.push(this);\n    (actions as Array<VirtualAction<T>>).sort(VirtualAction.sortActions);\n    return 1;\n  }\n\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle | undefined {\n    return undefined;\n  }\n\n  protected _execute(state: T, delay: number): any {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n\n  private static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * A simple Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.</span>\n *\n * ![](empty.png)\n *\n * A simple Observable that only emits the complete notification. It can be used\n * for composing with other Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n *\n * Log complete notification\n *\n * ```ts\n * import { EMPTY } from 'rxjs';\n *\n * EMPTY.subscribe({\n *   next: () => console.log('Next'),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Outputs\n * // Complete!\n * ```\n *\n * Emit the number 7, then complete\n *\n * ```ts\n * import { EMPTY, startWith } from 'rxjs';\n *\n * const result = EMPTY.pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n *\n * // Outputs\n * // 7\n * ```\n *\n * Map and flatten only odd numbers to the sequence `'a'`, `'b'`, `'c'`\n *\n * ```ts\n * import { interval, mergeMap, of, EMPTY } from 'rxjs';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : EMPTY),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval, e.g. (0, 1, 2, 3, ...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1, print a, b, c (each on its own)\n * // if x % 2 is not equal to 1, nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link NEVER}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const EMPTY = new Observable<never>((subscriber) => subscriber.complete());\n\n/**\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @deprecated Replaced with the {@link EMPTY} constant or {@link scheduled} (e.g. `scheduled([], scheduler)`). Will be removed in v8.\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n", "import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && isFunction(value.schedule);\n}\n", "import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\nimport { isScheduler } from './isScheduler';\n\nfunction last<T>(arr: T[]): T | undefined {\n  return arr[arr.length - 1];\n}\n\nexport function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined {\n  return isFunction(last(args)) ? args.pop() : undefined;\n}\n\nexport function popScheduler(args: any[]): SchedulerLike | undefined {\n  return isScheduler(last(args)) ? args.pop() : undefined;\n}\n\nexport function popNumber(args: any[], defaultValue: number): number {\n  return typeof last(args) === 'number' ? args.pop()! : defaultValue;\n}\n", "export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');", "import { isFunction } from \"./isFunction\";\n\n/**\n * Tests to see if the object is \"thennable\".\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return isFunction(value?.then);\n}\n", "import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return isFunction(input[Symbol_observable]);\n}\n", "import { isFunction } from './isFunction';\n\nexport function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {\n  return Symbol.asyncIterator && isFunction(obj?.[Symbol.asyncIterator]);\n}\n", "/**\n * Creates the TypeError to throw if an invalid object is passed to `from` or `scheduled`.\n * @param input The object that was passed.\n */\nexport function createInvalidObservableTypeError(input: any) {\n  // TODO: We should create error codes that can be looked up, so this can be less verbose.\n  return new TypeError(\n    `You provided ${\n      input !== null && typeof input === 'object' ? 'an invalid object' : `'${input}'`\n    } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`\n  );\n}\n", "export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n", "import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return isFunction(input?.[Symbol_iterator]);\n}\n", "import { ReadableStreamLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport async function* readableStreamLikeToAsyncGenerator<T>(readableStream: ReadableStreamLike<T>): AsyncGenerator<T> {\n  const reader = readableStream.getReader();\n  try {\n    while (true) {\n      const { value, done } = await reader.read();\n      if (done) {\n        return;\n      }\n      yield value!;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {\n  // We don't want to use instanceof checks because they would return\n  // false for instances from another Realm, like an <iframe>.\n  return isFunction(obj?.getReader);\n}\n", "import { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { ObservableInput, ObservedValueOf, ReadableStreamLike } from '../types';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { Subscriber } from '../Subscriber';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function innerFrom<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\nexport function innerFrom<T>(input: ObservableInput<T>): Observable<T> {\n  if (input instanceof Observable) {\n    return input;\n  }\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return fromInteropObservable(input);\n    }\n    if (isArrayLike(input)) {\n      return fromArrayLike(input);\n    }\n    if (isPromise(input)) {\n      return fromPromise(input);\n    }\n    if (isAsyncIterable(input)) {\n      return fromAsyncIterable(input);\n    }\n    if (isIterable(input)) {\n      return fromIterable(input);\n    }\n    if (isReadableStreamLike(input)) {\n      return fromReadableStreamLike(input);\n    }\n  }\n\n  throw createInvalidObservableTypeError(input);\n}\n\n/**\n * Creates an RxJS Observable from an object that implements `Symbol.observable`.\n * @param obj An object that properly implements `Symbol.observable`.\n */\nexport function fromInteropObservable<T>(obj: any) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    const obs = obj[Symbol_observable]();\n    if (isFunction(obs.subscribe)) {\n      return obs.subscribe(subscriber);\n    }\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  });\n}\n\n/**\n * Synchronously emits the values of an array like and completes.\n * This is exported because there are creation functions and operators that need to\n * make direct use of the same logic, and there's no reason to make them run through\n * `from` conditionals because we *know* they're dealing with an array.\n * @param array The array to emit values from\n */\nexport function fromArrayLike<T>(array: ArrayLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    // Loop over the array and emit each value. Note two things here:\n    // 1. We're making sure that the subscriber is not closed on each loop.\n    //    This is so we don't continue looping over a very large array after\n    //    something like a `take`, `takeWhile`, or other synchronous unsubscription\n    //    has already unsubscribed.\n    // 2. In this form, reentrant code can alter that array we're looping over.\n    //    This is a known issue, but considered an edge case. The alternative would\n    //    be to copy the array before executing the loop, but this has\n    //    performance implications.\n    for (let i = 0; i < array.length && !subscriber.closed; i++) {\n      subscriber.next(array[i]);\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromPromise<T>(promise: PromiseLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    promise\n      .then(\n        (value) => {\n          if (!subscriber.closed) {\n            subscriber.next(value);\n            subscriber.complete();\n          }\n        },\n        (err: any) => subscriber.error(err)\n      )\n      .then(null, reportUnhandledError);\n  });\n}\n\nexport function fromIterable<T>(iterable: Iterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    for (const value of iterable) {\n      subscriber.next(value);\n      if (subscriber.closed) {\n        return;\n      }\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromAsyncIterable<T>(asyncIterable: AsyncIterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    process(asyncIterable, subscriber).catch((err) => subscriber.error(err));\n  });\n}\n\nexport function fromReadableStreamLike<T>(readableStream: ReadableStreamLike<T>) {\n  return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\n\nasync function process<T>(asyncIterable: AsyncIterable<T>, subscriber: Subscriber<T>) {\n  for await (const value of asyncIterable) {\n    subscriber.next(value);\n    // A side-effect may have closed our subscriber,\n    // check before the next iteration.\n    if (subscriber.closed) {\n      return;\n    }\n  }\n  subscriber.complete();\n}\n", "import { Subscription } from '../Subscription';\nimport { SchedulerAction, SchedulerLike } from '../types';\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay: number,\n  repeat: true\n): void;\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay?: number,\n  repeat?: false\n): Subscription;\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay = 0,\n  repeat = false\n): Subscription | void {\n  const scheduleSubscription = scheduler.schedule(function (this: SchedulerAction<any>) {\n    work();\n    if (repeat) {\n      parentSubscription.add(this.schedule(null, delay));\n    } else {\n      this.unsubscribe();\n    }\n  }, delay);\n\n  parentSubscription.add(scheduleSubscription);\n\n  if (!repeat) {\n    // Because user-land scheduler implementations are unlikely to properly reuse\n    // Actions for repeat scheduling, we can't trust that the returned subscription\n    // will control repeat subscription scenarios. So we're trying to avoid using them\n    // incorrectly within this library.\n    return scheduleSubscription;\n  }\n}\n", "/** @prettier */\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * ## Example\n *\n * Ensure values in subscribe are called just before browser repaint\n *\n * ```ts\n * import { interval, observeOn, animationFrameScheduler } from 'rxjs';\n *\n * const someDiv = document.createElement('div');\n * someDiv.style.cssText = 'width: 200px;background: #09c';\n * document.body.appendChild(someDiv);\n * const intervals = interval(10);      // Intervals are scheduled\n *                                      // with async scheduler by default...\n * intervals.pipe(\n *   observeOn(animationFrameScheduler) // ...but we will observe on animationFrame\n * )                                    // scheduler to ensure smooth animation.\n * .subscribe(val => {\n *   someDiv.style.height = val + 'px';\n * });\n * ```\n *\n * @see {@link delay}\n *\n * @param scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param delay Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return A function that returns an Observable that emits the same\n * notifications as the source Observable, but with provided scheduler.\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => executeSchedule(subscriber, scheduler, () => subscriber.next(value), delay),\n        () => executeSchedule(subscriber, scheduler, () => subscriber.complete(), delay),\n        (err) => executeSchedule(subscriber, scheduler, () => subscriber.error(err), delay)\n      )\n    );\n  });\n}\n", "import { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified {@link SchedulerLike}.\n *\n * With `subscribeOn` you can decide what type of scheduler a specific Observable will be using when it is subscribed to.\n *\n * Schedulers control the speed and order of emissions to observers from an Observable stream.\n *\n * ![](subscribeOn.png)\n *\n * ## Example\n *\n * Given the following code:\n *\n * ```ts\n * import { of, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3);\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * // 6\n * ```\n *\n * Both Observable `a` and `b` will emit their values directly and synchronously once they are subscribed to.\n *\n * If we instead use the `subscribeOn` operator declaring that we want to use the {@link asyncScheduler} for values emitted by Observable `a`:\n *\n * ```ts\n * import { of, subscribeOn, asyncScheduler, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3).pipe(subscribeOn(asyncScheduler));\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 4\n * // 5\n * // 6\n * // 1\n * // 2\n * // 3\n * ```\n *\n * The reason for this is that Observable `b` emits its values directly and synchronously like before\n * but the emissions from `a` are scheduled on the event loop because we are now using the {@link asyncScheduler} for that specific Observable.\n *\n * @param scheduler The {@link SchedulerLike} to perform subscription actions on.\n * @param delay A delay to pass to the scheduler to delay subscriptions\n * @return A function that returns an Observable modified so that its\n * subscriptions happen on the specified {@link SchedulerLike}.\n */\nexport function subscribeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    subscriber.add(scheduler.schedule(() => source.subscribe(subscriber), delay));\n  });\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { InteropObservable, SchedulerLike } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { SchedulerLike } from '../types';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    // The current array index.\n    let i = 0;\n    // Start iterating over the array like on a schedule.\n    return scheduler.schedule(function () {\n      if (i === input.length) {\n        // If we have hit the end of the array like in the\n        // previous job, we can complete.\n        subscriber.complete();\n      } else {\n        // Otherwise let's next the value at the current index,\n        // then increment our index.\n        subscriber.next(input[i++]);\n        // If the last emission didn't cause us to close the subscriber\n        // (via take or some side effect), reschedule the job and we'll\n        // make another pass.\n        if (!subscriber.closed) {\n          this.schedule();\n        }\n      }\n    });\n  });\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\n\n/**\n * Used in {@link scheduled} to create an observable from an Iterable.\n * @param input The iterable to create an observable from\n * @param scheduler The scheduler to use\n */\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    let iterator: Iterator<T, T>;\n\n    // Schedule the initial creation of the iterator from\n    // the iterable. This is so the code in the iterable is\n    // not called until the scheduled job fires.\n    executeSchedule(subscriber, scheduler, () => {\n      // Create the iterator.\n      iterator = (input as any)[Symbol_iterator]();\n\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          let value: T;\n          let done: boolean | undefined;\n          try {\n            // Pull the value out of the iterator\n            ({ value, done } = iterator.next());\n          } catch (err) {\n            // We got an error while pulling from the iterator\n            subscriber.error(err);\n            return;\n          }\n\n          if (done) {\n            // If it is \"done\" we just complete. This mimics the\n            // behavior of JavaScript's `for..of` consumption of\n            // iterables, which will not emit the value from an iterator\n            // result of `{ done: true: value: 'here' }`.\n            subscriber.complete();\n          } else {\n            // The iterable is not done, emit the value.\n            subscriber.next(value);\n          }\n        },\n        0,\n        true\n      );\n    });\n\n    // During finalization, if we see this iterator has a `return` method,\n    // then we know it is a Generator, and not just an Iterator. So we call\n    // the `return()` function. This will ensure that any `finally { }` blocks\n    // inside of the generator we can hit will be hit properly.\n    return () => isFunction(iterator?.return) && iterator.return();\n  });\n}\n", "import { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport function scheduleAsyncIterable<T>(input: AsyncIterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>((subscriber) => {\n    executeSchedule(subscriber, scheduler, () => {\n      const iterator = input[Symbol.asyncIterator]();\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          iterator.next().then((result) => {\n            if (result.done) {\n              // This will remove the subscriptions from\n              // the parent subscription.\n              subscriber.complete();\n            } else {\n              subscriber.next(result.value);\n            }\n          });\n        },\n        0,\n        true\n      );\n    });\n  });\n}\n", "import { SchedulerLike, ReadableStreamLike } from '../types';\nimport { Observable } from '../Observable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\n\nexport function scheduleReadableStreamLike<T>(input: ReadableStreamLike<T>, scheduler: SchedulerLike): Observable<T> {\n  return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\n}\n", "import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see {@link from}\n * @see {@link of}\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    }\n    if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }\n    if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    }\n    if (isAsyncIterable(input)) {\n      return scheduleAsyncIterable(input, scheduler);\n    }\n    if (isIterable(input)) {\n      return scheduleIterable(input, scheduler);\n    }\n    if (isReadableStreamLike(input)) {\n      return scheduleReadableStreamLike(input, scheduler);\n    }\n  }\n  throw createInvalidObservableTypeError(input);\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\nimport { innerFrom } from './innerFrom';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike | undefined): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from, take } from 'rxjs';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * With `asyncScheduler`\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // 'start'\n * // 'end'\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n}\n", "import { SchedulerLike, ValueFromArray } from '../types';\nimport { Observable } from '../Observable';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function of(value: null): Observable<null>;\nexport function of(value: undefined): Observable<undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of(scheduler: SchedulerLike): Observable<never>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of<A extends readonly unknown[]>(...valuesAndScheduler: [...A, SchedulerLike]): Observable<ValueFromArray<A>>;\n\nexport function of(): Observable<never>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function of<T>(): Observable<T>;\nexport function of<T>(value: T): Observable<T>;\nexport function of<A extends readonly unknown[]>(...values: A): Observable<ValueFromArray<A>>;\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of(10, 20, 30)\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: 10\n * // next: 20\n * // next: 30\n * // the end\n * ```\n *\n * Emit the array `[1, 2, 3]`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of([1, 2, 3])\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: [1, 2, 3]\n * // the end\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n */\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  const scheduler = popScheduler(args);\n  return from(args as T[], scheduler);\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { SchedulerLike } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * Creates an observable that will create an error instance and push it to the consumer as an error\n * immediately upon subscription.\n *\n * <span class=\"informal\">Just errors and does nothing else</span>\n *\n * ![](throw.png)\n *\n * This creation function is useful for creating an observable that will create an error and error every\n * time it is subscribed to. Generally, inside of most operators when you might want to return an errored\n * observable, this is unnecessary. In most cases, such as in the inner return of {@link concatMap},\n * {@link mergeMap}, {@link defer}, and many others, you can simply throw the error, and RxJS will pick\n * that up and notify the consumer of the error.\n *\n * ## Example\n *\n * Create a simple observable that will create a new error with a timestamp and log it\n * and the message every time you subscribe to it\n *\n * ```ts\n * import { throwError } from 'rxjs';\n *\n * let errorCount = 0;\n *\n * const errorWithTimestamp$ = throwError(() => {\n *   const error: any = new Error(`This is error number ${ ++errorCount }`);\n *   error.timestamp = Date.now();\n *   return error;\n * });\n *\n * errorWithTimestamp$.subscribe({\n *   error: err => console.log(err.timestamp, err.message)\n * });\n *\n * errorWithTimestamp$.subscribe({\n *   error: err => console.log(err.timestamp, err.message)\n * });\n *\n * // Logs the timestamp and a new error message for each subscription\n * ```\n *\n * ### Unnecessary usage\n *\n * Using `throwError` inside of an operator or creation function\n * with a callback, is usually not necessary\n *\n * ```ts\n * import { of, concatMap, timer, throwError } from 'rxjs';\n *\n * const delays$ = of(1000, 2000, Infinity, 3000);\n *\n * delays$.pipe(\n *   concatMap(ms => {\n *     if (ms < 10000) {\n *       return timer(ms);\n *     } else {\n *       // This is probably overkill.\n *       return throwError(() => new Error(`Invalid time ${ ms }`));\n *     }\n *   })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * You can just throw the error instead\n *\n * ```ts\n * import { of, concatMap, timer } from 'rxjs';\n *\n * const delays$ = of(1000, 2000, Infinity, 3000);\n *\n * delays$.pipe(\n *   concatMap(ms => {\n *     if (ms < 10000) {\n *       return timer(ms);\n *     } else {\n *       // Cleaner and easier to read for most folks.\n *       throw new Error(`Invalid time ${ ms }`);\n *     }\n *   })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * @param errorFactory A factory function that will create the error instance that is pushed.\n */\nexport function throwError(errorFactory: () => any): Observable<never>;\n\n/**\n * Returns an observable that will error with the specified error immediately upon subscription.\n *\n * @param error The error instance to emit\n * @deprecated Support for passing an error value will be removed in v8. Instead, pass a factory function to `throwError(() => new Error('test'))`. This is\n * because it will create the error at the moment it should be created and capture a more appropriate stack trace. If\n * for some reason you need to create the error ahead of time, you can still do that: `const err = new Error('test'); throwError(() => err);`.\n */\nexport function throwError(error: any): Observable<never>;\n\n/**\n * Notifies the consumer of an error using a given scheduler by scheduling it at delay `0` upon subscription.\n *\n * @param errorOrErrorFactory An error instance or error factory\n * @param scheduler A scheduler to use to schedule the error notification\n * @deprecated The `scheduler` parameter will be removed in v8.\n * Use `throwError` in combination with {@link observeOn}: `throwError(() => new Error('test')).pipe(observeOn(scheduler));`.\n * Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;\n\nexport function throwError(errorOrErrorFactory: any, scheduler?: SchedulerLike): Observable<never> {\n  const errorFactory = isFunction(errorOrErrorFactory) ? errorOrErrorFactory : () => errorOrErrorFactory;\n  const init = (subscriber: Subscriber<never>) => subscriber.error(errorFactory());\n  return new Observable(scheduler ? (subscriber) => scheduler.schedule(init as any, 0, subscriber) : init);\n}\n", "import { PartialObserver, ObservableNotification, CompleteNotification, NextNotification, ErrorNotification } from './types';\nimport { Observable } from './Observable';\nimport { EMPTY } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nimport { isFunction } from './util/isFunction';\n\n// TODO: When this enum is removed, replace it with a type alias. See #4556.\n/**\n * @deprecated Use a string literal instead. `NotificationKind` will be replaced with a type alias in v8.\n * It will not be replaced with a const enum as those are not compatible with isolated modules.\n */\nexport enum NotificationKind {\n  NEXT = 'N',\n  ERROR = 'E',\n  COMPLETE = 'C',\n}\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n * @deprecated It is NOT recommended to create instances of `Notification` directly.\n * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n * Will be removed in v8.\n */\nexport class Notification<T> {\n  /**\n   * A value signifying that the notification will \"next\" if observed. In truth,\n   * This is really synonymous with just checking `kind === \"N\"`.\n   * @deprecated Will be removed in v8. Instead, just check to see if the value of `kind` is `\"N\"`.\n   */\n  readonly hasValue: boolean;\n\n  /**\n   * Creates a \"Next\" notification object.\n   * @param kind Always `'N'`\n   * @param value The value to notify with if observed.\n   * @deprecated Internal implementation detail. Use {@link Notification#createNext createNext} instead.\n   */\n  constructor(kind: 'N', value?: T);\n  /**\n   * Creates an \"Error\" notification object.\n   * @param kind Always `'E'`\n   * @param value Always `undefined`\n   * @param error The error to notify with if observed.\n   * @deprecated Internal implementation detail. Use {@link Notification#createError createError} instead.\n   */\n  constructor(kind: 'E', value: undefined, error: any);\n  /**\n   * Creates a \"completion\" notification object.\n   * @param kind Always `'C'`\n   * @deprecated Internal implementation detail. Use {@link Notification#createComplete createComplete} instead.\n   */\n  constructor(kind: 'C');\n  constructor(public readonly kind: 'N' | 'E' | 'C', public readonly value?: T, public readonly error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n   * If the handler is missing it will do nothing. Even if the notification is an error, if\n   * there is no error handler on the observer, an error will not be thrown, it will noop.\n   * @param observer The observer to notify.\n   */\n  observe(observer: PartialObserver<T>): void {\n    return observeNotification(this as ObservableNotification<T>, observer);\n  }\n\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @param complete A complete handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void, error: (err: any) => void): void;\n  /**\n   * Executes the next handler if the Notification is of `kind` `\"N\"`. Otherwise\n   * this will not error, and it will be a noop.\n   * @param next The next handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void): void;\n  do(nextHandler: (value: T) => void, errorHandler?: (err: any) => void, completeHandler?: () => void): void {\n    const { kind, value, error } = this;\n    return kind === 'N' ? nextHandler?.(value!) : kind === 'E' ? errorHandler?.(error) : completeHandler?.();\n  }\n\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @param complete A complete handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void, error: (err: any) => void): void;\n  /**\n   * Executes the next handler if the Notification is of `kind` `\"N\"`. Otherwise\n   * this will not error, and it will be a noop.\n   * @param next The next handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void): void;\n\n  /**\n   * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n   * If the handler is missing it will do nothing. Even if the notification is an error, if\n   * there is no error handler on the observer, an error will not be thrown, it will noop.\n   * @param observer The observer to notify.\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(observer: PartialObserver<T>): void;\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    return isFunction((nextOrObserver as any)?.next)\n      ? this.observe(nextOrObserver as PartialObserver<T>)\n      : this.do(nextOrObserver as (value: T) => void, error as any, complete as any);\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   *\n   * @deprecated Will be removed in v8. To convert a `Notification` to an {@link Observable},\n   * use {@link of} and {@link dematerialize}: `of(notification).pipe(dematerialize())`.\n   */\n  toObservable(): Observable<T> {\n    const { kind, value, error } = this;\n    // Select the observable to return by `kind`\n    const result =\n      kind === 'N'\n        ? // Next kind. Return an observable of that value.\n          of(value!)\n        : //\n        kind === 'E'\n        ? // Error kind. Return an observable that emits the error.\n          throwError(() => error)\n        : //\n        kind === 'C'\n        ? // Completion kind. Kind is \"C\", return an observable that just completes.\n          EMPTY\n        : // Unknown kind, return falsy, so we error below.\n          0;\n    if (!result) {\n      // TODO: consider removing this check. The only way to cause this would be to\n      // use the Notification constructor directly in a way that is not type-safe.\n      // and direct use of the Notification constructor is deprecated.\n      throw new TypeError(`Unexpected notification kind ${kind}`);\n    }\n    return result;\n  }\n\n  private static completeNotification = new Notification('C') as Notification<never> & CompleteNotification;\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createNext<T>(value: T) {\n    return new Notification('N', value) as Notification<T> & NextNotification<T>;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createError(err?: any) {\n    return new Notification('E', undefined, err) as Notification<never> & ErrorNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createComplete(): Notification<never> & CompleteNotification {\n    return Notification.completeNotification;\n  }\n}\n\n/**\n * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n * If the handler is missing it will do nothing. Even if the notification is an error, if\n * there is no error handler on the observer, an error will not be thrown, it will noop.\n * @param notification The notification object to observe.\n * @param observer The observer to notify.\n */\nexport function observeNotification<T>(notification: ObservableNotification<T>, observer: PartialObserver<T>) {\n  const { kind, value, error } = notification as any;\n  if (typeof kind !== 'string') {\n    throw new TypeError('Invalid notification, missing \"kind\"');\n  }\n  kind === 'N' ? observer.next?.(value!) : kind === 'E' ? observer.error?.(error) : observer.complete?.();\n}\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface EmptyError extends Error {}\n\nexport interface EmptyErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): EmptyError;\n}\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n * @see {@link firstValueFrom}\n * @see {@link lastValueFrom}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = createErrorClass((_super) => function EmptyErrorImpl(this: any) {\n  _super(this);\n  this.name = 'EmptyError';\n  this.message = 'no elements in sequence';\n});\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface ArgumentOutOfRangeError extends Error {}\n\nexport interface ArgumentOutOfRangeErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ArgumentOutOfRangeError;\n}\n\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport const ArgumentOutOfRangeError: ArgumentOutOfRangeErrorCtor = createErrorClass(\n  (_super) =>\n    function ArgumentOutOfRangeErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ArgumentOutOfRangeError';\n      this.message = 'argument out of range';\n    }\n);\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface NotFoundError extends Error {}\n\nexport interface NotFoundErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (message: string): NotFoundError;\n}\n\n/**\n * An error thrown when a value or values are missing from an\n * observable sequence.\n *\n * @see {@link operators/single}\n *\n * @class NotFoundError\n */\nexport const NotFoundError: NotFoundErrorCtor = createErrorClass(\n  (_super) =>\n    function NotFoundErrorImpl(this: any, message: string) {\n      _super(this);\n      this.name = 'NotFoundError';\n      this.message = message;\n    }\n);\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface SequenceError extends Error {}\n\nexport interface SequenceErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (message: string): SequenceError;\n}\n\n/**\n * An error thrown when something is wrong with the sequence of\n * values arriving on the observable.\n *\n * @see {@link operators/single}\n *\n * @class SequenceError\n */\nexport const SequenceError: SequenceErrorCtor = createErrorClass(\n  (_super) =>\n    function SequenceErrorImpl(this: any, message: string) {\n      _super(this);\n      this.name = 'SequenceError';\n      this.message = message;\n    }\n);\n", "import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike, OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { isValidDate } from '../util/isDate';\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createErrorClass } from '../util/createErrorClass';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport interface TimeoutConfig<T, O extends ObservableInput<unknown> = ObservableInput<T>, M = unknown> {\n  /**\n   * The time allowed between values from the source before timeout is triggered.\n   */\n  each?: number;\n\n  /**\n   * The relative time as a `number` in milliseconds, or a specific time as a `Date` object,\n   * by which the first value must arrive from the source before timeout is triggered.\n   */\n  first?: number | Date;\n\n  /**\n   * The scheduler to use with time-related operations within this operator. Defaults to {@link asyncScheduler}\n   */\n  scheduler?: SchedulerLike;\n\n  /**\n   * A factory used to create observable to switch to when timeout occurs. Provides\n   * a {@link TimeoutInfo} about the source observable's emissions and what delay or\n   * exact time triggered the timeout.\n   */\n  with?: (info: TimeoutInfo<T, M>) => O;\n\n  /**\n   * Optional additional metadata you can provide to code that handles\n   * the timeout, will be provided through the {@link TimeoutError}.\n   * This can be used to help identify the source of a timeout or pass along\n   * other information related to the timeout.\n   */\n  meta?: M;\n}\n\nexport interface TimeoutInfo<T, M = unknown> {\n  /** Optional metadata that was provided to the timeout configuration. */\n  readonly meta: M;\n  /** The number of messages seen before the timeout */\n  readonly seen: number;\n  /** The last message seen */\n  readonly lastValue: T | null;\n}\n\n/**\n * An error emitted when a timeout occurs.\n */\nexport interface TimeoutError<T = unknown, M = unknown> extends Error {\n  /**\n   * The information provided to the error by the timeout\n   * operation that created the error. Will be `null` if\n   * used directly in non-RxJS code with an empty constructor.\n   * (Note that using this constructor directly is not recommended,\n   * you should create your own errors)\n   */\n  info: TimeoutInfo<T, M> | null;\n}\n\nexport interface TimeoutErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new <T = unknown, M = unknown>(info?: TimeoutInfo<T, M>): TimeoutError<T, M>;\n}\n\n/**\n * An error thrown by the {@link timeout} operator.\n *\n * Provided so users can use as a type and do quality comparisons.\n * We recommend you do not subclass this or create instances of this class directly.\n * If you have need of a error representing a timeout, you should\n * create your own error class and use that.\n *\n * @see {@link timeout}\n *\n * @class TimeoutError\n */\nexport const TimeoutError: TimeoutErrorCtor = createErrorClass(\n  (_super) =>\n    function TimeoutErrorImpl(this: any, info: TimeoutInfo<any> | null = null) {\n      _super(this);\n      this.message = 'Timeout has occurred';\n      this.name = 'TimeoutError';\n      this.info = info;\n    }\n);\n\n/**\n * If `with` is provided, this will return an observable that will switch to a different observable if the source\n * does not push values within the specified time parameters.\n *\n * <span class=\"informal\">The most flexible option for creating a timeout behavior.</span>\n *\n * The first thing to know about the configuration is if you do not provide a `with` property to the configuration,\n * when timeout conditions are met, this operator will emit a {@link TimeoutError}. Otherwise, it will use the factory\n * function provided by `with`, and switch your subscription to the result of that. Timeout conditions are provided by\n * the settings in `first` and `each`.\n *\n * The `first` property can be either a `Date` for a specific time, a `number` for a time period relative to the\n * point of subscription, or it can be skipped. This property is to check timeout conditions for the arrival of\n * the first value from the source _only_. The timings of all subsequent values  from the source will be checked\n * against the time period provided by `each`, if it was provided.\n *\n * The `each` property can be either a `number` or skipped. If a value for `each` is provided, it represents the amount of\n * time the resulting observable will wait between the arrival of values from the source before timing out. Note that if\n * `first` is _not_ provided, the value from `each` will be used to check timeout conditions for the arrival of the first\n * value and all subsequent values. If `first` _is_ provided, `each` will only be use to check all values after the first.\n *\n * ## Examples\n *\n * Emit a custom error if there is too much time between values\n *\n * ```ts\n * import { interval, timeout, throwError } from 'rxjs';\n *\n * class CustomTimeoutError extends Error {\n *   constructor() {\n *     super('It was too slow');\n *     this.name = 'CustomTimeoutError';\n *   }\n * }\n *\n * const slow$ = interval(900);\n *\n * slow$.pipe(\n *   timeout({\n *     each: 1000,\n *     with: () => throwError(() => new CustomTimeoutError())\n *   })\n * )\n * .subscribe({\n *   error: console.error\n * });\n * ```\n *\n * Switch to a faster observable if your source is slow.\n *\n * ```ts\n * import { interval, timeout } from 'rxjs';\n *\n * const slow$ = interval(900);\n * const fast$ = interval(500);\n *\n * slow$.pipe(\n *   timeout({\n *     each: 1000,\n *     with: () => fast$,\n *   })\n * )\n * .subscribe(console.log);\n * ```\n * @param config The configuration for the timeout.\n */\nexport function timeout<T, O extends ObservableInput<unknown>, M = unknown>(\n  config: TimeoutConfig<T, O, M> & { with: (info: TimeoutInfo<T, M>) => O }\n): OperatorFunction<T, T | ObservedValueOf<O>>;\n\n/**\n * Returns an observable that will error or switch to a different observable if the source does not push values\n * within the specified time parameters.\n *\n * <span class=\"informal\">The most flexible option for creating a timeout behavior.</span>\n *\n * The first thing to know about the configuration is if you do not provide a `with` property to the configuration,\n * when timeout conditions are met, this operator will emit a {@link TimeoutError}. Otherwise, it will use the factory\n * function provided by `with`, and switch your subscription to the result of that. Timeout conditions are provided by\n * the settings in `first` and `each`.\n *\n * The `first` property can be either a `Date` for a specific time, a `number` for a time period relative to the\n * point of subscription, or it can be skipped. This property is to check timeout conditions for the arrival of\n * the first value from the source _only_. The timings of all subsequent values  from the source will be checked\n * against the time period provided by `each`, if it was provided.\n *\n * The `each` property can be either a `number` or skipped. If a value for `each` is provided, it represents the amount of\n * time the resulting observable will wait between the arrival of values from the source before timing out. Note that if\n * `first` is _not_ provided, the value from `each` will be used to check timeout conditions for the arrival of the first\n * value and all subsequent values. If `first` _is_ provided, `each` will only be use to check all values after the first.\n *\n * ### Handling TimeoutErrors\n *\n * If no `with` property was provided, subscriptions to the resulting observable may emit an error of {@link TimeoutError}.\n * The timeout error provides useful information you can examine when you're handling the error. The most common way to handle\n * the error would be with {@link catchError}, although you could use {@link tap} or just the error handler in your `subscribe` call\n * directly, if your error handling is only a side effect (such as notifying the user, or logging).\n *\n * In this case, you would check the error for `instanceof TimeoutError` to validate that the error was indeed from `timeout`, and\n * not from some other source. If it's not from `timeout`, you should probably rethrow it if you're in a `catchError`.\n *\n * ## Examples\n *\n * Emit a {@link TimeoutError} if the first value, and _only_ the first value, does not arrive within 5 seconds\n *\n * ```ts\n * import { interval, timeout } from 'rxjs';\n *\n * // A random interval that lasts between 0 and 10 seconds per tick\n * const source$ = interval(Math.round(Math.random() * 10_000));\n *\n * source$.pipe(\n *   timeout({ first: 5_000 })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * Emit a {@link TimeoutError} if the source waits longer than 5 seconds between any two values or the first value\n * and subscription.\n *\n * ```ts\n * import { timer, timeout, expand } from 'rxjs';\n *\n * const getRandomTime = () => Math.round(Math.random() * 10_000);\n *\n * // An observable that waits a random amount of time between each delivered value\n * const source$ = timer(getRandomTime())\n *   .pipe(expand(() => timer(getRandomTime())));\n *\n * source$\n *   .pipe(timeout({ each: 5_000 }))\n *   .subscribe({\n *     next: console.log,\n *     error: console.error\n *   });\n * ```\n *\n * Emit a {@link TimeoutError} if the source does not emit before 7 seconds, _or_ if the source waits longer than\n * 5 seconds between any two values after the first.\n *\n * ```ts\n * import { timer, timeout, expand } from 'rxjs';\n *\n * const getRandomTime = () => Math.round(Math.random() * 10_000);\n *\n * // An observable that waits a random amount of time between each delivered value\n * const source$ = timer(getRandomTime())\n *   .pipe(expand(() => timer(getRandomTime())));\n *\n * source$\n *   .pipe(timeout({ first: 7_000, each: 5_000 }))\n *   .subscribe({\n *     next: console.log,\n *     error: console.error\n *   });\n * ```\n */\nexport function timeout<T, M = unknown>(config: Omit<TimeoutConfig<T, any, M>, 'with'>): OperatorFunction<T, T>;\n\n/**\n * Returns an observable that will error if the source does not push its first value before the specified time passed as a `Date`.\n * This is functionally the same as `timeout({ first: someDate })`.\n *\n * <span class=\"informal\">Errors if the first value doesn't show up before the given date and time</span>\n *\n * ![](timeout.png)\n *\n * @param first The date to at which the resulting observable will timeout if the source observable\n * does not emit at least one value.\n * @param scheduler The scheduler to use. Defaults to {@link asyncScheduler}.\n */\nexport function timeout<T>(first: Date, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an observable that will error if the source does not push a value within the specified time in milliseconds.\n * This is functionally the same as `timeout({ each: milliseconds })`.\n *\n * <span class=\"informal\">Errors if it waits too long between any value</span>\n *\n * ![](timeout.png)\n *\n * @param each The time allowed between each pushed value from the source before the resulting observable\n * will timeout.\n * @param scheduler The scheduler to use. Defaults to {@link asyncScheduler}.\n */\nexport function timeout<T>(each: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * ![](timeout.png)\n *\n * @see {@link timeoutWith}\n *\n * @return A function that returns an Observable that mirrors behaviour of the\n * source Observable, unless timeout happens when it throws an error.\n */\nexport function timeout<T, O extends ObservableInput<any>, M>(\n  config: number | Date | TimeoutConfig<T, O, M>,\n  schedulerArg?: SchedulerLike\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  // Intentionally terse code.\n  // If the first argument is a valid `Date`, then we use it as the `first` config.\n  // Otherwise, if the first argument is a `number`, then we use it as the `each` config.\n  // Otherwise, it can be assumed the first argument is the configuration object itself, and\n  // we destructure that into what we're going to use, setting important defaults as we do.\n  // NOTE: The default for `scheduler` will be the `scheduler` argument if it exists, or\n  // it will default to the `asyncScheduler`.\n  const {\n    first,\n    each,\n    with: _with = timeoutErrorFactory,\n    scheduler = schedulerArg ?? asyncScheduler,\n    meta = null!,\n  } = (isValidDate(config) ? { first: config } : typeof config === 'number' ? { each: config } : config) as TimeoutConfig<T, O, M>;\n\n  if (first == null && each == null) {\n    // Ensure timeout was provided at runtime.\n    throw new TypeError('No timeout provided.');\n  }\n\n  return operate((source, subscriber) => {\n    // This subscription encapsulates our subscription to the\n    // source for this operator. We're capturing it separately,\n    // because if there is a `with` observable to fail over to,\n    // we want to unsubscribe from our original subscription, and\n    // hand of the subscription to that one.\n    let originalSourceSubscription: Subscription;\n    // The subscription for our timeout timer. This changes\n    // every time we get a new value.\n    let timerSubscription: Subscription;\n    // A bit of state we pass to our with and error factories to\n    // tell what the last value we saw was.\n    let lastValue: T | null = null;\n    // A bit of state we pass to the with and error factories to\n    // tell how many values we have seen so far.\n    let seen = 0;\n    const startTimer = (delay: number) => {\n      timerSubscription = executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          try {\n            originalSourceSubscription.unsubscribe();\n            innerFrom(\n              _with!({\n                meta,\n                lastValue,\n                seen,\n              })\n            ).subscribe(subscriber);\n          } catch (err) {\n            subscriber.error(err);\n          }\n        },\n        delay\n      );\n    };\n\n    originalSourceSubscription = source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // clear the timer so we can emit and start another one.\n          timerSubscription?.unsubscribe();\n          seen++;\n          // Emit\n          subscriber.next((lastValue = value));\n          // null | undefined are both < 0. Thanks, JavaScript.\n          each! > 0 && startTimer(each!);\n        },\n        undefined,\n        undefined,\n        () => {\n          if (!timerSubscription?.closed) {\n            timerSubscription?.unsubscribe();\n          }\n          // Be sure not to hold the last value in memory after unsubscription\n          // it could be quite large.\n          lastValue = null;\n        }\n      )\n    );\n\n    // Intentionally terse code.\n    // If we've `seen` a value, that means the \"first\" clause was met already, if it existed.\n    //   it also means that a timer was already started for \"each\" (in the next handler above).\n    // If `first` was provided, and it's a number, then use it.\n    // If `first` was provided and it's not a number, it's a Date, and we get the difference between it and \"now\".\n    // If `first` was not provided at all, then our first timer will be the value from `each`.\n    !seen && startTimer(first != null ? (typeof first === 'number' ? first : +first - scheduler!.now()) : each!);\n  });\n}\n\n/**\n * The default function to use to emit an error when timeout occurs and a `with` function\n * is not specified.\n * @param info The information about the timeout to pass along to the error\n */\nfunction timeoutErrorFactory(info: TimeoutInfo<any>): Observable<never> {\n  throw new TimeoutError(info);\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function map<T, R>(project: (value: T, index: number) => R): OperatorFunction<T, R>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function map<T, R, A>(project: (this: A, value: T, index: number) => R, thisArg: A): OperatorFunction<T, R>;\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n *\n * Map every click to the `clientX` position of that click\n *\n * ```ts\n * import { fromEvent, map } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n *\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return A function that returns an Observable that emits the values from the\n * source Observable transformed by the given `project` function.\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The index of the value from the source. Used with projection.\n    let index = 0;\n    // Subscribe to the source, all errors and completions are sent along\n    // to the consumer.\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value: T) => {\n        // Call the projection function with the appropriate this context,\n        // and send the resulting value to the consumer.\n        subscriber.next(project.call(thisArg, value, index++));\n      })\n    );\n  });\n}\n", "import { OperatorFunction } from \"../types\";\nimport { map } from \"../operators/map\";\n\nconst { isArray } = Array;\n\nfunction callOrApply<T, R>(fn: ((...values: T[]) => R), args: T|T[]): R {\n    return isArray(args) ? fn(...args) : fn(args);\n}\n\n/**\n * Used in several -- mostly deprecated -- situations where we need to \n * apply a list of arguments or a single argument to a result selector.\n */\nexport function mapOneOrManyArgs<T, R>(fn: ((...values: T[]) => R)): OperatorFunction<T|T[], R> {\n    return map(args => callOrApply(fn, args))\n}", "const { isArray } = Array;\nconst { getPrototypeOf, prototype: objectProto, keys: getKeys } = Object;\n\n/**\n * Used in functions where either a list of arguments, a single array of arguments, or a\n * dictionary of arguments can be returned. Returns an object with an `args` property with\n * the arguments in an array, if it is a dictionary, it will also return the `keys` in another\n * property.\n */\nexport function argsArgArrayOrObject<T, O extends Record<string, T>>(args: T[] | [O] | [T[]]): { args: T[]; keys: string[] | null } {\n  if (args.length === 1) {\n    const first = args[0];\n    if (isArray(first)) {\n      return { args: first, keys: null };\n    }\n    if (isPOJO(first)) {\n      const keys = getKeys(first);\n      return {\n        args: keys.map((key) => first[key]),\n        keys,\n      };\n    }\n  }\n\n  return { args: args as T[], keys: null };\n}\n\nfunction isPOJO(obj: any): obj is object {\n  return obj && typeof obj === 'object' && getPrototypeOf(obj) === objectProto;\n}\n", "export function createObject(keys: string[], values: any[]) {\n  return keys.reduce((result, key, i) => ((result[key] = values[i]), result), {} as any);\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf, ObservableInputTuple } from '../types';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { Subscriber } from '../Subscriber';\nimport { from } from './from';\nimport { identity } from '../util/identity';\nimport { Subscription } from '../Subscription';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { popResultSelector, popScheduler } from '../util/args';\nimport { createObject } from '../util/createObject';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { AnyCatcher } from '../AnyCatcher';\nimport { executeSchedule } from '../util/executeSchedule';\n\n// combineLatest(any)\n// We put this first because we need to catch cases where the user has supplied\n// _exactly `any`_ as the argument. Since `any` literally matches _anything_,\n// we don't want it to randomly hit one of the other type signatures below,\n// as we have no idea at build-time what type we should be returning when given an any.\n\n/**\n * You have passed `any` here, we can't figure out if it is\n * an array or an object, so you're getting `unknown`. Use better types.\n * @param arg Something typed as `any`\n */\nexport function combineLatest<T extends AnyCatcher>(arg: T): Observable<unknown>;\n\n// combineLatest([a, b, c])\nexport function combineLatest(sources: []): Observable<never>;\nexport function combineLatest<A extends readonly unknown[]>(sources: readonly [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R,\n  scheduler: SchedulerLike\n): Observable<R>;\nexport function combineLatest<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R\n): Observable<R>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[]>(\n  sources: readonly [...ObservableInputTuple<A>],\n  scheduler: SchedulerLike\n): Observable<A>;\n\n// combineLatest(a, b, c)\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function combineLatest<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelectorAndScheduler: [...ObservableInputTuple<A>, (...values: A) => R, SchedulerLike]\n): Observable<R>;\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelector: [...ObservableInputTuple<A>, (...values: A) => R]\n): Observable<R>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike]\n): Observable<A>;\n\n// combineLatest({a, b, c})\nexport function combineLatest(sourcesObject: { [K in any]: never }): Observable<never>;\nexport function combineLatest<T extends Record<string, ObservableInput<any>>>(\n  sourcesObject: T\n): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * ![](combineLatest.png)\n *\n * `combineLatest` combines the values from all the Observables passed in the\n * observables array. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to this operator,\n * the returned Observable will always emit an array of `n` values, in an order\n * corresponding to the order of the passed Observables (the value from the first Observable\n * will be at index 0 of the array and so on).\n *\n * Static version of `combineLatest` accepts an array of Observables. Note that an array of\n * Observables is a good choice, if you don't know beforehand how many Observables\n * you will combine. Passing an empty array will result in an Observable that\n * completes immediately.\n *\n * To ensure the output array always has the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all these values but the last\n * will be lost. On the other hand, if some Observable does not emit a value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will now be impossible to include a value from the\n * completed Observable in the resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, the resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, the result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of a completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * ## Examples\n *\n * Combine two timer Observables\n *\n * ```ts\n * import { timer, combineLatest } from 'rxjs';\n *\n * const firstTimer = timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = combineLatest([firstTimer, secondTimer]);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n * ```\n *\n * Combine a dictionary of Observables\n *\n * ```ts\n * import { of, delay, startWith, combineLatest } from 'rxjs';\n *\n * const observables = {\n *   a: of(1).pipe(delay(1000), startWith(0)),\n *   b: of(5).pipe(delay(5000), startWith(0)),\n *   c: of(10).pipe(delay(10000), startWith(0))\n * };\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // { a: 0, b: 0, c: 0 } immediately\n * // { a: 1, b: 0, c: 0 } after 1s\n * // { a: 1, b: 5, c: 0 } after 5s\n * // { a: 1, b: 5, c: 10 } after 10s\n * ```\n *\n * Combine an array of Observables\n *\n * ```ts\n * import { of, delay, startWith, combineLatest } from 'rxjs';\n *\n * const observables = [1, 5, 10].map(\n *   n => of(n).pipe(\n *     delay(n * 1000), // emit 0 and then emit n after n seconds\n *     startWith(0)\n *   )\n * );\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n * ```\n *\n * Use map operator to dynamically calculate the Body-Mass Index\n *\n * ```ts\n * import { of, combineLatest, map } from 'rxjs';\n *\n * const weight = of(70, 72, 76, 79, 75);\n * const height = of(1.76, 1.77, 1.78);\n * const bmi = combineLatest([weight, height]).pipe(\n *   map(([w, h]) => w / (h * h)),\n * );\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} [observables] An array of input Observables to combine with each other.\n * An array of Observables must be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n */\nexport function combineLatest<O extends ObservableInput<any>, R>(...args: any[]): Observable<R> | Observable<ObservedValueOf<O>[]> {\n  const scheduler = popScheduler(args);\n  const resultSelector = popResultSelector(args);\n\n  const { args: observables, keys } = argsArgArrayOrObject(args);\n\n  if (observables.length === 0) {\n    // If no observables are passed, or someone has passed an empty array\n    // of observables, or even an empty object POJO, we need to just\n    // complete (EMPTY), but we have to honor the scheduler provided if any.\n    return from([], scheduler as any);\n  }\n\n  const result = new Observable<ObservedValueOf<O>[]>(\n    combineLatestInit(\n      observables as ObservableInput<ObservedValueOf<O>>[],\n      scheduler,\n      keys\n        ? // A handler for scrubbing the array of args into a dictionary.\n          (values) => createObject(keys, values)\n        : // A passthrough to just return the array\n          identity\n    )\n  );\n\n  return resultSelector ? (result.pipe(mapOneOrManyArgs(resultSelector)) as Observable<R>) : result;\n}\n\nexport function combineLatestInit(\n  observables: ObservableInput<any>[],\n  scheduler?: SchedulerLike,\n  valueTransform: (values: any[]) => any = identity\n) {\n  return (subscriber: Subscriber<any>) => {\n    // The outer subscription. We're capturing this in a function\n    // because we may have to schedule it.\n    maybeSchedule(\n      scheduler,\n      () => {\n        const { length } = observables;\n        // A store for the values each observable has emitted so far. We match observable to value on index.\n        const values = new Array(length);\n        // The number of currently active subscriptions, as they complete, we decrement this number to see if\n        // we are all done combining values, so we can complete the result.\n        let active = length;\n        // The number of inner sources that still haven't emitted the first value\n        // We need to track this because all sources need to emit one value in order\n        // to start emitting values.\n        let remainingFirstValues = length;\n        // The loop to kick off subscription. We're keying everything on index `i` to relate the observables passed\n        // in to the slot in the output array or the key in the array of keys in the output dictionary.\n        for (let i = 0; i < length; i++) {\n          maybeSchedule(\n            scheduler,\n            () => {\n              const source = from(observables[i], scheduler as any);\n              let hasFirstValue = false;\n              source.subscribe(\n                createOperatorSubscriber(\n                  subscriber,\n                  (value) => {\n                    // When we get a value, record it in our set of values.\n                    values[i] = value;\n                    if (!hasFirstValue) {\n                      // If this is our first value, record that.\n                      hasFirstValue = true;\n                      remainingFirstValues--;\n                    }\n                    if (!remainingFirstValues) {\n                      // We're not waiting for any more\n                      // first values, so we can emit!\n                      subscriber.next(valueTransform(values.slice()));\n                    }\n                  },\n                  () => {\n                    if (!--active) {\n                      // We only complete the result if we have no more active\n                      // inner observables.\n                      subscriber.complete();\n                    }\n                  }\n                )\n              );\n            },\n            subscriber\n          );\n        }\n      },\n      subscriber\n    );\n  };\n}\n\n/**\n * A small utility to handle the couple of locations where we want to schedule if a scheduler was provided,\n * but we don't if there was no scheduler.\n */\nfunction maybeSchedule(scheduler: SchedulerLike | undefined, execute: () => void, subscription: Subscription) {\n  if (scheduler) {\n    executeSchedule(subscription, scheduler, execute);\n  } else {\n    execute();\n  }\n}\n", "import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A process embodying the general \"merge\" strategy. This is used in\n * `mergeMap` and `mergeScan` because the logic is otherwise nearly identical.\n * @param source The original source observable\n * @param subscriber The consumer subscriber\n * @param project The projection function to get our inner sources\n * @param concurrent The number of concurrent inner subscriptions\n * @param onBeforeNext Additional logic to apply before nexting to our consumer\n * @param expand If `true` this will perform an \"expand\" strategy, which differs only\n * in that it recurses, and the inner subscription must be schedule-able.\n * @param innerSubScheduler A scheduler to use to schedule inner subscriptions,\n * this is to support the expand strategy, mostly, and should be deprecated\n */\nexport function mergeInternals<T, R>(\n  source: Observable<T>,\n  subscriber: Subscriber<R>,\n  project: (value: T, index: number) => ObservableInput<R>,\n  concurrent: number,\n  onBeforeNext?: (innerValue: R) => void,\n  expand?: boolean,\n  innerSubScheduler?: SchedulerLike,\n  additionalFinalizer?: () => void\n) {\n  // Buffered values, in the event of going over our concurrency limit\n  const buffer: T[] = [];\n  // The number of active inner subscriptions.\n  let active = 0;\n  // An index to pass to our accumulator function\n  let index = 0;\n  // Whether or not the outer source has completed.\n  let isComplete = false;\n\n  /**\n   * Checks to see if we can complete our result or not.\n   */\n  const checkComplete = () => {\n    // If the outer has completed, and nothing is left in the buffer,\n    // and we don't have any active inner subscriptions, then we can\n    // Emit the state and complete.\n    if (isComplete && !buffer.length && !active) {\n      subscriber.complete();\n    }\n  };\n\n  // If we're under our concurrency limit, just start the inner subscription, otherwise buffer and wait.\n  const outerNext = (value: T) => (active < concurrent ? doInnerSub(value) : buffer.push(value));\n\n  const doInnerSub = (value: T) => {\n    // If we're expanding, we need to emit the outer values and the inner values\n    // as the inners will \"become outers\" in a way as they are recursively fed\n    // back to the projection mechanism.\n    expand && subscriber.next(value as any);\n\n    // Increment the number of active subscriptions so we can track it\n    // against our concurrency limit later.\n    active++;\n\n    // A flag used to show that the inner observable completed.\n    // This is checked during finalization to see if we should\n    // move to the next item in the buffer, if there is on.\n    let innerComplete = false;\n\n    // Start our inner subscription.\n    innerFrom(project(value, index++)).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (innerValue) => {\n          // `mergeScan` has additional handling here. For example\n          // taking the inner value and updating state.\n          onBeforeNext?.(innerValue);\n\n          if (expand) {\n            // If we're expanding, then just recurse back to our outer\n            // handler. It will emit the value first thing.\n            outerNext(innerValue as any);\n          } else {\n            // Otherwise, emit the inner value.\n            subscriber.next(innerValue);\n          }\n        },\n        () => {\n          // Flag that we have completed, so we know to check the buffer\n          // during finalization.\n          innerComplete = true;\n        },\n        // Errors are passed to the destination.\n        undefined,\n        () => {\n          // During finalization, if the inner completed (it wasn't errored or\n          // cancelled), then we want to try the next item in the buffer if\n          // there is one.\n          if (innerComplete) {\n            // We have to wrap this in a try/catch because it happens during\n            // finalization, possibly asynchronously, and we want to pass\n            // any errors that happen (like in a projection function) to\n            // the outer Subscriber.\n            try {\n              // INNER SOURCE COMPLETE\n              // Decrement the active count to ensure that the next time\n              // we try to call `doInnerSub`, the number is accurate.\n              active--;\n              // If we have more values in the buffer, try to process those\n              // Note that this call will increment `active` ahead of the\n              // next conditional, if there were any more inner subscriptions\n              // to start.\n              while (buffer.length && active < concurrent) {\n                const bufferedValue = buffer.shift()!;\n                // Particularly for `expand`, we need to check to see if a scheduler was provided\n                // for when we want to start our inner subscription. Otherwise, we just start\n                // are next inner subscription.\n                if (innerSubScheduler) {\n                  executeSchedule(subscriber, innerSubScheduler, () => doInnerSub(bufferedValue));\n                } else {\n                  doInnerSub(bufferedValue);\n                }\n              }\n              // Check to see if we can complete, and complete if so.\n              checkComplete();\n            } catch (err) {\n              subscriber.error(err);\n            }\n          }\n        }\n      )\n    );\n  };\n\n  // Subscribe to our source observable.\n  source.subscribe(\n    createOperatorSubscriber(subscriber, outerNext, () => {\n      // Outer completed, make a note of it, and check to see if we can complete everything.\n      isComplete = true;\n      checkComplete();\n    })\n  );\n\n  // Additional finalization (for when the destination is torn down).\n  // Other finalization is added implicitly via subscription above.\n  return () => {\n    additionalFinalizer?.();\n  };\n}\n", "import { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n  concurrent?: number\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n *\n * Map and flatten each letter to an Observable ticking every 1 second\n *\n * ```ts\n * import { of, mergeMap, interval, map } from 'rxjs';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x + i)))\n * );\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a, b, c every second with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and merging\n * the results of the Observables obtained from this transformation.\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Infinity\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (isFunction(resultSelector)) {\n    // DEPRECATED PATH\n    return mergeMap((a, i) => map((b: any, ii: number) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n\n  return operate((source, subscriber) => mergeInternals(source, subscriber, project, concurrent));\n}\n", "import { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](mergeAll.png)\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n *\n * Spawn a new interval Observable for each click event, and blend their outputs as one Observable\n *\n * ```ts\n * import { fromEvent, map, interval, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(map(() => interval(1000)));\n * const firstOrder = higherOrder.pipe(mergeAll());\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * Count from 0 to 9 every second for each click, but only allow 2 concurrent timers\n *\n * ```ts\n * import { fromEvent, map, interval, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(10)))\n * );\n * const firstOrder = higherOrder.pipe(mergeAll(2));\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concatAll}\n * @see {@link exhaustAll}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Infinity] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits values coming from\n * all the inner Observables emitted by the source Observable.\n */\nexport function mergeAll<O extends ObservableInput<any>>(concurrent: number = Infinity): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeMap(identity, concurrent);\n}\n", "import { mergeAll } from './mergeAll';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * ![](concatAll.svg)\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, map, interval, take, concatAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(4)))\n * );\n * const firstOrder = higherOrder.pipe(concatAll());\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaustAll}\n * @see {@link mergeAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @return A function that returns an Observable emitting values from all the\n * inner Observables concatenated.\n */\nexport function concatAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeAll(1);\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInputTuple, SchedulerLike } from '../types';\nimport { concatAll } from '../operators/concatAll';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\nexport function concat<T extends readonly unknown[]>(...inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\nexport function concat<T extends readonly unknown[]>(\n  ...inputsAndScheduler: [...ObservableInputTuple<T>, SchedulerLike]\n): Observable<T[number]>;\n\n/**\n * Creates an output Observable which sequentially emits all values from the first given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * ![](concat.png)\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * ## Examples\n *\n * Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10\n *\n * ```ts\n * import { interval, take, range, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(4));\n * const sequence = range(1, 10);\n * const result = concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n * ```\n *\n * Concatenate 3 Observables\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const result = concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n * ```\n *\n * Concatenate the same Observable to repeat it\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(2));\n *\n * concat(timer, timer) // concatenating the same Observable!\n *   .subscribe({\n *     next: value => console.log(value),\n *     complete: () => console.log('...and it is done!')\n *   });\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // '...and it is done!' also after 4s\n * ```\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link startWith}\n * @see {@link endWith}\n *\n * @param args Input Observables to concatenate.\n */\nexport function concat(...args: any[]): Observable<unknown> {\n  return concatAll()(from(args, popScheduler(args)));\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\n\n// These constants are used to create handler registry functions using array mapping below.\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'] as const;\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'] as const;\nconst jqueryMethods = ['on', 'off'] as const;\n\nexport interface NodeStyleEventEmitter {\n  addListener(eventName: string | symbol, handler: NodeEventHandler): this;\n  removeListener(eventName: string | symbol, handler: NodeEventHandler): this;\n}\n\nexport type NodeEventHandler = (...args: any[]) => void;\n\n// For APIs that implement `addListener` and `removeListener` methods that may\n// not use the same arguments or return EventEmitter values\n// such as React Native\nexport interface NodeCompatibleEventEmitter {\n  addListener(eventName: string, handler: NodeEventHandler): void | {};\n  removeListener(eventName: string, handler: NodeEventHandler): void | {};\n}\n\n// Use handler types like those in @types/jquery. See:\n// https://github.com/DefinitelyTyped/DefinitelyTyped/blob/847731ba1d7fa6db6b911c0e43aa0afe596e7723/types/jquery/misc.d.ts#L6395\nexport interface JQueryStyleEventEmitter<TContext, T> {\n  on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;\n  off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;\n}\n\nexport interface EventListenerObject<E> {\n  handleEvent(evt: E): void;\n}\n\nexport interface HasEventTargetAddRemove<E> {\n  addEventListener(\n    type: string,\n    listener: ((evt: E) => void) | EventListenerObject<E> | null,\n    options?: boolean | AddEventListenerOptions\n  ): void;\n  removeEventListener(\n    type: string,\n    listener: ((evt: E) => void) | EventListenerObject<E> | null,\n    options?: EventListenerOptions | boolean\n  ): void;\n}\n\nexport interface EventListenerOptions {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n}\n\nexport interface AddEventListenerOptions extends EventListenerOptions {\n  once?: boolean;\n  passive?: boolean;\n}\n\nexport function fromEvent<T>(target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>, eventName: string): Observable<T>;\nexport function fromEvent<T, R>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  resultSelector: (event: T) => R\n): Observable<R>;\nexport function fromEvent<T>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  options: EventListenerOptions\n): Observable<T>;\nexport function fromEvent<T, R>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  options: EventListenerOptions,\n  resultSelector: (event: T) => R\n): Observable<R>;\n\nexport function fromEvent(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string): Observable<unknown>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function fromEvent<T>(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string): Observable<T>;\nexport function fromEvent<R>(\n  target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>,\n  eventName: string,\n  resultSelector: (...args: any[]) => R\n): Observable<R>;\n\nexport function fromEvent(\n  target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>,\n  eventName: string\n): Observable<unknown>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function fromEvent<T>(target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>, eventName: string): Observable<T>;\nexport function fromEvent<R>(\n  target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>,\n  eventName: string,\n  resultSelector: (...args: any[]) => R\n): Observable<R>;\n\nexport function fromEvent<T>(\n  target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>,\n  eventName: string\n): Observable<T>;\nexport function fromEvent<T, R>(\n  target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>,\n  eventName: string,\n  resultSelector: (value: T, ...args: any[]) => R\n): Observable<R>;\n\n/**\n * Creates an Observable that emits events of a specific type coming from the\n * given event target.\n *\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n * EventEmitter events or others.</span>\n *\n * ![](fromEvent.png)\n *\n * `fromEvent` accepts as a first argument event target, which is an object with methods\n * for registering event handler functions. As a second argument it takes string that indicates\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n * which are described in detail below. If your event target does not match any of the ones listed,\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n * handler functions have different names, but they all accept a string describing event type\n * and function itself, which will be called whenever said event happens.\n *\n * Every time resulting Observable is subscribed, event handler function will be registered\n * to event target on given event type. When that event fires, value\n * passed as a first argument to registered function will be emitted by output Observable.\n * When Observable is unsubscribed, function will be unregistered from event target.\n *\n * Note that if event target calls registered function with more than one argument, second\n * and following arguments will not appear in resulting stream. In order to get access to them,\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\n * passed to event handler. Output Observable will then emit value returned by project function,\n * instead of the usual value.\n *\n * Remember that event targets listed below are checked via duck typing. It means that\n * no matter what kind of object you have and no matter what environment you work in,\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\n * of course they behave as was described above). So for example if Node.js library exposes\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n * a good choice.\n *\n * If the API you use is more callback then event handler oriented (subscribed\n * callback function fires only once and thus there is no need to manually\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n * instead.\n *\n * `fromEvent` supports following types of event targets:\n *\n * **DOM EventTarget**\n *\n * This is an object with `addEventListener` and `removeEventListener` methods.\n *\n * In the browser, `addEventListener` accepts - apart from event type string and event\n * handler function arguments - optional third parameter, which is either an object or boolean,\n * both used for additional configuration how and when passed function will be called. When\n * `fromEvent` is used with event target of that type, you can provide this values\n * as third parameter as well.\n *\n * **Node.js EventEmitter**\n *\n * An object with `addListener` and `removeListener` methods.\n *\n * **JQuery-style event target**\n *\n * An object with `on` and `off` methods\n *\n * **DOM NodeList**\n *\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n *\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n * it contains and install event handler function in every of them. When returned Observable\n * is unsubscribed, function will be removed from all Nodes.\n *\n * **DOM HtmlCollection**\n *\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n * installed and removed in each of elements.\n *\n *\n * ## Examples\n *\n * Emit clicks happening on the DOM document\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * clicks.subscribe(x => console.log(x));\n *\n * // Results in:\n * // MouseEvent object logged to console every time a click\n * // occurs on the document.\n * ```\n *\n * Use `addEventListener` with capture option\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * // note optional configuration parameter which will be passed to addEventListener\n * const clicksInDocument = fromEvent(document, 'click', { capture: true });\n * const clicksInDiv = fromEvent(div, 'click');\n *\n * clicksInDocument.subscribe(() => console.log('document'));\n * clicksInDiv.subscribe(() => console.log('div'));\n *\n * // By default events bubble UP in DOM tree, so normally\n * // when we would click on div in document\n * // \"div\" would be logged first and then \"document\".\n * // Since we specified optional `capture` option, document\n * // will catch event when it goes DOWN DOM tree, so console\n * // will log \"document\" and then \"div\".\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n * @see {@link fromEventPattern}\n *\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n * @param {string} eventName The event name of interest, being emitted by the\n * `target`.\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n * @return {Observable<T>}\n */\nexport function fromEvent<T>(\n  target: any,\n  eventName: string,\n  options?: EventListenerOptions | ((...args: any[]) => T),\n  resultSelector?: (...args: any[]) => T\n): Observable<T> {\n  if (isFunction(options)) {\n    resultSelector = options;\n    options = undefined;\n  }\n  if (resultSelector) {\n    return fromEvent<T>(target, eventName, options as EventListenerOptions).pipe(mapOneOrManyArgs(resultSelector));\n  }\n\n  // Figure out our add and remove methods. In order to do this,\n  // we are going to analyze the target in a preferred order, if\n  // the target matches a given signature, we take the two \"add\" and \"remove\"\n  // method names and apply them to a map to create opposite versions of the\n  // same function. This is because they all operate in duplicate pairs,\n  // `addListener(name, handler)`, `removeListener(name, handler)`, for example.\n  // The call only differs by method name, as to whether or not you're adding or removing.\n  const [add, remove] =\n    // If it is an EventTarget, we need to use a slightly different method than the other two patterns.\n    isEventTarget(target)\n      ? eventTargetMethods.map((methodName) => (handler: any) => target[methodName](eventName, handler, options as EventListenerOptions))\n      : // In all other cases, the call pattern is identical with the exception of the method names.\n      isNodeStyleEventEmitter(target)\n      ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n      : isJQueryStyleEventEmitter(target)\n      ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n      : [];\n\n  // If add is falsy, it's because we didn't match a pattern above.\n  // Check to see if it is an ArrayLike, because if it is, we want to\n  // try to apply fromEvent to all of it's items. We do this check last,\n  // because there are may be some types that are both ArrayLike *and* implement\n  // event registry points, and we'd rather delegate to that when possible.\n  if (!add) {\n    if (isArrayLike(target)) {\n      return mergeMap((subTarget: any) => fromEvent(subTarget, eventName, options as EventListenerOptions))(\n        innerFrom(target)\n      ) as Observable<T>;\n    }\n  }\n\n  // If add is falsy and we made it here, it's because we didn't\n  // match any valid target objects above.\n  if (!add) {\n    throw new TypeError('Invalid event target');\n  }\n\n  return new Observable<T>((subscriber) => {\n    // The handler we are going to register. Forwards the event object, by itself, or\n    // an array of arguments to the event handler, if there is more than one argument,\n    // to the consumer.\n    const handler = (...args: any[]) => subscriber.next(1 < args.length ? args : args[0]);\n    // Do the work of adding the handler to the target.\n    add(handler);\n    // When we finalize, we want to remove the handler and free up memory.\n    return () => remove!(handler);\n  });\n}\n\n/**\n * Used to create `add` and `remove` functions to register and unregister event handlers\n * from a target in the most common handler pattern, where there are only two arguments.\n * (e.g.  `on(name, fn)`, `off(name, fn)`, `addListener(name, fn)`, or `removeListener(name, fn)`)\n * @param target The target we're calling methods on\n * @param eventName The event name for the event we're creating register or unregister functions for\n */\nfunction toCommonHandlerRegistry(target: any, eventName: string) {\n  return (methodName: string) => (handler: any) => target[methodName](eventName, handler);\n}\n\n/**\n * Checks to see if the target implements the required node-style EventEmitter methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isNodeStyleEventEmitter(target: any): target is NodeStyleEventEmitter {\n  return isFunction(target.addListener) && isFunction(target.removeListener);\n}\n\n/**\n * Checks to see if the target implements the required jQuery-style EventEmitter methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isJQueryStyleEventEmitter(target: any): target is JQueryStyleEventEmitter<any, any> {\n  return isFunction(target.on) && isFunction(target.off);\n}\n\n/**\n * Checks to see if the target implements the required EventTarget methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isEventTarget(target: any): target is HasEventTargetAddRemove<any> {\n  return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n", "import { Observable } from '../Observable';\nimport { isFunction } from '../util/isFunction';\nimport { NodeEventHandler } from './fromEvent';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\n\n/* tslint:disable:max-line-length */\nexport function fromEventPattern<T>(\n  addHandler: (handler: NodeEventHandler) => any,\n  removeHandler?: (handler: NodeEventHandler, signal?: any) => void\n): Observable<T>;\nexport function fromEventPattern<T>(\n  addHandler: (handler: NodeEventHandler) => any,\n  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,\n  resultSelector?: (...args: any[]) => T\n): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable from an arbitrary API for registering event handlers.\n *\n * <span class=\"informal\">When that method for adding event handler was something {@link fromEvent}\n * was not prepared for.</span>\n *\n * ![](fromEventPattern.png)\n *\n * `fromEventPattern` allows you to convert into an Observable any API that supports registering handler functions\n * for events. It is similar to {@link fromEvent}, but far\n * more flexible. In fact, all use cases of {@link fromEvent} could be easily handled by\n * `fromEventPattern` (although in slightly more verbose way).\n *\n * This operator accepts as a first argument an `addHandler` function, which will be injected with\n * handler parameter. That handler is actually an event handler function that you now can pass\n * to API expecting it. `addHandler` will be called whenever Observable\n * returned by the operator is subscribed, so registering handler in API will not\n * necessarily happen when `fromEventPattern` is called.\n *\n * After registration, every time an event that we listen to happens,\n * Observable returned by `fromEventPattern` will emit value that event handler\n * function was called with. Note that if event handler was called with more\n * than one argument, second and following arguments will not appear in the Observable.\n *\n * If API you are using allows to unregister event handlers as well, you can pass to `fromEventPattern`\n * another function - `removeHandler` - as a second parameter. It will be injected\n * with the same handler function as before, which now you can use to unregister\n * it from the API. `removeHandler` will be called when consumer of resulting Observable\n * unsubscribes from it.\n *\n * In some APIs unregistering is actually handled differently. Method registering an event handler\n * returns some kind of token, which is later used to identify which function should\n * be unregistered or it itself has method that unregisters event handler.\n * If that is the case with your API, make sure token returned\n * by registering method is returned by `addHandler`. Then it will be passed\n * as a second argument to `removeHandler`, where you will be able to use it.\n *\n * If you need access to all event handler parameters (not only the first one),\n * or you need to transform them in any way, you can call `fromEventPattern` with optional\n * third parameter - project function which will accept all arguments passed to\n * event handler when it is called. Whatever is returned from project function will appear on\n * resulting stream instead of usual event handlers first argument. This means\n * that default project can be thought of as function that takes its first parameter\n * and ignores the rest.\n *\n * ## Examples\n *\n * Emits clicks happening on the DOM document\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * function addClickHandler(handler) {\n *   document.addEventListener('click', handler);\n * }\n *\n * function removeClickHandler(handler) {\n *   document.removeEventListener('click', handler);\n * }\n *\n * const clicks = fromEventPattern(\n *   addClickHandler,\n *   removeClickHandler\n * );\n * clicks.subscribe(x => console.log(x));\n *\n * // Whenever you click anywhere in the browser, DOM MouseEvent\n * // object will be logged.\n * ```\n *\n * Use with API that returns cancellation token\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * const token = someAPI.registerEventHandler(function() {});\n * someAPI.unregisterEventHandler(token); // this APIs cancellation method accepts\n *                                        // not handler itself, but special token.\n *\n * const someAPIObservable = fromEventPattern(\n *   function(handler) { return someAPI.registerEventHandler(handler); }, // Note that we return the token here...\n *   function(handler, token) { someAPI.unregisterEventHandler(token); }  // ...to then use it here.\n * );\n * ```\n *\n * Use with project function\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * someAPI.registerEventHandler((eventType, eventMessage) => {\n *   console.log(eventType, eventMessage); // Logs 'EVENT_TYPE' 'EVENT_MESSAGE' to console.\n * });\n *\n * const someAPIObservable = fromEventPattern(\n *   handler => someAPI.registerEventHandler(handler),\n *   handler => someAPI.unregisterEventHandler(handler)\n *   (eventType, eventMessage) => eventType + ' --- ' + eventMessage // without that function only 'EVENT_TYPE'\n * );                                                                // would be emitted by the Observable\n *\n * someAPIObservable.subscribe(value => console.log(value));\n *\n * // Logs:\n * // 'EVENT_TYPE --- EVENT_MESSAGE'\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n *\n * @param {function(handler: Function): any} addHandler A function that takes\n * a `handler` function as argument and attaches it somehow to the actual\n * source of events.\n * @param {function(handler: Function, token?: any): void} [removeHandler] A function that\n * takes a `handler` function as an argument and removes it from the event source. If `addHandler`\n * returns some kind of token, `removeHandler` function will have it as a second parameter.\n * @param {function(...args: any): T} [project] A function to\n * transform results. It takes the arguments from the event handler and\n * should return a single value.\n * @return {Observable<T>} Observable which, when an event happens, emits first parameter\n * passed to registered event handler. Alternatively it emits whatever project function returns\n * at that moment.\n */\nexport function fromEventPattern<T>(\n  addHandler: (handler: NodeEventHandler) => any,\n  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,\n  resultSelector?: (...args: any[]) => T\n): Observable<T | T[]> {\n  if (resultSelector) {\n    return fromEventPattern<T>(addHandler, removeHandler).pipe(mapOneOrManyArgs(resultSelector));\n  }\n\n  return new Observable<T | T[]>((subscriber) => {\n    const handler = (...e: T[]) => subscriber.next(e.length === 1 ? e[0] : e);\n    const retValue = addHandler(handler);\n    return isFunction(removeHandler) ? () => removeHandler(handler, retValue) : undefined;\n  });\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInput, ObservableInputTuple, SchedulerLike } from '../types';\nimport { mergeAll } from '../operators/mergeAll';\nimport { innerFrom } from './innerFrom';\nimport { EMPTY } from './empty';\nimport { popNumber, popScheduler } from '../util/args';\nimport { from } from './from';\n\nexport function merge<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\nexport function merge<A extends readonly unknown[]>(...sourcesAndConcurrency: [...ObservableInputTuple<A>, number?]): Observable<A[number]>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `mergeAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function merge<A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike?]\n): Observable<A[number]>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `mergeAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function merge<A extends readonly unknown[]>(\n  ...sourcesAndConcurrencyAndScheduler: [...ObservableInputTuple<A>, number?, SchedulerLike?]\n): Observable<A[number]>;\n\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * ![](merge.png)\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n *\n * Merge together two Observables: 1s interval and clicks\n *\n * ```ts\n * import { merge, fromEvent, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const clicksOrTimer = merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console every time the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n * ```\n *\n * Merge together 3 Observables, but run only 2 concurrently\n *\n * ```ts\n * import { interval, take, merge } from 'rxjs';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const concurrent = 2; // the argument\n * const merged = merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits its max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits its max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n * ```\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n */\nexport function merge(...args: (ObservableInput<unknown> | number | SchedulerLike)[]): Observable<unknown> {\n  const scheduler = popScheduler(args);\n  const concurrent = popNumber(args, Infinity);\n  const sources = args as ObservableInput<unknown>[];\n  return !sources.length\n    ? // No source provided\n      EMPTY\n    : sources.length === 1\n    ? // One source? Just return it.\n      innerFrom(sources[0])\n    : // Merge all sources\n      mergeAll(concurrent)(from(sources, scheduler));\n}\n", "import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\n\n/**\n * An Observable that emits no items to the Observer and never completes.\n *\n * ![](never.png)\n *\n * A simple Observable that emits neither values nor errors nor the completion\n * notification. It can be used for testing purposes or for composing with other\n * Observables. Please note that by never emitting a complete notification, this\n * Observable keeps the subscription from being disposed automatically.\n * Subscriptions need to be manually disposed.\n *\n * ##  Example\n *\n * Emit the number 7, then never emit anything else (not even complete)\n *\n * ```ts\n * import { NEVER, startWith } from 'rxjs';\n *\n * const info = () => console.log('Will not be called');\n *\n * const result = NEVER.pipe(startWith(7));\n * result.subscribe({\n *   next: x => console.log(x),\n *   error: info,\n *   complete: info\n * });\n * ```\n *\n * @see {@link Observable}\n * @see {@link EMPTY}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const NEVER = new Observable<never>(noop);\n\n/**\n * @deprecated Replaced with the {@link NEVER} constant. Will be removed in v8.\n */\nexport function never() {\n  return NEVER;\n}\n", "const { isArray } = Array;\n\n/**\n * Used in operators and functions that accept either a list of arguments, or an array of arguments\n * as a single argument.\n */\nexport function argsOrArgArray<T>(args: (T | T[])[]): T[] {\n  return args.length === 1 && isArray(args[0]) ? args[0] : (args as T[]);\n}\n", "import { mergeMap } from './mergeMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function concatMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * ![](concatMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, concatMap, interval, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   concatMap(ev => interval(1000).pipe(take(4)))\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and taking\n * values from each projected inner Observable sequentially.\n */\nexport function concatMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return isFunction(resultSelector) ? mergeMap(project, resultSelector, 1) : mergeMap(project, 1);\n}\n", "import { asyncScheduler } from '../scheduler/async';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SchedulerAction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits a notification from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent notification from each burst of emissions.</span>\n *\n * ![](debounceTime.png)\n *\n * `debounceTime` delays notifications emitted by the source Observable, but drops\n * previous pending delayed emissions if a new notification arrives on the source\n * Observable. This operator keeps track of the most recent notification from the\n * source Observable, and emits that only when `dueTime` has passed\n * without any other notification appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous notification will be dropped\n * and will not be emitted and a new `dueTime` is scheduled.\n * If the completing event happens during `dueTime` the last cached notification\n * is emitted before the completion event is forwarded to the output observable.\n * If the error event happens during `dueTime` or after it only the error event is\n * forwarded to the output observable. The cache notification is not emitted in this case.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * notification to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link SchedulerLike} for\n * managing timers.\n *\n * ## Example\n *\n * Emit the most recent click after a burst of clicks\n *\n * ```ts\n * import { fromEvent, debounceTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(debounceTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link throttle}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the timeout for each value.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by the specified `dueTime`, and may drop some values\n * if they occur too frequently.\n */\nexport function debounceTime<T>(dueTime: number, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let activeTask: Subscription | null = null;\n    let lastValue: T | null = null;\n    let lastTime: number | null = null;\n\n    const emit = () => {\n      if (activeTask) {\n        // We have a value! Free up memory first, then emit the value.\n        activeTask.unsubscribe();\n        activeTask = null;\n        const value = lastValue!;\n        lastValue = null;\n        subscriber.next(value);\n      }\n    };\n    function emitWhenIdle(this: SchedulerAction<unknown>) {\n      // This is called `dueTime` after the first value\n      // but we might have received new values during this window!\n\n      const targetTime = lastTime! + dueTime;\n      const now = scheduler.now();\n      if (now < targetTime) {\n        // On that case, re-schedule to the new target\n        activeTask = this.schedule(undefined, targetTime - now);\n        subscriber.add(activeTask);\n        return;\n      }\n\n      emit();\n    }\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          lastValue = value;\n          lastTime = scheduler.now();\n\n          // Only set up a task if it's not already up\n          if (!activeTask) {\n            activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n            subscriber.add(activeTask);\n          }\n        },\n        () => {\n          // Source completed.\n          // Emit any pending debounced values then complete\n          emit();\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer.\n        undefined,\n        () => {\n          // Finalization.\n          lastValue = activeTask = null;\n        }\n      )\n    );\n  });\n}\n", "import { MonoTypeOperatorFunction } from '../types';\nimport { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function distinctUntilChanged<T>(comparator?: (previous: T, current: T) => boolean): MonoTypeOperatorFunction<T>;\nexport function distinctUntilChanged<T, K>(\n  comparator: (previous: K, current: K) => boolean,\n  keySelector: (value: T) => K\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns a result {@link Observable} that emits all values pushed by the source observable if they\n * are distinct in comparison to the last value the result observable emitted.\n *\n * When provided without parameters or with the first parameter (`{@link distinctUntilChanged#comparator comparator}`),\n * it behaves like this:\n *\n * 1. It will always emit the first value from the source.\n * 2. For all subsequent values pushed by the source, they will be compared to the previously emitted values\n *    using the provided `comparator` or an `===` equality check.\n * 3. If the value pushed by the source is determined to be unequal by this check, that value is emitted and\n *    becomes the new \"previously emitted value\" internally.\n *\n * When the second parameter (`{@link distinctUntilChanged#keySelector keySelector}`) is provided, the behavior\n * changes:\n *\n * 1. It will always emit the first value from the source.\n * 2. The `keySelector` will be run against all values, including the first value.\n * 3. For all values after the first, the selected key will be compared against the key selected from\n *    the previously emitted value using the `comparator`.\n * 4. If the keys are determined to be unequal by this check, the value (not the key), is emitted\n *    and the selected key from that value is saved for future comparisons against other keys.\n *\n * ## Examples\n *\n * A very basic example with no `{@link distinctUntilChanged#comparator comparator}`. Note that `1` is emitted more than once,\n * because it's distinct in comparison to the _previously emitted_ value,\n * not in comparison to _all other emitted values_.\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * of(1, 1, 1, 2, 2, 2, 1, 1, 3, 3)\n *   .pipe(distinctUntilChanged())\n *   .subscribe(console.log);\n * // Logs: 1, 2, 1, 3\n * ```\n *\n * With a `{@link distinctUntilChanged#comparator comparator}`, you can do custom comparisons. Let's say\n * you only want to emit a value when all of its components have\n * changed:\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * const totallyDifferentBuilds$ = of(\n *   { engineVersion: '1.1.0', transmissionVersion: '1.2.0' },\n *   { engineVersion: '1.1.0', transmissionVersion: '1.4.0' },\n *   { engineVersion: '1.3.0', transmissionVersion: '1.4.0' },\n *   { engineVersion: '1.3.0', transmissionVersion: '1.5.0' },\n *   { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\n * ).pipe(\n *   distinctUntilChanged((prev, curr) => {\n *     return (\n *       prev.engineVersion === curr.engineVersion ||\n *       prev.transmissionVersion === curr.transmissionVersion\n *     );\n *   })\n * );\n *\n * totallyDifferentBuilds$.subscribe(console.log);\n *\n * // Logs:\n * // { engineVersion: '1.1.0', transmissionVersion: '1.2.0' }\n * // { engineVersion: '1.3.0', transmissionVersion: '1.4.0' }\n * // { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\n * ```\n *\n * You can also provide a custom `{@link distinctUntilChanged#comparator comparator}` to check that emitted\n * changes are only in one direction. Let's say you only want to get\n * the next record temperature:\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * const temps$ = of(30, 31, 20, 34, 33, 29, 35, 20);\n *\n * const recordHighs$ = temps$.pipe(\n *   distinctUntilChanged((prevHigh, temp) => {\n *     // If the current temp is less than\n *     // or the same as the previous record,\n *     // the record hasn't changed.\n *     return temp <= prevHigh;\n *   })\n * );\n *\n * recordHighs$.subscribe(console.log);\n * // Logs: 30, 31, 34, 35\n * ```\n *\n * Selecting update events only when the `updatedBy` field shows\n * the account changed hands.\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * // A stream of updates to a given account\n * const accountUpdates$ = of(\n *   { updatedBy: 'blesh', data: [] },\n *   { updatedBy: 'blesh', data: [] },\n *   { updatedBy: 'ncjamieson', data: [] },\n *   { updatedBy: 'ncjamieson', data: [] },\n *   { updatedBy: 'blesh', data: [] }\n * );\n *\n * // We only want the events where it changed hands\n * const changedHands$ = accountUpdates$.pipe(\n *   distinctUntilChanged(undefined, update => update.updatedBy)\n * );\n *\n * changedHands$.subscribe(console.log);\n * // Logs:\n * // { updatedBy: 'blesh', data: Array[0] }\n * // { updatedBy: 'ncjamieson', data: Array[0] }\n * // { updatedBy: 'blesh', data: Array[0] }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param comparator A function used to compare the previous and current keys for\n * equality. Defaults to a `===` check.\n * @param keySelector Used to select a key value to be passed to the `comparator`.\n *\n * @return A function that returns an Observable that emits items from the\n * source Observable with distinct values.\n */\nexport function distinctUntilChanged<T, K>(\n  comparator?: (previous: K, current: K) => boolean,\n  keySelector: (value: T) => K = identity as (value: T) => K\n): MonoTypeOperatorFunction<T> {\n  // We've been allowing `null` do be passed as the `compare`, so we can't do\n  // a default value for the parameter, because that will only work\n  // for `undefined`.\n  comparator = comparator ?? defaultCompare;\n\n  return operate((source, subscriber) => {\n    // The previous key, used to compare against keys selected\n    // from new arrivals to determine \"distinctiveness\".\n    let previousKey: K;\n    // Whether or not this is the first value we've gotten.\n    let first = true;\n\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        // We always call the key selector.\n        const currentKey = keySelector(value);\n\n        // If it's the first value, we always emit it.\n        // Otherwise, we compare this key to the previous key, and\n        // if the comparer returns false, we emit.\n        if (first || !comparator!(previousKey, currentKey)) {\n          // Update our state *before* we emit the value\n          // as emission can be the source of re-entrant code\n          // in functional libraries like this. We only really\n          // need to do this if it's the first value, or if the\n          // key we're tracking in previous needs to change.\n          first = false;\n          previousKey = currentKey;\n\n          // Emit the value!\n          subscriber.next(value);\n        }\n      })\n    );\n  });\n}\n\nfunction defaultCompare(a: any, b: any) {\n  return a === b;\n}\n", "import { distinctUntilChanged } from './distinctUntilChanged';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilKeyChanged<T>(key: keyof T): MonoTypeOperatorFunction<T>;\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * ## Examples\n *\n * An example comparing the name of persons\n *\n * ```ts\n * import { of, distinctUntilKeyChanged } from 'rxjs';\n *\n * of(\n *   { age: 4, name: 'Foo' },\n *   { age: 7, name: 'Bar' },\n *   { age: 5, name: 'Foo' },\n *   { age: 6, name: 'Foo' }\n * ).pipe(\n *   distinctUntilKeyChanged('name')\n * )\n * .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n * ```\n *\n * An example comparing the first letters of the name\n *\n * ```ts\n * import { of, distinctUntilKeyChanged } from 'rxjs';\n *\n * of(\n *   { age: 4, name: 'Foo1' },\n *   { age: 7, name: 'Bar' },\n *   { age: 5, name: 'Foo2' },\n *   { age: 6, name: 'Foo3' }\n * ).pipe(\n *   distinctUntilKeyChanged('name', (x, y) => x.substring(0, 3) === y.substring(0, 3))\n * )\n * .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return A function that returns an Observable that emits items from the\n * source Observable with distinct values based on the key specified.\n */\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare?: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T> {\n  return distinctUntilChanged((x: T, y: T) => compare ? compare(x[key], y[key]) : x[key] === y[key]);\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * ![](pairwise.png)\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * ## Example\n *\n * On every click (starting from the second), emit the relative distance to the previous click\n *\n * ```ts\n * import { fromEvent, pairwise, map } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const pairs = clicks.pipe(pairwise());\n * const distance = pairs.pipe(\n *   map(([first, second]) => {\n *     const x0 = first.clientX;\n *     const y0 = first.clientY;\n *     const x1 = second.clientX;\n *     const y1 = second.clientY;\n *     return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n *   })\n * );\n *\n * distance.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return A function that returns an Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n */\nexport function pairwise<T>(): OperatorFunction<T, [T, T]> {\n  return operate((source, subscriber) => {\n    let prev: T;\n    let hasPrev = false;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const p = prev;\n        prev = value;\n        hasPrev && subscriber.next([p, value]);\n        hasPrev = true;\n      })\n    );\n  });\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { SafeSubscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SubjectLike, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\n\nexport interface ShareConfig<T> {\n  /**\n   * The factory used to create the subject that will connect the source observable to\n   * multicast consumers.\n   */\n  connector?: () => SubjectLike<T>;\n  /**\n   * If `true`, the resulting observable will reset internal state on error from source and return to a \"cold\" state. This\n   * allows the resulting observable to be \"retried\" in the event of an error.\n   * If `false`, when an error comes from the source it will push the error into the connecting subject, and the subject\n   * will remain the connecting subject, meaning the resulting observable will not go \"cold\" again, and subsequent retries\n   * or resubscriptions will resubscribe to that same subject. In all cases, RxJS subjects will emit the same error again, however\n   * {@link ReplaySubject} will also push its buffered values before pushing the error.\n   * It is also possible to pass a notifier factory returning an `ObservableInput` instead which grants more fine-grained\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\n   */\n  resetOnError?: boolean | ((error: any) => ObservableInput<any>);\n  /**\n   * If `true`, the resulting observable will reset internal state on completion from source and return to a \"cold\" state. This\n   * allows the resulting observable to be \"repeated\" after it is done.\n   * If `false`, when the source completes, it will push the completion through the connecting subject, and the subject\n   * will remain the connecting subject, meaning the resulting observable will not go \"cold\" again, and subsequent repeats\n   * or resubscriptions will resubscribe to that same subject.\n   * It is also possible to pass a notifier factory returning an `ObservableInput` instead which grants more fine-grained\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\n   */\n  resetOnComplete?: boolean | (() => ObservableInput<any>);\n  /**\n   * If `true`, when the number of subscribers to the resulting observable reaches zero due to those subscribers unsubscribing, the\n   * internal state will be reset and the resulting observable will return to a \"cold\" state. This means that the next\n   * time the resulting observable is subscribed to, a new subject will be created and the source will be subscribed to\n   * again.\n   * If `false`, when the number of subscribers to the resulting observable reaches zero due to unsubscription, the subject\n   * will remain connected to the source, and new subscriptions to the result will be connected through that same subject.\n   * It is also possible to pass a notifier factory returning an `ObservableInput` instead which grants more fine-grained\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\n   */\n  resetOnRefCountZero?: boolean | (() => ObservableInput<any>);\n}\n\nexport function share<T>(): MonoTypeOperatorFunction<T>;\n\nexport function share<T>(options: ShareConfig<T>): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for `multicast(() => new Subject()), refCount()`.\n *\n * The subscription to the underlying source Observable can be reset (unsubscribe and resubscribe for new subscribers),\n * if the subscriber count to the shared observable drops to 0, or if the source Observable errors or completes. It is\n * possible to use notifier factories for the resets to allow for behaviors like conditional or delayed resets. Please\n * note that resetting on error or complete of the source Observable does not behave like a transparent retry or restart\n * of the source because the error or complete will be forwarded to all subscribers and their subscription will be\n * closed. Only new subscribers after a reset on error or complete happened will cause a fresh subscription to the\n * source. To achieve transparent retries or restarts pipe the source through appropriate operators before sharing.\n *\n * ![](share.png)\n *\n * ## Example\n *\n * Generate new multicast Observable from the `source` Observable value\n *\n * ```ts\n * import { interval, tap, map, take, share } from 'rxjs';\n *\n * const source = interval(1000).pipe(\n *   tap(x => console.log('Processing: ', x)),\n *   map(x => x * x),\n *   take(6),\n *   share()\n * );\n *\n * source.subscribe(x => console.log('subscription 1: ', x));\n * source.subscribe(x => console.log('subscription 2: ', x));\n *\n * // Logs:\n * // Processing: 0\n * // subscription 1: 0\n * // subscription 2: 0\n * // Processing: 1\n * // subscription 1: 1\n * // subscription 2: 1\n * // Processing: 2\n * // subscription 1: 4\n * // subscription 2: 4\n * // Processing: 3\n * // subscription 1: 9\n * // subscription 2: 9\n * // Processing: 4\n * // subscription 1: 16\n * // subscription 2: 16\n * // Processing: 5\n * // subscription 1: 25\n * // subscription 2: 25\n * ```\n *\n * ## Example with notifier factory: Delayed reset\n *\n * ```ts\n * import { interval, take, share, timer } from 'rxjs';\n *\n * const source = interval(1000).pipe(\n *   take(3),\n *   share({\n *     resetOnRefCountZero: () => timer(1000)\n *   })\n * );\n *\n * const subscriptionOne = source.subscribe(x => console.log('subscription 1: ', x));\n * setTimeout(() => subscriptionOne.unsubscribe(), 1300);\n *\n * setTimeout(() => source.subscribe(x => console.log('subscription 2: ', x)), 1700);\n *\n * setTimeout(() => source.subscribe(x => console.log('subscription 3: ', x)), 5000);\n *\n * // Logs:\n * // subscription 1:  0\n * // (subscription 1 unsubscribes here)\n * // (subscription 2 subscribes here ~400ms later, source was not reset)\n * // subscription 2:  1\n * // subscription 2:  2\n * // (subscription 2 unsubscribes here)\n * // (subscription 3 subscribes here ~2000ms later, source did reset before)\n * // subscription 3:  0\n * // subscription 3:  1\n * // subscription 3:  2\n * ```\n *\n * @see {@link shareReplay}\n *\n * @return A function that returns an Observable that mirrors the source.\n */\nexport function share<T>(options: ShareConfig<T> = {}): MonoTypeOperatorFunction<T> {\n  const { connector = () => new Subject<T>(), resetOnError = true, resetOnComplete = true, resetOnRefCountZero = true } = options;\n  // It's necessary to use a wrapper here, as the _operator_ must be\n  // referentially transparent. Otherwise, it cannot be used in calls to the\n  // static `pipe` function - to create a partial pipeline.\n  //\n  // The _operator function_ - the function returned by the _operator_ - will\n  // not be referentially transparent - as it shares its source - but the\n  // _operator function_ is called when the complete pipeline is composed via a\n  // call to a source observable's `pipe` method - not when the static `pipe`\n  // function is called.\n  return (wrapperSource) => {\n    let connection: SafeSubscriber<T> | undefined;\n    let resetConnection: Subscription | undefined;\n    let subject: SubjectLike<T> | undefined;\n    let refCount = 0;\n    let hasCompleted = false;\n    let hasErrored = false;\n\n    const cancelReset = () => {\n      resetConnection?.unsubscribe();\n      resetConnection = undefined;\n    };\n    // Used to reset the internal state to a \"cold\"\n    // state, as though it had never been subscribed to.\n    const reset = () => {\n      cancelReset();\n      connection = subject = undefined;\n      hasCompleted = hasErrored = false;\n    };\n    const resetAndUnsubscribe = () => {\n      // We need to capture the connection before\n      // we reset (if we need to reset).\n      const conn = connection;\n      reset();\n      conn?.unsubscribe();\n    };\n\n    return operate<T, T>((source, subscriber) => {\n      refCount++;\n      if (!hasErrored && !hasCompleted) {\n        cancelReset();\n      }\n\n      // Create the subject if we don't have one yet. Grab a local reference to\n      // it as well, which avoids non-null assertions when using it and, if we\n      // connect to it now, then error/complete need a reference after it was\n      // reset.\n      const dest = (subject = subject ?? connector());\n\n      // Add the finalization directly to the subscriber - instead of returning it -\n      // so that the handling of the subscriber's unsubscription will be wired\n      // up _before_ the subscription to the source occurs. This is done so that\n      // the assignment to the source connection's `closed` property will be seen\n      // by synchronous firehose sources.\n      subscriber.add(() => {\n        refCount--;\n\n        // If we're resetting on refCount === 0, and it's 0, we only want to do\n        // that on \"unsubscribe\", really. Resetting on error or completion is a different\n        // configuration.\n        if (refCount === 0 && !hasErrored && !hasCompleted) {\n          resetConnection = handleReset(resetAndUnsubscribe, resetOnRefCountZero);\n        }\n      });\n\n      // The following line adds the subscription to the subscriber passed.\n      // Basically, `subscriber === dest.subscribe(subscriber)` is `true`.\n      dest.subscribe(subscriber);\n\n      if (\n        !connection &&\n        // Check this shareReplay is still activate - it can be reset to 0\n        // and be \"unsubscribed\" _before_ it actually subscribes.\n        // If we were to subscribe then, it'd leak and get stuck.\n        refCount > 0\n      ) {\n        // We need to create a subscriber here - rather than pass an observer and\n        // assign the returned subscription to connection - because it's possible\n        // for reentrant subscriptions to the shared observable to occur and in\n        // those situations we want connection to be already-assigned so that we\n        // don't create another connection to the source.\n        connection = new SafeSubscriber({\n          next: (value) => dest.next(value),\n          error: (err) => {\n            hasErrored = true;\n            cancelReset();\n            resetConnection = handleReset(reset, resetOnError, err);\n            dest.error(err);\n          },\n          complete: () => {\n            hasCompleted = true;\n            cancelReset();\n            resetConnection = handleReset(reset, resetOnComplete);\n            dest.complete();\n          },\n        });\n        innerFrom(source).subscribe(connection);\n      }\n    })(wrapperSource);\n  };\n}\n\nfunction handleReset<T extends unknown[] = never[]>(\n  reset: () => void,\n  on: boolean | ((...args: T) => ObservableInput<any>),\n  ...args: T\n): Subscription | undefined {\n  if (on === true) {\n    reset();\n    return;\n  }\n\n  if (on === false) {\n    return;\n  }\n\n  const onSubscriber = new SafeSubscriber({\n    next: () => {\n      onSubscriber.unsubscribe();\n      reset();\n    },\n  });\n\n  return innerFrom(on(...args)).subscribe(onSubscriber);\n}\n", "import { ReplaySubject } from '../ReplaySubject';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { share } from './share';\n\nexport interface ShareReplayConfig {\n  bufferSize?: number;\n  windowTime?: number;\n  refCount: boolean;\n  scheduler?: SchedulerLike;\n}\n\nexport function shareReplay<T>(config: ShareReplayConfig): MonoTypeOperatorFunction<T>;\nexport function shareReplay<T>(bufferSize?: number, windowTime?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n * Share source and replay specified number of emissions on subscription.\n *\n * This operator is a specialization of `replay` that connects to a source observable\n * and multicasts through a `ReplaySubject` constructed with the specified arguments.\n * A successfully completed source will stay cached in the `shareReplay`ed observable forever,\n * but an errored source can be retried.\n *\n * ## Why use `shareReplay`?\n *\n * You generally want to use `shareReplay` when you have side-effects or taxing computations\n * that you do not wish to be executed amongst multiple subscribers.\n * It may also be valuable in situations where you know you will have late subscribers to\n * a stream that need access to previously emitted values.\n * This ability to replay values on subscription is what differentiates {@link share} and `shareReplay`.\n *\n * ## Reference counting\n *\n * By default `shareReplay` will use `refCount` of false, meaning that it will _not_ unsubscribe the\n * source when the reference counter drops to zero, i.e. the inner `ReplaySubject` will _not_ be unsubscribed\n * (and potentially run for ever).\n * This is the default as it is expected that `shareReplay` is often used to keep around expensive to setup\n * observables which we want to keep running instead of having to do the expensive setup again.\n *\n * As of RXJS version 6.4.0 a new overload signature was added to allow for manual control over what\n * happens when the operators internal reference counter drops to zero.\n * If `refCount` is true, the source will be unsubscribed from once the reference count drops to zero, i.e.\n * the inner `ReplaySubject` will be unsubscribed. All new subscribers will receive value emissions from a\n * new `ReplaySubject` which in turn will cause a new subscription to the source observable.\n *\n * ## Examples\n *\n * Example with a third subscriber coming late to the party\n *\n * ```ts\n * import { interval, take, shareReplay } from 'rxjs';\n *\n * const shared$ = interval(2000).pipe(\n *   take(6),\n *   shareReplay(3)\n * );\n *\n * shared$.subscribe(x => console.log('sub A: ', x));\n * shared$.subscribe(y => console.log('sub B: ', y));\n *\n * setTimeout(() => {\n *   shared$.subscribe(y => console.log('sub C: ', y));\n * }, 11000);\n *\n * // Logs:\n * // (after ~2000 ms)\n * // sub A: 0\n * // sub B: 0\n * // (after ~4000 ms)\n * // sub A: 1\n * // sub B: 1\n * // (after ~6000 ms)\n * // sub A: 2\n * // sub B: 2\n * // (after ~8000 ms)\n * // sub A: 3\n * // sub B: 3\n * // (after ~10000 ms)\n * // sub A: 4\n * // sub B: 4\n * // (after ~11000 ms, sub C gets the last 3 values)\n * // sub C: 2\n * // sub C: 3\n * // sub C: 4\n * // (after ~12000 ms)\n * // sub A: 5\n * // sub B: 5\n * // sub C: 5\n * ```\n *\n * Example for `refCount` usage\n *\n * ```ts\n * import { Observable, tap, interval, shareReplay, take } from 'rxjs';\n *\n * const log = <T>(name: string, source: Observable<T>) => source.pipe(\n *   tap({\n *     subscribe: () => console.log(`${ name }: subscribed`),\n *     next: value => console.log(`${ name }: ${ value }`),\n *     complete: () => console.log(`${ name }: completed`),\n *     finalize: () => console.log(`${ name }: unsubscribed`)\n *   })\n * );\n *\n * const obs$ = log('source', interval(1000));\n *\n * const shared$ = log('shared', obs$.pipe(\n *   shareReplay({ bufferSize: 1, refCount: true }),\n *   take(2)\n * ));\n *\n * shared$.subscribe(x => console.log('sub A: ', x));\n * shared$.subscribe(y => console.log('sub B: ', y));\n *\n * // PRINTS:\n * // shared: subscribed <-- reference count = 1\n * // source: subscribed\n * // shared: subscribed <-- reference count = 2\n * // source: 0\n * // shared: 0\n * // sub A: 0\n * // shared: 0\n * // sub B: 0\n * // source: 1\n * // shared: 1\n * // sub A: 1\n * // shared: completed <-- take(2) completes the subscription for sub A\n * // shared: unsubscribed <-- reference count = 1\n * // shared: 1\n * // sub B: 1\n * // shared: completed <-- take(2) completes the subscription for sub B\n * // shared: unsubscribed <-- reference count = 0\n * // source: unsubscribed <-- replaySubject unsubscribes from source observable because the reference count dropped to 0 and refCount is true\n *\n * // In case of refCount being false, the unsubscribe is never called on the source and the source would keep on emitting, even if no subscribers\n * // are listening.\n * // source: 2\n * // source: 3\n * // source: 4\n * // ...\n * ```\n *\n * @see {@link publish}\n * @see {@link share}\n * @see {@link publishReplay}\n *\n * @param configOrBufferSize Maximum element count of the replay buffer or {@link ShareReplayConfig configuration}\n * object.\n * @param windowTime Maximum time length of the replay buffer in milliseconds.\n * @param scheduler Scheduler where connected observers within the selector function\n * will be invoked on.\n * @return A function that returns an Observable sequence that contains the\n * elements of a sequence produced by multicasting the source sequence within a\n * selector function.\n */\nexport function shareReplay<T>(\n  configOrBufferSize?: ShareReplayConfig | number,\n  windowTime?: number,\n  scheduler?: SchedulerLike\n): MonoTypeOperatorFunction<T> {\n  let bufferSize: number;\n  let refCount = false;\n  if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n    ({ bufferSize = Infinity, windowTime = Infinity, refCount = false, scheduler } = configOrBufferSize);\n  } else {\n    bufferSize = (configOrBufferSize ?? Infinity) as number;\n  }\n  return share<T>({\n    connector: () => new ReplaySubject(bufferSize, windowTime, scheduler),\n    resetOnError: true,\n    resetOnComplete: false,\n    resetOnRefCountZero: refCount,\n  });\n}\n", "import { concat } from '../observable/concat';\nimport { OperatorFunction, SchedulerLike, ValueFromArray } from '../types';\nimport { popScheduler } from '../util/args';\nimport { operate } from '../util/lift';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function startWith<T>(value: null): OperatorFunction<T, T | null>;\nexport function startWith<T>(value: undefined): OperatorFunction<T, T | undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function startWith<T, A extends readonly unknown[] = T[]>(\n  ...valuesAndScheduler: [...A, SchedulerLike]\n): OperatorFunction<T, T | ValueFromArray<A>>;\nexport function startWith<T, A extends readonly unknown[] = T[]>(...values: A): OperatorFunction<T, T | ValueFromArray<A>>;\n\n/**\n * Returns an observable that, at the moment of subscription, will synchronously emit all\n * values provided to this operator, then subscribe to the source and mirror all of its emissions\n * to subscribers.\n *\n * This is a useful way to know when subscription has occurred on an existing observable.\n *\n * <span class=\"informal\">First emits its arguments in order, and then any\n * emissions from the source.</span>\n *\n * ![](startWith.png)\n *\n * ## Examples\n *\n * Emit a value when a timer starts.\n *\n * ```ts\n * import { timer, map, startWith } from 'rxjs';\n *\n * timer(1000)\n *   .pipe(\n *     map(() => 'timer emit'),\n *     startWith('timer start')\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // results:\n * // 'timer start'\n * // 'timer emit'\n * ```\n *\n * @param values Items you want the modified Observable to emit first.\n * @return A function that returns an Observable that synchronously emits\n * provided values before subscribing to the source Observable.\n *\n * @see {@link endWith}\n * @see {@link finalize}\n * @see {@link concat}\n */\nexport function startWith<T, D>(...values: D[]): OperatorFunction<T, T | D> {\n  const scheduler = popScheduler(values);\n  return operate((source, subscriber) => {\n    // Here we can't pass `undefined` as a scheduler, because if we did, the\n    // code inside of `concat` would be confused by the `undefined`, and treat it\n    // like an invalid observable. So we have to split it two different ways.\n    (scheduler ? concat(values, source, scheduler) : concat(values, source)).subscribe(subscriber);\n  });\n}\n", "import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function takeWhile<T>(predicate: BooleanConstructor, inclusive: true): MonoTypeOperatorFunction<T>;\nexport function takeWhile<T>(predicate: BooleanConstructor, inclusive: false): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function takeWhile<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S, inclusive: false): OperatorFunction<T, S>;\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean, inclusive?: boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * ![](takeWhile.png)\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * ## Example\n *\n * Emit click events only while the clientX property is greater than 200\n *\n * ```ts\n * import { fromEvent, takeWhile } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const result = clicks.pipe(takeWhile(ev => ev.clientX > 200));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @param {boolean} inclusive When set to `true` the value that caused\n * `predicate` to return `false` will also be emitted.\n * @return A function that returns an Observable that emits values from the\n * source Observable so long as each value satisfies the condition defined by\n * the `predicate`, then completes.\n */\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean, inclusive = false): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const result = predicate(value, index++);\n        (result || inclusive) && subscriber.next(value);\n        !result && subscriber.complete();\n      })\n    );\n  });\n}\n", "// https://github.com/maxogden/websocket-stream/blob/48dc3ddf943e5ada668c31ccd94e9186f02fafbd/ws-fallback.js\n\nvar ws = null\n\nif (typeof WebSocket !== 'undefined') {\n  ws = WebSocket\n} else if (typeof MozWebSocket !== 'undefined') {\n  ws = MozWebSocket\n} else if (typeof global !== 'undefined') {\n  ws = global.WebSocket || global.MozWebSocket\n} else if (typeof window !== 'undefined') {\n  ws = window.WebSocket || window.MozWebSocket\n} else if (typeof self !== 'undefined') {\n  ws = self.WebSocket || self.MozWebSocket\n}\n\nexport default ws\n", "/* tslint:disable */\n/* eslint-disable */\n/**\n *\n * @export\n * @interface APIError\n */\nexport interface APIError {\n  /**\n   * Response HTTP status code\n   * @type {number}\n   * @memberof APIError\n   */\n  StatusCode: number;\n  /**\n   * API error code\n   * @type {number}\n   * @memberof APIError\n   */\n  code: number;\n  /**\n   * Additional error-specific information\n   * @type {Array<number>}\n   * @memberof APIError\n   */\n  details: Array<number>;\n  /**\n   * Request duration\n   * @type {string}\n   * @memberof APIError\n   */\n  duration: string;\n  /**\n   * Additional error info\n   * @type {{ [key: string]: string; }}\n   * @memberof APIError\n   */\n  exception_fields?: { [key: string]: string };\n  /**\n   * Message describing an error\n   * @type {string}\n   * @memberof APIError\n   */\n  message: string;\n  /**\n   * URL with additional information\n   * @type {string}\n   * @memberof APIError\n   */\n  more_info: string;\n}\n/**\n *\n * @export\n * @interface AcceptCallResponse\n */\nexport interface AcceptCallResponse {\n  /**\n   *\n   * @type {string}\n   * @memberof AcceptCallResponse\n   */\n  duration: string;\n}\n/**\n *\n * @export\n * @interface AudioSettingsRequest\n */\nexport interface AudioSettingsRequest {\n  /**\n   *\n   * @type {boolean}\n   * @memberof AudioSettingsRequest\n   */\n  access_request_enabled?: boolean;\n  /**\n   *\n   * @type {string}\n   * @memberof AudioSettingsRequest\n   */\n  default_device: AudioSettingsRequestDefaultDeviceEnum;\n  /**\n   *\n   * @type {boolean}\n   * @memberof AudioSettingsRequest\n   */\n  mic_default_on?: boolean;\n  /**\n   *\n   * @type {NoiseCancellationSettings}\n   * @memberof AudioSettingsRequest\n   */\n  noise_cancellation?: NoiseCancellationSettings;\n  /**\n   *\n   * @type {boolean}\n   * @memberof AudioSettingsRequest\n   */\n  opus_dtx_enabled?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof AudioSettingsRequest\n   */\n  redundant_coding_enabled?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof AudioSettingsRequest\n   */\n  speaker_default_on?: boolean;\n}\n\n/**\n * @export\n */\nexport const AudioSettingsRequestDefaultDeviceEnum = {\n  SPEAKER: 'speaker',\n  EARPIECE: 'earpiece',\n} as const;\nexport type AudioSettingsRequestDefaultDeviceEnum =\n  (typeof AudioSettingsRequestDefaultDeviceEnum)[keyof typeof AudioSettingsRequestDefaultDeviceEnum];\n\n/**\n *\n * @export\n * @interface AudioSettingsResponse\n */\nexport interface AudioSettingsResponse {\n  /**\n   *\n   * @type {boolean}\n   * @memberof AudioSettingsResponse\n   */\n  access_request_enabled: boolean;\n  /**\n   *\n   * @type {string}\n   * @memberof AudioSettingsResponse\n   */\n  default_device: AudioSettingsResponseDefaultDeviceEnum;\n  /**\n   *\n   * @type {boolean}\n   * @memberof AudioSettingsResponse\n   */\n  mic_default_on: boolean;\n  /**\n   *\n   * @type {NoiseCancellationSettings}\n   * @memberof AudioSettingsResponse\n   */\n  noise_cancellation?: NoiseCancellationSettings;\n  /**\n   *\n   * @type {boolean}\n   * @memberof AudioSettingsResponse\n   */\n  opus_dtx_enabled: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof AudioSettingsResponse\n   */\n  redundant_coding_enabled: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof AudioSettingsResponse\n   */\n  speaker_default_on: boolean;\n}\n\n/**\n * @export\n */\nexport const AudioSettingsResponseDefaultDeviceEnum = {\n  SPEAKER: 'speaker',\n  EARPIECE: 'earpiece',\n} as const;\nexport type AudioSettingsResponseDefaultDeviceEnum =\n  (typeof AudioSettingsResponseDefaultDeviceEnum)[keyof typeof AudioSettingsResponseDefaultDeviceEnum];\n\n/**\n *\n * @export\n * @interface BackstageSettingsRequest\n */\nexport interface BackstageSettingsRequest {\n  /**\n   *\n   * @type {boolean}\n   * @memberof BackstageSettingsRequest\n   */\n  enabled?: boolean;\n  /**\n   *\n   * @type {number}\n   * @memberof BackstageSettingsRequest\n   */\n  join_ahead_time_seconds?: number;\n}\n/**\n *\n * @export\n * @interface BackstageSettingsResponse\n */\nexport interface BackstageSettingsResponse {\n  /**\n   *\n   * @type {boolean}\n   * @memberof BackstageSettingsResponse\n   */\n  enabled: boolean;\n  /**\n   *\n   * @type {number}\n   * @memberof BackstageSettingsResponse\n   */\n  join_ahead_time_seconds?: number;\n}\n/**\n *\n * @export\n * @interface BlockListOptions\n */\nexport interface BlockListOptions {\n  /**\n   *\n   * @type {string}\n   * @memberof BlockListOptions\n   */\n  behavior: BlockListOptionsBehaviorEnum;\n  /**\n   *\n   * @type {string}\n   * @memberof BlockListOptions\n   */\n  blocklist: string;\n}\n\n/**\n * @export\n */\nexport const BlockListOptionsBehaviorEnum = {\n  FLAG: 'flag',\n  BLOCK: 'block',\n  SHADOW_BLOCK: 'shadow_block',\n} as const;\nexport type BlockListOptionsBehaviorEnum =\n  (typeof BlockListOptionsBehaviorEnum)[keyof typeof BlockListOptionsBehaviorEnum];\n\n/**\n *\n * @export\n * @interface BlockUserRequest\n */\nexport interface BlockUserRequest {\n  /**\n   * the user to block\n   * @type {string}\n   * @memberof BlockUserRequest\n   */\n  user_id: string;\n}\n/**\n *\n * @export\n * @interface BlockUserResponse\n */\nexport interface BlockUserResponse {\n  /**\n   * Duration of the request in milliseconds\n   * @type {string}\n   * @memberof BlockUserResponse\n   */\n  duration: string;\n}\n/**\n * This event is sent to call participants to notify when a user is blocked on a call, clients can use this event to show a notification.\n * If the user is the current user, the client should leave the call screen as well\n * @export\n * @interface BlockedUserEvent\n */\nexport interface BlockedUserEvent {\n  /**\n   *\n   * @type {UserResponse}\n   * @memberof BlockedUserEvent\n   */\n  blocked_by_user?: UserResponse;\n  /**\n   *\n   * @type {string}\n   * @memberof BlockedUserEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof BlockedUserEvent\n   */\n  created_at: string;\n  /**\n   * The type of event: \"call.blocked_user\" in this case\n   * @type {string}\n   * @memberof BlockedUserEvent\n   */\n  type: string;\n  /**\n   *\n   * @type {UserResponse}\n   * @memberof BlockedUserEvent\n   */\n  user: UserResponse;\n}\n/**\n *\n * @export\n * @interface BroadcastSettingsRequest\n */\nexport interface BroadcastSettingsRequest {\n  /**\n   *\n   * @type {boolean}\n   * @memberof BroadcastSettingsRequest\n   */\n  enabled?: boolean;\n  /**\n   *\n   * @type {HLSSettingsRequest}\n   * @memberof BroadcastSettingsRequest\n   */\n  hls?: HLSSettingsRequest;\n}\n/**\n *\n * @export\n * @interface BroadcastSettingsResponse\n */\nexport interface BroadcastSettingsResponse {\n  /**\n   *\n   * @type {boolean}\n   * @memberof BroadcastSettingsResponse\n   */\n  enabled: boolean;\n  /**\n   *\n   * @type {HLSSettingsResponse}\n   * @memberof BroadcastSettingsResponse\n   */\n  hls: HLSSettingsResponse;\n}\n/**\n * This event is sent when a user accepts a notification to join a call.\n * @export\n * @interface CallAcceptedEvent\n */\nexport interface CallAcceptedEvent {\n  /**\n   *\n   * @type {CallResponse}\n   * @memberof CallAcceptedEvent\n   */\n  call: CallResponse;\n  /**\n   *\n   * @type {string}\n   * @memberof CallAcceptedEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallAcceptedEvent\n   */\n  created_at: string;\n  /**\n   * The type of event: \"call.accepted\" in this case\n   * @type {string}\n   * @memberof CallAcceptedEvent\n   */\n  type: string;\n  /**\n   *\n   * @type {UserResponse}\n   * @memberof CallAcceptedEvent\n   */\n  user: UserResponse;\n}\n/**\n * CallClosedCaption represents a closed caption of a call.\n * @export\n * @interface CallClosedCaption\n */\nexport interface CallClosedCaption {\n  /**\n   *\n   * @type {string}\n   * @memberof CallClosedCaption\n   */\n  end_time: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallClosedCaption\n   */\n  speaker_id: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallClosedCaption\n   */\n  start_time: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallClosedCaption\n   */\n  text: string;\n}\n/**\n * This event is sent when a call is created. Clients receiving this event should check if the ringing\n * field is set to true and if so, show the call screen\n * @export\n * @interface CallCreatedEvent\n */\nexport interface CallCreatedEvent {\n  /**\n   *\n   * @type {CallResponse}\n   * @memberof CallCreatedEvent\n   */\n  call: CallResponse;\n  /**\n   *\n   * @type {string}\n   * @memberof CallCreatedEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallCreatedEvent\n   */\n  created_at: string;\n  /**\n   * the members added to this call\n   * @type {Array<MemberResponse>}\n   * @memberof CallCreatedEvent\n   */\n  members: Array<MemberResponse>;\n  /**\n   * The type of event: \"call.created\" in this case\n   * @type {string}\n   * @memberof CallCreatedEvent\n   */\n  type: string;\n}\n/**\n * This event is sent when a call is deleted. Clients receiving this event should leave the call screen\n * @export\n * @interface CallDeletedEvent\n */\nexport interface CallDeletedEvent {\n  /**\n   *\n   * @type {CallResponse}\n   * @memberof CallDeletedEvent\n   */\n  call: CallResponse;\n  /**\n   *\n   * @type {string}\n   * @memberof CallDeletedEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallDeletedEvent\n   */\n  created_at: string;\n  /**\n   * The type of event: \"call.deleted\" in this case\n   * @type {string}\n   * @memberof CallDeletedEvent\n   */\n  type: string;\n}\n/**\n * This event is sent when a call is mark as ended for all its participants. Clients receiving this event should leave the call screen\n * @export\n * @interface CallEndedEvent\n */\nexport interface CallEndedEvent {\n  /**\n   *\n   * @type {CallResponse}\n   * @memberof CallEndedEvent\n   */\n  call: CallResponse;\n  /**\n   *\n   * @type {string}\n   * @memberof CallEndedEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallEndedEvent\n   */\n  created_at: string;\n  /**\n   * The type of event: \"call.ended\" in this case\n   * @type {string}\n   * @memberof CallEndedEvent\n   */\n  type: string;\n  /**\n   *\n   * @type {UserResponse}\n   * @memberof CallEndedEvent\n   */\n  user?: UserResponse;\n}\n/**\n *\n * @export\n * @interface CallEvent\n */\nexport interface CallEvent {\n  /**\n   *\n   * @type {string}\n   * @memberof CallEvent\n   */\n  description: string;\n  /**\n   *\n   * @type {number}\n   * @memberof CallEvent\n   */\n  end_timestamp: number;\n  /**\n   *\n   * @type {number}\n   * @memberof CallEvent\n   */\n  severity: number;\n  /**\n   *\n   * @type {number}\n   * @memberof CallEvent\n   */\n  timestamp: number;\n  /**\n   *\n   * @type {string}\n   * @memberof CallEvent\n   */\n  type: string;\n}\n/**\n * This event is sent when HLS broadcasting has failed\n * @export\n * @interface CallHLSBroadcastingFailedEvent\n */\nexport interface CallHLSBroadcastingFailedEvent {\n  /**\n   *\n   * @type {string}\n   * @memberof CallHLSBroadcastingFailedEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallHLSBroadcastingFailedEvent\n   */\n  created_at: string;\n  /**\n   * The type of event: \"call.hls_broadcasting_failed\" in this case\n   * @type {string}\n   * @memberof CallHLSBroadcastingFailedEvent\n   */\n  type: string;\n}\n/**\n * This event is sent when HLS broadcasting has started\n * @export\n * @interface CallHLSBroadcastingStartedEvent\n */\nexport interface CallHLSBroadcastingStartedEvent {\n  /**\n   *\n   * @type {string}\n   * @memberof CallHLSBroadcastingStartedEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallHLSBroadcastingStartedEvent\n   */\n  created_at: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallHLSBroadcastingStartedEvent\n   */\n  hls_playlist_url: string;\n  /**\n   * The type of event: \"call.hls_broadcasting_started\" in this case\n   * @type {string}\n   * @memberof CallHLSBroadcastingStartedEvent\n   */\n  type: string;\n}\n/**\n * This event is sent when HLS broadcasting has stopped\n * @export\n * @interface CallHLSBroadcastingStoppedEvent\n */\nexport interface CallHLSBroadcastingStoppedEvent {\n  /**\n   *\n   * @type {string}\n   * @memberof CallHLSBroadcastingStoppedEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallHLSBroadcastingStoppedEvent\n   */\n  created_at: string;\n  /**\n   * The type of event: \"call.hls_broadcasting_stopped\" in this case\n   * @type {string}\n   * @memberof CallHLSBroadcastingStoppedEvent\n   */\n  type: string;\n}\n/**\n *\n * @export\n * @interface CallIngressResponse\n */\nexport interface CallIngressResponse {\n  /**\n   *\n   * @type {RTMPIngress}\n   * @memberof CallIngressResponse\n   */\n  rtmp: RTMPIngress;\n}\n/**\n * This event is sent when a call is started. Clients receiving this event should start the call.\n * @export\n * @interface CallLiveStartedEvent\n */\nexport interface CallLiveStartedEvent {\n  /**\n   *\n   * @type {CallResponse}\n   * @memberof CallLiveStartedEvent\n   */\n  call: CallResponse;\n  /**\n   *\n   * @type {string}\n   * @memberof CallLiveStartedEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallLiveStartedEvent\n   */\n  created_at: string;\n  /**\n   * The type of event: \"call.live_started\" in this case\n   * @type {string}\n   * @memberof CallLiveStartedEvent\n   */\n  type: string;\n}\n/**\n * This event is sent when one or more members are added to a call\n * @export\n * @interface CallMemberAddedEvent\n */\nexport interface CallMemberAddedEvent {\n  /**\n   *\n   * @type {CallResponse}\n   * @memberof CallMemberAddedEvent\n   */\n  call: CallResponse;\n  /**\n   *\n   * @type {string}\n   * @memberof CallMemberAddedEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallMemberAddedEvent\n   */\n  created_at: string;\n  /**\n   * the members added to this call\n   * @type {Array<MemberResponse>}\n   * @memberof CallMemberAddedEvent\n   */\n  members: Array<MemberResponse>;\n  /**\n   * The type of event: \"call.member_added\" in this case\n   * @type {string}\n   * @memberof CallMemberAddedEvent\n   */\n  type: string;\n}\n/**\n * This event is sent when one or more members are removed from a call\n * @export\n * @interface CallMemberRemovedEvent\n */\nexport interface CallMemberRemovedEvent {\n  /**\n   *\n   * @type {CallResponse}\n   * @memberof CallMemberRemovedEvent\n   */\n  call: CallResponse;\n  /**\n   *\n   * @type {string}\n   * @memberof CallMemberRemovedEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallMemberRemovedEvent\n   */\n  created_at: string;\n  /**\n   * the list of member IDs removed from the call\n   * @type {Array<string>}\n   * @memberof CallMemberRemovedEvent\n   */\n  members: Array<string>;\n  /**\n   * The type of event: \"call.member_removed\" in this case\n   * @type {string}\n   * @memberof CallMemberRemovedEvent\n   */\n  type: string;\n}\n/**\n * This event is sent when one or more members are updated\n * @export\n * @interface CallMemberUpdatedEvent\n */\nexport interface CallMemberUpdatedEvent {\n  /**\n   *\n   * @type {CallResponse}\n   * @memberof CallMemberUpdatedEvent\n   */\n  call: CallResponse;\n  /**\n   *\n   * @type {string}\n   * @memberof CallMemberUpdatedEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallMemberUpdatedEvent\n   */\n  created_at: string;\n  /**\n   * The list of members that were updated\n   * @type {Array<MemberResponse>}\n   * @memberof CallMemberUpdatedEvent\n   */\n  members: Array<MemberResponse>;\n  /**\n   * The type of event: \"call.member_updated\" in this case\n   * @type {string}\n   * @memberof CallMemberUpdatedEvent\n   */\n  type: string;\n}\n/**\n * This event is sent when one or more members get its role updated\n * @export\n * @interface CallMemberUpdatedPermissionEvent\n */\nexport interface CallMemberUpdatedPermissionEvent {\n  /**\n   *\n   * @type {CallResponse}\n   * @memberof CallMemberUpdatedPermissionEvent\n   */\n  call: CallResponse;\n  /**\n   *\n   * @type {string}\n   * @memberof CallMemberUpdatedPermissionEvent\n   */\n  call_cid: string;\n  /**\n   * The capabilities by role for this call\n   * @type {{ [key: string]: Array<string>; }}\n   * @memberof CallMemberUpdatedPermissionEvent\n   */\n  capabilities_by_role: { [key: string]: Array<string> };\n  /**\n   *\n   * @type {string}\n   * @memberof CallMemberUpdatedPermissionEvent\n   */\n  created_at: string;\n  /**\n   * The list of members that were updated\n   * @type {Array<MemberResponse>}\n   * @memberof CallMemberUpdatedPermissionEvent\n   */\n  members: Array<MemberResponse>;\n  /**\n   * The type of event: \"call.member_added\" in this case\n   * @type {string}\n   * @memberof CallMemberUpdatedPermissionEvent\n   */\n  type: string;\n}\n/**\n * This event is sent to call members who did not accept/reject/join the call to notify they missed the call\n * @export\n * @interface CallMissedEvent\n */\nexport interface CallMissedEvent {\n  /**\n   *\n   * @type {CallResponse}\n   * @memberof CallMissedEvent\n   */\n  call: CallResponse;\n  /**\n   *\n   * @type {string}\n   * @memberof CallMissedEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallMissedEvent\n   */\n  created_at: string;\n  /**\n   * List of members who missed the call\n   * @type {Array<MemberResponse>}\n   * @memberof CallMissedEvent\n   */\n  members: Array<MemberResponse>;\n  /**\n   *\n   * @type {boolean}\n   * @memberof CallMissedEvent\n   */\n  notify_user: boolean;\n  /**\n   * Call session ID\n   * @type {string}\n   * @memberof CallMissedEvent\n   */\n  session_id: string;\n  /**\n   * The type of event: \"call.notification\" in this case\n   * @type {string}\n   * @memberof CallMissedEvent\n   */\n  type: string;\n  /**\n   *\n   * @type {UserResponse}\n   * @memberof CallMissedEvent\n   */\n  user: UserResponse;\n}\n/**\n * This event is sent to all call members to notify they are getting called\n * @export\n * @interface CallNotificationEvent\n */\nexport interface CallNotificationEvent {\n  /**\n   *\n   * @type {CallResponse}\n   * @memberof CallNotificationEvent\n   */\n  call: CallResponse;\n  /**\n   *\n   * @type {string}\n   * @memberof CallNotificationEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallNotificationEvent\n   */\n  created_at: string;\n  /**\n   * Call members\n   * @type {Array<MemberResponse>}\n   * @memberof CallNotificationEvent\n   */\n  members: Array<MemberResponse>;\n  /**\n   * Call session ID\n   * @type {string}\n   * @memberof CallNotificationEvent\n   */\n  session_id: string;\n  /**\n   * The type of event: \"call.notification\" in this case\n   * @type {string}\n   * @memberof CallNotificationEvent\n   */\n  type: string;\n  /**\n   *\n   * @type {UserResponse}\n   * @memberof CallNotificationEvent\n   */\n  user: UserResponse;\n}\n/**\n *\n * @export\n * @interface CallParticipantResponse\n */\nexport interface CallParticipantResponse {\n  /**\n   *\n   * @type {string}\n   * @memberof CallParticipantResponse\n   */\n  joined_at: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallParticipantResponse\n   */\n  role: string;\n  /**\n   *\n   * @type {UserResponse}\n   * @memberof CallParticipantResponse\n   */\n  user: UserResponse;\n  /**\n   *\n   * @type {string}\n   * @memberof CallParticipantResponse\n   */\n  user_session_id: string;\n}\n/**\n * This event is sent when a reaction is sent in a call, clients should use this to show the reaction in the call screen\n * @export\n * @interface CallReactionEvent\n */\nexport interface CallReactionEvent {\n  /**\n   *\n   * @type {string}\n   * @memberof CallReactionEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallReactionEvent\n   */\n  created_at: string;\n  /**\n   *\n   * @type {ReactionResponse}\n   * @memberof CallReactionEvent\n   */\n  reaction: ReactionResponse;\n  /**\n   * The type of event: \"call.reaction_new\" in this case\n   * @type {string}\n   * @memberof CallReactionEvent\n   */\n  type: string;\n}\n/**\n * CallRecording represents a recording of a call.\n * @export\n * @interface CallRecording\n */\nexport interface CallRecording {\n  /**\n   *\n   * @type {string}\n   * @memberof CallRecording\n   */\n  end_time: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallRecording\n   */\n  filename: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallRecording\n   */\n  start_time: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallRecording\n   */\n  url: string;\n}\n/**\n * This event is sent when call recording has failed\n * @export\n * @interface CallRecordingFailedEvent\n */\nexport interface CallRecordingFailedEvent {\n  /**\n   *\n   * @type {string}\n   * @memberof CallRecordingFailedEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallRecordingFailedEvent\n   */\n  created_at: string;\n  /**\n   * The type of event: \"call.recording_failed\" in this case\n   * @type {string}\n   * @memberof CallRecordingFailedEvent\n   */\n  type: string;\n}\n/**\n * This event is sent when call recording is ready\n * @export\n * @interface CallRecordingReadyEvent\n */\nexport interface CallRecordingReadyEvent {\n  /**\n   *\n   * @type {string}\n   * @memberof CallRecordingReadyEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {CallRecording}\n   * @memberof CallRecordingReadyEvent\n   */\n  call_recording: CallRecording;\n  /**\n   *\n   * @type {string}\n   * @memberof CallRecordingReadyEvent\n   */\n  created_at: string;\n  /**\n   * The type of event: \"call.recording_ready\" in this case\n   * @type {string}\n   * @memberof CallRecordingReadyEvent\n   */\n  type: string;\n}\n/**\n * This event is sent when call recording has started\n * @export\n * @interface CallRecordingStartedEvent\n */\nexport interface CallRecordingStartedEvent {\n  /**\n   *\n   * @type {string}\n   * @memberof CallRecordingStartedEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallRecordingStartedEvent\n   */\n  created_at: string;\n  /**\n   * The type of event: \"call.recording_started\" in this case\n   * @type {string}\n   * @memberof CallRecordingStartedEvent\n   */\n  type: string;\n}\n/**\n * This event is sent when call recording has stopped\n * @export\n * @interface CallRecordingStoppedEvent\n */\nexport interface CallRecordingStoppedEvent {\n  /**\n   *\n   * @type {string}\n   * @memberof CallRecordingStoppedEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallRecordingStoppedEvent\n   */\n  created_at: string;\n  /**\n   * The type of event: \"call.recording_stopped\" in this case\n   * @type {string}\n   * @memberof CallRecordingStoppedEvent\n   */\n  type: string;\n}\n/**\n * This event is sent when a user rejects a notification to join a call.\n * @export\n * @interface CallRejectedEvent\n */\nexport interface CallRejectedEvent {\n  /**\n   *\n   * @type {CallResponse}\n   * @memberof CallRejectedEvent\n   */\n  call: CallResponse;\n  /**\n   *\n   * @type {string}\n   * @memberof CallRejectedEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallRejectedEvent\n   */\n  created_at: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallRejectedEvent\n   */\n  reason?: string;\n  /**\n   * The type of event: \"call.rejected\" in this case\n   * @type {string}\n   * @memberof CallRejectedEvent\n   */\n  type: string;\n  /**\n   *\n   * @type {UserResponse}\n   * @memberof CallRejectedEvent\n   */\n  user: UserResponse;\n}\n/**\n *\n * @export\n * @interface CallRequest\n */\nexport interface CallRequest {\n  /**\n   *\n   * @type {{ [key: string]: any; }}\n   * @memberof CallRequest\n   */\n  custom?: { [key: string]: any };\n  /**\n   *\n   * @type {Array<MemberRequest>}\n   * @memberof CallRequest\n   */\n  members?: Array<MemberRequest>;\n  /**\n   *\n   * @type {CallSettingsRequest}\n   * @memberof CallRequest\n   */\n  settings_override?: CallSettingsRequest;\n  /**\n   *\n   * @type {string}\n   * @memberof CallRequest\n   */\n  starts_at?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallRequest\n   */\n  team?: string;\n  /**\n   *\n   * @type {boolean}\n   * @memberof CallRequest\n   */\n  video?: boolean;\n}\n/**\n * Represents a call\n * @export\n * @interface CallResponse\n */\nexport interface CallResponse {\n  /**\n   *\n   * @type {boolean}\n   * @memberof CallResponse\n   */\n  backstage: boolean;\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof CallResponse\n   */\n  blocked_user_ids: Array<string>;\n  /**\n   * The unique identifier for a call (<type>:<id>)\n   * @type {string}\n   * @memberof CallResponse\n   */\n  cid: string;\n  /**\n   * Date/time of creation\n   * @type {string}\n   * @memberof CallResponse\n   */\n  created_at: string;\n  /**\n   *\n   * @type {UserResponse}\n   * @memberof CallResponse\n   */\n  created_by: UserResponse;\n  /**\n   *\n   * @type {string}\n   * @memberof CallResponse\n   */\n  current_session_id: string;\n  /**\n   * Custom data for this object\n   * @type {{ [key: string]: any; }}\n   * @memberof CallResponse\n   */\n  custom: { [key: string]: any };\n  /**\n   *\n   * @type {EgressResponse}\n   * @memberof CallResponse\n   */\n  egress: EgressResponse;\n  /**\n   * Date/time when the call ended\n   * @type {string}\n   * @memberof CallResponse\n   */\n  ended_at?: string;\n  /**\n   * Call ID\n   * @type {string}\n   * @memberof CallResponse\n   */\n  id: string;\n  /**\n   *\n   * @type {CallIngressResponse}\n   * @memberof CallResponse\n   */\n  ingress: CallIngressResponse;\n  /**\n   *\n   * @type {number}\n   * @memberof CallResponse\n   */\n  join_ahead_time_seconds?: number;\n  /**\n   *\n   * @type {boolean}\n   * @memberof CallResponse\n   */\n  recording: boolean;\n  /**\n   *\n   * @type {CallSessionResponse}\n   * @memberof CallResponse\n   */\n  session?: CallSessionResponse;\n  /**\n   *\n   * @type {CallSettingsResponse}\n   * @memberof CallResponse\n   */\n  settings: CallSettingsResponse;\n  /**\n   * Date/time when the call will start\n   * @type {string}\n   * @memberof CallResponse\n   */\n  starts_at?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallResponse\n   */\n  team?: string;\n  /**\n   *\n   * @type {ThumbnailResponse}\n   * @memberof CallResponse\n   */\n  thumbnails?: ThumbnailResponse;\n  /**\n   *\n   * @type {boolean}\n   * @memberof CallResponse\n   */\n  transcribing: boolean;\n  /**\n   * The type of call\n   * @type {string}\n   * @memberof CallResponse\n   */\n  type: string;\n  /**\n   * Date/time of the last update\n   * @type {string}\n   * @memberof CallResponse\n   */\n  updated_at: string;\n}\n/**\n * This event is sent to all call members to notify they are getting called\n * @export\n * @interface CallRingEvent\n */\nexport interface CallRingEvent {\n  /**\n   *\n   * @type {CallResponse}\n   * @memberof CallRingEvent\n   */\n  call: CallResponse;\n  /**\n   *\n   * @type {string}\n   * @memberof CallRingEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallRingEvent\n   */\n  created_at: string;\n  /**\n   * Call members\n   * @type {Array<MemberResponse>}\n   * @memberof CallRingEvent\n   */\n  members: Array<MemberResponse>;\n  /**\n   * Call session ID\n   * @type {string}\n   * @memberof CallRingEvent\n   */\n  session_id: string;\n  /**\n   * The type of event: \"call.notification\" in this case\n   * @type {string}\n   * @memberof CallRingEvent\n   */\n  type: string;\n  /**\n   *\n   * @type {UserResponse}\n   * @memberof CallRingEvent\n   */\n  user: UserResponse;\n  /**\n   *\n   * @type {boolean}\n   * @memberof CallRingEvent\n   */\n  video: boolean;\n}\n/**\n * This event is sent when a call session ends\n * @export\n * @interface CallSessionEndedEvent\n */\nexport interface CallSessionEndedEvent {\n  /**\n   *\n   * @type {CallResponse}\n   * @memberof CallSessionEndedEvent\n   */\n  call: CallResponse;\n  /**\n   *\n   * @type {string}\n   * @memberof CallSessionEndedEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallSessionEndedEvent\n   */\n  created_at: string;\n  /**\n   * Call session ID\n   * @type {string}\n   * @memberof CallSessionEndedEvent\n   */\n  session_id: string;\n  /**\n   * The type of event: \"call.session_ended\" in this case\n   * @type {string}\n   * @memberof CallSessionEndedEvent\n   */\n  type: string;\n}\n\n/**\n * This event is sent when the participant counts in a call session are updated\n * @export\n * @interface CallSessionParticipantCountsUpdatedEvent\n */\nexport interface CallSessionParticipantCountsUpdatedEvent {\n  /**\n   *\n   * @type {number}\n   * @memberof CallSessionParticipantCountsUpdatedEvent\n   */\n  anonymous_participant_count: number;\n  /**\n   *\n   * @type {string}\n   * @memberof CallSessionParticipantCountsUpdatedEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallSessionParticipantCountsUpdatedEvent\n   */\n  created_at: string;\n  /**\n   *\n   * @type {{ [key: string]: number; }}\n   * @memberof CallSessionParticipantCountsUpdatedEvent\n   */\n  participants_count_by_role: { [key: string]: number };\n  /**\n   * Call session ID\n   * @type {string}\n   * @memberof CallSessionParticipantCountsUpdatedEvent\n   */\n  session_id: string;\n  /**\n   * The type of event: \"call.session_participant_count_updated\" in this case\n   * @type {string}\n   * @memberof CallSessionParticipantCountsUpdatedEvent\n   */\n  type: string;\n}\n/**\n * This event is sent when a participant joins a call session\n * @export\n * @interface CallSessionParticipantJoinedEvent\n */\nexport interface CallSessionParticipantJoinedEvent {\n  /**\n   *\n   * @type {string}\n   * @memberof CallSessionParticipantJoinedEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallSessionParticipantJoinedEvent\n   */\n  created_at: string;\n  /**\n   *\n   * @type {CallParticipantResponse}\n   * @memberof CallSessionParticipantJoinedEvent\n   */\n  participant: CallParticipantResponse;\n  /**\n   * Call session ID\n   * @type {string}\n   * @memberof CallSessionParticipantJoinedEvent\n   */\n  session_id: string;\n  /**\n   * The type of event: \"call.session_participant_joined\" in this case\n   * @type {string}\n   * @memberof CallSessionParticipantJoinedEvent\n   */\n  type: string;\n}\n/**\n * This event is sent when a participant leaves a call session\n * @export\n * @interface CallSessionParticipantLeftEvent\n */\nexport interface CallSessionParticipantLeftEvent {\n  /**\n   *\n   * @type {string}\n   * @memberof CallSessionParticipantLeftEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallSessionParticipantLeftEvent\n   */\n  created_at: string;\n  /**\n   *\n   * @type {CallParticipantResponse}\n   * @memberof CallSessionParticipantLeftEvent\n   */\n  participant: CallParticipantResponse;\n  /**\n   * Call session ID\n   * @type {string}\n   * @memberof CallSessionParticipantLeftEvent\n   */\n  session_id: string;\n  /**\n   * The type of event: \"call.session_participant_left\" in this case\n   * @type {string}\n   * @memberof CallSessionParticipantLeftEvent\n   */\n  type: string;\n}\n/**\n *\n * @export\n * @interface CallSessionResponse\n */\nexport interface CallSessionResponse {\n  /**\n   *\n   * @type {{ [key: string]: string; }}\n   * @memberof CallSessionResponse\n   */\n  accepted_by: { [key: string]: string };\n  /**\n   *\n   * @type {number}\n   * @memberof CallSessionResponse\n   */\n  anonymous_participant_count: number;\n  /**\n   *\n   * @type {string}\n   * @memberof CallSessionResponse\n   */\n  ended_at?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallSessionResponse\n   */\n  id: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallSessionResponse\n   */\n  live_ended_at?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallSessionResponse\n   */\n  live_started_at?: string;\n  /**\n   *\n   * @type {{ [key: string]: string; }}\n   * @memberof CallSessionResponse\n   */\n  missed_by: { [key: string]: string };\n  /**\n   *\n   * @type {Array<CallParticipantResponse>}\n   * @memberof CallSessionResponse\n   */\n  participants: Array<CallParticipantResponse>;\n  /**\n   *\n   * @type {{ [key: string]: number; }}\n   * @memberof CallSessionResponse\n   */\n  participants_count_by_role: { [key: string]: number };\n  /**\n   *\n   * @type {{ [key: string]: string; }}\n   * @memberof CallSessionResponse\n   */\n  rejected_by: { [key: string]: string };\n  /**\n   *\n   * @type {string}\n   * @memberof CallSessionResponse\n   */\n  started_at?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallSessionResponse\n   */\n  timer_ends_at?: string;\n}\n/**\n * This event is sent when a call session starts\n * @export\n * @interface CallSessionStartedEvent\n */\nexport interface CallSessionStartedEvent {\n  /**\n   *\n   * @type {CallResponse}\n   * @memberof CallSessionStartedEvent\n   */\n  call: CallResponse;\n  /**\n   *\n   * @type {string}\n   * @memberof CallSessionStartedEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallSessionStartedEvent\n   */\n  created_at: string;\n  /**\n   * Call session ID\n   * @type {string}\n   * @memberof CallSessionStartedEvent\n   */\n  session_id: string;\n  /**\n   * The type of event: \"call.session_started\" in this case\n   * @type {string}\n   * @memberof CallSessionStartedEvent\n   */\n  type: string;\n}\n/**\n *\n * @export\n * @interface CallSettingsRequest\n */\nexport interface CallSettingsRequest {\n  /**\n   *\n   * @type {AudioSettingsRequest}\n   * @memberof CallSettingsRequest\n   */\n  audio?: AudioSettingsRequest;\n  /**\n   *\n   * @type {BackstageSettingsRequest}\n   * @memberof CallSettingsRequest\n   */\n  backstage?: BackstageSettingsRequest;\n  /**\n   *\n   * @type {BroadcastSettingsRequest}\n   * @memberof CallSettingsRequest\n   */\n  broadcasting?: BroadcastSettingsRequest;\n  /**\n   *\n   * @type {GeofenceSettingsRequest}\n   * @memberof CallSettingsRequest\n   */\n  geofencing?: GeofenceSettingsRequest;\n  /**\n   *\n   * @type {LimitsSettingsRequest}\n   * @memberof CallSettingsRequest\n   */\n  limits?: LimitsSettingsRequest;\n  /**\n   *\n   * @type {RecordSettingsRequest}\n   * @memberof CallSettingsRequest\n   */\n  recording?: RecordSettingsRequest;\n  /**\n   *\n   * @type {RingSettingsRequest}\n   * @memberof CallSettingsRequest\n   */\n  ring?: RingSettingsRequest;\n  /**\n   *\n   * @type {ScreensharingSettingsRequest}\n   * @memberof CallSettingsRequest\n   */\n  screensharing?: ScreensharingSettingsRequest;\n  /**\n   *\n   * @type {ThumbnailsSettingsRequest}\n   * @memberof CallSettingsRequest\n   */\n  thumbnails?: ThumbnailsSettingsRequest;\n  /**\n   *\n   * @type {TranscriptionSettingsRequest}\n   * @memberof CallSettingsRequest\n   */\n  transcription?: TranscriptionSettingsRequest;\n  /**\n   *\n   * @type {VideoSettingsRequest}\n   * @memberof CallSettingsRequest\n   */\n  video?: VideoSettingsRequest;\n}\n/**\n *\n * @export\n * @interface CallSettingsResponse\n */\nexport interface CallSettingsResponse {\n  /**\n   *\n   * @type {AudioSettingsResponse}\n   * @memberof CallSettingsResponse\n   */\n  audio: AudioSettingsResponse;\n  /**\n   *\n   * @type {BackstageSettingsResponse}\n   * @memberof CallSettingsResponse\n   */\n  backstage: BackstageSettingsResponse;\n  /**\n   *\n   * @type {BroadcastSettingsResponse}\n   * @memberof CallSettingsResponse\n   */\n  broadcasting: BroadcastSettingsResponse;\n  /**\n   *\n   * @type {GeofenceSettingsResponse}\n   * @memberof CallSettingsResponse\n   */\n  geofencing: GeofenceSettingsResponse;\n  /**\n   *\n   * @type {LimitsSettingsResponse}\n   * @memberof CallSettingsResponse\n   */\n  limits: LimitsSettingsResponse;\n  /**\n   *\n   * @type {RecordSettingsResponse}\n   * @memberof CallSettingsResponse\n   */\n  recording: RecordSettingsResponse;\n  /**\n   *\n   * @type {RingSettingsResponse}\n   * @memberof CallSettingsResponse\n   */\n  ring: RingSettingsResponse;\n  /**\n   *\n   * @type {ScreensharingSettingsResponse}\n   * @memberof CallSettingsResponse\n   */\n  screensharing: ScreensharingSettingsResponse;\n  /**\n   *\n   * @type {ThumbnailsSettingsResponse}\n   * @memberof CallSettingsResponse\n   */\n  thumbnails: ThumbnailsSettingsResponse;\n  /**\n   *\n   * @type {TranscriptionSettingsResponse}\n   * @memberof CallSettingsResponse\n   */\n  transcription: TranscriptionSettingsResponse;\n  /**\n   *\n   * @type {VideoSettingsResponse}\n   * @memberof CallSettingsResponse\n   */\n  video: VideoSettingsResponse;\n}\n/**\n *\n * @export\n * @interface CallStateResponseFields\n */\nexport interface CallStateResponseFields {\n  /**\n   *\n   * @type {CallResponse}\n   * @memberof CallStateResponseFields\n   */\n  call: CallResponse;\n  /**\n   * List of call members\n   * @type {Array<MemberResponse>}\n   * @memberof CallStateResponseFields\n   */\n  members: Array<MemberResponse>;\n  /**\n   *\n   * @type {MemberResponse}\n   * @memberof CallStateResponseFields\n   */\n  membership?: MemberResponse;\n  /**\n   *\n   * @type {Array<OwnCapability>}\n   * @memberof CallStateResponseFields\n   */\n  own_capabilities: Array<OwnCapability>;\n}\n/**\n *\n * @export\n * @interface CallStatsReportSummaryResponse\n */\nexport interface CallStatsReportSummaryResponse {\n  /**\n   *\n   * @type {string}\n   * @memberof CallStatsReportSummaryResponse\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {number}\n   * @memberof CallStatsReportSummaryResponse\n   */\n  call_duration_seconds: number;\n  /**\n   *\n   * @type {string}\n   * @memberof CallStatsReportSummaryResponse\n   */\n  call_session_id: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallStatsReportSummaryResponse\n   */\n  call_status: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallStatsReportSummaryResponse\n   */\n  created_at?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallStatsReportSummaryResponse\n   */\n  first_stats_time: string;\n  /**\n   *\n   * @type {number}\n   * @memberof CallStatsReportSummaryResponse\n   */\n  quality_score?: number;\n}\n/**\n *\n * @export\n * @interface CallTimeline\n */\nexport interface CallTimeline {\n  /**\n   *\n   * @type {Array<CallEvent>}\n   * @memberof CallTimeline\n   */\n  events: Array<CallEvent>;\n}\n/**\n * CallTranscription represents a transcription of a call.\n * @export\n * @interface CallTranscription\n */\nexport interface CallTranscription {\n  /**\n   *\n   * @type {string}\n   * @memberof CallTranscription\n   */\n  end_time: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallTranscription\n   */\n  filename: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallTranscription\n   */\n  start_time: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallTranscription\n   */\n  url: string;\n}\n/**\n * This event is sent when call transcription has failed\n * @export\n * @interface CallTranscriptionFailedEvent\n */\nexport interface CallTranscriptionFailedEvent {\n  /**\n   *\n   * @type {string}\n   * @memberof CallTranscriptionFailedEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallTranscriptionFailedEvent\n   */\n  created_at: string;\n  /**\n   * The type of event: \"call.transcription_failed\" in this case\n   * @type {string}\n   * @memberof CallTranscriptionFailedEvent\n   */\n  type: string;\n}\n/**\n * This event is sent when call transcription is ready\n * @export\n * @interface CallTranscriptionReadyEvent\n */\nexport interface CallTranscriptionReadyEvent {\n  /**\n   *\n   * @type {string}\n   * @memberof CallTranscriptionReadyEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {CallTranscription}\n   * @memberof CallTranscriptionReadyEvent\n   */\n  call_transcription: CallTranscription;\n  /**\n   *\n   * @type {string}\n   * @memberof CallTranscriptionReadyEvent\n   */\n  created_at: string;\n  /**\n   * The type of event: \"call.transcription_ready\" in this case\n   * @type {string}\n   * @memberof CallTranscriptionReadyEvent\n   */\n  type: string;\n}\n/**\n * This event is sent when call transcription has started\n * @export\n * @interface CallTranscriptionStartedEvent\n */\nexport interface CallTranscriptionStartedEvent {\n  /**\n   *\n   * @type {string}\n   * @memberof CallTranscriptionStartedEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallTranscriptionStartedEvent\n   */\n  created_at: string;\n  /**\n   * The type of event: \"call.transcription_started\" in this case\n   * @type {string}\n   * @memberof CallTranscriptionStartedEvent\n   */\n  type: string;\n}\n/**\n * This event is sent when call transcription has stopped\n * @export\n * @interface CallTranscriptionStoppedEvent\n */\nexport interface CallTranscriptionStoppedEvent {\n  /**\n   *\n   * @type {string}\n   * @memberof CallTranscriptionStoppedEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallTranscriptionStoppedEvent\n   */\n  created_at: string;\n  /**\n   * The type of event: \"call.transcription_stopped\" in this case\n   * @type {string}\n   * @memberof CallTranscriptionStoppedEvent\n   */\n  type: string;\n}\n/**\n * This event is sent when a call is updated, clients should use this update the local state of the call.\n * This event also contains the capabilities by role for the call, clients should update the own_capability for the current.\n * @export\n * @interface CallUpdatedEvent\n */\nexport interface CallUpdatedEvent {\n  /**\n   *\n   * @type {CallResponse}\n   * @memberof CallUpdatedEvent\n   */\n  call: CallResponse;\n  /**\n   *\n   * @type {string}\n   * @memberof CallUpdatedEvent\n   */\n  call_cid: string;\n  /**\n   * The capabilities by role for this call\n   * @type {{ [key: string]: Array<string>; }}\n   * @memberof CallUpdatedEvent\n   */\n  capabilities_by_role: { [key: string]: Array<string> };\n  /**\n   *\n   * @type {string}\n   * @memberof CallUpdatedEvent\n   */\n  created_at: string;\n  /**\n   * The type of event: \"call.ended\" in this case\n   * @type {string}\n   * @memberof CallUpdatedEvent\n   */\n  type: string;\n}\n/**\n * This event is sent when a call member is muted\n * @export\n * @interface CallUserMutedEvent\n */\nexport interface CallUserMutedEvent {\n  /**\n   *\n   * @type {string}\n   * @memberof CallUserMutedEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallUserMutedEvent\n   */\n  created_at: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CallUserMutedEvent\n   */\n  from_user_id: string;\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof CallUserMutedEvent\n   */\n  muted_user_ids: Array<string>;\n  /**\n   * The type of event: \"call.user_muted\" in this case\n   * @type {string}\n   * @memberof CallUserMutedEvent\n   */\n  type: string;\n}\n/**\n *\n * @export\n * @interface ChannelConfigWithInfo\n */\nexport interface ChannelConfigWithInfo {\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof ChannelConfigWithInfo\n   */\n  allowed_flag_reasons?: Array<string>;\n  /**\n   *\n   * @type {string}\n   * @memberof ChannelConfigWithInfo\n   */\n  automod: ChannelConfigWithInfoAutomodEnum;\n  /**\n   *\n   * @type {string}\n   * @memberof ChannelConfigWithInfo\n   */\n  automod_behavior: ChannelConfigWithInfoAutomodBehaviorEnum;\n  /**\n   *\n   * @type {Thresholds}\n   * @memberof ChannelConfigWithInfo\n   */\n  automod_thresholds?: Thresholds;\n  /**\n   *\n   * @type {string}\n   * @memberof ChannelConfigWithInfo\n   */\n  blocklist?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof ChannelConfigWithInfo\n   */\n  blocklist_behavior?: ChannelConfigWithInfoBlocklistBehaviorEnum;\n  /**\n   *\n   * @type {Array<BlockListOptions>}\n   * @memberof ChannelConfigWithInfo\n   */\n  blocklists?: Array<BlockListOptions>;\n  /**\n   *\n   * @type {Array<Command>}\n   * @memberof ChannelConfigWithInfo\n   */\n  commands: Array<Command>;\n  /**\n   *\n   * @type {boolean}\n   * @memberof ChannelConfigWithInfo\n   */\n  connect_events: boolean;\n  /**\n   *\n   * @type {string}\n   * @memberof ChannelConfigWithInfo\n   */\n  created_at: string;\n  /**\n   *\n   * @type {boolean}\n   * @memberof ChannelConfigWithInfo\n   */\n  custom_events: boolean;\n  /**\n   *\n   * @type {{ [key: string]: Array<string>; }}\n   * @memberof ChannelConfigWithInfo\n   */\n  grants?: { [key: string]: Array<string> };\n  /**\n   *\n   * @type {boolean}\n   * @memberof ChannelConfigWithInfo\n   */\n  mark_messages_pending: boolean;\n  /**\n   *\n   * @type {number}\n   * @memberof ChannelConfigWithInfo\n   */\n  max_message_length: number;\n  /**\n   *\n   * @type {boolean}\n   * @memberof ChannelConfigWithInfo\n   */\n  mutes: boolean;\n  /**\n   *\n   * @type {string}\n   * @memberof ChannelConfigWithInfo\n   */\n  name: string;\n  /**\n   *\n   * @type {number}\n   * @memberof ChannelConfigWithInfo\n   */\n  partition_size?: number;\n  /**\n   *\n   * @type {number}\n   * @memberof ChannelConfigWithInfo\n   */\n  partition_ttl?: number;\n  /**\n   *\n   * @type {boolean}\n   * @memberof ChannelConfigWithInfo\n   */\n  polls: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof ChannelConfigWithInfo\n   */\n  push_notifications: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof ChannelConfigWithInfo\n   */\n  quotes: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof ChannelConfigWithInfo\n   */\n  reactions: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof ChannelConfigWithInfo\n   */\n  read_events: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof ChannelConfigWithInfo\n   */\n  reminders: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof ChannelConfigWithInfo\n   */\n  replies: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof ChannelConfigWithInfo\n   */\n  search: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof ChannelConfigWithInfo\n   */\n  typing_events: boolean;\n  /**\n   *\n   * @type {string}\n   * @memberof ChannelConfigWithInfo\n   */\n  updated_at: string;\n  /**\n   *\n   * @type {boolean}\n   * @memberof ChannelConfigWithInfo\n   */\n  uploads: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof ChannelConfigWithInfo\n   */\n  url_enrichment: boolean;\n}\n\n/**\n * @export\n */\nexport const ChannelConfigWithInfoAutomodEnum = {\n  DISABLED: 'disabled',\n  SIMPLE: 'simple',\n  AI: 'AI',\n} as const;\nexport type ChannelConfigWithInfoAutomodEnum =\n  (typeof ChannelConfigWithInfoAutomodEnum)[keyof typeof ChannelConfigWithInfoAutomodEnum];\n\n/**\n * @export\n */\nexport const ChannelConfigWithInfoAutomodBehaviorEnum = {\n  FLAG: 'flag',\n  BLOCK: 'block',\n  SHADOW_BLOCK: 'shadow_block',\n} as const;\nexport type ChannelConfigWithInfoAutomodBehaviorEnum =\n  (typeof ChannelConfigWithInfoAutomodBehaviorEnum)[keyof typeof ChannelConfigWithInfoAutomodBehaviorEnum];\n\n/**\n * @export\n */\nexport const ChannelConfigWithInfoBlocklistBehaviorEnum = {\n  FLAG: 'flag',\n  BLOCK: 'block',\n  SHADOW_BLOCK: 'shadow_block',\n} as const;\nexport type ChannelConfigWithInfoBlocklistBehaviorEnum =\n  (typeof ChannelConfigWithInfoBlocklistBehaviorEnum)[keyof typeof ChannelConfigWithInfoBlocklistBehaviorEnum];\n\n/**\n *\n * @export\n * @interface ChannelMember\n */\nexport interface ChannelMember {\n  /**\n   * Expiration date of the ban\n   * @type {string}\n   * @memberof ChannelMember\n   */\n  ban_expires?: string;\n  /**\n   * Whether member is banned this channel or not\n   * @type {boolean}\n   * @memberof ChannelMember\n   */\n  banned: boolean;\n  /**\n   * Role of the member in the channel\n   * @type {string}\n   * @memberof ChannelMember\n   */\n  channel_role: string;\n  /**\n   * Date/time of creation\n   * @type {string}\n   * @memberof ChannelMember\n   */\n  created_at: string;\n  /**\n   *\n   * @type {string}\n   * @memberof ChannelMember\n   */\n  deleted_at?: string;\n  /**\n   * Date when invite was accepted\n   * @type {string}\n   * @memberof ChannelMember\n   */\n  invite_accepted_at?: string;\n  /**\n   * Date when invite was rejected\n   * @type {string}\n   * @memberof ChannelMember\n   */\n  invite_rejected_at?: string;\n  /**\n   * Whether member was invited or not\n   * @type {boolean}\n   * @memberof ChannelMember\n   */\n  invited?: boolean;\n  /**\n   * Whether member is channel moderator or not\n   * @type {boolean}\n   * @memberof ChannelMember\n   */\n  is_moderator?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof ChannelMember\n   */\n  notifications_muted: boolean;\n  /**\n   * Whether member is shadow banned in this channel or not\n   * @type {boolean}\n   * @memberof ChannelMember\n   */\n  shadow_banned: boolean;\n  /**\n   *\n   * @type {string}\n   * @memberof ChannelMember\n   */\n  status?: string;\n  /**\n   * Date/time of the last update\n   * @type {string}\n   * @memberof ChannelMember\n   */\n  updated_at: string;\n  /**\n   *\n   * @type {UserObject}\n   * @memberof ChannelMember\n   */\n  user?: UserObject;\n  /**\n   *\n   * @type {string}\n   * @memberof ChannelMember\n   */\n  user_id?: string;\n}\n/**\n *\n * @export\n * @interface ChannelMute\n */\nexport interface ChannelMute {\n  /**\n   *\n   * @type {ChannelResponse}\n   * @memberof ChannelMute\n   */\n  channel?: ChannelResponse;\n  /**\n   * Date/time of creation\n   * @type {string}\n   * @memberof ChannelMute\n   */\n  created_at: string;\n  /**\n   * Date/time of mute expiration\n   * @type {string}\n   * @memberof ChannelMute\n   */\n  expires?: string;\n  /**\n   * Date/time of the last update\n   * @type {string}\n   * @memberof ChannelMute\n   */\n  updated_at: string;\n  /**\n   *\n   * @type {UserObject}\n   * @memberof ChannelMute\n   */\n  user?: UserObject;\n}\n/**\n * Represents channel in chat\n * @export\n * @interface ChannelResponse\n */\nexport interface ChannelResponse {\n  /**\n   * Whether auto translation is enabled or not\n   * @type {boolean}\n   * @memberof ChannelResponse\n   */\n  auto_translation_enabled?: boolean;\n  /**\n   * Language to translate to when auto translation is active\n   * @type {string}\n   * @memberof ChannelResponse\n   */\n  auto_translation_language?: string;\n  /**\n   * Channel CID (<type>:<id>)\n   * @type {string}\n   * @memberof ChannelResponse\n   */\n  cid: string;\n  /**\n   *\n   * @type {ChannelConfigWithInfo}\n   * @memberof ChannelResponse\n   */\n  config?: ChannelConfigWithInfo;\n  /**\n   * Cooldown period after sending each message\n   * @type {number}\n   * @memberof ChannelResponse\n   */\n  cooldown?: number;\n  /**\n   * Date/time of creation\n   * @type {string}\n   * @memberof ChannelResponse\n   */\n  created_at: string;\n  /**\n   *\n   * @type {UserObject}\n   * @memberof ChannelResponse\n   */\n  created_by?: UserObject;\n  /**\n   *\n   * @type {{ [key: string]: any; }}\n   * @memberof ChannelResponse\n   */\n  custom: { [key: string]: any };\n  /**\n   * Date/time of deletion\n   * @type {string}\n   * @memberof ChannelResponse\n   */\n  deleted_at?: string;\n  /**\n   *\n   * @type {boolean}\n   * @memberof ChannelResponse\n   */\n  disabled: boolean;\n  /**\n   * Whether channel is frozen or not\n   * @type {boolean}\n   * @memberof ChannelResponse\n   */\n  frozen: boolean;\n  /**\n   * Whether this channel is hidden by current user or not\n   * @type {boolean}\n   * @memberof ChannelResponse\n   */\n  hidden?: boolean;\n  /**\n   * Date since when the message history is accessible\n   * @type {string}\n   * @memberof ChannelResponse\n   */\n  hide_messages_before?: string;\n  /**\n   * Channel unique ID\n   * @type {string}\n   * @memberof ChannelResponse\n   */\n  id: string;\n  /**\n   * Date of the last message sent\n   * @type {string}\n   * @memberof ChannelResponse\n   */\n  last_message_at?: string;\n  /**\n   * Number of members in the channel\n   * @type {number}\n   * @memberof ChannelResponse\n   */\n  member_count?: number;\n  /**\n   * List of channel members (max 100)\n   * @type {Array<ChannelMember>}\n   * @memberof ChannelResponse\n   */\n  members?: Array<ChannelMember>;\n  /**\n   * Date of mute expiration\n   * @type {string}\n   * @memberof ChannelResponse\n   */\n  mute_expires_at?: string;\n  /**\n   * Whether this channel is muted or not\n   * @type {boolean}\n   * @memberof ChannelResponse\n   */\n  muted?: boolean;\n  /**\n   * List of channel capabilities of authenticated user\n   * @type {Array<string>}\n   * @memberof ChannelResponse\n   */\n  own_capabilities?: Array<string>;\n  /**\n   * Team the channel belongs to (multi-tenant only)\n   * @type {string}\n   * @memberof ChannelResponse\n   */\n  team?: string;\n  /**\n   * Date of the latest truncation of the channel\n   * @type {string}\n   * @memberof ChannelResponse\n   */\n  truncated_at?: string;\n  /**\n   *\n   * @type {UserObject}\n   * @memberof ChannelResponse\n   */\n  truncated_by?: UserObject;\n  /**\n   * Type of the channel\n   * @type {string}\n   * @memberof ChannelResponse\n   */\n  type: string;\n  /**\n   * Date/time of the last update\n   * @type {string}\n   * @memberof ChannelResponse\n   */\n  updated_at: string;\n}\n/**\n * This event is sent when closed captions are being sent in a call, clients should use this to show the closed captions in the call screen\n * @export\n * @interface ClosedCaptionEvent\n */\nexport interface ClosedCaptionEvent {\n  /**\n   *\n   * @type {string}\n   * @memberof ClosedCaptionEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {CallClosedCaption}\n   * @memberof ClosedCaptionEvent\n   */\n  closed_caption: CallClosedCaption;\n  /**\n   *\n   * @type {string}\n   * @memberof ClosedCaptionEvent\n   */\n  created_at: string;\n  /**\n   * The type of event: \"call.closed_caption\" in this case\n   * @type {string}\n   * @memberof ClosedCaptionEvent\n   */\n  type: string;\n}\n/**\n *\n * @export\n * @interface CollectUserFeedbackRequest\n */\nexport interface CollectUserFeedbackRequest {\n  /**\n   *\n   * @type {{ [key: string]: any; }}\n   * @memberof CollectUserFeedbackRequest\n   */\n  custom?: { [key: string]: any };\n  /**\n   *\n   * @type {number}\n   * @memberof CollectUserFeedbackRequest\n   */\n  rating: number;\n  /**\n   *\n   * @type {string}\n   * @memberof CollectUserFeedbackRequest\n   */\n  reason?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CollectUserFeedbackRequest\n   */\n  sdk: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CollectUserFeedbackRequest\n   */\n  sdk_version: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CollectUserFeedbackRequest\n   */\n  user_session_id: string;\n}\n/**\n *\n * @export\n * @interface CollectUserFeedbackResponse\n */\nexport interface CollectUserFeedbackResponse {\n  /**\n   * Duration of the request in milliseconds\n   * @type {string}\n   * @memberof CollectUserFeedbackResponse\n   */\n  duration: string;\n}\n/**\n * Represents custom chat command\n * @export\n * @interface Command\n */\nexport interface Command {\n  /**\n   * Arguments help text, shown in commands auto-completion\n   * @type {string}\n   * @memberof Command\n   */\n  args: string;\n  /**\n   * Date/time of creation\n   * @type {string}\n   * @memberof Command\n   */\n  readonly created_at?: string;\n  /**\n   * Description, shown in commands auto-completion\n   * @type {string}\n   * @memberof Command\n   */\n  description: string;\n  /**\n   * Unique command name\n   * @type {string}\n   * @memberof Command\n   */\n  name: string;\n  /**\n   * Set name used for grouping commands\n   * @type {string}\n   * @memberof Command\n   */\n  set: string;\n  /**\n   * Date/time of the last update\n   * @type {string}\n   * @memberof Command\n   */\n  readonly updated_at?: string;\n}\n/**\n *\n * @export\n * @interface ConnectUserDetailsRequest\n */\nexport interface ConnectUserDetailsRequest {\n  /**\n   *\n   * @type {{ [key: string]: any; }}\n   * @memberof ConnectUserDetailsRequest\n   */\n  custom?: { [key: string]: any };\n  /**\n   *\n   * @type {string}\n   * @memberof ConnectUserDetailsRequest\n   */\n  id: string;\n  /**\n   *\n   * @type {string}\n   * @memberof ConnectUserDetailsRequest\n   */\n  image?: string;\n  /**\n   *\n   * @type {boolean}\n   * @memberof ConnectUserDetailsRequest\n   */\n  invisible?: boolean;\n  /**\n   *\n   * @type {string}\n   * @memberof ConnectUserDetailsRequest\n   */\n  language?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof ConnectUserDetailsRequest\n   */\n  name?: string;\n  /**\n   *\n   * @type {PrivacySettings}\n   * @memberof ConnectUserDetailsRequest\n   */\n  privacy_settings?: PrivacySettings;\n  /**\n   *\n   * @type {PushNotificationSettingsInput}\n   * @memberof ConnectUserDetailsRequest\n   */\n  push_notifications?: PushNotificationSettingsInput;\n}\n/**\n * This event is sent when the WS connection is established and authenticated, this event contains the full user object as it is stored on the server\n * @export\n * @interface ConnectedEvent\n */\nexport interface ConnectedEvent {\n  /**\n   * The connection_id for this client\n   * @type {string}\n   * @memberof ConnectedEvent\n   */\n  connection_id: string;\n  /**\n   *\n   * @type {string}\n   * @memberof ConnectedEvent\n   */\n  created_at: string;\n  /**\n   *\n   * @type {OwnUserResponse}\n   * @memberof ConnectedEvent\n   */\n  me: OwnUserResponse;\n  /**\n   * The type of event: \"connection.ok\" in this case\n   * @type {string}\n   * @memberof ConnectedEvent\n   */\n  type: string;\n}\n/**\n * This event is sent when the WS connection fails\n * @export\n * @interface ConnectionErrorEvent\n */\nexport interface ConnectionErrorEvent {\n  /**\n   *\n   * @type {string}\n   * @memberof ConnectionErrorEvent\n   */\n  connection_id: string;\n  /**\n   *\n   * @type {string}\n   * @memberof ConnectionErrorEvent\n   */\n  created_at: string;\n  /**\n   *\n   * @type {APIError}\n   * @memberof ConnectionErrorEvent\n   */\n  error: APIError;\n  /**\n   * The type of event: \"connection.ok\" in this case\n   * @type {string}\n   * @memberof ConnectionErrorEvent\n   */\n  type: string;\n}\n/**\n *\n * @export\n * @interface Coordinates\n */\nexport interface Coordinates {\n  /**\n   *\n   * @type {number}\n   * @memberof Coordinates\n   */\n  latitude: number;\n  /**\n   *\n   * @type {number}\n   * @memberof Coordinates\n   */\n  longitude: number;\n}\n/**\n *\n * @export\n * @interface CreateDeviceRequest\n */\nexport interface CreateDeviceRequest {\n  /**\n   * Device ID\n   * @type {string}\n   * @memberof CreateDeviceRequest\n   */\n  id: string;\n  /**\n   * Push provider\n   * @type {string}\n   * @memberof CreateDeviceRequest\n   */\n  push_provider: CreateDeviceRequestPushProviderEnum;\n  /**\n   * Push provider name\n   * @type {string}\n   * @memberof CreateDeviceRequest\n   */\n  push_provider_name?: string;\n  /**\n   * When true the token is for Apple VoIP push notifications\n   * @type {boolean}\n   * @memberof CreateDeviceRequest\n   */\n  voip_token?: boolean;\n}\n\n/**\n * @export\n */\nexport const CreateDeviceRequestPushProviderEnum = {\n  FIREBASE: 'firebase',\n  APN: 'apn',\n  HUAWEI: 'huawei',\n  XIAOMI: 'xiaomi',\n} as const;\nexport type CreateDeviceRequestPushProviderEnum =\n  (typeof CreateDeviceRequestPushProviderEnum)[keyof typeof CreateDeviceRequestPushProviderEnum];\n\n/**\n *\n * @export\n * @interface CreateGuestRequest\n */\nexport interface CreateGuestRequest {\n  /**\n   *\n   * @type {UserRequest}\n   * @memberof CreateGuestRequest\n   */\n  user: UserRequest;\n}\n/**\n *\n * @export\n * @interface CreateGuestResponse\n */\nexport interface CreateGuestResponse {\n  /**\n   * the access token to authenticate the user\n   * @type {string}\n   * @memberof CreateGuestResponse\n   */\n  access_token: string;\n  /**\n   * Duration of the request in milliseconds\n   * @type {string}\n   * @memberof CreateGuestResponse\n   */\n  duration: string;\n  /**\n   *\n   * @type {UserResponse}\n   * @memberof CreateGuestResponse\n   */\n  user: UserResponse;\n}\n/**\n *\n * @export\n * @interface Credentials\n */\nexport interface Credentials {\n  /**\n   *\n   * @type {Array<ICEServer>}\n   * @memberof Credentials\n   */\n  ice_servers: Array<ICEServer>;\n  /**\n   *\n   * @type {SFUResponse}\n   * @memberof Credentials\n   */\n  server: SFUResponse;\n  /**\n   *\n   * @type {string}\n   * @memberof Credentials\n   */\n  token: string;\n}\n/**\n * A custom event, this event is used to send custom events to other participants in the call.\n * @export\n * @interface CustomVideoEvent\n */\nexport interface CustomVideoEvent {\n  /**\n   *\n   * @type {string}\n   * @memberof CustomVideoEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof CustomVideoEvent\n   */\n  created_at: string;\n  /**\n   * Custom data for this object\n   * @type {{ [key: string]: any; }}\n   * @memberof CustomVideoEvent\n   */\n  custom: { [key: string]: any };\n  /**\n   * The type of event, \"custom\" in this case\n   * @type {string}\n   * @memberof CustomVideoEvent\n   */\n  type: string;\n  /**\n   *\n   * @type {UserResponse}\n   * @memberof CustomVideoEvent\n   */\n  user: UserResponse;\n}\n/**\n *\n * @export\n * @interface DeleteRecordingResponse\n */\nexport interface DeleteRecordingResponse {\n  /**\n   *\n   * @type {string}\n   * @memberof DeleteRecordingResponse\n   */\n  duration: string;\n}\n/**\n *\n * @export\n * @interface DeleteTranscriptionResponse\n */\nexport interface DeleteTranscriptionResponse {\n  /**\n   *\n   * @type {string}\n   * @memberof DeleteTranscriptionResponse\n   */\n  duration: string;\n}\n/**\n *\n * @export\n * @interface Device\n */\nexport interface Device {\n  /**\n   * Date/time of creation\n   * @type {string}\n   * @memberof Device\n   */\n  created_at: string;\n  /**\n   * Whether device is disabled or not\n   * @type {boolean}\n   * @memberof Device\n   */\n  disabled?: boolean;\n  /**\n   * Reason explaining why device had been disabled\n   * @type {string}\n   * @memberof Device\n   */\n  disabled_reason?: string;\n  /**\n   * Device ID\n   * @type {string}\n   * @memberof Device\n   */\n  id: string;\n  /**\n   * Push provider\n   * @type {string}\n   * @memberof Device\n   */\n  push_provider: string;\n  /**\n   * Push provider name\n   * @type {string}\n   * @memberof Device\n   */\n  push_provider_name?: string;\n  /**\n   * User ID\n   * @type {string}\n   * @memberof Device\n   */\n  user_id: string;\n  /**\n   * When true the token is for Apple VoIP push notifications\n   * @type {boolean}\n   * @memberof Device\n   */\n  voip?: boolean;\n}\n/**\n *\n * @export\n * @interface EdgeResponse\n */\nexport interface EdgeResponse {\n  /**\n   *\n   * @type {string}\n   * @memberof EdgeResponse\n   */\n  continent_code: string;\n  /**\n   *\n   * @type {string}\n   * @memberof EdgeResponse\n   */\n  country_iso_code: string;\n  /**\n   *\n   * @type {number}\n   * @memberof EdgeResponse\n   */\n  green: number;\n  /**\n   *\n   * @type {string}\n   * @memberof EdgeResponse\n   */\n  id: string;\n  /**\n   *\n   * @type {string}\n   * @memberof EdgeResponse\n   */\n  latency_test_url: string;\n  /**\n   *\n   * @type {number}\n   * @memberof EdgeResponse\n   */\n  latitude: number;\n  /**\n   *\n   * @type {number}\n   * @memberof EdgeResponse\n   */\n  longitude: number;\n  /**\n   *\n   * @type {number}\n   * @memberof EdgeResponse\n   */\n  red: number;\n  /**\n   *\n   * @type {string}\n   * @memberof EdgeResponse\n   */\n  subdivision_iso_code: string;\n  /**\n   *\n   * @type {number}\n   * @memberof EdgeResponse\n   */\n  yellow: number;\n}\n/**\n *\n * @export\n * @interface EgressHLSResponse\n */\nexport interface EgressHLSResponse {\n  /**\n   *\n   * @type {string}\n   * @memberof EgressHLSResponse\n   */\n  playlist_url: string;\n}\n/**\n *\n * @export\n * @interface EgressRTMPResponse\n */\nexport interface EgressRTMPResponse {\n  /**\n   *\n   * @type {string}\n   * @memberof EgressRTMPResponse\n   */\n  name: string;\n  /**\n   *\n   * @type {string}\n   * @memberof EgressRTMPResponse\n   */\n  stream_key: string;\n  /**\n   *\n   * @type {string}\n   * @memberof EgressRTMPResponse\n   */\n  url: string;\n}\n/**\n *\n * @export\n * @interface EgressResponse\n */\nexport interface EgressResponse {\n  /**\n   *\n   * @type {boolean}\n   * @memberof EgressResponse\n   */\n  broadcasting: boolean;\n  /**\n   *\n   * @type {EgressHLSResponse}\n   * @memberof EgressResponse\n   */\n  hls?: EgressHLSResponse;\n  /**\n   *\n   * @type {Array<EgressRTMPResponse>}\n   * @memberof EgressResponse\n   */\n  rtmps: Array<EgressRTMPResponse>;\n}\n/**\n *\n * @export\n * @interface EndCallResponse\n */\nexport interface EndCallResponse {\n  /**\n   *\n   * @type {string}\n   * @memberof EndCallResponse\n   */\n  duration: string;\n}\n/**\n *\n * @export\n * @interface GeofenceSettingsRequest\n */\nexport interface GeofenceSettingsRequest {\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof GeofenceSettingsRequest\n   */\n  names?: Array<string>;\n}\n/**\n *\n * @export\n * @interface GeofenceSettingsResponse\n */\nexport interface GeofenceSettingsResponse {\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof GeofenceSettingsResponse\n   */\n  names: Array<string>;\n}\n/**\n *\n * @export\n * @interface GeolocationResult\n */\nexport interface GeolocationResult {\n  /**\n   *\n   * @type {number}\n   * @memberof GeolocationResult\n   */\n  accuracy_radius: number;\n  /**\n   *\n   * @type {string}\n   * @memberof GeolocationResult\n   */\n  city: string;\n  /**\n   *\n   * @type {string}\n   * @memberof GeolocationResult\n   */\n  continent: string;\n  /**\n   *\n   * @type {string}\n   * @memberof GeolocationResult\n   */\n  continent_code: string;\n  /**\n   *\n   * @type {string}\n   * @memberof GeolocationResult\n   */\n  country: string;\n  /**\n   *\n   * @type {string}\n   * @memberof GeolocationResult\n   */\n  country_iso_code: string;\n  /**\n   *\n   * @type {number}\n   * @memberof GeolocationResult\n   */\n  latitude: number;\n  /**\n   *\n   * @type {number}\n   * @memberof GeolocationResult\n   */\n  longitude: number;\n  /**\n   *\n   * @type {string}\n   * @memberof GeolocationResult\n   */\n  subdivision: string;\n  /**\n   *\n   * @type {string}\n   * @memberof GeolocationResult\n   */\n  subdivision_iso_code: string;\n}\n/**\n *\n * @export\n * @interface GetCallResponse\n */\nexport interface GetCallResponse {\n  /**\n   *\n   * @type {CallResponse}\n   * @memberof GetCallResponse\n   */\n  call: CallResponse;\n  /**\n   *\n   * @type {string}\n   * @memberof GetCallResponse\n   */\n  duration: string;\n  /**\n   *\n   * @type {Array<MemberResponse>}\n   * @memberof GetCallResponse\n   */\n  members: Array<MemberResponse>;\n  /**\n   *\n   * @type {MemberResponse}\n   * @memberof GetCallResponse\n   */\n  membership?: MemberResponse;\n  /**\n   *\n   * @type {Array<OwnCapability>}\n   * @memberof GetCallResponse\n   */\n  own_capabilities: Array<OwnCapability>;\n}\n/**\n *\n * @export\n * @interface GetCallStatsResponse\n */\nexport interface GetCallStatsResponse {\n  /**\n   *\n   * @type {number}\n   * @memberof GetCallStatsResponse\n   */\n  call_duration_seconds: number;\n  /**\n   *\n   * @type {string}\n   * @memberof GetCallStatsResponse\n   */\n  call_status: string;\n  /**\n   *\n   * @type {CallTimeline}\n   * @memberof GetCallStatsResponse\n   */\n  call_timeline?: CallTimeline;\n  /**\n   * Duration of the request in milliseconds\n   * @type {string}\n   * @memberof GetCallStatsResponse\n   */\n  duration: string;\n  /**\n   *\n   * @type {Stats}\n   * @memberof GetCallStatsResponse\n   */\n  jitter?: Stats;\n  /**\n   *\n   * @type {Stats}\n   * @memberof GetCallStatsResponse\n   */\n  latency?: Stats;\n  /**\n   *\n   * @type {number}\n   * @memberof GetCallStatsResponse\n   */\n  max_freezes_duration_seconds: number;\n  /**\n   *\n   * @type {number}\n   * @memberof GetCallStatsResponse\n   */\n  max_participants: number;\n  /**\n   *\n   * @type {number}\n   * @memberof GetCallStatsResponse\n   */\n  max_total_quality_limitation_duration_seconds: number;\n  /**\n   *\n   * @type {Array<UserStats>}\n   * @memberof GetCallStatsResponse\n   */\n  participant_report: Array<UserStats>;\n  /**\n   *\n   * @type {number}\n   * @memberof GetCallStatsResponse\n   */\n  publishing_participants: number;\n  /**\n   *\n   * @type {number}\n   * @memberof GetCallStatsResponse\n   */\n  quality_score: number;\n  /**\n   *\n   * @type {number}\n   * @memberof GetCallStatsResponse\n   */\n  sfu_count: number;\n  /**\n   *\n   * @type {Array<SFULocationResponse>}\n   * @memberof GetCallStatsResponse\n   */\n  sfus: Array<SFULocationResponse>;\n}\n/**\n *\n * @export\n * @interface GetEdgesResponse\n */\nexport interface GetEdgesResponse {\n  /**\n   * Duration of the request in milliseconds\n   * @type {string}\n   * @memberof GetEdgesResponse\n   */\n  duration: string;\n  /**\n   *\n   * @type {Array<EdgeResponse>}\n   * @memberof GetEdgesResponse\n   */\n  edges: Array<EdgeResponse>;\n}\n/**\n *\n * @export\n * @interface GetOrCreateCallRequest\n */\nexport interface GetOrCreateCallRequest {\n  /**\n   *\n   * @type {CallRequest}\n   * @memberof GetOrCreateCallRequest\n   */\n  data?: CallRequest;\n  /**\n   *\n   * @type {number}\n   * @memberof GetOrCreateCallRequest\n   */\n  members_limit?: number;\n  /**\n   * if provided it sends a notification event to the members for this call\n   * @type {boolean}\n   * @memberof GetOrCreateCallRequest\n   */\n  notify?: boolean;\n  /**\n   * if provided it sends a ring event to the members for this call\n   * @type {boolean}\n   * @memberof GetOrCreateCallRequest\n   */\n  ring?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof GetOrCreateCallRequest\n   */\n  video?: boolean;\n}\n/**\n *\n * @export\n * @interface GetOrCreateCallResponse\n */\nexport interface GetOrCreateCallResponse {\n  /**\n   *\n   * @type {CallResponse}\n   * @memberof GetOrCreateCallResponse\n   */\n  call: CallResponse;\n  /**\n   *\n   * @type {boolean}\n   * @memberof GetOrCreateCallResponse\n   */\n  created: boolean;\n  /**\n   *\n   * @type {string}\n   * @memberof GetOrCreateCallResponse\n   */\n  duration: string;\n  /**\n   *\n   * @type {Array<MemberResponse>}\n   * @memberof GetOrCreateCallResponse\n   */\n  members: Array<MemberResponse>;\n  /**\n   *\n   * @type {MemberResponse}\n   * @memberof GetOrCreateCallResponse\n   */\n  membership?: MemberResponse;\n  /**\n   *\n   * @type {Array<OwnCapability>}\n   * @memberof GetOrCreateCallResponse\n   */\n  own_capabilities: Array<OwnCapability>;\n}\n/**\n *\n * @export\n * @interface GoLiveRequest\n */\nexport interface GoLiveRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof GoLiveRequest\n   */\n  recording_storage_name?: string;\n  /**\n   *\n   * @type {boolean}\n   * @memberof GoLiveRequest\n   */\n  start_hls?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof GoLiveRequest\n   */\n  start_recording?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof GoLiveRequest\n   */\n  start_transcription?: boolean;\n  /**\n   *\n   * @type {string}\n   * @memberof GoLiveRequest\n   */\n  transcription_storage_name?: string;\n}\n/**\n *\n * @export\n * @interface GoLiveResponse\n */\nexport interface GoLiveResponse {\n  /**\n   *\n   * @type {CallResponse}\n   * @memberof GoLiveResponse\n   */\n  call: CallResponse;\n  /**\n   * Duration of the request in milliseconds\n   * @type {string}\n   * @memberof GoLiveResponse\n   */\n  duration: string;\n}\n/**\n *\n * @export\n * @interface HLSSettingsRequest\n */\nexport interface HLSSettingsRequest {\n  /**\n   *\n   * @type {boolean}\n   * @memberof HLSSettingsRequest\n   */\n  auto_on?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof HLSSettingsRequest\n   */\n  enabled?: boolean;\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof HLSSettingsRequest\n   */\n  quality_tracks: Array<string>;\n}\n/**\n *\n * @export\n * @interface HLSSettingsResponse\n */\nexport interface HLSSettingsResponse {\n  /**\n   *\n   * @type {boolean}\n   * @memberof HLSSettingsResponse\n   */\n  auto_on: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof HLSSettingsResponse\n   */\n  enabled: boolean;\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof HLSSettingsResponse\n   */\n  quality_tracks: Array<string>;\n}\n/**\n *\n * @export\n * @interface HealthCheckEvent\n */\nexport interface HealthCheckEvent {\n  /**\n   *\n   * @type {string}\n   * @memberof HealthCheckEvent\n   */\n  cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof HealthCheckEvent\n   */\n  connection_id: string;\n  /**\n   *\n   * @type {string}\n   * @memberof HealthCheckEvent\n   */\n  created_at: string;\n  /**\n   *\n   * @type {OwnUser}\n   * @memberof HealthCheckEvent\n   */\n  me?: OwnUser;\n  /**\n   *\n   * @type {string}\n   * @memberof HealthCheckEvent\n   */\n  type: string;\n}\n/**\n *\n * @export\n * @interface ICEServer\n */\nexport interface ICEServer {\n  /**\n   *\n   * @type {string}\n   * @memberof ICEServer\n   */\n  password: string;\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof ICEServer\n   */\n  urls: Array<string>;\n  /**\n   *\n   * @type {string}\n   * @memberof ICEServer\n   */\n  username: string;\n}\n/**\n *\n * @export\n * @interface JoinCallRequest\n */\nexport interface JoinCallRequest {\n  /**\n   * if true the call will be created if it doesn't exist\n   * @type {boolean}\n   * @memberof JoinCallRequest\n   */\n  create?: boolean;\n  /**\n   *\n   * @type {CallRequest}\n   * @memberof JoinCallRequest\n   */\n  data?: CallRequest;\n  /**\n   *\n   * @type {string}\n   * @memberof JoinCallRequest\n   */\n  location: string;\n  /**\n   *\n   * @type {number}\n   * @memberof JoinCallRequest\n   */\n  members_limit?: number;\n  /**\n   * If the participant is migrating from another SFU, then this is the ID of the previous SFU\n   * @type {string}\n   * @memberof JoinCallRequest\n   */\n  migrating_from?: string;\n  /**\n   *\n   * @type {boolean}\n   * @memberof JoinCallRequest\n   */\n  notify?: boolean;\n  /**\n   * if true and the call is created, the notification will include ring=true\n   * @type {boolean}\n   * @memberof JoinCallRequest\n   */\n  ring?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof JoinCallRequest\n   */\n  video?: boolean;\n}\n/**\n *\n * @export\n * @interface JoinCallResponse\n */\nexport interface JoinCallResponse {\n  /**\n   *\n   * @type {CallResponse}\n   * @memberof JoinCallResponse\n   */\n  call: CallResponse;\n  /**\n   *\n   * @type {boolean}\n   * @memberof JoinCallResponse\n   */\n  created: boolean;\n  /**\n   *\n   * @type {Credentials}\n   * @memberof JoinCallResponse\n   */\n  credentials: Credentials;\n  /**\n   *\n   * @type {string}\n   * @memberof JoinCallResponse\n   */\n  duration: string;\n  /**\n   *\n   * @type {Array<MemberResponse>}\n   * @memberof JoinCallResponse\n   */\n  members: Array<MemberResponse>;\n  /**\n   *\n   * @type {MemberResponse}\n   * @memberof JoinCallResponse\n   */\n  membership?: MemberResponse;\n  /**\n   *\n   * @type {Array<OwnCapability>}\n   * @memberof JoinCallResponse\n   */\n  own_capabilities: Array<OwnCapability>;\n  /**\n   *\n   * @type {StatsOptions}\n   * @memberof JoinCallResponse\n   */\n  stats_options: StatsOptions;\n}\n/**\n *\n * @export\n * @interface LabelThresholds\n */\nexport interface LabelThresholds {\n  /**\n   * Threshold for automatic message block\n   * @type {number}\n   * @memberof LabelThresholds\n   */\n  block?: number;\n  /**\n   * Threshold for automatic message flag\n   * @type {number}\n   * @memberof LabelThresholds\n   */\n  flag?: number;\n}\n/**\n *\n * @export\n * @interface LimitsSettingsRequest\n */\nexport interface LimitsSettingsRequest {\n  /**\n   *\n   * @type {number}\n   * @memberof LimitsSettingsRequest\n   */\n  max_duration_seconds?: number;\n  /**\n   *\n   * @type {number}\n   * @memberof LimitsSettingsRequest\n   */\n  max_participants?: number;\n}\n/**\n *\n * @export\n * @interface LimitsSettingsResponse\n */\nexport interface LimitsSettingsResponse {\n  /**\n   *\n   * @type {number}\n   * @memberof LimitsSettingsResponse\n   */\n  max_duration_seconds?: number;\n  /**\n   *\n   * @type {number}\n   * @memberof LimitsSettingsResponse\n   */\n  max_participants?: number;\n}\n/**\n *\n * @export\n * @interface ListDevicesResponse\n */\nexport interface ListDevicesResponse {\n  /**\n   * List of devices\n   * @type {Array<Device>}\n   * @memberof ListDevicesResponse\n   */\n  devices: Array<Device>;\n  /**\n   *\n   * @type {string}\n   * @memberof ListDevicesResponse\n   */\n  duration: string;\n}\n/**\n *\n * @export\n * @interface ListRecordingsResponse\n */\nexport interface ListRecordingsResponse {\n  /**\n   *\n   * @type {string}\n   * @memberof ListRecordingsResponse\n   */\n  duration: string;\n  /**\n   *\n   * @type {Array<CallRecording>}\n   * @memberof ListRecordingsResponse\n   */\n  recordings: Array<CallRecording>;\n}\n/**\n *\n * @export\n * @interface ListTranscriptionsResponse\n */\nexport interface ListTranscriptionsResponse {\n  /**\n   *\n   * @type {string}\n   * @memberof ListTranscriptionsResponse\n   */\n  duration: string;\n  /**\n   *\n   * @type {Array<CallTranscription>}\n   * @memberof ListTranscriptionsResponse\n   */\n  transcriptions: Array<CallTranscription>;\n}\n/**\n *\n * @export\n * @interface Location\n */\nexport interface Location {\n  /**\n   *\n   * @type {string}\n   * @memberof Location\n   */\n  continent_code: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Location\n   */\n  country_iso_code: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Location\n   */\n  subdivision_iso_code: string;\n}\n/**\n *\n * @export\n * @interface MOSStats\n */\nexport interface MOSStats {\n  /**\n   *\n   * @type {number}\n   * @memberof MOSStats\n   */\n  average_score: number;\n  /**\n   *\n   * @type {Array<number>}\n   * @memberof MOSStats\n   */\n  histogram_duration_seconds: Array<number>;\n  /**\n   *\n   * @type {number}\n   * @memberof MOSStats\n   */\n  max_score: number;\n  /**\n   *\n   * @type {number}\n   * @memberof MOSStats\n   */\n  min_score: number;\n}\n/**\n *\n * @export\n * @interface MediaPubSubHint\n */\nexport interface MediaPubSubHint {\n  /**\n   *\n   * @type {boolean}\n   * @memberof MediaPubSubHint\n   */\n  audio_published: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof MediaPubSubHint\n   */\n  audio_subscribed: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof MediaPubSubHint\n   */\n  video_published: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof MediaPubSubHint\n   */\n  video_subscribed: boolean;\n}\n/**\n *\n * @export\n * @interface MemberRequest\n */\nexport interface MemberRequest {\n  /**\n   * Custom data for this object\n   * @type {{ [key: string]: any; }}\n   * @memberof MemberRequest\n   */\n  custom?: { [key: string]: any };\n  /**\n   *\n   * @type {string}\n   * @memberof MemberRequest\n   */\n  role?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof MemberRequest\n   */\n  user_id: string;\n}\n/**\n *\n * @export\n * @interface MemberResponse\n */\nexport interface MemberResponse {\n  /**\n   * Date/time of creation\n   * @type {string}\n   * @memberof MemberResponse\n   */\n  created_at: string;\n  /**\n   * Custom member response data\n   * @type {{ [key: string]: any; }}\n   * @memberof MemberResponse\n   */\n  custom: { [key: string]: any };\n  /**\n   * Date/time of deletion\n   * @type {string}\n   * @memberof MemberResponse\n   */\n  deleted_at?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof MemberResponse\n   */\n  role?: string;\n  /**\n   * Date/time of the last update\n   * @type {string}\n   * @memberof MemberResponse\n   */\n  updated_at: string;\n  /**\n   *\n   * @type {UserResponse}\n   * @memberof MemberResponse\n   */\n  user: UserResponse;\n  /**\n   *\n   * @type {string}\n   * @memberof MemberResponse\n   */\n  user_id: string;\n}\n/**\n *\n * @export\n * @interface MuteUsersRequest\n */\nexport interface MuteUsersRequest {\n  /**\n   *\n   * @type {boolean}\n   * @memberof MuteUsersRequest\n   */\n  audio?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof MuteUsersRequest\n   */\n  mute_all_users?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof MuteUsersRequest\n   */\n  screenshare?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof MuteUsersRequest\n   */\n  screenshare_audio?: boolean;\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof MuteUsersRequest\n   */\n  user_ids?: Array<string>;\n  /**\n   *\n   * @type {boolean}\n   * @memberof MuteUsersRequest\n   */\n  video?: boolean;\n}\n/**\n *\n * @export\n * @interface MuteUsersResponse\n */\nexport interface MuteUsersResponse {\n  /**\n   * Duration of the request in milliseconds\n   * @type {string}\n   * @memberof MuteUsersResponse\n   */\n  duration: string;\n}\n/**\n *\n * @export\n * @interface NoiseCancellationSettings\n */\nexport interface NoiseCancellationSettings {\n  /**\n   *\n   * @type {string}\n   * @memberof NoiseCancellationSettings\n   */\n  mode: NoiseCancellationSettingsModeEnum;\n}\n\n/**\n * @export\n */\nexport const NoiseCancellationSettingsModeEnum = {\n  AVAILABLE: 'available',\n  DISABLED: 'disabled',\n  AUTO_ON: 'auto-on',\n} as const;\nexport type NoiseCancellationSettingsModeEnum =\n  (typeof NoiseCancellationSettingsModeEnum)[keyof typeof NoiseCancellationSettingsModeEnum];\n\n/**\n *\n * @export\n * @interface NullBool\n */\nexport interface NullBool {\n  /**\n   *\n   * @type {boolean}\n   * @memberof NullBool\n   */\n  HasValue?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof NullBool\n   */\n  Value?: boolean;\n}\n/**\n *\n * @export\n * @interface NullTime\n */\nexport interface NullTime {\n  /**\n   *\n   * @type {boolean}\n   * @memberof NullTime\n   */\n  HasValue?: boolean;\n  /**\n   *\n   * @type {string}\n   * @memberof NullTime\n   */\n  Value?: string;\n}\n\n/**\n * All possibility of string to use\n * @export\n */\nexport const OwnCapability = {\n  BLOCK_USERS: 'block-users',\n  CHANGE_MAX_DURATION: 'change-max-duration',\n  CREATE_CALL: 'create-call',\n  CREATE_REACTION: 'create-reaction',\n  ENABLE_NOISE_CANCELLATION: 'enable-noise-cancellation',\n  END_CALL: 'end-call',\n  JOIN_BACKSTAGE: 'join-backstage',\n  JOIN_CALL: 'join-call',\n  JOIN_ENDED_CALL: 'join-ended-call',\n  MUTE_USERS: 'mute-users',\n  PIN_FOR_EVERYONE: 'pin-for-everyone',\n  READ_CALL: 'read-call',\n  REMOVE_CALL_MEMBER: 'remove-call-member',\n  SCREENSHARE: 'screenshare',\n  SEND_AUDIO: 'send-audio',\n  SEND_VIDEO: 'send-video',\n  START_BROADCAST_CALL: 'start-broadcast-call',\n  START_RECORD_CALL: 'start-record-call',\n  START_TRANSCRIPTION_CALL: 'start-transcription-call',\n  STOP_BROADCAST_CALL: 'stop-broadcast-call',\n  STOP_RECORD_CALL: 'stop-record-call',\n  STOP_TRANSCRIPTION_CALL: 'stop-transcription-call',\n  UPDATE_CALL: 'update-call',\n  UPDATE_CALL_MEMBER: 'update-call-member',\n  UPDATE_CALL_PERMISSIONS: 'update-call-permissions',\n  UPDATE_CALL_SETTINGS: 'update-call-settings',\n} as const;\nexport type OwnCapability = (typeof OwnCapability)[keyof typeof OwnCapability];\n\n/**\n *\n * @export\n * @interface OwnUser\n */\nexport interface OwnUser {\n  /**\n   *\n   * @type {boolean}\n   * @memberof OwnUser\n   */\n  banned: boolean;\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof OwnUser\n   */\n  blocked_user_ids?: Array<string>;\n  /**\n   *\n   * @type {Array<ChannelMute>}\n   * @memberof OwnUser\n   */\n  channel_mutes: Array<ChannelMute>;\n  /**\n   *\n   * @type {string}\n   * @memberof OwnUser\n   */\n  created_at: string;\n  /**\n   *\n   * @type {{ [key: string]: any; }}\n   * @memberof OwnUser\n   */\n  custom: { [key: string]: any };\n  /**\n   *\n   * @type {string}\n   * @memberof OwnUser\n   */\n  deactivated_at?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof OwnUser\n   */\n  deleted_at?: string;\n  /**\n   *\n   * @type {Array<Device>}\n   * @memberof OwnUser\n   */\n  devices: Array<Device>;\n  /**\n   *\n   * @type {string}\n   * @memberof OwnUser\n   */\n  id: string;\n  /**\n   *\n   * @type {boolean}\n   * @memberof OwnUser\n   */\n  invisible?: boolean;\n  /**\n   *\n   * @type {string}\n   * @memberof OwnUser\n   */\n  language: string;\n  /**\n   *\n   * @type {string}\n   * @memberof OwnUser\n   */\n  last_active?: string;\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof OwnUser\n   */\n  latest_hidden_channels?: Array<string>;\n  /**\n   *\n   * @type {Array<UserMute>}\n   * @memberof OwnUser\n   */\n  mutes: Array<UserMute>;\n  /**\n   *\n   * @type {boolean}\n   * @memberof OwnUser\n   */\n  online: boolean;\n  /**\n   *\n   * @type {PrivacySettings}\n   * @memberof OwnUser\n   */\n  privacy_settings?: PrivacySettings;\n  /**\n   *\n   * @type {PushNotificationSettings}\n   * @memberof OwnUser\n   */\n  push_notifications?: PushNotificationSettings;\n  /**\n   *\n   * @type {string}\n   * @memberof OwnUser\n   */\n  role: string;\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof OwnUser\n   */\n  teams?: Array<string>;\n  /**\n   *\n   * @type {number}\n   * @memberof OwnUser\n   */\n  total_unread_count: number;\n  /**\n   *\n   * @type {number}\n   * @memberof OwnUser\n   */\n  unread_channels: number;\n  /**\n   *\n   * @type {number}\n   * @memberof OwnUser\n   */\n  unread_count: number;\n  /**\n   *\n   * @type {number}\n   * @memberof OwnUser\n   */\n  unread_threads: number;\n  /**\n   *\n   * @type {string}\n   * @memberof OwnUser\n   */\n  updated_at: string;\n}\n/**\n *\n * @export\n * @interface OwnUserResponse\n */\nexport interface OwnUserResponse {\n  /**\n   *\n   * @type {boolean}\n   * @memberof OwnUserResponse\n   */\n  banned: boolean;\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof OwnUserResponse\n   */\n  blocked_user_ids?: Array<string>;\n  /**\n   *\n   * @type {Array<ChannelMute>}\n   * @memberof OwnUserResponse\n   */\n  channel_mutes: Array<ChannelMute>;\n  /**\n   *\n   * @type {string}\n   * @memberof OwnUserResponse\n   */\n  created_at: string;\n  /**\n   *\n   * @type {{ [key: string]: any; }}\n   * @memberof OwnUserResponse\n   */\n  custom: { [key: string]: any };\n  /**\n   *\n   * @type {string}\n   * @memberof OwnUserResponse\n   */\n  deactivated_at?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof OwnUserResponse\n   */\n  deleted_at?: string;\n  /**\n   *\n   * @type {Array<Device>}\n   * @memberof OwnUserResponse\n   */\n  devices: Array<Device>;\n  /**\n   *\n   * @type {string}\n   * @memberof OwnUserResponse\n   */\n  id: string;\n  /**\n   *\n   * @type {string}\n   * @memberof OwnUserResponse\n   */\n  image?: string;\n  /**\n   *\n   * @type {boolean}\n   * @memberof OwnUserResponse\n   */\n  invisible: boolean;\n  /**\n   *\n   * @type {string}\n   * @memberof OwnUserResponse\n   */\n  language: string;\n  /**\n   *\n   * @type {string}\n   * @memberof OwnUserResponse\n   */\n  last_active?: string;\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof OwnUserResponse\n   */\n  latest_hidden_channels?: Array<string>;\n  /**\n   *\n   * @type {Array<UserMuteResponse>}\n   * @memberof OwnUserResponse\n   */\n  mutes: Array<UserMuteResponse>;\n  /**\n   *\n   * @type {string}\n   * @memberof OwnUserResponse\n   */\n  name?: string;\n  /**\n   *\n   * @type {boolean}\n   * @memberof OwnUserResponse\n   */\n  online: boolean;\n  /**\n   *\n   * @type {PrivacySettingsResponse}\n   * @memberof OwnUserResponse\n   */\n  privacy_settings?: PrivacySettingsResponse;\n  /**\n   *\n   * @type {PushNotificationSettingsResponse}\n   * @memberof OwnUserResponse\n   */\n  push_notifications?: PushNotificationSettingsResponse;\n  /**\n   *\n   * @type {string}\n   * @memberof OwnUserResponse\n   */\n  revoke_tokens_issued_before?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof OwnUserResponse\n   */\n  role: string;\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof OwnUserResponse\n   */\n  teams: Array<string>;\n  /**\n   *\n   * @type {number}\n   * @memberof OwnUserResponse\n   */\n  total_unread_count: number;\n  /**\n   *\n   * @type {number}\n   * @memberof OwnUserResponse\n   */\n  unread_channels: number;\n  /**\n   *\n   * @type {number}\n   * @memberof OwnUserResponse\n   */\n  unread_threads: number;\n  /**\n   *\n   * @type {string}\n   * @memberof OwnUserResponse\n   */\n  updated_at: string;\n}\n/**\n * This event is sent when a user requests access to a feature on a call,\n * clients receiving this event should display a permission request to the user\n * @export\n * @interface PermissionRequestEvent\n */\nexport interface PermissionRequestEvent {\n  /**\n   *\n   * @type {string}\n   * @memberof PermissionRequestEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof PermissionRequestEvent\n   */\n  created_at: string;\n  /**\n   * The list of permissions requested by the user\n   * @type {Array<string>}\n   * @memberof PermissionRequestEvent\n   */\n  permissions: Array<string>;\n  /**\n   * The type of event: \"call.permission_request\" in this case\n   * @type {string}\n   * @memberof PermissionRequestEvent\n   */\n  type: string;\n  /**\n   *\n   * @type {UserResponse}\n   * @memberof PermissionRequestEvent\n   */\n  user: UserResponse;\n}\n/**\n *\n * @export\n * @interface PinRequest\n */\nexport interface PinRequest {\n  /**\n   * the session ID of the user who pinned the message\n   * @type {string}\n   * @memberof PinRequest\n   */\n  session_id: string;\n  /**\n   * the user ID of the user who pinned the message\n   * @type {string}\n   * @memberof PinRequest\n   */\n  user_id: string;\n}\n/**\n *\n * @export\n * @interface PinResponse\n */\nexport interface PinResponse {\n  /**\n   * Duration of the request in milliseconds\n   * @type {string}\n   * @memberof PinResponse\n   */\n  duration: string;\n}\n/**\n *\n * @export\n * @interface PrivacySettings\n */\nexport interface PrivacySettings {\n  /**\n   *\n   * @type {ReadReceipts}\n   * @memberof PrivacySettings\n   */\n  read_receipts?: ReadReceipts;\n  /**\n   *\n   * @type {TypingIndicators}\n   * @memberof PrivacySettings\n   */\n  typing_indicators?: TypingIndicators;\n}\n\n/**\n *\n * @export\n * @interface PrivacySettingsResponse\n */\nexport interface PrivacySettingsResponse {\n  /**\n   *\n   * @type {ReadReceipts}\n   * @memberof PrivacySettingsResponse\n   */\n  read_receipts?: ReadReceipts;\n  /**\n   *\n   * @type {TypingIndicators}\n   * @memberof PrivacySettingsResponse\n   */\n  typing_indicators?: TypingIndicators;\n}\n/**\n *\n * @export\n * @interface PublishedTrackInfo\n */\nexport interface PublishedTrackInfo {\n  /**\n   *\n   * @type {string}\n   * @memberof PublishedTrackInfo\n   */\n  codec_mime_type?: string;\n  /**\n   *\n   * @type {number}\n   * @memberof PublishedTrackInfo\n   */\n  duration_seconds?: number;\n  /**\n   *\n   * @type {string}\n   * @memberof PublishedTrackInfo\n   */\n  track_type?: string;\n}\n/**\n *\n * @export\n * @interface PushNotificationSettings\n */\nexport interface PushNotificationSettings {\n  /**\n   *\n   * @type {boolean}\n   * @memberof PushNotificationSettings\n   */\n  disabled?: boolean;\n  /**\n   *\n   * @type {string}\n   * @memberof PushNotificationSettings\n   */\n  disabled_until?: string;\n}\n/**\n *\n * @export\n * @interface PushNotificationSettingsInput\n */\nexport interface PushNotificationSettingsInput {\n  /**\n   *\n   * @type {NullBool}\n   * @memberof PushNotificationSettingsInput\n   */\n  disabled?: NullBool;\n  /**\n   *\n   * @type {NullTime}\n   * @memberof PushNotificationSettingsInput\n   */\n  disabled_until?: NullTime;\n}\n/**\n *\n * @export\n * @interface PushNotificationSettingsResponse\n */\nexport interface PushNotificationSettingsResponse {\n  /**\n   *\n   * @type {boolean}\n   * @memberof PushNotificationSettingsResponse\n   */\n  disabled?: boolean;\n  /**\n   *\n   * @type {string}\n   * @memberof PushNotificationSettingsResponse\n   */\n  disabled_until?: string;\n}\n\n/**\n *\n * @export\n * @interface QueryCallMembersRequest\n */\nexport interface QueryCallMembersRequest {\n  /**\n   *\n   * @type {{ [key: string]: any; }}\n   * @memberof QueryCallMembersRequest\n   */\n  filter_conditions?: { [key: string]: any };\n  /**\n   *\n   * @type {string}\n   * @memberof QueryCallMembersRequest\n   */\n  id: string;\n  /**\n   *\n   * @type {number}\n   * @memberof QueryCallMembersRequest\n   */\n  limit?: number;\n  /**\n   *\n   * @type {string}\n   * @memberof QueryCallMembersRequest\n   */\n  next?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof QueryCallMembersRequest\n   */\n  prev?: string;\n  /**\n   *\n   * @type {Array<SortParamRequest>}\n   * @memberof QueryCallMembersRequest\n   */\n  sort?: Array<SortParamRequest>;\n  /**\n   *\n   * @type {string}\n   * @memberof QueryCallMembersRequest\n   */\n  type: string;\n}\n/**\n *\n * @export\n * @interface QueryCallMembersResponse\n */\nexport interface QueryCallMembersResponse {\n  /**\n   * Duration of the request in milliseconds\n   * @type {string}\n   * @memberof QueryCallMembersResponse\n   */\n  duration: string;\n  /**\n   *\n   * @type {Array<MemberResponse>}\n   * @memberof QueryCallMembersResponse\n   */\n  members: Array<MemberResponse>;\n  /**\n   *\n   * @type {string}\n   * @memberof QueryCallMembersResponse\n   */\n  next?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof QueryCallMembersResponse\n   */\n  prev?: string;\n}\n/**\n *\n * @export\n * @interface QueryCallStatsRequest\n */\nexport interface QueryCallStatsRequest {\n  /**\n   *\n   * @type {{ [key: string]: any; }}\n   * @memberof QueryCallStatsRequest\n   */\n  filter_conditions?: { [key: string]: any };\n  /**\n   *\n   * @type {number}\n   * @memberof QueryCallStatsRequest\n   */\n  limit?: number;\n  /**\n   *\n   * @type {string}\n   * @memberof QueryCallStatsRequest\n   */\n  next?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof QueryCallStatsRequest\n   */\n  prev?: string;\n  /**\n   *\n   * @type {Array<SortParamRequest>}\n   * @memberof QueryCallStatsRequest\n   */\n  sort?: Array<SortParamRequest>;\n}\n/**\n *\n * @export\n * @interface QueryCallStatsResponse\n */\nexport interface QueryCallStatsResponse {\n  /**\n   * Duration of the request in milliseconds\n   * @type {string}\n   * @memberof QueryCallStatsResponse\n   */\n  duration: string;\n  /**\n   *\n   * @type {string}\n   * @memberof QueryCallStatsResponse\n   */\n  next?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof QueryCallStatsResponse\n   */\n  prev?: string;\n  /**\n   *\n   * @type {Array<CallStatsReportSummaryResponse>}\n   * @memberof QueryCallStatsResponse\n   */\n  reports: Array<CallStatsReportSummaryResponse>;\n}\n/**\n *\n * @export\n * @interface QueryCallsRequest\n */\nexport interface QueryCallsRequest {\n  /**\n   *\n   * @type {{ [key: string]: any; }}\n   * @memberof QueryCallsRequest\n   */\n  filter_conditions?: { [key: string]: any };\n  /**\n   *\n   * @type {number}\n   * @memberof QueryCallsRequest\n   */\n  limit?: number;\n  /**\n   *\n   * @type {string}\n   * @memberof QueryCallsRequest\n   */\n  next?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof QueryCallsRequest\n   */\n  prev?: string;\n  /**\n   *\n   * @type {Array<SortParamRequest>}\n   * @memberof QueryCallsRequest\n   */\n  sort?: Array<SortParamRequest>;\n  /**\n   *\n   * @type {boolean}\n   * @memberof QueryCallsRequest\n   */\n  watch?: boolean;\n}\n/**\n *\n * @export\n * @interface QueryCallsResponse\n */\nexport interface QueryCallsResponse {\n  /**\n   *\n   * @type {Array<CallStateResponseFields>}\n   * @memberof QueryCallsResponse\n   */\n  calls: Array<CallStateResponseFields>;\n  /**\n   * Duration of the request in milliseconds\n   * @type {string}\n   * @memberof QueryCallsResponse\n   */\n  duration: string;\n  /**\n   *\n   * @type {string}\n   * @memberof QueryCallsResponse\n   */\n  next?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof QueryCallsResponse\n   */\n  prev?: string;\n}\n/**\n * RTMP input settings\n * @export\n * @interface RTMPIngress\n */\nexport interface RTMPIngress {\n  /**\n   *\n   * @type {string}\n   * @memberof RTMPIngress\n   */\n  address: string;\n}\n/**\n *\n * @export\n * @interface ReactionResponse\n */\nexport interface ReactionResponse {\n  /**\n   *\n   * @type {{ [key: string]: any; }}\n   * @memberof ReactionResponse\n   */\n  custom?: { [key: string]: any };\n  /**\n   *\n   * @type {string}\n   * @memberof ReactionResponse\n   */\n  emoji_code?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof ReactionResponse\n   */\n  type: string;\n  /**\n   *\n   * @type {UserResponse}\n   * @memberof ReactionResponse\n   */\n  user: UserResponse;\n}\n/**\n *\n * @export\n * @interface ReadReceipts\n */\nexport interface ReadReceipts {\n  /**\n   *\n   * @type {boolean}\n   * @memberof ReadReceipts\n   */\n  enabled?: boolean;\n}\n/**\n *\n * @export\n * @interface RecordSettingsRequest\n */\nexport interface RecordSettingsRequest {\n  /**\n   *\n   * @type {boolean}\n   * @memberof RecordSettingsRequest\n   */\n  audio_only?: boolean;\n  /**\n   *\n   * @type {string}\n   * @memberof RecordSettingsRequest\n   */\n  mode: RecordSettingsRequestModeEnum;\n  /**\n   *\n   * @type {string}\n   * @memberof RecordSettingsRequest\n   */\n  quality?: RecordSettingsRequestQualityEnum;\n}\n\n/**\n * @export\n */\nexport const RecordSettingsRequestModeEnum = {\n  AVAILABLE: 'available',\n  DISABLED: 'disabled',\n  AUTO_ON: 'auto-on',\n} as const;\nexport type RecordSettingsRequestModeEnum =\n  (typeof RecordSettingsRequestModeEnum)[keyof typeof RecordSettingsRequestModeEnum];\n\n/**\n * @export\n */\nexport const RecordSettingsRequestQualityEnum = {\n  _360P: '360p',\n  _480P: '480p',\n  _720P: '720p',\n  _1080P: '1080p',\n  _1440P: '1440p',\n  PORTRAIT_360X640: 'portrait-360x640',\n  PORTRAIT_480X854: 'portrait-480x854',\n  PORTRAIT_720X1280: 'portrait-720x1280',\n  PORTRAIT_1080X1920: 'portrait-1080x1920',\n  PORTRAIT_1440X2560: 'portrait-1440x2560',\n} as const;\nexport type RecordSettingsRequestQualityEnum =\n  (typeof RecordSettingsRequestQualityEnum)[keyof typeof RecordSettingsRequestQualityEnum];\n\n/**\n *\n * @export\n * @interface RecordSettingsResponse\n */\nexport interface RecordSettingsResponse {\n  /**\n   *\n   * @type {boolean}\n   * @memberof RecordSettingsResponse\n   */\n  audio_only: boolean;\n  /**\n   *\n   * @type {string}\n   * @memberof RecordSettingsResponse\n   */\n  mode: string;\n  /**\n   *\n   * @type {string}\n   * @memberof RecordSettingsResponse\n   */\n  quality: string;\n}\n/**\n *\n * @export\n * @interface RejectCallRequest\n */\nexport interface RejectCallRequest {\n  /**\n   * Reason for rejecting the call\n   * @type {string}\n   * @memberof RejectCallRequest\n   */\n  reason?: string;\n}\n/**\n *\n * @export\n * @interface RejectCallResponse\n */\nexport interface RejectCallResponse {\n  /**\n   *\n   * @type {string}\n   * @memberof RejectCallResponse\n   */\n  duration: string;\n}\n/**\n *\n * @export\n * @interface RequestPermissionRequest\n */\nexport interface RequestPermissionRequest {\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof RequestPermissionRequest\n   */\n  permissions: Array<string>;\n}\n/**\n *\n * @export\n * @interface RequestPermissionResponse\n */\nexport interface RequestPermissionResponse {\n  /**\n   *\n   * @type {string}\n   * @memberof RequestPermissionResponse\n   */\n  duration: string;\n}\n/**\n *\n * @export\n * @interface Response\n */\nexport interface Response {\n  /**\n   * Duration of the request in milliseconds\n   * @type {string}\n   * @memberof Response\n   */\n  duration: string;\n}\n/**\n *\n * @export\n * @interface RingSettingsRequest\n */\nexport interface RingSettingsRequest {\n  /**\n   *\n   * @type {number}\n   * @memberof RingSettingsRequest\n   */\n  auto_cancel_timeout_ms: number;\n  /**\n   *\n   * @type {number}\n   * @memberof RingSettingsRequest\n   */\n  incoming_call_timeout_ms: number;\n  /**\n   *\n   * @type {number}\n   * @memberof RingSettingsRequest\n   */\n  missed_call_timeout_ms?: number;\n}\n/**\n *\n * @export\n * @interface RingSettingsResponse\n */\nexport interface RingSettingsResponse {\n  /**\n   *\n   * @type {number}\n   * @memberof RingSettingsResponse\n   */\n  auto_cancel_timeout_ms: number;\n  /**\n   *\n   * @type {number}\n   * @memberof RingSettingsResponse\n   */\n  incoming_call_timeout_ms: number;\n  /**\n   *\n   * @type {number}\n   * @memberof RingSettingsResponse\n   */\n  missed_call_timeout_ms: number;\n}\n/**\n *\n * @export\n * @interface SFULocationResponse\n */\nexport interface SFULocationResponse {\n  /**\n   *\n   * @type {Coordinates}\n   * @memberof SFULocationResponse\n   */\n  coordinates: Coordinates;\n  /**\n   *\n   * @type {string}\n   * @memberof SFULocationResponse\n   */\n  datacenter: string;\n  /**\n   *\n   * @type {string}\n   * @memberof SFULocationResponse\n   */\n  id: string;\n  /**\n   *\n   * @type {Location}\n   * @memberof SFULocationResponse\n   */\n  location: Location;\n}\n/**\n *\n * @export\n * @interface SFUResponse\n */\nexport interface SFUResponse {\n  /**\n   *\n   * @type {string}\n   * @memberof SFUResponse\n   */\n  edge_name: string;\n  /**\n   *\n   * @type {string}\n   * @memberof SFUResponse\n   */\n  url: string;\n  /**\n   *\n   * @type {string}\n   * @memberof SFUResponse\n   */\n  ws_endpoint: string;\n}\n/**\n *\n * @export\n * @interface ScreensharingSettingsRequest\n */\nexport interface ScreensharingSettingsRequest {\n  /**\n   *\n   * @type {boolean}\n   * @memberof ScreensharingSettingsRequest\n   */\n  access_request_enabled?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof ScreensharingSettingsRequest\n   */\n  enabled?: boolean;\n  /**\n   *\n   * @type {TargetResolution}\n   * @memberof ScreensharingSettingsRequest\n   */\n  target_resolution?: TargetResolution;\n}\n/**\n *\n * @export\n * @interface ScreensharingSettingsResponse\n */\nexport interface ScreensharingSettingsResponse {\n  /**\n   *\n   * @type {boolean}\n   * @memberof ScreensharingSettingsResponse\n   */\n  access_request_enabled: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof ScreensharingSettingsResponse\n   */\n  enabled: boolean;\n  /**\n   *\n   * @type {TargetResolution}\n   * @memberof ScreensharingSettingsResponse\n   */\n  target_resolution?: TargetResolution;\n}\n/**\n *\n * @export\n * @interface SendCallEventRequest\n */\nexport interface SendCallEventRequest {\n  /**\n   *\n   * @type {{ [key: string]: any; }}\n   * @memberof SendCallEventRequest\n   */\n  custom?: { [key: string]: any };\n}\n/**\n *\n * @export\n * @interface SendCallEventResponse\n */\nexport interface SendCallEventResponse {\n  /**\n   *\n   * @type {string}\n   * @memberof SendCallEventResponse\n   */\n  duration: string;\n}\n/**\n *\n * @export\n * @interface SendReactionRequest\n */\nexport interface SendReactionRequest {\n  /**\n   *\n   * @type {{ [key: string]: any; }}\n   * @memberof SendReactionRequest\n   */\n  custom?: { [key: string]: any };\n  /**\n   *\n   * @type {string}\n   * @memberof SendReactionRequest\n   */\n  emoji_code?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof SendReactionRequest\n   */\n  type: string;\n}\n/**\n *\n * @export\n * @interface SendReactionResponse\n */\nexport interface SendReactionResponse {\n  /**\n   * Duration of the request in milliseconds\n   * @type {string}\n   * @memberof SendReactionResponse\n   */\n  duration: string;\n  /**\n   *\n   * @type {ReactionResponse}\n   * @memberof SendReactionResponse\n   */\n  reaction: ReactionResponse;\n}\n/**\n *\n * @export\n * @interface SortParamRequest\n */\nexport interface SortParamRequest {\n  /**\n   * Direction of sorting, 1 for Ascending, -1 for Descending, default is 1\n   * @type {number}\n   * @memberof SortParamRequest\n   */\n  direction?: number;\n  /**\n   * Name of field to sort by\n   * @type {string}\n   * @memberof SortParamRequest\n   */\n  field?: string;\n}\n/**\n *\n * @export\n * @interface StartHLSBroadcastingResponse\n */\nexport interface StartHLSBroadcastingResponse {\n  /**\n   * Duration of the request in milliseconds\n   * @type {string}\n   * @memberof StartHLSBroadcastingResponse\n   */\n  duration: string;\n  /**\n   *\n   * @type {string}\n   * @memberof StartHLSBroadcastingResponse\n   */\n  playlist_url: string;\n}\n/**\n *\n * @export\n * @interface StartRecordingRequest\n */\nexport interface StartRecordingRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof StartRecordingRequest\n   */\n  recording_external_storage?: string;\n}\n/**\n *\n * @export\n * @interface StartRecordingResponse\n */\nexport interface StartRecordingResponse {\n  /**\n   *\n   * @type {string}\n   * @memberof StartRecordingResponse\n   */\n  duration: string;\n}\n/**\n *\n * @export\n * @interface StartTranscriptionRequest\n */\nexport interface StartTranscriptionRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof StartTranscriptionRequest\n   */\n  transcription_external_storage?: string;\n}\n/**\n *\n * @export\n * @interface StartTranscriptionResponse\n */\nexport interface StartTranscriptionResponse {\n  /**\n   *\n   * @type {string}\n   * @memberof StartTranscriptionResponse\n   */\n  duration: string;\n}\n/**\n *\n * @export\n * @interface Stats\n */\nexport interface Stats {\n  /**\n   *\n   * @type {number}\n   * @memberof Stats\n   */\n  average_seconds: number;\n  /**\n   *\n   * @type {number}\n   * @memberof Stats\n   */\n  max_seconds: number;\n}\n/**\n *\n * @export\n * @interface StatsOptions\n */\nexport interface StatsOptions {\n  /**\n   *\n   * @type {number}\n   * @memberof StatsOptions\n   */\n  reporting_interval_ms: number;\n}\n/**\n *\n * @export\n * @interface StopHLSBroadcastingResponse\n */\nexport interface StopHLSBroadcastingResponse {\n  /**\n   * Duration of the request in milliseconds\n   * @type {string}\n   * @memberof StopHLSBroadcastingResponse\n   */\n  duration: string;\n}\n/**\n *\n * @export\n * @interface StopLiveResponse\n */\nexport interface StopLiveResponse {\n  /**\n   *\n   * @type {CallResponse}\n   * @memberof StopLiveResponse\n   */\n  call: CallResponse;\n  /**\n   * Duration of the request in milliseconds\n   * @type {string}\n   * @memberof StopLiveResponse\n   */\n  duration: string;\n}\n/**\n *\n * @export\n * @interface StopRecordingResponse\n */\nexport interface StopRecordingResponse {\n  /**\n   * Duration of the request in milliseconds\n   * @type {string}\n   * @memberof StopRecordingResponse\n   */\n  duration: string;\n}\n/**\n *\n * @export\n * @interface StopTranscriptionResponse\n */\nexport interface StopTranscriptionResponse {\n  /**\n   * Duration of the request in milliseconds\n   * @type {string}\n   * @memberof StopTranscriptionResponse\n   */\n  duration: string;\n}\n/**\n *\n * @export\n * @interface Subsession\n */\nexport interface Subsession {\n  /**\n   *\n   * @type {number}\n   * @memberof Subsession\n   */\n  ended_at: number;\n  /**\n   *\n   * @type {number}\n   * @memberof Subsession\n   */\n  joined_at: number;\n  /**\n   *\n   * @type {MediaPubSubHint}\n   * @memberof Subsession\n   */\n  pub_sub_hint?: MediaPubSubHint;\n  /**\n   *\n   * @type {string}\n   * @memberof Subsession\n   */\n  sfu_id: string;\n}\n/**\n *\n * @export\n * @interface TargetResolution\n */\nexport interface TargetResolution {\n  /**\n   *\n   * @type {number}\n   * @memberof TargetResolution\n   */\n  bitrate?: number;\n  /**\n   *\n   * @type {number}\n   * @memberof TargetResolution\n   */\n  height: number;\n  /**\n   *\n   * @type {number}\n   * @memberof TargetResolution\n   */\n  width: number;\n}\n/**\n * Sets thresholds for AI moderation\n * @export\n * @interface Thresholds\n */\nexport interface Thresholds {\n  /**\n   *\n   * @type {LabelThresholds}\n   * @memberof Thresholds\n   */\n  explicit?: LabelThresholds;\n  /**\n   *\n   * @type {LabelThresholds}\n   * @memberof Thresholds\n   */\n  spam?: LabelThresholds;\n  /**\n   *\n   * @type {LabelThresholds}\n   * @memberof Thresholds\n   */\n  toxic?: LabelThresholds;\n}\n/**\n *\n * @export\n * @interface ThumbnailResponse\n */\nexport interface ThumbnailResponse {\n  /**\n   *\n   * @type {string}\n   * @memberof ThumbnailResponse\n   */\n  image_url: string;\n}\n/**\n *\n * @export\n * @interface ThumbnailsSettingsRequest\n */\nexport interface ThumbnailsSettingsRequest {\n  /**\n   *\n   * @type {boolean}\n   * @memberof ThumbnailsSettingsRequest\n   */\n  enabled?: boolean;\n}\n/**\n *\n * @export\n * @interface ThumbnailsSettingsResponse\n */\nexport interface ThumbnailsSettingsResponse {\n  /**\n   *\n   * @type {boolean}\n   * @memberof ThumbnailsSettingsResponse\n   */\n  enabled: boolean;\n}\n/**\n *\n * @export\n * @interface TranscriptionSettingsRequest\n */\nexport interface TranscriptionSettingsRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof TranscriptionSettingsRequest\n   */\n  closed_caption_mode?: string;\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof TranscriptionSettingsRequest\n   */\n  languages?: Array<string>;\n  /**\n   *\n   * @type {string}\n   * @memberof TranscriptionSettingsRequest\n   */\n  mode: TranscriptionSettingsRequestModeEnum;\n}\n\n/**\n * @export\n */\nexport const TranscriptionSettingsRequestModeEnum = {\n  AVAILABLE: 'available',\n  DISABLED: 'disabled',\n  AUTO_ON: 'auto-on',\n} as const;\nexport type TranscriptionSettingsRequestModeEnum =\n  (typeof TranscriptionSettingsRequestModeEnum)[keyof typeof TranscriptionSettingsRequestModeEnum];\n\n/**\n *\n * @export\n * @interface TranscriptionSettingsResponse\n */\nexport interface TranscriptionSettingsResponse {\n  /**\n   *\n   * @type {string}\n   * @memberof TranscriptionSettingsResponse\n   */\n  closed_caption_mode: string;\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof TranscriptionSettingsResponse\n   */\n  languages: Array<string>;\n  /**\n   *\n   * @type {string}\n   * @memberof TranscriptionSettingsResponse\n   */\n  mode: TranscriptionSettingsResponseModeEnum;\n}\n\n/**\n * @export\n */\nexport const TranscriptionSettingsResponseModeEnum = {\n  AVAILABLE: 'available',\n  DISABLED: 'disabled',\n  AUTO_ON: 'auto-on',\n} as const;\nexport type TranscriptionSettingsResponseModeEnum =\n  (typeof TranscriptionSettingsResponseModeEnum)[keyof typeof TranscriptionSettingsResponseModeEnum];\n\n/**\n *\n * @export\n * @interface TypingIndicators\n */\nexport interface TypingIndicators {\n  /**\n   *\n   * @type {boolean}\n   * @memberof TypingIndicators\n   */\n  enabled?: boolean;\n}\n/**\n *\n * @export\n * @interface UnblockUserRequest\n */\nexport interface UnblockUserRequest {\n  /**\n   * the user to unblock\n   * @type {string}\n   * @memberof UnblockUserRequest\n   */\n  user_id: string;\n}\n/**\n *\n * @export\n * @interface UnblockUserResponse\n */\nexport interface UnblockUserResponse {\n  /**\n   * Duration of the request in milliseconds\n   * @type {string}\n   * @memberof UnblockUserResponse\n   */\n  duration: string;\n}\n/**\n * This event is sent when a user is unblocked on a call,\n * this can be useful to notify the user that they can now join the call again\n * @export\n * @interface UnblockedUserEvent\n */\nexport interface UnblockedUserEvent {\n  /**\n   *\n   * @type {string}\n   * @memberof UnblockedUserEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof UnblockedUserEvent\n   */\n  created_at: string;\n  /**\n   * The type of event: \"call.unblocked_user\" in this case\n   * @type {string}\n   * @memberof UnblockedUserEvent\n   */\n  type: string;\n  /**\n   *\n   * @type {UserResponse}\n   * @memberof UnblockedUserEvent\n   */\n  user: UserResponse;\n}\n/**\n *\n * @export\n * @interface UnpinRequest\n */\nexport interface UnpinRequest {\n  /**\n   * the session ID of the user who pinned the message\n   * @type {string}\n   * @memberof UnpinRequest\n   */\n  session_id: string;\n  /**\n   * the user ID of the user who pinned the message\n   * @type {string}\n   * @memberof UnpinRequest\n   */\n  user_id: string;\n}\n/**\n *\n * @export\n * @interface UnpinResponse\n */\nexport interface UnpinResponse {\n  /**\n   * Duration of the request in milliseconds\n   * @type {string}\n   * @memberof UnpinResponse\n   */\n  duration: string;\n}\n/**\n *\n * @export\n * @interface UpdateCallMembersRequest\n */\nexport interface UpdateCallMembersRequest {\n  /**\n   * List of userID to remove\n   * @type {Array<string>}\n   * @memberof UpdateCallMembersRequest\n   */\n  remove_members?: Array<string>;\n  /**\n   * List of members to update or insert\n   * @type {Array<MemberRequest>}\n   * @memberof UpdateCallMembersRequest\n   */\n  update_members?: Array<MemberRequest>;\n}\n/**\n *\n * @export\n * @interface UpdateCallMembersResponse\n */\nexport interface UpdateCallMembersResponse {\n  /**\n   * Duration of the request in milliseconds\n   * @type {string}\n   * @memberof UpdateCallMembersResponse\n   */\n  duration: string;\n  /**\n   *\n   * @type {Array<MemberResponse>}\n   * @memberof UpdateCallMembersResponse\n   */\n  members: Array<MemberResponse>;\n}\n/**\n *\n * @export\n * @interface UpdateCallRequest\n */\nexport interface UpdateCallRequest {\n  /**\n   * Custom data for this object\n   * @type {{ [key: string]: any; }}\n   * @memberof UpdateCallRequest\n   */\n  custom?: { [key: string]: any };\n  /**\n   *\n   * @type {CallSettingsRequest}\n   * @memberof UpdateCallRequest\n   */\n  settings_override?: CallSettingsRequest;\n  /**\n   * the time the call is scheduled to start\n   * @type {string}\n   * @memberof UpdateCallRequest\n   */\n  starts_at?: string;\n}\n/**\n * Represents a call\n * @export\n * @interface UpdateCallResponse\n */\nexport interface UpdateCallResponse {\n  /**\n   *\n   * @type {CallResponse}\n   * @memberof UpdateCallResponse\n   */\n  call: CallResponse;\n  /**\n   *\n   * @type {string}\n   * @memberof UpdateCallResponse\n   */\n  duration: string;\n  /**\n   *\n   * @type {Array<MemberResponse>}\n   * @memberof UpdateCallResponse\n   */\n  members: Array<MemberResponse>;\n  /**\n   *\n   * @type {MemberResponse}\n   * @memberof UpdateCallResponse\n   */\n  membership?: MemberResponse;\n  /**\n   *\n   * @type {Array<OwnCapability>}\n   * @memberof UpdateCallResponse\n   */\n  own_capabilities: Array<OwnCapability>;\n}\n/**\n *\n * @export\n * @interface UpdateUserPermissionsRequest\n */\nexport interface UpdateUserPermissionsRequest {\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof UpdateUserPermissionsRequest\n   */\n  grant_permissions?: Array<string>;\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof UpdateUserPermissionsRequest\n   */\n  revoke_permissions?: Array<string>;\n  /**\n   *\n   * @type {string}\n   * @memberof UpdateUserPermissionsRequest\n   */\n  user_id: string;\n}\n/**\n *\n * @export\n * @interface UpdateUserPermissionsResponse\n */\nexport interface UpdateUserPermissionsResponse {\n  /**\n   * Duration of the request in milliseconds\n   * @type {string}\n   * @memberof UpdateUserPermissionsResponse\n   */\n  duration: string;\n}\n/**\n * This event is sent to notify about permission changes for a user, clients receiving this event should update their UI accordingly\n * @export\n * @interface UpdatedCallPermissionsEvent\n */\nexport interface UpdatedCallPermissionsEvent {\n  /**\n   *\n   * @type {string}\n   * @memberof UpdatedCallPermissionsEvent\n   */\n  call_cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof UpdatedCallPermissionsEvent\n   */\n  created_at: string;\n  /**\n   * The capabilities of the current user\n   * @type {Array<OwnCapability>}\n   * @memberof UpdatedCallPermissionsEvent\n   */\n  own_capabilities: Array<OwnCapability>;\n  /**\n   * The type of event: \"call.permissions_updated\" in this case\n   * @type {string}\n   * @memberof UpdatedCallPermissionsEvent\n   */\n  type: string;\n  /**\n   *\n   * @type {UserResponse}\n   * @memberof UpdatedCallPermissionsEvent\n   */\n  user: UserResponse;\n}\n/**\n *\n * @export\n * @interface UserBannedEvent\n */\nexport interface UserBannedEvent {\n  /**\n   *\n   * @type {string}\n   * @memberof UserBannedEvent\n   */\n  channel_id: string;\n  /**\n   *\n   * @type {string}\n   * @memberof UserBannedEvent\n   */\n  channel_type: string;\n  /**\n   *\n   * @type {string}\n   * @memberof UserBannedEvent\n   */\n  cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof UserBannedEvent\n   */\n  created_at: string;\n  /**\n   *\n   * @type {UserObject}\n   * @memberof UserBannedEvent\n   */\n  created_by: UserObject;\n  /**\n   *\n   * @type {string}\n   * @memberof UserBannedEvent\n   */\n  expiration?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof UserBannedEvent\n   */\n  reason?: string;\n  /**\n   *\n   * @type {boolean}\n   * @memberof UserBannedEvent\n   */\n  shadow: boolean;\n  /**\n   *\n   * @type {string}\n   * @memberof UserBannedEvent\n   */\n  team?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof UserBannedEvent\n   */\n  type: string;\n  /**\n   *\n   * @type {UserObject}\n   * @memberof UserBannedEvent\n   */\n  user?: UserObject;\n}\n/**\n *\n * @export\n * @interface UserDeactivatedEvent\n */\nexport interface UserDeactivatedEvent {\n  /**\n   *\n   * @type {string}\n   * @memberof UserDeactivatedEvent\n   */\n  created_at: string;\n  /**\n   *\n   * @type {UserObject}\n   * @memberof UserDeactivatedEvent\n   */\n  created_by: UserObject;\n  /**\n   *\n   * @type {string}\n   * @memberof UserDeactivatedEvent\n   */\n  type: string;\n  /**\n   *\n   * @type {UserObject}\n   * @memberof UserDeactivatedEvent\n   */\n  user?: UserObject;\n}\n/**\n *\n * @export\n * @interface UserDeletedEvent\n */\nexport interface UserDeletedEvent {\n  /**\n   *\n   * @type {string}\n   * @memberof UserDeletedEvent\n   */\n  created_at: string;\n  /**\n   *\n   * @type {boolean}\n   * @memberof UserDeletedEvent\n   */\n  delete_conversation_channels: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof UserDeletedEvent\n   */\n  hard_delete: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof UserDeletedEvent\n   */\n  mark_messages_deleted: boolean;\n  /**\n   *\n   * @type {string}\n   * @memberof UserDeletedEvent\n   */\n  type: string;\n  /**\n   *\n   * @type {UserObject}\n   * @memberof UserDeletedEvent\n   */\n  user?: UserObject;\n}\n/**\n *\n * @export\n * @interface UserInfoResponse\n */\nexport interface UserInfoResponse {\n  /**\n   *\n   * @type {{ [key: string]: any; }}\n   * @memberof UserInfoResponse\n   */\n  custom: { [key: string]: any };\n  /**\n   *\n   * @type {string}\n   * @memberof UserInfoResponse\n   */\n  image: string;\n  /**\n   *\n   * @type {string}\n   * @memberof UserInfoResponse\n   */\n  name: string;\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof UserInfoResponse\n   */\n  roles: Array<string>;\n}\n/**\n *\n * @export\n * @interface UserMute\n */\nexport interface UserMute {\n  /**\n   * Date/time of creation\n   * @type {string}\n   * @memberof UserMute\n   */\n  created_at: string;\n  /**\n   * Date/time of mute expiration\n   * @type {string}\n   * @memberof UserMute\n   */\n  expires?: string;\n  /**\n   *\n   * @type {UserObject}\n   * @memberof UserMute\n   */\n  target?: UserObject;\n  /**\n   * Date/time of the last update\n   * @type {string}\n   * @memberof UserMute\n   */\n  updated_at: string;\n  /**\n   *\n   * @type {UserObject}\n   * @memberof UserMute\n   */\n  user?: UserObject;\n}\n/**\n *\n * @export\n * @interface UserMuteResponse\n */\nexport interface UserMuteResponse {\n  /**\n   *\n   * @type {string}\n   * @memberof UserMuteResponse\n   */\n  created_at: string;\n  /**\n   *\n   * @type {string}\n   * @memberof UserMuteResponse\n   */\n  expires?: string;\n  /**\n   *\n   * @type {UserResponse}\n   * @memberof UserMuteResponse\n   */\n  target?: UserResponse;\n  /**\n   *\n   * @type {string}\n   * @memberof UserMuteResponse\n   */\n  updated_at: string;\n  /**\n   *\n   * @type {UserResponse}\n   * @memberof UserMuteResponse\n   */\n  user?: UserResponse;\n}\n\n/**\n *\n * @export\n * @interface UserMutedEvent\n */\nexport interface UserMutedEvent {\n  /**\n   *\n   * @type {string}\n   * @memberof UserMutedEvent\n   */\n  created_at: string;\n  /**\n   *\n   * @type {string}\n   * @memberof UserMutedEvent\n   */\n  target_user?: string;\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof UserMutedEvent\n   */\n  target_users?: Array<string>;\n  /**\n   *\n   * @type {string}\n   * @memberof UserMutedEvent\n   */\n  type: string;\n  /**\n   *\n   * @type {UserObject}\n   * @memberof UserMutedEvent\n   */\n  user?: UserObject;\n}\n/**\n * Represents chat user\n * @export\n * @interface UserObject\n */\nexport interface UserObject {\n  /**\n   * Expiration date of the ban\n   * @type {string}\n   * @memberof UserObject\n   */\n  ban_expires?: string;\n  /**\n   * Whether a user is banned or not\n   * @type {boolean}\n   * @memberof UserObject\n   */\n  banned: boolean;\n  /**\n   * Date/time of creation\n   * @type {string}\n   * @memberof UserObject\n   */\n  readonly created_at?: string;\n  /**\n   *\n   * @type {{ [key: string]: any; }}\n   * @memberof UserObject\n   */\n  custom: { [key: string]: any };\n  /**\n   * Date of deactivation\n   * @type {string}\n   * @memberof UserObject\n   */\n  readonly deactivated_at?: string;\n  /**\n   * Date/time of deletion\n   * @type {string}\n   * @memberof UserObject\n   */\n  readonly deleted_at?: string;\n  /**\n   * Unique user identifier\n   * @type {string}\n   * @memberof UserObject\n   */\n  id: string;\n  /**\n   *\n   * @type {boolean}\n   * @memberof UserObject\n   */\n  invisible?: boolean;\n  /**\n   * Preferred language of a user\n   * @type {string}\n   * @memberof UserObject\n   */\n  language?: string;\n  /**\n   * Date of last activity\n   * @type {string}\n   * @memberof UserObject\n   */\n  readonly last_active?: string;\n  /**\n   * Whether a user online or not\n   * @type {boolean}\n   * @memberof UserObject\n   */\n  readonly online: boolean;\n  /**\n   *\n   * @type {PrivacySettings}\n   * @memberof UserObject\n   */\n  privacy_settings?: PrivacySettings;\n  /**\n   *\n   * @type {PushNotificationSettings}\n   * @memberof UserObject\n   */\n  push_notifications?: PushNotificationSettings;\n  /**\n   * Revocation date for tokens\n   * @type {string}\n   * @memberof UserObject\n   */\n  revoke_tokens_issued_before?: string;\n  /**\n   * Determines the set of user permissions\n   * @type {string}\n   * @memberof UserObject\n   */\n  role: string;\n  /**\n   * List of teams user is a part of\n   * @type {Array<string>}\n   * @memberof UserObject\n   */\n  teams?: Array<string>;\n  /**\n   * Date/time of the last update\n   * @type {string}\n   * @memberof UserObject\n   */\n  readonly updated_at?: string;\n}\n/**\n *\n * @export\n * @interface UserPresenceChangedEvent\n */\nexport interface UserPresenceChangedEvent {\n  /**\n   *\n   * @type {string}\n   * @memberof UserPresenceChangedEvent\n   */\n  created_at: string;\n  /**\n   *\n   * @type {string}\n   * @memberof UserPresenceChangedEvent\n   */\n  type: string;\n  /**\n   *\n   * @type {UserObject}\n   * @memberof UserPresenceChangedEvent\n   */\n  user?: UserObject;\n}\n/**\n *\n * @export\n * @interface UserReactivatedEvent\n */\nexport interface UserReactivatedEvent {\n  /**\n   *\n   * @type {string}\n   * @memberof UserReactivatedEvent\n   */\n  created_at: string;\n  /**\n   *\n   * @type {string}\n   * @memberof UserReactivatedEvent\n   */\n  type: string;\n  /**\n   *\n   * @type {UserObject}\n   * @memberof UserReactivatedEvent\n   */\n  user?: UserObject;\n}\n/**\n *\n * @export\n * @interface UserRequest\n */\nexport interface UserRequest {\n  /**\n   *\n   * @type {{ [key: string]: any; }}\n   * @memberof UserRequest\n   */\n  custom?: { [key: string]: any };\n  /**\n   * User ID\n   * @type {string}\n   * @memberof UserRequest\n   */\n  id: string;\n  /**\n   *\n   * @type {string}\n   * @memberof UserRequest\n   */\n  image?: string;\n  /**\n   *\n   * @type {boolean}\n   * @memberof UserRequest\n   */\n  invisible?: boolean;\n  /**\n   *\n   * @type {string}\n   * @memberof UserRequest\n   */\n  language?: string;\n  /**\n   * Optional name of user\n   * @type {string}\n   * @memberof UserRequest\n   */\n  name?: string;\n  /**\n   *\n   * @type {PrivacySettings}\n   * @memberof UserRequest\n   */\n  privacy_settings?: PrivacySettings;\n  /**\n   *\n   * @type {PushNotificationSettingsInput}\n   * @memberof UserRequest\n   */\n  push_notifications?: PushNotificationSettingsInput;\n}\n/**\n *\n * @export\n * @interface UserResponse\n */\nexport interface UserResponse {\n  /**\n   * Whether a user is banned or not\n   * @type {boolean}\n   * @memberof UserResponse\n   */\n  banned: boolean;\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof UserResponse\n   */\n  blocked_user_ids: Array<string>;\n  /**\n   * Date/time of creation\n   * @type {string}\n   * @memberof UserResponse\n   */\n  created_at: string;\n  /**\n   * Custom data for this object\n   * @type {{ [key: string]: any; }}\n   * @memberof UserResponse\n   */\n  custom: { [key: string]: any };\n  /**\n   * Date of deactivation\n   * @type {string}\n   * @memberof UserResponse\n   */\n  deactivated_at?: string;\n  /**\n   * Date/time of deletion\n   * @type {string}\n   * @memberof UserResponse\n   */\n  deleted_at?: string;\n  /**\n   * Unique user identifier\n   * @type {string}\n   * @memberof UserResponse\n   */\n  id: string;\n  /**\n   *\n   * @type {string}\n   * @memberof UserResponse\n   */\n  image?: string;\n  /**\n   * Preferred language of a user\n   * @type {string}\n   * @memberof UserResponse\n   */\n  language: string;\n  /**\n   * Date of last activity\n   * @type {string}\n   * @memberof UserResponse\n   */\n  last_active?: string;\n  /**\n   * Optional name of user\n   * @type {string}\n   * @memberof UserResponse\n   */\n  name?: string;\n  /**\n   * Whether a user online or not\n   * @type {boolean}\n   * @memberof UserResponse\n   */\n  online: boolean;\n  /**\n   * Revocation date for tokens\n   * @type {string}\n   * @memberof UserResponse\n   */\n  revoke_tokens_issued_before?: string;\n  /**\n   * Determines the set of user permissions\n   * @type {string}\n   * @memberof UserResponse\n   */\n  role: string;\n  /**\n   * List of teams user is a part of\n   * @type {Array<string>}\n   * @memberof UserResponse\n   */\n  teams: Array<string>;\n  /**\n   * Date/time of the last update\n   * @type {string}\n   * @memberof UserResponse\n   */\n  updated_at: string;\n}\n/**\n *\n * @export\n * @interface UserSessionStats\n */\nexport interface UserSessionStats {\n  /**\n   *\n   * @type {string}\n   * @memberof UserSessionStats\n   */\n  browser?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof UserSessionStats\n   */\n  browser_version?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof UserSessionStats\n   */\n  current_ip?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof UserSessionStats\n   */\n  current_sfu?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof UserSessionStats\n   */\n  device_model?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof UserSessionStats\n   */\n  device_version?: string;\n  /**\n   *\n   * @type {number}\n   * @memberof UserSessionStats\n   */\n  distance_to_sfu_kilometers?: number;\n  /**\n   *\n   * @type {number}\n   * @memberof UserSessionStats\n   */\n  freeze_duration_seconds: number;\n  /**\n   *\n   * @type {GeolocationResult}\n   * @memberof UserSessionStats\n   */\n  geolocation?: GeolocationResult;\n  /**\n   *\n   * @type {Stats}\n   * @memberof UserSessionStats\n   */\n  jitter?: Stats;\n  /**\n   *\n   * @type {Stats}\n   * @memberof UserSessionStats\n   */\n  latency?: Stats;\n  /**\n   *\n   * @type {number}\n   * @memberof UserSessionStats\n   */\n  max_fir_per_second?: number;\n  /**\n   *\n   * @type {number}\n   * @memberof UserSessionStats\n   */\n  max_freeze_fraction: number;\n  /**\n   *\n   * @type {number}\n   * @memberof UserSessionStats\n   */\n  max_freezes_duration_seconds: number;\n  /**\n   *\n   * @type {number}\n   * @memberof UserSessionStats\n   */\n  max_freezes_per_second?: number;\n  /**\n   *\n   * @type {number}\n   * @memberof UserSessionStats\n   */\n  max_nack_per_second?: number;\n  /**\n   *\n   * @type {number}\n   * @memberof UserSessionStats\n   */\n  max_pli_per_second?: number;\n  /**\n   *\n   * @type {VideoQuality}\n   * @memberof UserSessionStats\n   */\n  max_publishing_video_quality?: VideoQuality;\n  /**\n   *\n   * @type {VideoQuality}\n   * @memberof UserSessionStats\n   */\n  max_receiving_video_quality?: VideoQuality;\n  /**\n   *\n   * @type {string}\n   * @memberof UserSessionStats\n   */\n  os?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof UserSessionStats\n   */\n  os_version?: string;\n  /**\n   *\n   * @type {number}\n   * @memberof UserSessionStats\n   */\n  packet_loss_fraction: number;\n  /**\n   *\n   * @type {MediaPubSubHint}\n   * @memberof UserSessionStats\n   */\n  pub_sub_hints?: MediaPubSubHint;\n  /**\n   *\n   * @type {Array<PublishedTrackInfo>}\n   * @memberof UserSessionStats\n   */\n  published_tracks?: Array<PublishedTrackInfo>;\n  /**\n   *\n   * @type {MOSStats}\n   * @memberof UserSessionStats\n   */\n  publisher_audio_mos?: MOSStats;\n  /**\n   *\n   * @type {Stats}\n   * @memberof UserSessionStats\n   */\n  publisher_jitter?: Stats;\n  /**\n   *\n   * @type {Stats}\n   * @memberof UserSessionStats\n   */\n  publisher_latency?: Stats;\n  /**\n   *\n   * @type {number}\n   * @memberof UserSessionStats\n   */\n  publisher_noise_cancellation_seconds?: number;\n  /**\n   *\n   * @type {number}\n   * @memberof UserSessionStats\n   */\n  publisher_packet_loss_fraction: number;\n  /**\n   *\n   * @type {number}\n   * @memberof UserSessionStats\n   */\n  publisher_quality_limitation_fraction?: number;\n  /**\n   *\n   * @type {{ [key: string]: number; }}\n   * @memberof UserSessionStats\n   */\n  publisher_video_quality_limitation_duration_seconds?: {\n    [key: string]: number;\n  };\n  /**\n   *\n   * @type {string}\n   * @memberof UserSessionStats\n   */\n  publishing_audio_codec?: string;\n  /**\n   *\n   * @type {number}\n   * @memberof UserSessionStats\n   */\n  publishing_duration_seconds: number;\n  /**\n   *\n   * @type {string}\n   * @memberof UserSessionStats\n   */\n  publishing_video_codec?: string;\n  /**\n   *\n   * @type {number}\n   * @memberof UserSessionStats\n   */\n  quality_score: number;\n  /**\n   *\n   * @type {string}\n   * @memberof UserSessionStats\n   */\n  receiving_audio_codec?: string;\n  /**\n   *\n   * @type {number}\n   * @memberof UserSessionStats\n   */\n  receiving_duration_seconds: number;\n  /**\n   *\n   * @type {string}\n   * @memberof UserSessionStats\n   */\n  receiving_video_codec?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof UserSessionStats\n   */\n  sdk?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof UserSessionStats\n   */\n  sdk_version?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof UserSessionStats\n   */\n  session_id: string;\n  /**\n   *\n   * @type {MOSStats}\n   * @memberof UserSessionStats\n   */\n  subscriber_audio_mos?: MOSStats;\n  /**\n   *\n   * @type {Stats}\n   * @memberof UserSessionStats\n   */\n  subscriber_jitter?: Stats;\n  /**\n   *\n   * @type {Stats}\n   * @memberof UserSessionStats\n   */\n  subscriber_latency?: Stats;\n  /**\n   *\n   * @type {number}\n   * @memberof UserSessionStats\n   */\n  subscriber_video_quality_throttled_duration_seconds?: number;\n  /**\n   *\n   * @type {Array<Subsession>}\n   * @memberof UserSessionStats\n   */\n  subsessions?: Array<Subsession>;\n  /**\n   *\n   * @type {CallTimeline}\n   * @memberof UserSessionStats\n   */\n  timeline?: CallTimeline;\n  /**\n   *\n   * @type {number}\n   * @memberof UserSessionStats\n   */\n  total_pixels_in: number;\n  /**\n   *\n   * @type {number}\n   * @memberof UserSessionStats\n   */\n  total_pixels_out: number;\n  /**\n   *\n   * @type {boolean}\n   * @memberof UserSessionStats\n   */\n  truncated?: boolean;\n  /**\n   *\n   * @type {string}\n   * @memberof UserSessionStats\n   */\n  webrtc_version?: string;\n}\n/**\n *\n * @export\n * @interface UserStats\n */\nexport interface UserStats {\n  /**\n   *\n   * @type {UserInfoResponse}\n   * @memberof UserStats\n   */\n  info: UserInfoResponse;\n  /**\n   *\n   * @type {number}\n   * @memberof UserStats\n   */\n  min_event_ts: number;\n  /**\n   *\n   * @type {number}\n   * @memberof UserStats\n   */\n  rating?: number;\n  /**\n   *\n   * @type {Array<UserSessionStats>}\n   * @memberof UserStats\n   */\n  session_stats: Array<UserSessionStats>;\n}\n/**\n *\n * @export\n * @interface UserUnbannedEvent\n */\nexport interface UserUnbannedEvent {\n  /**\n   *\n   * @type {string}\n   * @memberof UserUnbannedEvent\n   */\n  channel_id: string;\n  /**\n   *\n   * @type {string}\n   * @memberof UserUnbannedEvent\n   */\n  channel_type: string;\n  /**\n   *\n   * @type {string}\n   * @memberof UserUnbannedEvent\n   */\n  cid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof UserUnbannedEvent\n   */\n  created_at: string;\n  /**\n   *\n   * @type {boolean}\n   * @memberof UserUnbannedEvent\n   */\n  shadow: boolean;\n  /**\n   *\n   * @type {string}\n   * @memberof UserUnbannedEvent\n   */\n  team?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof UserUnbannedEvent\n   */\n  type: string;\n  /**\n   *\n   * @type {UserObject}\n   * @memberof UserUnbannedEvent\n   */\n  user?: UserObject;\n}\n/**\n *\n * @export\n * @interface UserUpdatedEvent\n */\nexport interface UserUpdatedEvent {\n  /**\n   *\n   * @type {string}\n   * @memberof UserUpdatedEvent\n   */\n  created_at: string;\n  /**\n   *\n   * @type {string}\n   * @memberof UserUpdatedEvent\n   */\n  received_at?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof UserUpdatedEvent\n   */\n  type: string;\n  /**\n   *\n   * @type {UserObject}\n   * @memberof UserUpdatedEvent\n   */\n  user?: UserObject;\n}\n/**\n *\n * @export\n * @interface VideoQuality\n */\nexport interface VideoQuality {\n  /**\n   *\n   * @type {VideoResolution}\n   * @memberof VideoQuality\n   */\n  resolution?: VideoResolution;\n  /**\n   *\n   * @type {string}\n   * @memberof VideoQuality\n   */\n  usage_type?: string;\n}\n/**\n *\n * @export\n * @interface VideoResolution\n */\nexport interface VideoResolution {\n  /**\n   *\n   * @type {number}\n   * @memberof VideoResolution\n   */\n  height: number;\n  /**\n   *\n   * @type {number}\n   * @memberof VideoResolution\n   */\n  width: number;\n}\n/**\n *\n * @export\n * @interface VideoSettingsRequest\n */\nexport interface VideoSettingsRequest {\n  /**\n   *\n   * @type {boolean}\n   * @memberof VideoSettingsRequest\n   */\n  access_request_enabled?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof VideoSettingsRequest\n   */\n  camera_default_on?: boolean;\n  /**\n   *\n   * @type {string}\n   * @memberof VideoSettingsRequest\n   */\n  camera_facing?: VideoSettingsRequestCameraFacingEnum;\n  /**\n   *\n   * @type {boolean}\n   * @memberof VideoSettingsRequest\n   */\n  enabled?: boolean;\n  /**\n   *\n   * @type {TargetResolution}\n   * @memberof VideoSettingsRequest\n   */\n  target_resolution?: TargetResolution;\n}\n\n/**\n * @export\n */\nexport const VideoSettingsRequestCameraFacingEnum = {\n  FRONT: 'front',\n  BACK: 'back',\n  EXTERNAL: 'external',\n} as const;\nexport type VideoSettingsRequestCameraFacingEnum =\n  (typeof VideoSettingsRequestCameraFacingEnum)[keyof typeof VideoSettingsRequestCameraFacingEnum];\n\n/**\n *\n * @export\n * @interface VideoSettingsResponse\n */\nexport interface VideoSettingsResponse {\n  /**\n   *\n   * @type {boolean}\n   * @memberof VideoSettingsResponse\n   */\n  access_request_enabled: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof VideoSettingsResponse\n   */\n  camera_default_on: boolean;\n  /**\n   *\n   * @type {string}\n   * @memberof VideoSettingsResponse\n   */\n  camera_facing: VideoSettingsResponseCameraFacingEnum;\n  /**\n   *\n   * @type {boolean}\n   * @memberof VideoSettingsResponse\n   */\n  enabled: boolean;\n  /**\n   *\n   * @type {TargetResolution}\n   * @memberof VideoSettingsResponse\n   */\n  target_resolution: TargetResolution;\n}\n\n/**\n * @export\n */\nexport const VideoSettingsResponseCameraFacingEnum = {\n  FRONT: 'front',\n  BACK: 'back',\n  EXTERNAL: 'external',\n} as const;\nexport type VideoSettingsResponseCameraFacingEnum =\n  (typeof VideoSettingsResponseCameraFacingEnum)[keyof typeof VideoSettingsResponseCameraFacingEnum];\n\n/**\n *\n * @export\n * @interface WSAuthMessage\n */\nexport interface WSAuthMessage {\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof WSAuthMessage\n   */\n  products?: Array<string>;\n  /**\n   *\n   * @type {string}\n   * @memberof WSAuthMessage\n   */\n  token: string;\n  /**\n   *\n   * @type {ConnectUserDetailsRequest}\n   * @memberof WSAuthMessage\n   */\n  user_details: ConnectUserDetailsRequest;\n}\n/**\n * @type WSEvent\n * The discriminator object for all websocket events, it maps events' payload to the final type\n * @export\n */\nexport type WSEvent =\n  | ({ type: 'call.accepted' } & CallAcceptedEvent)\n  | ({ type: 'call.blocked_user' } & BlockedUserEvent)\n  | ({ type: 'call.closed_caption' } & ClosedCaptionEvent)\n  | ({ type: 'call.created' } & CallCreatedEvent)\n  | ({ type: 'call.deleted' } & CallDeletedEvent)\n  | ({ type: 'call.ended' } & CallEndedEvent)\n  | ({ type: 'call.hls_broadcasting_failed' } & CallHLSBroadcastingFailedEvent)\n  | ({\n      type: 'call.hls_broadcasting_started';\n    } & CallHLSBroadcastingStartedEvent)\n  | ({\n      type: 'call.hls_broadcasting_stopped';\n    } & CallHLSBroadcastingStoppedEvent)\n  | ({ type: 'call.live_started' } & CallLiveStartedEvent)\n  | ({ type: 'call.member_added' } & CallMemberAddedEvent)\n  | ({ type: 'call.member_removed' } & CallMemberRemovedEvent)\n  | ({ type: 'call.member_updated' } & CallMemberUpdatedEvent)\n  | ({\n      type: 'call.member_updated_permission';\n    } & CallMemberUpdatedPermissionEvent)\n  | ({ type: 'call.missed' } & CallMissedEvent)\n  | ({ type: 'call.notification' } & CallNotificationEvent)\n  | ({ type: 'call.permission_request' } & PermissionRequestEvent)\n  | ({ type: 'call.permissions_updated' } & UpdatedCallPermissionsEvent)\n  | ({ type: 'call.reaction_new' } & CallReactionEvent)\n  | ({ type: 'call.recording_failed' } & CallRecordingFailedEvent)\n  | ({ type: 'call.recording_ready' } & CallRecordingReadyEvent)\n  | ({ type: 'call.recording_started' } & CallRecordingStartedEvent)\n  | ({ type: 'call.recording_stopped' } & CallRecordingStoppedEvent)\n  | ({ type: 'call.rejected' } & CallRejectedEvent)\n  | ({ type: 'call.ring' } & CallRingEvent)\n  | ({ type: 'call.session_ended' } & CallSessionEndedEvent)\n  | ({\n      type: 'call.session_participant_count_updated';\n    } & CallSessionParticipantCountsUpdatedEvent)\n  | ({\n      type: 'call.session_participant_joined';\n    } & CallSessionParticipantJoinedEvent)\n  | ({\n      type: 'call.session_participant_left';\n    } & CallSessionParticipantLeftEvent)\n  | ({ type: 'call.session_started' } & CallSessionStartedEvent)\n  | ({ type: 'call.transcription_failed' } & CallTranscriptionFailedEvent)\n  | ({ type: 'call.transcription_ready' } & CallTranscriptionReadyEvent)\n  | ({ type: 'call.transcription_started' } & CallTranscriptionStartedEvent)\n  | ({ type: 'call.transcription_stopped' } & CallTranscriptionStoppedEvent)\n  | ({ type: 'call.unblocked_user' } & UnblockedUserEvent)\n  | ({ type: 'call.updated' } & CallUpdatedEvent)\n  | ({ type: 'call.user_muted' } & CallUserMutedEvent)\n  | ({ type: 'connection.error' } & ConnectionErrorEvent)\n  | ({ type: 'connection.ok' } & ConnectedEvent)\n  | ({ type: 'custom' } & CustomVideoEvent)\n  | ({ type: 'health.check' } & HealthCheckEvent)\n  | ({ type: 'user.banned' } & UserBannedEvent)\n  | ({ type: 'user.deactivated' } & UserDeactivatedEvent)\n  | ({ type: 'user.deleted' } & UserDeletedEvent)\n  | ({ type: 'user.muted' } & UserMutedEvent)\n  | ({ type: 'user.presence.changed' } & UserPresenceChangedEvent)\n  | ({ type: 'user.reactivated' } & UserReactivatedEvent)\n  | ({ type: 'user.unbanned' } & UserUnbannedEvent)\n  | ({ type: 'user.updated' } & UserUpdatedEvent);\n", "import { AxiosRequestConfig, AxiosResponse } from 'axios';\nimport { StableWSConnection } from './connection';\nimport { ConnectedEvent, UserRequest, WSEvent } from '../../gen/coordinator';\nimport { AllSfuEvents } from '../../rtc';\n\nexport type UR = Record<string, unknown>;\n\nexport type User =\n  | (Omit<UserRequest, 'role'> & { type?: 'authenticated' })\n  | (Omit<UserRequest, 'role'> & { type: 'guest' })\n  | (Omit<UserRequest, 'id' | 'role'> & {\n      id?: '!anon';\n      type: 'anonymous';\n    });\n\nexport type UserWithId =\n  | (UserRequest & { type?: 'authenticated' })\n  | (UserRequest & { type: 'guest' })\n  | (UserRequest & {\n      id: '!anon';\n      type: 'anonymous';\n    });\n\nexport type { OwnUserResponse } from '../../gen/coordinator';\n\nexport type ConnectAPIResponse = Promise<void | ConnectedEvent>;\n\nexport type LogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error';\n\ntype ErrorResponseDetails = {\n  code: number;\n  messages: string[];\n};\n\nexport type APIErrorResponse = {\n  code: number;\n  duration: string;\n  message: string;\n  more_info: string;\n  StatusCode: number;\n  details?: ErrorResponseDetails;\n  unrecoverable?: boolean;\n};\n\nexport class ErrorFromResponse<T> extends Error {\n  code?: number;\n  response?: AxiosResponse<T>;\n  status?: number;\n  unrecoverable?: boolean;\n}\n\nexport type ConnectionChangedEvent = {\n  type: 'connection.changed';\n  online: boolean;\n};\n\nexport type NetworkChangedEvent = {\n  type: 'network.changed';\n  online: boolean;\n};\n\nexport type TransportChangedEvent = {\n  type: 'transport.changed';\n  mode: 'longpoll';\n};\n\nexport type ConnectionRecoveredEvent = {\n  type: 'connection.recovered';\n};\n\nexport type StreamVideoEvent = (\n  | WSEvent\n  | NetworkChangedEvent\n  | ConnectionChangedEvent\n  | TransportChangedEvent\n  | ConnectionRecoveredEvent\n) & { received_at?: string | Date };\n\n// TODO: we should use WSCallEvent here but that needs fixing\nexport type StreamCallEvent = Extract<StreamVideoEvent, { call_cid: string }>;\nexport type EventTypes = 'all' | WSEvent['type'];\n\nexport type AllClientEventTypes = 'all' | StreamVideoEvent['type'];\nexport type AllClientEvents = {\n  [K in AllClientEventTypes]: Extract<StreamVideoEvent, { type: K }>;\n};\nexport type ClientEventListener<E extends keyof AllClientEvents> = (\n  event: AllClientEvents[E],\n) => void;\n\nexport type AllClientCallEvents = {\n  [K in EventTypes]: Extract<WSEvent, { type: K }>;\n};\n\nexport type AllCallEvents = AllClientCallEvents & AllSfuEvents;\nexport type CallEventListener<E extends keyof AllCallEvents> = (\n  event: AllCallEvents[E],\n) => void;\n\nexport type Logger = (\n  logLevel: LogLevel,\n  message: string,\n  ...args: unknown[]\n) => void;\n\nexport type StreamClientOptions = Partial<AxiosRequestConfig> & {\n  /**\n   * Used to disable warnings that are triggered by using connectUser or connectAnonymousUser server-side.\n   */\n  allowServerSideConnect?: boolean;\n  axiosRequestConfig?: AxiosRequestConfig;\n  /**\n   * Base url to use for API\n   * such as https://chat-proxy-dublin.stream-io-api.com\n   */\n  baseURL?: string;\n  browser?: boolean;\n  // device?: BaseDeviceFields;\n  enableInsights?: boolean;\n  /** experimental feature, please contact support if you want this feature enabled for you */\n  enableWSFallback?: boolean;\n  logger?: Logger;\n  logLevel?: LogLevel;\n  /**\n   * The URL to use for the location hint.\n   */\n  locationHintUrl?: string;\n  /**\n   * The default timeout for requesting a location hint.\n   */\n  locationHintTimeout?: number;\n  /**\n   * The maximum number of attempts to request a location hint.\n   */\n  locationHintMaxAttempts?: number;\n  /**\n   * When true, user will be persisted on client. Otherwise if `connectUser` call fails, then you need to\n   * call `connectUser` again to retry.\n   * This is mainly useful for chat application working in offline mode, where you will need client.user to\n   * persist even if connectUser call fails.\n   */\n  persistUserOnConnectionFailure?: boolean;\n\n  /**\n   * The secret key for the API key. This is only needed for server side authentication.\n   */\n  secret?: string;\n\n  warmUp?: boolean;\n  // Set the instance of StableWSConnection on chat client. Its purely for testing purpose and should\n  // not be used in production apps.\n  wsConnection?: StableWSConnection;\n};\n\nexport type TokenProvider = () => Promise<string>;\nexport type TokenOrProvider = null | string | TokenProvider | undefined;\n\nexport type BuiltInRejectReason = 'busy' | 'decline' | 'cancel';\nexport type RejectReason = BuiltInRejectReason | string;\n", "/* eslint-disable */\n// @generated by protobuf-ts 2.9.4 with parameter long_type_string,client_generic,server_none,eslint_disable,optimize_code_size\n// @generated from protobuf file \"google/protobuf/struct.proto\" (package \"google.protobuf\", syntax proto3)\n// tslint:disable\n//\n// Protocol Buffers - Google's data interchange format\n// Copyright 2008 Google Inc.  All rights reserved.\n// https://developers.google.com/protocol-buffers/\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//     * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//     * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//     * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\nimport type {\n  JsonObject,\n  JsonReadOptions,\n  JsonValue,\n  JsonWriteOptions,\n} from '@protobuf-ts/runtime';\nimport {\n  isJsonObject,\n  MessageType,\n  typeofJsonValue,\n} from '@protobuf-ts/runtime';\n\n/**\n * `Struct` represents a structured data value, consisting of fields\n * which map to dynamically typed values. In some languages, `Struct`\n * might be supported by a native representation. For example, in\n * scripting languages like JS a struct is represented as an\n * object. The details of that representation are described together\n * with the proto support for the language.\n *\n * The JSON representation for `Struct` is JSON object.\n *\n * @generated from protobuf message google.protobuf.Struct\n */\nexport interface Struct {\n  /**\n   * Unordered map of dynamically typed values.\n   *\n   * @generated from protobuf field: map<string, google.protobuf.Value> fields = 1;\n   */\n  fields: {\n    [key: string]: Value;\n  };\n}\n/**\n * `Value` represents a dynamically typed value which can be either\n * null, a number, a string, a boolean, a recursive struct value, or a\n * list of values. A producer of value is expected to set one of these\n * variants. Absence of any variant indicates an error.\n *\n * The JSON representation for `Value` is JSON value.\n *\n * @generated from protobuf message google.protobuf.Value\n */\nexport interface Value {\n  /**\n   * @generated from protobuf oneof: kind\n   */\n  kind:\n    | {\n        oneofKind: 'nullValue';\n        /**\n         * Represents a null value.\n         *\n         * @generated from protobuf field: google.protobuf.NullValue null_value = 1;\n         */\n        nullValue: NullValue;\n      }\n    | {\n        oneofKind: 'numberValue';\n        /**\n         * Represents a double value.\n         *\n         * @generated from protobuf field: double number_value = 2;\n         */\n        numberValue: number;\n      }\n    | {\n        oneofKind: 'stringValue';\n        /**\n         * Represents a string value.\n         *\n         * @generated from protobuf field: string string_value = 3;\n         */\n        stringValue: string;\n      }\n    | {\n        oneofKind: 'boolValue';\n        /**\n         * Represents a boolean value.\n         *\n         * @generated from protobuf field: bool bool_value = 4;\n         */\n        boolValue: boolean;\n      }\n    | {\n        oneofKind: 'structValue';\n        /**\n         * Represents a structured value.\n         *\n         * @generated from protobuf field: google.protobuf.Struct struct_value = 5;\n         */\n        structValue: Struct;\n      }\n    | {\n        oneofKind: 'listValue';\n        /**\n         * Represents a repeated `Value`.\n         *\n         * @generated from protobuf field: google.protobuf.ListValue list_value = 6;\n         */\n        listValue: ListValue;\n      }\n    | {\n        oneofKind: undefined;\n      };\n}\n/**\n * `ListValue` is a wrapper around a repeated field of values.\n *\n * The JSON representation for `ListValue` is JSON array.\n *\n * @generated from protobuf message google.protobuf.ListValue\n */\nexport interface ListValue {\n  /**\n   * Repeated field of dynamically typed values.\n   *\n   * @generated from protobuf field: repeated google.protobuf.Value values = 1;\n   */\n  values: Value[];\n}\n/**\n * `NullValue` is a singleton enumeration to represent the null value for the\n * `Value` type union.\n *\n *  The JSON representation for `NullValue` is JSON `null`.\n *\n * @generated from protobuf enum google.protobuf.NullValue\n */\nexport enum NullValue {\n  /**\n   * Null value.\n   *\n   * @generated from protobuf enum value: NULL_VALUE = 0;\n   */\n  NULL_VALUE = 0,\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass Struct$Type extends MessageType<Struct> {\n  constructor() {\n    super('google.protobuf.Struct', [\n      {\n        no: 1,\n        name: 'fields',\n        kind: 'map',\n        K: 9 /*ScalarType.STRING*/,\n        V: { kind: 'message', T: () => Value },\n      },\n    ]);\n  }\n  /**\n   * Encode `Struct` to JSON object.\n   */\n  internalJsonWrite(message: Struct, options: JsonWriteOptions): JsonValue {\n    let json: JsonObject = {};\n    for (let [k, v] of Object.entries(message.fields)) {\n      json[k] = Value.toJson(v);\n    }\n    return json;\n  }\n  /**\n   * Decode `Struct` from JSON object.\n   */\n  internalJsonRead(\n    json: JsonValue,\n    options: JsonReadOptions,\n    target?: Struct,\n  ): Struct {\n    if (!isJsonObject(json))\n      throw new globalThis.Error(\n        'Unable to parse message ' +\n          this.typeName +\n          ' from JSON ' +\n          typeofJsonValue(json) +\n          '.',\n      );\n    if (!target) target = this.create();\n    for (let [k, v] of globalThis.Object.entries(json)) {\n      target.fields[k] = Value.fromJson(v);\n    }\n    return target;\n  }\n}\n/**\n * @generated MessageType for protobuf message google.protobuf.Struct\n */\nexport const Struct = new Struct$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Value$Type extends MessageType<Value> {\n  constructor() {\n    super('google.protobuf.Value', [\n      {\n        no: 1,\n        name: 'null_value',\n        kind: 'enum',\n        oneof: 'kind',\n        T: () => ['google.protobuf.NullValue', NullValue],\n      },\n      {\n        no: 2,\n        name: 'number_value',\n        kind: 'scalar',\n        oneof: 'kind',\n        T: 1 /*ScalarType.DOUBLE*/,\n      },\n      {\n        no: 3,\n        name: 'string_value',\n        kind: 'scalar',\n        oneof: 'kind',\n        T: 9 /*ScalarType.STRING*/,\n      },\n      {\n        no: 4,\n        name: 'bool_value',\n        kind: 'scalar',\n        oneof: 'kind',\n        T: 8 /*ScalarType.BOOL*/,\n      },\n      {\n        no: 5,\n        name: 'struct_value',\n        kind: 'message',\n        oneof: 'kind',\n        T: () => Struct,\n      },\n      {\n        no: 6,\n        name: 'list_value',\n        kind: 'message',\n        oneof: 'kind',\n        T: () => ListValue,\n      },\n    ]);\n  }\n  /**\n   * Encode `Value` to JSON value.\n   */\n  internalJsonWrite(message: Value, options: JsonWriteOptions): JsonValue {\n    if (message.kind.oneofKind === undefined) throw new globalThis.Error();\n    switch (message.kind.oneofKind) {\n      case undefined:\n        throw new globalThis.Error();\n      case 'boolValue':\n        return message.kind.boolValue;\n      case 'nullValue':\n        return null;\n      case 'numberValue':\n        let numberValue = message.kind.numberValue;\n        if (typeof numberValue == 'number' && !Number.isFinite(numberValue))\n          throw new globalThis.Error();\n        return numberValue;\n      case 'stringValue':\n        return message.kind.stringValue;\n      case 'listValue':\n        let listValueField = this.fields.find((f) => f.no === 6);\n        if (listValueField?.kind !== 'message') throw new globalThis.Error();\n        return listValueField.T().toJson(message.kind.listValue);\n      case 'structValue':\n        let structValueField = this.fields.find((f) => f.no === 5);\n        if (structValueField?.kind !== 'message') throw new globalThis.Error();\n        return structValueField.T().toJson(message.kind.structValue);\n    }\n  }\n  /**\n   * Decode `Value` from JSON value.\n   */\n  internalJsonRead(\n    json: JsonValue,\n    options: JsonReadOptions,\n    target?: Value,\n  ): Value {\n    if (!target) target = this.create();\n    switch (typeof json) {\n      case 'number':\n        target.kind = { oneofKind: 'numberValue', numberValue: json };\n        break;\n      case 'string':\n        target.kind = { oneofKind: 'stringValue', stringValue: json };\n        break;\n      case 'boolean':\n        target.kind = { oneofKind: 'boolValue', boolValue: json };\n        break;\n      case 'object':\n        if (json === null) {\n          target.kind = {\n            oneofKind: 'nullValue',\n            nullValue: NullValue.NULL_VALUE,\n          };\n        } else if (globalThis.Array.isArray(json)) {\n          target.kind = {\n            oneofKind: 'listValue',\n            listValue: ListValue.fromJson(json),\n          };\n        } else {\n          target.kind = {\n            oneofKind: 'structValue',\n            structValue: Struct.fromJson(json),\n          };\n        }\n        break;\n      default:\n        throw new globalThis.Error(\n          'Unable to parse ' +\n            this.typeName +\n            ' from JSON ' +\n            typeofJsonValue(json),\n        );\n    }\n    return target;\n  }\n}\n/**\n * @generated MessageType for protobuf message google.protobuf.Value\n */\nexport const Value = new Value$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ListValue$Type extends MessageType<ListValue> {\n  constructor() {\n    super('google.protobuf.ListValue', [\n      {\n        no: 1,\n        name: 'values',\n        kind: 'message',\n        repeat: 1 /*RepeatType.PACKED*/,\n        T: () => Value,\n      },\n    ]);\n  }\n  /**\n   * Encode `ListValue` to JSON array.\n   */\n  internalJsonWrite(message: ListValue, options: JsonWriteOptions): JsonValue {\n    return message.values.map((v) => Value.toJson(v));\n  }\n  /**\n   * Decode `ListValue` from JSON array.\n   */\n  internalJsonRead(\n    json: JsonValue,\n    options: JsonReadOptions,\n    target?: ListValue,\n  ): ListValue {\n    if (!globalThis.Array.isArray(json))\n      throw new globalThis.Error(\n        'Unable to parse ' +\n          this.typeName +\n          ' from JSON ' +\n          typeofJsonValue(json),\n      );\n    if (!target) target = this.create();\n    let values = json.map((v) => Value.fromJson(v));\n    target.values.push(...values);\n    return target;\n  }\n}\n/**\n * @generated MessageType for protobuf message google.protobuf.ListValue\n */\nexport const ListValue = new ListValue$Type();\n", "/* eslint-disable */\n// @generated by protobuf-ts 2.9.4 with parameter long_type_string,client_generic,server_none,eslint_disable,optimize_code_size\n// @generated from protobuf file \"google/protobuf/timestamp.proto\" (package \"google.protobuf\", syntax proto3)\n// tslint:disable\n//\n// Protocol Buffers - Google's data interchange format\n// Copyright 2008 Google Inc.  All rights reserved.\n// https://developers.google.com/protocol-buffers/\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//     * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//     * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//     * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\nimport type {\n  JsonReadOptions,\n  JsonValue,\n  JsonWriteOptions,\n} from '@protobuf-ts/runtime';\nimport { MessageType, PbLong, typeofJsonValue } from '@protobuf-ts/runtime';\n\n/**\n * A Timestamp represents a point in time independent of any time zone or local\n * calendar, encoded as a count of seconds and fractions of seconds at\n * nanosecond resolution. The count is relative to an epoch at UTC midnight on\n * January 1, 1970, in the proleptic Gregorian calendar which extends the\n * Gregorian calendar backwards to year one.\n *\n * All minutes are 60 seconds long. Leap seconds are \"smeared\" so that no leap\n * second table is needed for interpretation, using a [24-hour linear\n * smear](https://developers.google.com/time/smear).\n *\n * The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By\n * restricting to that range, we ensure that we can convert to and from [RFC\n * 3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.\n *\n * # Examples\n *\n * Example 1: Compute Timestamp from POSIX `time()`.\n *\n *     Timestamp timestamp;\n *     timestamp.set_seconds(time(NULL));\n *     timestamp.set_nanos(0);\n *\n * Example 2: Compute Timestamp from POSIX `gettimeofday()`.\n *\n *     struct timeval tv;\n *     gettimeofday(&tv, NULL);\n *\n *     Timestamp timestamp;\n *     timestamp.set_seconds(tv.tv_sec);\n *     timestamp.set_nanos(tv.tv_usec * 1000);\n *\n * Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.\n *\n *     FILETIME ft;\n *     GetSystemTimeAsFileTime(&ft);\n *     UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;\n *\n *     // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z\n *     // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.\n *     Timestamp timestamp;\n *     timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));\n *     timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));\n *\n * Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.\n *\n *     long millis = System.currentTimeMillis();\n *\n *     Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)\n *         .setNanos((int) ((millis % 1000) * 1000000)).build();\n *\n *\n * Example 5: Compute Timestamp from Java `Instant.now()`.\n *\n *     Instant now = Instant.now();\n *\n *     Timestamp timestamp =\n *         Timestamp.newBuilder().setSeconds(now.getEpochSecond())\n *             .setNanos(now.getNano()).build();\n *\n *\n * Example 6: Compute Timestamp from current time in Python.\n *\n *     timestamp = Timestamp()\n *     timestamp.GetCurrentTime()\n *\n * # JSON Mapping\n *\n * In JSON format, the Timestamp type is encoded as a string in the\n * [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the\n * format is \"{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z\"\n * where {year} is always expressed using four digits while {month}, {day},\n * {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional\n * seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),\n * are optional. The \"Z\" suffix indicates the timezone (\"UTC\"); the timezone\n * is required. A proto3 JSON serializer should always use UTC (as indicated by\n * \"Z\") when printing the Timestamp type and a proto3 JSON parser should be\n * able to accept both UTC and other timezones (as indicated by an offset).\n *\n * For example, \"2017-01-15T01:30:15.01Z\" encodes 15.01 seconds past\n * 01:30 UTC on January 15, 2017.\n *\n * In JavaScript, one can convert a Date object to this format using the\n * standard\n * [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)\n * method. In Python, a standard `datetime.datetime` object can be converted\n * to this format using\n * [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with\n * the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use\n * the Joda Time's [`ISODateTimeFormat.dateTime()`](\n * http://www.joda.org/joda-time/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime%2D%2D\n * ) to obtain a formatter capable of generating timestamps in this format.\n *\n *\n *\n * @generated from protobuf message google.protobuf.Timestamp\n */\nexport interface Timestamp {\n  /**\n   * Represents seconds of UTC time since Unix epoch\n   * 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n   * 9999-12-31T23:59:59Z inclusive.\n   *\n   * @generated from protobuf field: int64 seconds = 1;\n   */\n  seconds: string;\n  /**\n   * Non-negative fractions of a second at nanosecond resolution. Negative\n   * second values with fractions must still have non-negative nanos values\n   * that count forward in time. Must be from 0 to 999,999,999\n   * inclusive.\n   *\n   * @generated from protobuf field: int32 nanos = 2;\n   */\n  nanos: number;\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass Timestamp$Type extends MessageType<Timestamp> {\n  constructor() {\n    super('google.protobuf.Timestamp', [\n      { no: 1, name: 'seconds', kind: 'scalar', T: 3 /*ScalarType.INT64*/ },\n      { no: 2, name: 'nanos', kind: 'scalar', T: 5 /*ScalarType.INT32*/ },\n    ]);\n  }\n  /**\n   * Creates a new `Timestamp` for the current time.\n   */\n  now(): Timestamp {\n    const msg = this.create();\n    const ms = Date.now();\n    msg.seconds = PbLong.from(Math.floor(ms / 1000)).toString();\n    msg.nanos = (ms % 1000) * 1000000;\n    return msg;\n  }\n  /**\n   * Converts a `Timestamp` to a JavaScript Date.\n   */\n  toDate(message: Timestamp): Date {\n    return new Date(\n      PbLong.from(message.seconds).toNumber() * 1000 +\n        Math.ceil(message.nanos / 1000000),\n    );\n  }\n  /**\n   * Converts a JavaScript Date to a `Timestamp`.\n   */\n  fromDate(date: Date): Timestamp {\n    const msg = this.create();\n    const ms = date.getTime();\n    msg.seconds = PbLong.from(Math.floor(ms / 1000)).toString();\n    msg.nanos = (ms % 1000) * 1000000;\n    return msg;\n  }\n  /**\n   * In JSON format, the `Timestamp` type is encoded as a string\n   * in the RFC 3339 format.\n   */\n  internalJsonWrite(message: Timestamp, options: JsonWriteOptions): JsonValue {\n    let ms = PbLong.from(message.seconds).toNumber() * 1000;\n    if (\n      ms < Date.parse('0001-01-01T00:00:00Z') ||\n      ms > Date.parse('9999-12-31T23:59:59Z')\n    )\n      throw new Error(\n        'Unable to encode Timestamp to JSON. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.',\n      );\n    if (message.nanos < 0)\n      throw new Error(\n        'Unable to encode invalid Timestamp to JSON. Nanos must not be negative.',\n      );\n    let z = 'Z';\n    if (message.nanos > 0) {\n      let nanosStr = (message.nanos + 1000000000).toString().substring(1);\n      if (nanosStr.substring(3) === '000000')\n        z = '.' + nanosStr.substring(0, 3) + 'Z';\n      else if (nanosStr.substring(6) === '000')\n        z = '.' + nanosStr.substring(0, 6) + 'Z';\n      else z = '.' + nanosStr + 'Z';\n    }\n    return new Date(ms).toISOString().replace('.000Z', z);\n  }\n  /**\n   * In JSON format, the `Timestamp` type is encoded as a string\n   * in the RFC 3339 format.\n   */\n  internalJsonRead(\n    json: JsonValue,\n    options: JsonReadOptions,\n    target?: Timestamp,\n  ): Timestamp {\n    if (typeof json !== 'string')\n      throw new Error(\n        'Unable to parse Timestamp from JSON ' + typeofJsonValue(json) + '.',\n      );\n    let matches = json.match(\n      /^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2}):([0-9]{2})(?:Z|\\.([0-9]{3,9})Z|([+-][0-9][0-9]:[0-9][0-9]))$/,\n    );\n    if (!matches)\n      throw new Error('Unable to parse Timestamp from JSON. Invalid format.');\n    let ms = Date.parse(\n      matches[1] +\n        '-' +\n        matches[2] +\n        '-' +\n        matches[3] +\n        'T' +\n        matches[4] +\n        ':' +\n        matches[5] +\n        ':' +\n        matches[6] +\n        (matches[8] ? matches[8] : 'Z'),\n    );\n    if (Number.isNaN(ms))\n      throw new Error('Unable to parse Timestamp from JSON. Invalid value.');\n    if (\n      ms < Date.parse('0001-01-01T00:00:00Z') ||\n      ms > Date.parse('9999-12-31T23:59:59Z')\n    )\n      throw new globalThis.Error(\n        'Unable to parse Timestamp from JSON. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.',\n      );\n    if (!target) target = this.create();\n    target.seconds = PbLong.from(ms / 1000).toString();\n    target.nanos = 0;\n    if (matches[7])\n      target.nanos =\n        parseInt('1' + matches[7] + '0'.repeat(9 - matches[7].length)) -\n        1000000000;\n    return target;\n  }\n}\n/**\n * @generated MessageType for protobuf message google.protobuf.Timestamp\n */\nexport const Timestamp = new Timestamp$Type();\n", "/* eslint-disable */\n// @generated by protobuf-ts 2.9.4 with parameter long_type_string,client_generic,server_none,eslint_disable,optimize_code_size\n// @generated from protobuf file \"video/sfu/models/models.proto\" (package \"stream.video.sfu.models\", syntax proto3)\n// tslint:disable\nimport { MessageType } from '@protobuf-ts/runtime';\nimport { Struct } from '../../../google/protobuf/struct';\nimport { Timestamp } from '../../../google/protobuf/timestamp';\n\n/**\n * CallState is the current state of the call\n * as seen by an SFU.\n *\n * @generated from protobuf message stream.video.sfu.models.CallState\n */\nexport interface CallState {\n  /**\n   * participants is the list of participants in the call.\n   * In large calls, the list could be truncated in which\n   * case, the list of participants contains fewer participants\n   * than the counts returned in participant_count. Anonymous\n   * participants are **NOT** included in the list.\n   *\n   * @generated from protobuf field: repeated stream.video.sfu.models.Participant participants = 1;\n   */\n  participants: Participant[];\n  /**\n   * started_at is the time the call session actually started.\n   *\n   * @generated from protobuf field: google.protobuf.Timestamp started_at = 2;\n   */\n  startedAt?: Timestamp;\n  /**\n   * participant_count contains the summary of the counts.\n   *\n   * @generated from protobuf field: stream.video.sfu.models.ParticipantCount participant_count = 3;\n   */\n  participantCount?: ParticipantCount;\n  /**\n   * the list of pins in the call.\n   * Pins are ordered in descending order (most important first).\n   *\n   * @generated from protobuf field: repeated stream.video.sfu.models.Pin pins = 4;\n   */\n  pins: Pin[];\n}\n/**\n * @generated from protobuf message stream.video.sfu.models.ParticipantCount\n */\nexport interface ParticipantCount {\n  /**\n   * Total number of participants in the call including\n   * the anonymous participants.\n   *\n   * @generated from protobuf field: uint32 total = 1;\n   */\n  total: number;\n  /**\n   * Total number of anonymous participants in the call.\n   *\n   * @generated from protobuf field: uint32 anonymous = 2;\n   */\n  anonymous: number;\n}\n/**\n * @generated from protobuf message stream.video.sfu.models.Pin\n */\nexport interface Pin {\n  /**\n   * the user to pin\n   *\n   * @generated from protobuf field: string user_id = 1;\n   */\n  userId: string;\n  /**\n   * the user sesion_id to pin, if not provided, applies to all sessions\n   *\n   * @generated from protobuf field: string session_id = 2;\n   */\n  sessionId: string;\n}\n/**\n * those who are online in the call\n *\n * @generated from protobuf message stream.video.sfu.models.Participant\n */\nexport interface Participant {\n  /**\n   * @generated from protobuf field: string user_id = 1;\n   */\n  userId: string;\n  /**\n   * @generated from protobuf field: string session_id = 2;\n   */\n  sessionId: string;\n  /**\n   * map of track id to track type\n   *\n   * @generated from protobuf field: repeated stream.video.sfu.models.TrackType published_tracks = 3;\n   */\n  publishedTracks: TrackType[];\n  /**\n   * @generated from protobuf field: google.protobuf.Timestamp joined_at = 4;\n   */\n  joinedAt?: Timestamp;\n  /**\n   * @generated from protobuf field: string track_lookup_prefix = 5;\n   */\n  trackLookupPrefix: string;\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.ConnectionQuality connection_quality = 6;\n   */\n  connectionQuality: ConnectionQuality;\n  /**\n   * @generated from protobuf field: bool is_speaking = 7;\n   */\n  isSpeaking: boolean;\n  /**\n   * @generated from protobuf field: bool is_dominant_speaker = 8;\n   */\n  isDominantSpeaker: boolean;\n  /**\n   * @generated from protobuf field: float audio_level = 9;\n   */\n  audioLevel: number;\n  /**\n   * @generated from protobuf field: string name = 10;\n   */\n  name: string;\n  /**\n   * @generated from protobuf field: string image = 11;\n   */\n  image: string;\n  /**\n   * @generated from protobuf field: google.protobuf.Struct custom = 12;\n   */\n  custom?: Struct;\n  /**\n   * @generated from protobuf field: repeated string roles = 13;\n   */\n  roles: string[];\n}\n/**\n * @generated from protobuf message stream.video.sfu.models.StreamQuality\n */\nexport interface StreamQuality {\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.VideoQuality video_quality = 1;\n   */\n  videoQuality: VideoQuality;\n  /**\n   * @generated from protobuf field: string user_id = 2;\n   */\n  userId: string;\n}\n/**\n * @generated from protobuf message stream.video.sfu.models.VideoDimension\n */\nexport interface VideoDimension {\n  /**\n   * @generated from protobuf field: uint32 width = 1;\n   */\n  width: number;\n  /**\n   * @generated from protobuf field: uint32 height = 2;\n   */\n  height: number;\n}\n/**\n * @generated from protobuf message stream.video.sfu.models.VideoLayer\n */\nexport interface VideoLayer {\n  /**\n   * for tracks with a single layer, this should be HIGH\n   *\n   * @generated from protobuf field: string rid = 1;\n   */\n  rid: string;\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.VideoDimension video_dimension = 2;\n   */\n  videoDimension?: VideoDimension;\n  /**\n   * target bitrate, server will measure actual\n   *\n   * @generated from protobuf field: uint32 bitrate = 4;\n   */\n  bitrate: number;\n  /**\n   * @generated from protobuf field: uint32 fps = 5;\n   */\n  fps: number;\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.VideoQuality quality = 6;\n   */\n  quality: VideoQuality;\n}\n/**\n * @generated from protobuf message stream.video.sfu.models.Codec\n */\nexport interface Codec {\n  /**\n   * @generated from protobuf field: uint32 payload_type = 1;\n   */\n  payloadType: number;\n  /**\n   * @generated from protobuf field: string name = 2;\n   */\n  name: string;\n  /**\n   * @generated from protobuf field: string fmtp_line = 3;\n   */\n  fmtpLine: string;\n  /**\n   * @generated from protobuf field: uint32 clock_rate = 4;\n   */\n  clockRate: number;\n  /**\n   * @generated from protobuf field: string encoding_parameters = 5;\n   */\n  encodingParameters: string;\n  /**\n   * @generated from protobuf field: repeated string feedbacks = 6;\n   */\n  feedbacks: string[];\n}\n/**\n * @generated from protobuf message stream.video.sfu.models.ICETrickle\n */\nexport interface ICETrickle {\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.PeerType peer_type = 1;\n   */\n  peerType: PeerType;\n  /**\n   * @generated from protobuf field: string ice_candidate = 2;\n   */\n  iceCandidate: string;\n  /**\n   * @generated from protobuf field: string session_id = 3;\n   */\n  sessionId: string;\n}\n/**\n * @generated from protobuf message stream.video.sfu.models.TrackInfo\n */\nexport interface TrackInfo {\n  /**\n   * @generated from protobuf field: string track_id = 1;\n   */\n  trackId: string;\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.TrackType track_type = 2;\n   */\n  trackType: TrackType;\n  /**\n   * @generated from protobuf field: repeated stream.video.sfu.models.VideoLayer layers = 5;\n   */\n  layers: VideoLayer[];\n  /**\n   * @generated from protobuf field: string mid = 6;\n   */\n  mid: string;\n  /**\n   * for audio tracks\n   *\n   * @generated from protobuf field: bool dtx = 7;\n   */\n  dtx: boolean;\n  /**\n   * @generated from protobuf field: bool stereo = 8;\n   */\n  stereo: boolean;\n  /**\n   * @generated from protobuf field: bool red = 9;\n   */\n  red: boolean;\n  /**\n   * @generated from protobuf field: bool muted = 10;\n   */\n  muted: boolean;\n}\n/**\n * @generated from protobuf message stream.video.sfu.models.Error\n */\nexport interface Error {\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.ErrorCode code = 1;\n   */\n  code: ErrorCode;\n  /**\n   * @generated from protobuf field: string message = 2;\n   */\n  message: string;\n  /**\n   * @generated from protobuf field: bool should_retry = 3;\n   */\n  shouldRetry: boolean;\n}\n/**\n * @generated from protobuf message stream.video.sfu.models.ClientDetails\n */\nexport interface ClientDetails {\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.Sdk sdk = 1;\n   */\n  sdk?: Sdk;\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.OS os = 2;\n   */\n  os?: OS;\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.Browser browser = 3;\n   */\n  browser?: Browser;\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.Device device = 4;\n   */\n  device?: Device;\n}\n/**\n * @generated from protobuf message stream.video.sfu.models.Sdk\n */\nexport interface Sdk {\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.SdkType type = 1;\n   */\n  type: SdkType;\n  /**\n   * @generated from protobuf field: string major = 2;\n   */\n  major: string;\n  /**\n   * @generated from protobuf field: string minor = 3;\n   */\n  minor: string;\n  /**\n   * @generated from protobuf field: string patch = 4;\n   */\n  patch: string;\n}\n/**\n * @generated from protobuf message stream.video.sfu.models.OS\n */\nexport interface OS {\n  /**\n   * @generated from protobuf field: string name = 1;\n   */\n  name: string;\n  /**\n   * @generated from protobuf field: string version = 2;\n   */\n  version: string;\n  /**\n   * @generated from protobuf field: string architecture = 3;\n   */\n  architecture: string;\n}\n/**\n * @generated from protobuf message stream.video.sfu.models.Browser\n */\nexport interface Browser {\n  /**\n   * @generated from protobuf field: string name = 1;\n   */\n  name: string;\n  /**\n   * @generated from protobuf field: string version = 2;\n   */\n  version: string;\n}\n/**\n * @generated from protobuf message stream.video.sfu.models.Device\n */\nexport interface Device {\n  /**\n   * @generated from protobuf field: string name = 1;\n   */\n  name: string;\n  /**\n   * @generated from protobuf field: string version = 2;\n   */\n  version: string;\n}\n/**\n * @generated from protobuf message stream.video.sfu.models.Call\n */\nexport interface Call {\n  /**\n   * the call type\n   *\n   * @generated from protobuf field: string type = 1;\n   */\n  type: string;\n  /**\n   * the call id\n   *\n   * @generated from protobuf field: string id = 2;\n   */\n  id: string;\n  /**\n   * the id of the user that created this call\n   *\n   * @generated from protobuf field: string created_by_user_id = 3;\n   */\n  createdByUserId: string;\n  /**\n   * the id of the current host for this call\n   *\n   * @generated from protobuf field: string host_user_id = 4;\n   */\n  hostUserId: string;\n  /**\n   * @generated from protobuf field: google.protobuf.Struct custom = 5;\n   */\n  custom?: Struct;\n  /**\n   * @generated from protobuf field: google.protobuf.Timestamp created_at = 6;\n   */\n  createdAt?: Timestamp;\n  /**\n   * @generated from protobuf field: google.protobuf.Timestamp updated_at = 7;\n   */\n  updatedAt?: Timestamp;\n}\n/**\n * CallGrants represents the set of permissions given\n * to the user for the current call.\n *\n * @generated from protobuf message stream.video.sfu.models.CallGrants\n */\nexport interface CallGrants {\n  /**\n   * @generated from protobuf field: bool can_publish_audio = 1;\n   */\n  canPublishAudio: boolean;\n  /**\n   * @generated from protobuf field: bool can_publish_video = 2;\n   */\n  canPublishVideo: boolean;\n  /**\n   * @generated from protobuf field: bool can_screenshare = 3;\n   */\n  canScreenshare: boolean;\n}\n/**\n * @generated from protobuf message stream.video.sfu.models.InputDevices\n */\nexport interface InputDevices {\n  /**\n   * @generated from protobuf field: repeated string available_devices = 1;\n   */\n  availableDevices: string[];\n  /**\n   * @generated from protobuf field: string current_device = 2;\n   */\n  currentDevice: string;\n  /**\n   * @generated from protobuf field: bool is_permitted = 3;\n   */\n  isPermitted: boolean;\n}\n/**\n * @generated from protobuf message stream.video.sfu.models.AndroidState\n */\nexport interface AndroidState {\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.AndroidThermalState thermal_state = 1;\n   */\n  thermalState: AndroidThermalState;\n  /**\n   * @generated from protobuf field: bool is_power_saver_mode = 2;\n   */\n  isPowerSaverMode: boolean;\n}\n/**\n * @generated from protobuf message stream.video.sfu.models.AppleState\n */\nexport interface AppleState {\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.AppleThermalState thermal_state = 1;\n   */\n  thermalState: AppleThermalState;\n  /**\n   * https://developer.apple.com/documentation/foundation/processinfo/1617047-islowpowermodeenabled\n   *\n   * @generated from protobuf field: bool is_low_power_mode_enabled = 2;\n   */\n  isLowPowerModeEnabled: boolean;\n}\n/**\n * @generated from protobuf enum stream.video.sfu.models.PeerType\n */\nexport enum PeerType {\n  /**\n   * todo fix me (marcelo)\n   *\n   * @generated from protobuf enum value: PEER_TYPE_PUBLISHER_UNSPECIFIED = 0;\n   */\n  PUBLISHER_UNSPECIFIED = 0,\n  /**\n   * @generated from protobuf enum value: PEER_TYPE_SUBSCRIBER = 1;\n   */\n  SUBSCRIBER = 1,\n}\n/**\n * @generated from protobuf enum stream.video.sfu.models.ConnectionQuality\n */\nexport enum ConnectionQuality {\n  /**\n   * @generated from protobuf enum value: CONNECTION_QUALITY_UNSPECIFIED = 0;\n   */\n  UNSPECIFIED = 0,\n  /**\n   * @generated from protobuf enum value: CONNECTION_QUALITY_POOR = 1;\n   */\n  POOR = 1,\n  /**\n   * @generated from protobuf enum value: CONNECTION_QUALITY_GOOD = 2;\n   */\n  GOOD = 2,\n  /**\n   * @generated from protobuf enum value: CONNECTION_QUALITY_EXCELLENT = 3;\n   */\n  EXCELLENT = 3,\n}\n/**\n * @generated from protobuf enum stream.video.sfu.models.VideoQuality\n */\nexport enum VideoQuality {\n  /**\n   * @generated from protobuf enum value: VIDEO_QUALITY_LOW_UNSPECIFIED = 0;\n   */\n  LOW_UNSPECIFIED = 0,\n  /**\n   * @generated from protobuf enum value: VIDEO_QUALITY_MID = 1;\n   */\n  MID = 1,\n  /**\n   * @generated from protobuf enum value: VIDEO_QUALITY_HIGH = 2;\n   */\n  HIGH = 2,\n  /**\n   * @generated from protobuf enum value: VIDEO_QUALITY_OFF = 3;\n   */\n  OFF = 3,\n}\n/**\n * @generated from protobuf enum stream.video.sfu.models.TrackType\n */\nexport enum TrackType {\n  /**\n   * @generated from protobuf enum value: TRACK_TYPE_UNSPECIFIED = 0;\n   */\n  UNSPECIFIED = 0,\n  /**\n   * @generated from protobuf enum value: TRACK_TYPE_AUDIO = 1;\n   */\n  AUDIO = 1,\n  /**\n   * @generated from protobuf enum value: TRACK_TYPE_VIDEO = 2;\n   */\n  VIDEO = 2,\n  /**\n   * @generated from protobuf enum value: TRACK_TYPE_SCREEN_SHARE = 3;\n   */\n  SCREEN_SHARE = 3,\n  /**\n   * @generated from protobuf enum value: TRACK_TYPE_SCREEN_SHARE_AUDIO = 4;\n   */\n  SCREEN_SHARE_AUDIO = 4,\n}\n/**\n * @generated from protobuf enum stream.video.sfu.models.ErrorCode\n */\nexport enum ErrorCode {\n  /**\n   * @generated from protobuf enum value: ERROR_CODE_UNSPECIFIED = 0;\n   */\n  UNSPECIFIED = 0,\n  /**\n   * @generated from protobuf enum value: ERROR_CODE_PUBLISH_TRACK_NOT_FOUND = 100;\n   */\n  PUBLISH_TRACK_NOT_FOUND = 100,\n  /**\n   * @generated from protobuf enum value: ERROR_CODE_PUBLISH_TRACKS_MISMATCH = 101;\n   */\n  PUBLISH_TRACKS_MISMATCH = 101,\n  /**\n   * @generated from protobuf enum value: ERROR_CODE_PUBLISH_TRACK_OUT_OF_ORDER = 102;\n   */\n  PUBLISH_TRACK_OUT_OF_ORDER = 102,\n  /**\n   * @generated from protobuf enum value: ERROR_CODE_PUBLISH_TRACK_VIDEO_LAYER_NOT_FOUND = 103;\n   */\n  PUBLISH_TRACK_VIDEO_LAYER_NOT_FOUND = 103,\n  /**\n   * @generated from protobuf enum value: ERROR_CODE_LIVE_ENDED = 104;\n   */\n  LIVE_ENDED = 104,\n  /**\n   * @generated from protobuf enum value: ERROR_CODE_PARTICIPANT_NOT_FOUND = 200;\n   */\n  PARTICIPANT_NOT_FOUND = 200,\n  /**\n   * @generated from protobuf enum value: ERROR_CODE_PARTICIPANT_MIGRATING_OUT = 201;\n   */\n  PARTICIPANT_MIGRATING_OUT = 201,\n  /**\n   * @generated from protobuf enum value: ERROR_CODE_PARTICIPANT_MIGRATION_FAILED = 202;\n   */\n  PARTICIPANT_MIGRATION_FAILED = 202,\n  /**\n   * @generated from protobuf enum value: ERROR_CODE_PARTICIPANT_MIGRATING = 203;\n   */\n  PARTICIPANT_MIGRATING = 203,\n  /**\n   * @generated from protobuf enum value: ERROR_CODE_PARTICIPANT_RECONNECT_FAILED = 204;\n   */\n  PARTICIPANT_RECONNECT_FAILED = 204,\n  /**\n   * @generated from protobuf enum value: ERROR_CODE_PARTICIPANT_MEDIA_TRANSPORT_FAILURE = 205;\n   */\n  PARTICIPANT_MEDIA_TRANSPORT_FAILURE = 205,\n  /**\n   * @generated from protobuf enum value: ERROR_CODE_CALL_NOT_FOUND = 300;\n   */\n  CALL_NOT_FOUND = 300,\n  /**\n   * @generated from protobuf enum value: ERROR_CODE_REQUEST_VALIDATION_FAILED = 400;\n   */\n  REQUEST_VALIDATION_FAILED = 400,\n  /**\n   * @generated from protobuf enum value: ERROR_CODE_UNAUTHENTICATED = 401;\n   */\n  UNAUTHENTICATED = 401,\n  /**\n   * @generated from protobuf enum value: ERROR_CODE_PERMISSION_DENIED = 403;\n   */\n  PERMISSION_DENIED = 403,\n  /**\n   * @generated from protobuf enum value: ERROR_CODE_TOO_MANY_REQUESTS = 429;\n   */\n  TOO_MANY_REQUESTS = 429,\n  /**\n   * @generated from protobuf enum value: ERROR_CODE_INTERNAL_SERVER_ERROR = 500;\n   */\n  INTERNAL_SERVER_ERROR = 500,\n  /**\n   * @generated from protobuf enum value: ERROR_CODE_SFU_SHUTTING_DOWN = 600;\n   */\n  SFU_SHUTTING_DOWN = 600,\n  /**\n   * @generated from protobuf enum value: ERROR_CODE_SFU_FULL = 700;\n   */\n  SFU_FULL = 700,\n}\n/**\n * @generated from protobuf enum stream.video.sfu.models.SdkType\n */\nexport enum SdkType {\n  /**\n   * @generated from protobuf enum value: SDK_TYPE_UNSPECIFIED = 0;\n   */\n  UNSPECIFIED = 0,\n  /**\n   * @generated from protobuf enum value: SDK_TYPE_REACT = 1;\n   */\n  REACT = 1,\n  /**\n   * @generated from protobuf enum value: SDK_TYPE_ANGULAR = 2;\n   */\n  ANGULAR = 2,\n  /**\n   * @generated from protobuf enum value: SDK_TYPE_ANDROID = 3;\n   */\n  ANDROID = 3,\n  /**\n   * @generated from protobuf enum value: SDK_TYPE_IOS = 4;\n   */\n  IOS = 4,\n  /**\n   * @generated from protobuf enum value: SDK_TYPE_FLUTTER = 5;\n   */\n  FLUTTER = 5,\n  /**\n   * @generated from protobuf enum value: SDK_TYPE_REACT_NATIVE = 6;\n   */\n  REACT_NATIVE = 6,\n  /**\n   * @generated from protobuf enum value: SDK_TYPE_UNITY = 7;\n   */\n  UNITY = 7,\n  /**\n   * @generated from protobuf enum value: SDK_TYPE_GO = 8;\n   */\n  GO = 8,\n  /**\n   * @generated from protobuf enum value: SDK_TYPE_PLAIN_JAVASCRIPT = 9;\n   */\n  PLAIN_JAVASCRIPT = 9,\n}\n/**\n * @generated from protobuf enum stream.video.sfu.models.TrackUnpublishReason\n */\nexport enum TrackUnpublishReason {\n  /**\n   * Default value which is used when the specific reason\n   * for muting the track is not known.\n   *\n   * @generated from protobuf enum value: TRACK_UNPUBLISH_REASON_UNSPECIFIED = 0;\n   */\n  UNSPECIFIED = 0,\n  /**\n   * Represents user muting their tracks.\n   *\n   * @generated from protobuf enum value: TRACK_UNPUBLISH_REASON_USER_MUTED = 1;\n   */\n  USER_MUTED = 1,\n  /**\n   * Represents muting the track because the permission to\n   * publish the track has been revoked.\n   *\n   * @generated from protobuf enum value: TRACK_UNPUBLISH_REASON_PERMISSION_REVOKED = 2;\n   */\n  PERMISSION_REVOKED = 2,\n  /**\n   * Represents muting the track due to moderation actions.\n   * This is different from permission revoked because the\n   * participant can unmute themselves here whereas in case\n   * of \"permission revoke\" it is not possible until the\n   * call permissions are updated.\n   *\n   * @generated from protobuf enum value: TRACK_UNPUBLISH_REASON_MODERATION = 3;\n   */\n  MODERATION = 3,\n}\n/**\n * GoAwayReason represents the reason for the SFU to\n * disconnect the client.\n *\n * @generated from protobuf enum stream.video.sfu.models.GoAwayReason\n */\nexport enum GoAwayReason {\n  /**\n   * @generated from protobuf enum value: GO_AWAY_REASON_UNSPECIFIED = 0;\n   */\n  UNSPECIFIED = 0,\n  /**\n   * @generated from protobuf enum value: GO_AWAY_REASON_SHUTTING_DOWN = 1;\n   */\n  SHUTTING_DOWN = 1,\n  /**\n   * @generated from protobuf enum value: GO_AWAY_REASON_REBALANCE = 2;\n   */\n  REBALANCE = 2,\n}\n/**\n * CallEndedReason represents the reason for the call to end.\n *\n * @generated from protobuf enum stream.video.sfu.models.CallEndedReason\n */\nexport enum CallEndedReason {\n  /**\n   * @generated from protobuf enum value: CALL_ENDED_REASON_UNSPECIFIED = 0;\n   */\n  UNSPECIFIED = 0,\n  /**\n   * @generated from protobuf enum value: CALL_ENDED_REASON_ENDED = 1;\n   */\n  ENDED = 1,\n  /**\n   * @generated from protobuf enum value: CALL_ENDED_REASON_LIVE_ENDED = 2;\n   */\n  LIVE_ENDED = 2,\n  /**\n   * @generated from protobuf enum value: CALL_ENDED_REASON_KICKED = 3;\n   */\n  KICKED = 3,\n  /**\n   * @generated from protobuf enum value: CALL_ENDED_REASON_SESSION_ENDED = 4;\n   */\n  SESSION_ENDED = 4,\n}\n/**\n * WebsocketReconnectStrategy defines the ws strategies available for handling reconnections.\n *\n * @generated from protobuf enum stream.video.sfu.models.WebsocketReconnectStrategy\n */\nexport enum WebsocketReconnectStrategy {\n  /**\n   * @generated from protobuf enum value: WEBSOCKET_RECONNECT_STRATEGY_UNSPECIFIED = 0;\n   */\n  UNSPECIFIED = 0,\n  /**\n   * Sent after reaching the maximum reconnection attempts, or any other unrecoverable error leading to permanent disconnect.\n   *\n   * @generated from protobuf enum value: WEBSOCKET_RECONNECT_STRATEGY_DISCONNECT = 1;\n   */\n  DISCONNECT = 1,\n  /**\n   * SDK should maintaining existing publisher/subscriber pc instances\n   * and establish a new WebSocket connection.\n   *\n   * @generated from protobuf enum value: WEBSOCKET_RECONNECT_STRATEGY_FAST = 2;\n   */\n  FAST = 2,\n  /**\n   * SDK should obtain new credentials from the coordinator, drops existing pc instances, set a new session_id and initializes\n   * a completely new WebSocket connection, ensuring a comprehensive reset.\n   *\n   * @generated from protobuf enum value: WEBSOCKET_RECONNECT_STRATEGY_REJOIN = 3;\n   */\n  REJOIN = 3,\n  /**\n   * SDK should migrate to a new SFU instance\n   *\n   * @generated from protobuf enum value: WEBSOCKET_RECONNECT_STRATEGY_MIGRATE = 4;\n   */\n  MIGRATE = 4,\n}\n/**\n * AndroidThermalState is reported by the Android API. The full list of values is documented here\n * https://developer.android.com/reference/android/os/PowerManager.html#getCurrentThermalStatus()\n *\n * @generated from protobuf enum stream.video.sfu.models.AndroidThermalState\n */\nexport enum AndroidThermalState {\n  /**\n   * @generated from protobuf enum value: ANDROID_THERMAL_STATE_UNSPECIFIED = 0;\n   */\n  UNSPECIFIED = 0,\n  /**\n   * @generated from protobuf enum value: ANDROID_THERMAL_STATE_NONE = 1;\n   */\n  NONE = 1,\n  /**\n   * @generated from protobuf enum value: ANDROID_THERMAL_STATE_LIGHT = 2;\n   */\n  LIGHT = 2,\n  /**\n   * @generated from protobuf enum value: ANDROID_THERMAL_STATE_MODERATE = 3;\n   */\n  MODERATE = 3,\n  /**\n   * @generated from protobuf enum value: ANDROID_THERMAL_STATE_SEVERE = 4;\n   */\n  SEVERE = 4,\n  /**\n   * @generated from protobuf enum value: ANDROID_THERMAL_STATE_CRITICAL = 5;\n   */\n  CRITICAL = 5,\n  /**\n   * @generated from protobuf enum value: ANDROID_THERMAL_STATE_EMERGENCY = 6;\n   */\n  EMERGENCY = 6,\n  /**\n   * @generated from protobuf enum value: ANDROID_THERMAL_STATE_SHUTDOWN = 7;\n   */\n  SHUTDOWN = 7,\n}\n/**\n * AppleThermalState is the thermal state as reported by Apple devices when available or applicable to the platform.\n * The full list of states (enum) is available here: https://developer.apple.com/documentation/foundation/processinfo/thermalstate\n *\n * @generated from protobuf enum stream.video.sfu.models.AppleThermalState\n */\nexport enum AppleThermalState {\n  /**\n   * @generated from protobuf enum value: APPLE_THERMAL_STATE_UNSPECIFIED = 0;\n   */\n  UNSPECIFIED = 0,\n  /**\n   * @generated from protobuf enum value: APPLE_THERMAL_STATE_NOMINAL = 1;\n   */\n  NOMINAL = 1,\n  /**\n   * @generated from protobuf enum value: APPLE_THERMAL_STATE_FAIR = 2;\n   */\n  FAIR = 2,\n  /**\n   * @generated from protobuf enum value: APPLE_THERMAL_STATE_SERIOUS = 3;\n   */\n  SERIOUS = 3,\n  /**\n   * @generated from protobuf enum value: APPLE_THERMAL_STATE_CRITICAL = 4;\n   */\n  CRITICAL = 4,\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass CallState$Type extends MessageType<CallState> {\n  constructor() {\n    super('stream.video.sfu.models.CallState', [\n      {\n        no: 1,\n        name: 'participants',\n        kind: 'message',\n        repeat: 1 /*RepeatType.PACKED*/,\n        T: () => Participant,\n      },\n      { no: 2, name: 'started_at', kind: 'message', T: () => Timestamp },\n      {\n        no: 3,\n        name: 'participant_count',\n        kind: 'message',\n        T: () => ParticipantCount,\n      },\n      {\n        no: 4,\n        name: 'pins',\n        kind: 'message',\n        repeat: 1 /*RepeatType.PACKED*/,\n        T: () => Pin,\n      },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.models.CallState\n */\nexport const CallState = new CallState$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ParticipantCount$Type extends MessageType<ParticipantCount> {\n  constructor() {\n    super('stream.video.sfu.models.ParticipantCount', [\n      { no: 1, name: 'total', kind: 'scalar', T: 13 /*ScalarType.UINT32*/ },\n      { no: 2, name: 'anonymous', kind: 'scalar', T: 13 /*ScalarType.UINT32*/ },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.models.ParticipantCount\n */\nexport const ParticipantCount = new ParticipantCount$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Pin$Type extends MessageType<Pin> {\n  constructor() {\n    super('stream.video.sfu.models.Pin', [\n      { no: 1, name: 'user_id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      { no: 2, name: 'session_id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.models.Pin\n */\nexport const Pin = new Pin$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Participant$Type extends MessageType<Participant> {\n  constructor() {\n    super('stream.video.sfu.models.Participant', [\n      { no: 1, name: 'user_id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      { no: 2, name: 'session_id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      {\n        no: 3,\n        name: 'published_tracks',\n        kind: 'enum',\n        repeat: 1 /*RepeatType.PACKED*/,\n        T: () => [\n          'stream.video.sfu.models.TrackType',\n          TrackType,\n          'TRACK_TYPE_',\n        ],\n      },\n      { no: 4, name: 'joined_at', kind: 'message', T: () => Timestamp },\n      {\n        no: 5,\n        name: 'track_lookup_prefix',\n        kind: 'scalar',\n        T: 9 /*ScalarType.STRING*/,\n      },\n      {\n        no: 6,\n        name: 'connection_quality',\n        kind: 'enum',\n        T: () => [\n          'stream.video.sfu.models.ConnectionQuality',\n          ConnectionQuality,\n          'CONNECTION_QUALITY_',\n        ],\n      },\n      { no: 7, name: 'is_speaking', kind: 'scalar', T: 8 /*ScalarType.BOOL*/ },\n      {\n        no: 8,\n        name: 'is_dominant_speaker',\n        kind: 'scalar',\n        T: 8 /*ScalarType.BOOL*/,\n      },\n      { no: 9, name: 'audio_level', kind: 'scalar', T: 2 /*ScalarType.FLOAT*/ },\n      { no: 10, name: 'name', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      { no: 11, name: 'image', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      { no: 12, name: 'custom', kind: 'message', T: () => Struct },\n      {\n        no: 13,\n        name: 'roles',\n        kind: 'scalar',\n        repeat: 2 /*RepeatType.UNPACKED*/,\n        T: 9 /*ScalarType.STRING*/,\n      },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.models.Participant\n */\nexport const Participant = new Participant$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass StreamQuality$Type extends MessageType<StreamQuality> {\n  constructor() {\n    super('stream.video.sfu.models.StreamQuality', [\n      {\n        no: 1,\n        name: 'video_quality',\n        kind: 'enum',\n        T: () => [\n          'stream.video.sfu.models.VideoQuality',\n          VideoQuality,\n          'VIDEO_QUALITY_',\n        ],\n      },\n      { no: 2, name: 'user_id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.models.StreamQuality\n */\nexport const StreamQuality = new StreamQuality$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass VideoDimension$Type extends MessageType<VideoDimension> {\n  constructor() {\n    super('stream.video.sfu.models.VideoDimension', [\n      { no: 1, name: 'width', kind: 'scalar', T: 13 /*ScalarType.UINT32*/ },\n      { no: 2, name: 'height', kind: 'scalar', T: 13 /*ScalarType.UINT32*/ },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.models.VideoDimension\n */\nexport const VideoDimension = new VideoDimension$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass VideoLayer$Type extends MessageType<VideoLayer> {\n  constructor() {\n    super('stream.video.sfu.models.VideoLayer', [\n      { no: 1, name: 'rid', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      {\n        no: 2,\n        name: 'video_dimension',\n        kind: 'message',\n        T: () => VideoDimension,\n      },\n      { no: 4, name: 'bitrate', kind: 'scalar', T: 13 /*ScalarType.UINT32*/ },\n      { no: 5, name: 'fps', kind: 'scalar', T: 13 /*ScalarType.UINT32*/ },\n      {\n        no: 6,\n        name: 'quality',\n        kind: 'enum',\n        T: () => [\n          'stream.video.sfu.models.VideoQuality',\n          VideoQuality,\n          'VIDEO_QUALITY_',\n        ],\n      },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.models.VideoLayer\n */\nexport const VideoLayer = new VideoLayer$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Codec$Type extends MessageType<Codec> {\n  constructor() {\n    super('stream.video.sfu.models.Codec', [\n      {\n        no: 1,\n        name: 'payload_type',\n        kind: 'scalar',\n        T: 13 /*ScalarType.UINT32*/,\n      },\n      { no: 2, name: 'name', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      { no: 3, name: 'fmtp_line', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      {\n        no: 4,\n        name: 'clock_rate',\n        kind: 'scalar',\n        T: 13 /*ScalarType.UINT32*/,\n      },\n      {\n        no: 5,\n        name: 'encoding_parameters',\n        kind: 'scalar',\n        T: 9 /*ScalarType.STRING*/,\n      },\n      {\n        no: 6,\n        name: 'feedbacks',\n        kind: 'scalar',\n        repeat: 2 /*RepeatType.UNPACKED*/,\n        T: 9 /*ScalarType.STRING*/,\n      },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.models.Codec\n */\nexport const Codec = new Codec$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ICETrickle$Type extends MessageType<ICETrickle> {\n  constructor() {\n    super('stream.video.sfu.models.ICETrickle', [\n      {\n        no: 1,\n        name: 'peer_type',\n        kind: 'enum',\n        T: () => ['stream.video.sfu.models.PeerType', PeerType, 'PEER_TYPE_'],\n      },\n      {\n        no: 2,\n        name: 'ice_candidate',\n        kind: 'scalar',\n        T: 9 /*ScalarType.STRING*/,\n      },\n      { no: 3, name: 'session_id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.models.ICETrickle\n */\nexport const ICETrickle = new ICETrickle$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass TrackInfo$Type extends MessageType<TrackInfo> {\n  constructor() {\n    super('stream.video.sfu.models.TrackInfo', [\n      { no: 1, name: 'track_id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      {\n        no: 2,\n        name: 'track_type',\n        kind: 'enum',\n        T: () => [\n          'stream.video.sfu.models.TrackType',\n          TrackType,\n          'TRACK_TYPE_',\n        ],\n      },\n      {\n        no: 5,\n        name: 'layers',\n        kind: 'message',\n        repeat: 1 /*RepeatType.PACKED*/,\n        T: () => VideoLayer,\n      },\n      { no: 6, name: 'mid', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      { no: 7, name: 'dtx', kind: 'scalar', T: 8 /*ScalarType.BOOL*/ },\n      { no: 8, name: 'stereo', kind: 'scalar', T: 8 /*ScalarType.BOOL*/ },\n      { no: 9, name: 'red', kind: 'scalar', T: 8 /*ScalarType.BOOL*/ },\n      { no: 10, name: 'muted', kind: 'scalar', T: 8 /*ScalarType.BOOL*/ },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.models.TrackInfo\n */\nexport const TrackInfo = new TrackInfo$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Error$Type extends MessageType<Error> {\n  constructor() {\n    super('stream.video.sfu.models.Error', [\n      {\n        no: 1,\n        name: 'code',\n        kind: 'enum',\n        T: () => [\n          'stream.video.sfu.models.ErrorCode',\n          ErrorCode,\n          'ERROR_CODE_',\n        ],\n      },\n      { no: 2, name: 'message', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      { no: 3, name: 'should_retry', kind: 'scalar', T: 8 /*ScalarType.BOOL*/ },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.models.Error\n */\nexport const Error = new Error$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ClientDetails$Type extends MessageType<ClientDetails> {\n  constructor() {\n    super('stream.video.sfu.models.ClientDetails', [\n      { no: 1, name: 'sdk', kind: 'message', T: () => Sdk },\n      { no: 2, name: 'os', kind: 'message', T: () => OS },\n      { no: 3, name: 'browser', kind: 'message', T: () => Browser },\n      { no: 4, name: 'device', kind: 'message', T: () => Device },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.models.ClientDetails\n */\nexport const ClientDetails = new ClientDetails$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Sdk$Type extends MessageType<Sdk> {\n  constructor() {\n    super('stream.video.sfu.models.Sdk', [\n      {\n        no: 1,\n        name: 'type',\n        kind: 'enum',\n        T: () => ['stream.video.sfu.models.SdkType', SdkType, 'SDK_TYPE_'],\n      },\n      { no: 2, name: 'major', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      { no: 3, name: 'minor', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      { no: 4, name: 'patch', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.models.Sdk\n */\nexport const Sdk = new Sdk$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass OS$Type extends MessageType<OS> {\n  constructor() {\n    super('stream.video.sfu.models.OS', [\n      { no: 1, name: 'name', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      { no: 2, name: 'version', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      {\n        no: 3,\n        name: 'architecture',\n        kind: 'scalar',\n        T: 9 /*ScalarType.STRING*/,\n      },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.models.OS\n */\nexport const OS = new OS$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Browser$Type extends MessageType<Browser> {\n  constructor() {\n    super('stream.video.sfu.models.Browser', [\n      { no: 1, name: 'name', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      { no: 2, name: 'version', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.models.Browser\n */\nexport const Browser = new Browser$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Device$Type extends MessageType<Device> {\n  constructor() {\n    super('stream.video.sfu.models.Device', [\n      { no: 1, name: 'name', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      { no: 2, name: 'version', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.models.Device\n */\nexport const Device = new Device$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Call$Type extends MessageType<Call> {\n  constructor() {\n    super('stream.video.sfu.models.Call', [\n      { no: 1, name: 'type', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      { no: 2, name: 'id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      {\n        no: 3,\n        name: 'created_by_user_id',\n        kind: 'scalar',\n        T: 9 /*ScalarType.STRING*/,\n      },\n      {\n        no: 4,\n        name: 'host_user_id',\n        kind: 'scalar',\n        T: 9 /*ScalarType.STRING*/,\n      },\n      { no: 5, name: 'custom', kind: 'message', T: () => Struct },\n      { no: 6, name: 'created_at', kind: 'message', T: () => Timestamp },\n      { no: 7, name: 'updated_at', kind: 'message', T: () => Timestamp },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.models.Call\n */\nexport const Call = new Call$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass CallGrants$Type extends MessageType<CallGrants> {\n  constructor() {\n    super('stream.video.sfu.models.CallGrants', [\n      {\n        no: 1,\n        name: 'can_publish_audio',\n        kind: 'scalar',\n        T: 8 /*ScalarType.BOOL*/,\n      },\n      {\n        no: 2,\n        name: 'can_publish_video',\n        kind: 'scalar',\n        T: 8 /*ScalarType.BOOL*/,\n      },\n      {\n        no: 3,\n        name: 'can_screenshare',\n        kind: 'scalar',\n        T: 8 /*ScalarType.BOOL*/,\n      },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.models.CallGrants\n */\nexport const CallGrants = new CallGrants$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass InputDevices$Type extends MessageType<InputDevices> {\n  constructor() {\n    super('stream.video.sfu.models.InputDevices', [\n      {\n        no: 1,\n        name: 'available_devices',\n        kind: 'scalar',\n        repeat: 2 /*RepeatType.UNPACKED*/,\n        T: 9 /*ScalarType.STRING*/,\n      },\n      {\n        no: 2,\n        name: 'current_device',\n        kind: 'scalar',\n        T: 9 /*ScalarType.STRING*/,\n      },\n      { no: 3, name: 'is_permitted', kind: 'scalar', T: 8 /*ScalarType.BOOL*/ },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.models.InputDevices\n */\nexport const InputDevices = new InputDevices$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass AndroidState$Type extends MessageType<AndroidState> {\n  constructor() {\n    super('stream.video.sfu.models.AndroidState', [\n      {\n        no: 1,\n        name: 'thermal_state',\n        kind: 'enum',\n        T: () => [\n          'stream.video.sfu.models.AndroidThermalState',\n          AndroidThermalState,\n          'ANDROID_THERMAL_STATE_',\n        ],\n      },\n      {\n        no: 2,\n        name: 'is_power_saver_mode',\n        kind: 'scalar',\n        T: 8 /*ScalarType.BOOL*/,\n      },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.models.AndroidState\n */\nexport const AndroidState = new AndroidState$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass AppleState$Type extends MessageType<AppleState> {\n  constructor() {\n    super('stream.video.sfu.models.AppleState', [\n      {\n        no: 1,\n        name: 'thermal_state',\n        kind: 'enum',\n        T: () => [\n          'stream.video.sfu.models.AppleThermalState',\n          AppleThermalState,\n          'APPLE_THERMAL_STATE_',\n        ],\n      },\n      {\n        no: 2,\n        name: 'is_low_power_mode_enabled',\n        kind: 'scalar',\n        T: 8 /*ScalarType.BOOL*/,\n      },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.models.AppleState\n */\nexport const AppleState = new AppleState$Type();\n", "/* eslint-disable */\n// @generated by protobuf-ts 2.9.4 with parameter long_type_string,client_generic,server_none,eslint_disable,optimize_code_size\n// @generated from protobuf file \"video/sfu/signal_rpc/signal.proto\" (package \"stream.video.sfu.signal\", syntax proto3)\n// tslint:disable\nimport {\n  AndroidState,\n  AppleState,\n  Error,\n  ICETrickle,\n  InputDevices,\n  PeerType,\n  TrackInfo,\n  TrackType,\n  VideoDimension,\n} from '../models/models';\nimport { ServiceType } from '@protobuf-ts/runtime-rpc';\nimport { MessageType } from '@protobuf-ts/runtime';\n\n/**\n * @generated from protobuf message stream.video.sfu.signal.StartNoiseCancellationRequest\n */\nexport interface StartNoiseCancellationRequest {\n  /**\n   * @generated from protobuf field: string session_id = 1;\n   */\n  sessionId: string;\n}\n/**\n * @generated from protobuf message stream.video.sfu.signal.StartNoiseCancellationResponse\n */\nexport interface StartNoiseCancellationResponse {\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.Error error = 1;\n   */\n  error?: Error;\n}\n/**\n * @generated from protobuf message stream.video.sfu.signal.StopNoiseCancellationRequest\n */\nexport interface StopNoiseCancellationRequest {\n  /**\n   * @generated from protobuf field: string session_id = 1;\n   */\n  sessionId: string;\n}\n/**\n * @generated from protobuf message stream.video.sfu.signal.StopNoiseCancellationResponse\n */\nexport interface StopNoiseCancellationResponse {\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.Error error = 1;\n   */\n  error?: Error;\n}\n/**\n * @generated from protobuf message stream.video.sfu.signal.SendStatsRequest\n */\nexport interface SendStatsRequest {\n  /**\n   * @generated from protobuf field: string session_id = 1;\n   */\n  sessionId: string;\n  /**\n   * @generated from protobuf field: string subscriber_stats = 2;\n   */\n  subscriberStats: string;\n  /**\n   * @generated from protobuf field: string publisher_stats = 3;\n   */\n  publisherStats: string;\n  /**\n   * @generated from protobuf field: string webrtc_version = 4;\n   */\n  webrtcVersion: string;\n  /**\n   * @generated from protobuf field: string sdk = 5;\n   */\n  sdk: string;\n  /**\n   * @generated from protobuf field: string sdk_version = 6;\n   */\n  sdkVersion: string;\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.InputDevices audio_devices = 7;\n   */\n  audioDevices?: InputDevices;\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.InputDevices video_devices = 8;\n   */\n  videoDevices?: InputDevices;\n  /**\n   * @generated from protobuf oneof: device_state\n   */\n  deviceState:\n    | {\n        oneofKind: 'android';\n        /**\n         * @generated from protobuf field: stream.video.sfu.models.AndroidState android = 9;\n         */\n        android: AndroidState;\n      }\n    | {\n        oneofKind: 'apple';\n        /**\n         * @generated from protobuf field: stream.video.sfu.models.AppleState apple = 10;\n         */\n        apple: AppleState;\n      }\n    | {\n        oneofKind: undefined;\n      };\n}\n/**\n * @generated from protobuf message stream.video.sfu.signal.SendStatsResponse\n */\nexport interface SendStatsResponse {\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.Error error = 1;\n   */\n  error?: Error;\n}\n/**\n * @generated from protobuf message stream.video.sfu.signal.ICERestartRequest\n */\nexport interface ICERestartRequest {\n  /**\n   * @generated from protobuf field: string session_id = 1;\n   */\n  sessionId: string;\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.PeerType peer_type = 2;\n   */\n  peerType: PeerType;\n}\n/**\n * @generated from protobuf message stream.video.sfu.signal.ICERestartResponse\n */\nexport interface ICERestartResponse {\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.Error error = 1;\n   */\n  error?: Error;\n}\n/**\n * @generated from protobuf message stream.video.sfu.signal.UpdateMuteStatesRequest\n */\nexport interface UpdateMuteStatesRequest {\n  /**\n   * @generated from protobuf field: string session_id = 1;\n   */\n  sessionId: string;\n  /**\n   * @generated from protobuf field: repeated stream.video.sfu.signal.TrackMuteState mute_states = 3;\n   */\n  muteStates: TrackMuteState[];\n}\n/**\n * @generated from protobuf message stream.video.sfu.signal.UpdateMuteStatesResponse\n */\nexport interface UpdateMuteStatesResponse {\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.Error error = 4;\n   */\n  error?: Error;\n}\n/**\n * @generated from protobuf message stream.video.sfu.signal.TrackMuteState\n */\nexport interface TrackMuteState {\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.TrackType track_type = 1;\n   */\n  trackType: TrackType;\n  /**\n   * @generated from protobuf field: bool muted = 2;\n   */\n  muted: boolean;\n}\n/**\n * @generated from protobuf message stream.video.sfu.signal.AudioMuteChanged\n */\nexport interface AudioMuteChanged {\n  /**\n   * @generated from protobuf field: bool muted = 1;\n   */\n  muted: boolean;\n}\n/**\n * @generated from protobuf message stream.video.sfu.signal.VideoMuteChanged\n */\nexport interface VideoMuteChanged {\n  /**\n   * @generated from protobuf field: bool muted = 2;\n   */\n  muted: boolean;\n}\n/**\n * @generated from protobuf message stream.video.sfu.signal.UpdateSubscriptionsRequest\n */\nexport interface UpdateSubscriptionsRequest {\n  /**\n   * @generated from protobuf field: string session_id = 2;\n   */\n  sessionId: string;\n  /**\n   * @generated from protobuf field: repeated stream.video.sfu.signal.TrackSubscriptionDetails tracks = 3;\n   */\n  tracks: TrackSubscriptionDetails[];\n}\n/**\n * @generated from protobuf message stream.video.sfu.signal.UpdateSubscriptionsResponse\n */\nexport interface UpdateSubscriptionsResponse {\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.Error error = 4;\n   */\n  error?: Error;\n}\n/**\n * @generated from protobuf message stream.video.sfu.signal.TrackSubscriptionDetails\n */\nexport interface TrackSubscriptionDetails {\n  /**\n   * @generated from protobuf field: string user_id = 1;\n   */\n  userId: string;\n  /**\n   * @generated from protobuf field: string session_id = 2;\n   */\n  sessionId: string;\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.TrackType track_type = 3;\n   */\n  trackType: TrackType;\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.VideoDimension dimension = 4;\n   */\n  dimension?: VideoDimension;\n}\n/**\n * @generated from protobuf message stream.video.sfu.signal.SendAnswerRequest\n */\nexport interface SendAnswerRequest {\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.PeerType peer_type = 1;\n   */\n  peerType: PeerType;\n  /**\n   * @generated from protobuf field: string sdp = 2;\n   */\n  sdp: string;\n  /**\n   * @generated from protobuf field: string session_id = 3;\n   */\n  sessionId: string;\n}\n/**\n * @generated from protobuf message stream.video.sfu.signal.SendAnswerResponse\n */\nexport interface SendAnswerResponse {\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.Error error = 4;\n   */\n  error?: Error;\n}\n/**\n * @generated from protobuf message stream.video.sfu.signal.ICETrickleResponse\n */\nexport interface ICETrickleResponse {\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.Error error = 4;\n   */\n  error?: Error;\n}\n/**\n * @generated from protobuf message stream.video.sfu.signal.SetPublisherRequest\n */\nexport interface SetPublisherRequest {\n  /**\n   * sdp offer\n   *\n   * @generated from protobuf field: string sdp = 1;\n   */\n  sdp: string;\n  /**\n   * @generated from protobuf field: string session_id = 2;\n   */\n  sessionId: string;\n  /**\n   * @generated from protobuf field: repeated stream.video.sfu.models.TrackInfo tracks = 3;\n   */\n  tracks: TrackInfo[];\n}\n/**\n * @generated from protobuf message stream.video.sfu.signal.SetPublisherResponse\n */\nexport interface SetPublisherResponse {\n  /**\n   * sdp answer\n   *\n   * @generated from protobuf field: string sdp = 1;\n   */\n  sdp: string;\n  /**\n   * @generated from protobuf field: string session_id = 2;\n   */\n  sessionId: string;\n  /**\n   * @generated from protobuf field: bool ice_restart = 3;\n   */\n  iceRestart: boolean;\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.Error error = 4;\n   */\n  error?: Error;\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass StartNoiseCancellationRequest$Type extends MessageType<StartNoiseCancellationRequest> {\n  constructor() {\n    super('stream.video.sfu.signal.StartNoiseCancellationRequest', [\n      { no: 1, name: 'session_id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.signal.StartNoiseCancellationRequest\n */\nexport const StartNoiseCancellationRequest =\n  new StartNoiseCancellationRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass StartNoiseCancellationResponse$Type extends MessageType<StartNoiseCancellationResponse> {\n  constructor() {\n    super('stream.video.sfu.signal.StartNoiseCancellationResponse', [\n      { no: 1, name: 'error', kind: 'message', T: () => Error },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.signal.StartNoiseCancellationResponse\n */\nexport const StartNoiseCancellationResponse =\n  new StartNoiseCancellationResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass StopNoiseCancellationRequest$Type extends MessageType<StopNoiseCancellationRequest> {\n  constructor() {\n    super('stream.video.sfu.signal.StopNoiseCancellationRequest', [\n      { no: 1, name: 'session_id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.signal.StopNoiseCancellationRequest\n */\nexport const StopNoiseCancellationRequest =\n  new StopNoiseCancellationRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass StopNoiseCancellationResponse$Type extends MessageType<StopNoiseCancellationResponse> {\n  constructor() {\n    super('stream.video.sfu.signal.StopNoiseCancellationResponse', [\n      { no: 1, name: 'error', kind: 'message', T: () => Error },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.signal.StopNoiseCancellationResponse\n */\nexport const StopNoiseCancellationResponse =\n  new StopNoiseCancellationResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass SendStatsRequest$Type extends MessageType<SendStatsRequest> {\n  constructor() {\n    super('stream.video.sfu.signal.SendStatsRequest', [\n      { no: 1, name: 'session_id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      {\n        no: 2,\n        name: 'subscriber_stats',\n        kind: 'scalar',\n        T: 9 /*ScalarType.STRING*/,\n      },\n      {\n        no: 3,\n        name: 'publisher_stats',\n        kind: 'scalar',\n        T: 9 /*ScalarType.STRING*/,\n      },\n      {\n        no: 4,\n        name: 'webrtc_version',\n        kind: 'scalar',\n        T: 9 /*ScalarType.STRING*/,\n      },\n      { no: 5, name: 'sdk', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      {\n        no: 6,\n        name: 'sdk_version',\n        kind: 'scalar',\n        T: 9 /*ScalarType.STRING*/,\n      },\n      { no: 7, name: 'audio_devices', kind: 'message', T: () => InputDevices },\n      { no: 8, name: 'video_devices', kind: 'message', T: () => InputDevices },\n      {\n        no: 9,\n        name: 'android',\n        kind: 'message',\n        oneof: 'deviceState',\n        T: () => AndroidState,\n      },\n      {\n        no: 10,\n        name: 'apple',\n        kind: 'message',\n        oneof: 'deviceState',\n        T: () => AppleState,\n      },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.signal.SendStatsRequest\n */\nexport const SendStatsRequest = new SendStatsRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass SendStatsResponse$Type extends MessageType<SendStatsResponse> {\n  constructor() {\n    super('stream.video.sfu.signal.SendStatsResponse', [\n      { no: 1, name: 'error', kind: 'message', T: () => Error },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.signal.SendStatsResponse\n */\nexport const SendStatsResponse = new SendStatsResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ICERestartRequest$Type extends MessageType<ICERestartRequest> {\n  constructor() {\n    super('stream.video.sfu.signal.ICERestartRequest', [\n      { no: 1, name: 'session_id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      {\n        no: 2,\n        name: 'peer_type',\n        kind: 'enum',\n        T: () => ['stream.video.sfu.models.PeerType', PeerType, 'PEER_TYPE_'],\n      },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.signal.ICERestartRequest\n */\nexport const ICERestartRequest = new ICERestartRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ICERestartResponse$Type extends MessageType<ICERestartResponse> {\n  constructor() {\n    super('stream.video.sfu.signal.ICERestartResponse', [\n      { no: 1, name: 'error', kind: 'message', T: () => Error },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.signal.ICERestartResponse\n */\nexport const ICERestartResponse = new ICERestartResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass UpdateMuteStatesRequest$Type extends MessageType<UpdateMuteStatesRequest> {\n  constructor() {\n    super('stream.video.sfu.signal.UpdateMuteStatesRequest', [\n      { no: 1, name: 'session_id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      {\n        no: 3,\n        name: 'mute_states',\n        kind: 'message',\n        repeat: 1 /*RepeatType.PACKED*/,\n        T: () => TrackMuteState,\n      },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.signal.UpdateMuteStatesRequest\n */\nexport const UpdateMuteStatesRequest = new UpdateMuteStatesRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass UpdateMuteStatesResponse$Type extends MessageType<UpdateMuteStatesResponse> {\n  constructor() {\n    super('stream.video.sfu.signal.UpdateMuteStatesResponse', [\n      { no: 4, name: 'error', kind: 'message', T: () => Error },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.signal.UpdateMuteStatesResponse\n */\nexport const UpdateMuteStatesResponse = new UpdateMuteStatesResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass TrackMuteState$Type extends MessageType<TrackMuteState> {\n  constructor() {\n    super('stream.video.sfu.signal.TrackMuteState', [\n      {\n        no: 1,\n        name: 'track_type',\n        kind: 'enum',\n        T: () => [\n          'stream.video.sfu.models.TrackType',\n          TrackType,\n          'TRACK_TYPE_',\n        ],\n      },\n      { no: 2, name: 'muted', kind: 'scalar', T: 8 /*ScalarType.BOOL*/ },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.signal.TrackMuteState\n */\nexport const TrackMuteState = new TrackMuteState$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass AudioMuteChanged$Type extends MessageType<AudioMuteChanged> {\n  constructor() {\n    super('stream.video.sfu.signal.AudioMuteChanged', [\n      { no: 1, name: 'muted', kind: 'scalar', T: 8 /*ScalarType.BOOL*/ },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.signal.AudioMuteChanged\n */\nexport const AudioMuteChanged = new AudioMuteChanged$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass VideoMuteChanged$Type extends MessageType<VideoMuteChanged> {\n  constructor() {\n    super('stream.video.sfu.signal.VideoMuteChanged', [\n      { no: 2, name: 'muted', kind: 'scalar', T: 8 /*ScalarType.BOOL*/ },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.signal.VideoMuteChanged\n */\nexport const VideoMuteChanged = new VideoMuteChanged$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass UpdateSubscriptionsRequest$Type extends MessageType<UpdateSubscriptionsRequest> {\n  constructor() {\n    super('stream.video.sfu.signal.UpdateSubscriptionsRequest', [\n      { no: 2, name: 'session_id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      {\n        no: 3,\n        name: 'tracks',\n        kind: 'message',\n        repeat: 1 /*RepeatType.PACKED*/,\n        T: () => TrackSubscriptionDetails,\n      },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.signal.UpdateSubscriptionsRequest\n */\nexport const UpdateSubscriptionsRequest = new UpdateSubscriptionsRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass UpdateSubscriptionsResponse$Type extends MessageType<UpdateSubscriptionsResponse> {\n  constructor() {\n    super('stream.video.sfu.signal.UpdateSubscriptionsResponse', [\n      { no: 4, name: 'error', kind: 'message', T: () => Error },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.signal.UpdateSubscriptionsResponse\n */\nexport const UpdateSubscriptionsResponse =\n  new UpdateSubscriptionsResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass TrackSubscriptionDetails$Type extends MessageType<TrackSubscriptionDetails> {\n  constructor() {\n    super('stream.video.sfu.signal.TrackSubscriptionDetails', [\n      { no: 1, name: 'user_id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      { no: 2, name: 'session_id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      {\n        no: 3,\n        name: 'track_type',\n        kind: 'enum',\n        T: () => [\n          'stream.video.sfu.models.TrackType',\n          TrackType,\n          'TRACK_TYPE_',\n        ],\n      },\n      { no: 4, name: 'dimension', kind: 'message', T: () => VideoDimension },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.signal.TrackSubscriptionDetails\n */\nexport const TrackSubscriptionDetails = new TrackSubscriptionDetails$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass SendAnswerRequest$Type extends MessageType<SendAnswerRequest> {\n  constructor() {\n    super('stream.video.sfu.signal.SendAnswerRequest', [\n      {\n        no: 1,\n        name: 'peer_type',\n        kind: 'enum',\n        T: () => ['stream.video.sfu.models.PeerType', PeerType, 'PEER_TYPE_'],\n      },\n      { no: 2, name: 'sdp', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      { no: 3, name: 'session_id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.signal.SendAnswerRequest\n */\nexport const SendAnswerRequest = new SendAnswerRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass SendAnswerResponse$Type extends MessageType<SendAnswerResponse> {\n  constructor() {\n    super('stream.video.sfu.signal.SendAnswerResponse', [\n      { no: 4, name: 'error', kind: 'message', T: () => Error },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.signal.SendAnswerResponse\n */\nexport const SendAnswerResponse = new SendAnswerResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ICETrickleResponse$Type extends MessageType<ICETrickleResponse> {\n  constructor() {\n    super('stream.video.sfu.signal.ICETrickleResponse', [\n      { no: 4, name: 'error', kind: 'message', T: () => Error },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.signal.ICETrickleResponse\n */\nexport const ICETrickleResponse = new ICETrickleResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass SetPublisherRequest$Type extends MessageType<SetPublisherRequest> {\n  constructor() {\n    super('stream.video.sfu.signal.SetPublisherRequest', [\n      { no: 1, name: 'sdp', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      { no: 2, name: 'session_id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      {\n        no: 3,\n        name: 'tracks',\n        kind: 'message',\n        repeat: 1 /*RepeatType.PACKED*/,\n        T: () => TrackInfo,\n      },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.signal.SetPublisherRequest\n */\nexport const SetPublisherRequest = new SetPublisherRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass SetPublisherResponse$Type extends MessageType<SetPublisherResponse> {\n  constructor() {\n    super('stream.video.sfu.signal.SetPublisherResponse', [\n      { no: 1, name: 'sdp', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      { no: 2, name: 'session_id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      { no: 3, name: 'ice_restart', kind: 'scalar', T: 8 /*ScalarType.BOOL*/ },\n      { no: 4, name: 'error', kind: 'message', T: () => Error },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.signal.SetPublisherResponse\n */\nexport const SetPublisherResponse = new SetPublisherResponse$Type();\n/**\n * @generated ServiceType for protobuf service stream.video.sfu.signal.SignalServer\n */\nexport const SignalServer = new ServiceType(\n  'stream.video.sfu.signal.SignalServer',\n  [\n    {\n      name: 'SetPublisher',\n      options: {},\n      I: SetPublisherRequest,\n      O: SetPublisherResponse,\n    },\n    {\n      name: 'SendAnswer',\n      options: {},\n      I: SendAnswerRequest,\n      O: SendAnswerResponse,\n    },\n    { name: 'IceTrickle', options: {}, I: ICETrickle, O: ICETrickleResponse },\n    {\n      name: 'UpdateSubscriptions',\n      options: {},\n      I: UpdateSubscriptionsRequest,\n      O: UpdateSubscriptionsResponse,\n    },\n    {\n      name: 'UpdateMuteStates',\n      options: {},\n      I: UpdateMuteStatesRequest,\n      O: UpdateMuteStatesResponse,\n    },\n    {\n      name: 'IceRestart',\n      options: {},\n      I: ICERestartRequest,\n      O: ICERestartResponse,\n    },\n    {\n      name: 'SendStats',\n      options: {},\n      I: SendStatsRequest,\n      O: SendStatsResponse,\n    },\n    {\n      name: 'StartNoiseCancellation',\n      options: {},\n      I: StartNoiseCancellationRequest,\n      O: StartNoiseCancellationResponse,\n    },\n    {\n      name: 'StopNoiseCancellation',\n      options: {},\n      I: StopNoiseCancellationRequest,\n      O: StopNoiseCancellationResponse,\n    },\n  ],\n);\n", "/* eslint-disable */\n// @generated by protobuf-ts 2.9.4 with parameter long_type_string,client_generic,server_none,eslint_disable,optimize_code_size\n// @generated from protobuf file \"video/sfu/event/events.proto\" (package \"stream.video.sfu.event\", syntax proto3)\n// tslint:disable\nimport { MessageType } from '@protobuf-ts/runtime';\nimport {\n  CallEndedReason,\n  CallGrants,\n  CallState,\n  ClientDetails,\n  Codec,\n  ConnectionQuality,\n  Error as Error$,\n  GoAwayReason,\n  ICETrickle as ICETrickle$,\n  Participant,\n  ParticipantCount,\n  PeerType,\n  Pin,\n  TrackInfo,\n  TrackType,\n  TrackUnpublishReason,\n  WebsocketReconnectStrategy,\n} from '../models/models';\nimport { TrackSubscriptionDetails } from '../signal_rpc/signal';\n\n/**\n * SFUEvent is a message that is sent from the SFU to the client.\n *\n * @generated from protobuf message stream.video.sfu.event.SfuEvent\n */\nexport interface SfuEvent {\n  /**\n   * @generated from protobuf oneof: event_payload\n   */\n  eventPayload:\n    | {\n        oneofKind: 'subscriberOffer';\n        /**\n         * SubscriberOffer sends the SDP offer for establishing the\n         * subscriber PeerConnection.\n         *\n         * @generated from protobuf field: stream.video.sfu.event.SubscriberOffer subscriber_offer = 1;\n         */\n        subscriberOffer: SubscriberOffer;\n      }\n    | {\n        oneofKind: 'publisherAnswer';\n        /**\n         * PublisherAnswer sends the SDP answer to the offer sent by\n         * the client for establishing the Publisher PeerConnection.\n         *\n         * @generated from protobuf field: stream.video.sfu.event.PublisherAnswer publisher_answer = 2;\n         */\n        publisherAnswer: PublisherAnswer;\n      }\n    | {\n        oneofKind: 'connectionQualityChanged';\n        /**\n         * ConnectionQualityChanged is sent to inform the connection\n         * quality of the participants in the call. It does not have\n         * to contain the full list of call participants in it.\n         *\n         * @generated from protobuf field: stream.video.sfu.event.ConnectionQualityChanged connection_quality_changed = 3;\n         */\n        connectionQualityChanged: ConnectionQualityChanged;\n      }\n    | {\n        oneofKind: 'audioLevelChanged';\n        /**\n         * AudioLevelChanged is sent for change in audio levels of\n         * the participants.\n         *\n         * @generated from protobuf field: stream.video.sfu.event.AudioLevelChanged audio_level_changed = 4;\n         */\n        audioLevelChanged: AudioLevelChanged;\n      }\n    | {\n        oneofKind: 'iceTrickle';\n        /**\n         * ICETrickle contains the ICE candidate required to establish\n         * the ICE transport: part of establishing the PeerConnection\n         * and also for ICE restarts.\n         *\n         * @generated from protobuf field: stream.video.sfu.models.ICETrickle ice_trickle = 5;\n         */\n        iceTrickle: ICETrickle$;\n      }\n    | {\n        oneofKind: 'changePublishQuality';\n        /**\n         * ChangePublishQuality advises the publisher to switch on/off\n         * various qualities of their video stream based on the subscription.\n         * This is done to save the bandwidth and the CPU of the publisher.\n         *\n         * @generated from protobuf field: stream.video.sfu.event.ChangePublishQuality change_publish_quality = 6;\n         */\n        changePublishQuality: ChangePublishQuality;\n      }\n    | {\n        oneofKind: 'participantJoined';\n        /**\n         * ParticipantJoined notifies the client that a new participant\n         * has joined the call. This is not sent for anonymous users.\n         *\n         * @generated from protobuf field: stream.video.sfu.event.ParticipantJoined participant_joined = 10;\n         */\n        participantJoined: ParticipantJoined;\n      }\n    | {\n        oneofKind: 'participantLeft';\n        /**\n         * ParticipantLeft notifies the client that a call participant\n         * has left the call. This is not sent for anonymous users.\n         *\n         * @generated from protobuf field: stream.video.sfu.event.ParticipantLeft participant_left = 11;\n         */\n        participantLeft: ParticipantLeft;\n      }\n    | {\n        oneofKind: 'dominantSpeakerChanged';\n        /**\n         * DominantSpeakerChanged notifies the client about the current\n         * dominant speaker. This is required for certain use cases like\n         * the spotlight view.\n         *\n         * @generated from protobuf field: stream.video.sfu.event.DominantSpeakerChanged dominant_speaker_changed = 12;\n         */\n        dominantSpeakerChanged: DominantSpeakerChanged;\n      }\n    | {\n        oneofKind: 'joinResponse';\n        /**\n         * JoinResponse acknowledges a participant successfully joining\n         * the call. This is sent in response to the JoinRequest.\n         *\n         * @generated from protobuf field: stream.video.sfu.event.JoinResponse join_response = 13;\n         */\n        joinResponse: JoinResponse;\n      }\n    | {\n        oneofKind: 'healthCheckResponse';\n        /**\n         * HealthCheckResponse is sent in response to the HealthCheckRequest.\n         * It contains the participant count in the call.\n         *\n         * @generated from protobuf field: stream.video.sfu.event.HealthCheckResponse health_check_response = 14;\n         */\n        healthCheckResponse: HealthCheckResponse;\n      }\n    | {\n        oneofKind: 'trackPublished';\n        /**\n         * TrackPublished is sent when a new track (like audio, video, screenshare)\n         * is published by a participant in the call. It is also sent on mute/unmute.\n         *\n         * @generated from protobuf field: stream.video.sfu.event.TrackPublished track_published = 16;\n         */\n        trackPublished: TrackPublished;\n      }\n    | {\n        oneofKind: 'trackUnpublished';\n        /**\n         * TrackUnpublished is sent when a track (like audio, video, screenshare)\n         * is no longer published. It is sent on muting a track or when the participant\n         * is leaving the call.\n         *\n         * @generated from protobuf field: stream.video.sfu.event.TrackUnpublished track_unpublished = 17;\n         */\n        trackUnpublished: TrackUnpublished;\n      }\n    | {\n        oneofKind: 'error';\n        /**\n         * Error is used to communicate any error related to the participant. The\n         * error code and the message explain what went wrong. Whether the participant\n         * can retry is also indicated.\n         *\n         * @generated from protobuf field: stream.video.sfu.event.Error error = 18;\n         */\n        error: Error;\n      }\n    | {\n        oneofKind: 'callGrantsUpdated';\n        /**\n         * CallGrantsUpdated tells what tracks a participant is allowed to publish.\n         *\n         * @generated from protobuf field: stream.video.sfu.event.CallGrantsUpdated call_grants_updated = 19;\n         */\n        callGrantsUpdated: CallGrantsUpdated;\n      }\n    | {\n        oneofKind: 'goAway';\n        /**\n         * GoAway tells the client to migrate away from the SFU it is connected to.\n         * The reason field indicates why this message was sent.\n         *\n         * @generated from protobuf field: stream.video.sfu.event.GoAway go_away = 20;\n         */\n        goAway: GoAway;\n      }\n    | {\n        oneofKind: 'iceRestart';\n        /**\n         * ICERestart tells the client to perform ICE restart.\n         *\n         * @generated from protobuf field: stream.video.sfu.event.ICERestart ice_restart = 21;\n         */\n        iceRestart: ICERestart;\n      }\n    | {\n        oneofKind: 'pinsUpdated';\n        /**\n         * PinsChanged is sent the list of pins in the call changes. This event contains the entire list of pins.\n         *\n         * @generated from protobuf field: stream.video.sfu.event.PinsChanged pins_updated = 22;\n         */\n        pinsUpdated: PinsChanged;\n      }\n    | {\n        oneofKind: 'callEnded';\n        /**\n         * CallEnded is sent by the SFU to the client to signal that the call has ended.\n         * The reason may specify why the call has ended.\n         *\n         * @generated from protobuf field: stream.video.sfu.event.CallEnded call_ended = 23;\n         */\n        callEnded: CallEnded;\n      }\n    | {\n        oneofKind: 'participantUpdated';\n        /**\n         * ParticipantUpdated is sent when user data is updated\n         *\n         * @generated from protobuf field: stream.video.sfu.event.ParticipantUpdated participant_updated = 24;\n         */\n        participantUpdated: ParticipantUpdated;\n      }\n    | {\n        oneofKind: 'participantMigrationComplete';\n        /**\n         * ParticipantMigrationComplete is sent when the participant migration is complete\n         *\n         * @generated from protobuf field: stream.video.sfu.event.ParticipantMigrationComplete participant_migration_complete = 25;\n         */\n        participantMigrationComplete: ParticipantMigrationComplete;\n      }\n    | {\n        oneofKind: undefined;\n      };\n}\n/**\n * @generated from protobuf message stream.video.sfu.event.ParticipantMigrationComplete\n */\nexport interface ParticipantMigrationComplete {}\n/**\n * @generated from protobuf message stream.video.sfu.event.PinsChanged\n */\nexport interface PinsChanged {\n  /**\n   * the list of pins in the call.\n   * Pins are ordered in descending order (most important first).\n   *\n   * @generated from protobuf field: repeated stream.video.sfu.models.Pin pins = 1;\n   */\n  pins: Pin[];\n}\n/**\n * @generated from protobuf message stream.video.sfu.event.Error\n */\nexport interface Error {\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.Error error = 4;\n   */\n  error?: Error$;\n  /**\n   * returns the reconnect strategy to be used by the client\n   *\n   * @generated from protobuf field: stream.video.sfu.models.WebsocketReconnectStrategy reconnect_strategy = 5;\n   */\n  reconnectStrategy: WebsocketReconnectStrategy;\n}\n/**\n * @generated from protobuf message stream.video.sfu.event.ICETrickle\n */\nexport interface ICETrickle {\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.PeerType peer_type = 1;\n   */\n  peerType: PeerType;\n  /**\n   * @generated from protobuf field: string ice_candidate = 2;\n   */\n  iceCandidate: string;\n}\n/**\n * @generated from protobuf message stream.video.sfu.event.ICERestart\n */\nexport interface ICERestart {\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.PeerType peer_type = 1;\n   */\n  peerType: PeerType;\n}\n/**\n * SfuRequest is a message that is sent from the client to the SFU.\n *\n * @generated from protobuf message stream.video.sfu.event.SfuRequest\n */\nexport interface SfuRequest {\n  /**\n   * @generated from protobuf oneof: request_payload\n   */\n  requestPayload:\n    | {\n        oneofKind: 'joinRequest';\n        /**\n         * @generated from protobuf field: stream.video.sfu.event.JoinRequest join_request = 1;\n         */\n        joinRequest: JoinRequest;\n      }\n    | {\n        oneofKind: 'healthCheckRequest';\n        /**\n         * @generated from protobuf field: stream.video.sfu.event.HealthCheckRequest health_check_request = 2;\n         */\n        healthCheckRequest: HealthCheckRequest;\n      }\n    | {\n        oneofKind: 'leaveCallRequest';\n        /**\n         * @generated from protobuf field: stream.video.sfu.event.LeaveCallRequest leave_call_request = 3;\n         */\n        leaveCallRequest: LeaveCallRequest;\n      }\n    | {\n        oneofKind: undefined;\n      };\n}\n/**\n * @generated from protobuf message stream.video.sfu.event.LeaveCallRequest\n */\nexport interface LeaveCallRequest {\n  /**\n   * @generated from protobuf field: string session_id = 1;\n   */\n  sessionId: string;\n  /**\n   * @generated from protobuf field: string reason = 2;\n   */\n  reason: string;\n}\n/**\n * @generated from protobuf message stream.video.sfu.event.HealthCheckRequest\n */\nexport interface HealthCheckRequest {}\n/**\n * @generated from protobuf message stream.video.sfu.event.HealthCheckResponse\n */\nexport interface HealthCheckResponse {\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.ParticipantCount participant_count = 1;\n   */\n  participantCount?: ParticipantCount;\n}\n/**\n * @generated from protobuf message stream.video.sfu.event.TrackPublished\n */\nexport interface TrackPublished {\n  /**\n   * @generated from protobuf field: string user_id = 1;\n   */\n  userId: string;\n  /**\n   * @generated from protobuf field: string session_id = 2;\n   */\n  sessionId: string;\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.TrackType type = 3;\n   */\n  type: TrackType;\n  /**\n   * Participant information here is included as an optimisation\n   * for large calls where broadcasting on every participant join\n   * is expensive. You should **NOT** assume that this will always\n   * be available though you can use it to update the participant\n   * list when it is there.\n   *\n   * @generated from protobuf field: stream.video.sfu.models.Participant participant = 4;\n   */\n  participant?: Participant;\n}\n/**\n * @generated from protobuf message stream.video.sfu.event.TrackUnpublished\n */\nexport interface TrackUnpublished {\n  /**\n   * @generated from protobuf field: string user_id = 1;\n   */\n  userId: string;\n  /**\n   * @generated from protobuf field: string session_id = 2;\n   */\n  sessionId: string;\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.TrackType type = 3;\n   */\n  type: TrackType;\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.TrackUnpublishReason cause = 4;\n   */\n  cause: TrackUnpublishReason;\n  /**\n   * Participant information here is included as an optimisation\n   * for large calls where broadcasting on every participant join\n   * is expensive. You should **NOT** assume that this will always\n   * be available though you can use it to update the participant\n   * list when it is there.\n   *\n   * @generated from protobuf field: stream.video.sfu.models.Participant participant = 5;\n   */\n  participant?: Participant;\n}\n/**\n * @generated from protobuf message stream.video.sfu.event.JoinRequest\n */\nexport interface JoinRequest {\n  /**\n   * @generated from protobuf field: string token = 1;\n   */\n  token: string;\n  /**\n   * @generated from protobuf field: string session_id = 2;\n   */\n  sessionId: string;\n  /**\n   * dumb SDP that allow us to extract subscriber's decode codecs\n   *\n   * @generated from protobuf field: string subscriber_sdp = 3;\n   */\n  subscriberSdp: string;\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.ClientDetails client_details = 4;\n   */\n  clientDetails?: ClientDetails;\n  /**\n   * Deprecated: use ReconnectDetails instead\n   *\n   * @deprecated\n   * @generated from protobuf field: stream.video.sfu.event.Migration migration = 5 [deprecated = true];\n   */\n  migration?: Migration;\n  /**\n   * Fast reconnect flag explicitly indicates that if the participant session\n   * and the associated state is still present in the SFU, the client is ready\n   * to restore the PeerConnection with an ICE restart. If the SFU replies with\n   * \"reconnected: true\" in its JoinResponse, then it is safe to perform an ICE\n   * restart or else the existing PeerConnections must be cleaned up.\n   *\n   * For the SFU, fast_reconnect:false indicates that even if it has the state\n   * cached, the client state is not in sync and hence it must be cleaned up before\n   * proceeding further.\n   *\n   * @deprecated\n   * @generated from protobuf field: bool fast_reconnect = 6 [deprecated = true];\n   */\n  fastReconnect: boolean;\n  /**\n   * @generated from protobuf field: stream.video.sfu.event.ReconnectDetails reconnect_details = 7;\n   */\n  reconnectDetails?: ReconnectDetails;\n}\n/**\n * @generated from protobuf message stream.video.sfu.event.ReconnectDetails\n */\nexport interface ReconnectDetails {\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.WebsocketReconnectStrategy strategy = 1;\n   */\n  strategy: WebsocketReconnectStrategy;\n  /**\n   * @generated from protobuf field: repeated stream.video.sfu.models.TrackInfo announced_tracks = 3;\n   */\n  announcedTracks: TrackInfo[];\n  /**\n   * @generated from protobuf field: repeated stream.video.sfu.signal.TrackSubscriptionDetails subscriptions = 4;\n   */\n  subscriptions: TrackSubscriptionDetails[];\n  /**\n   * @generated from protobuf field: uint32 reconnect_attempt = 5;\n   */\n  reconnectAttempt: number;\n  /**\n   * @generated from protobuf field: string from_sfu_id = 6;\n   */\n  fromSfuId: string;\n  /**\n   * only set in case of rejoin\n   *\n   * @generated from protobuf field: string previous_session_id = 7;\n   */\n  previousSessionId: string;\n}\n/**\n * @generated from protobuf message stream.video.sfu.event.Migration\n */\nexport interface Migration {\n  /**\n   * @generated from protobuf field: string from_sfu_id = 1;\n   */\n  fromSfuId: string;\n  /**\n   * @generated from protobuf field: repeated stream.video.sfu.models.TrackInfo announced_tracks = 2;\n   */\n  announcedTracks: TrackInfo[];\n  /**\n   * @generated from protobuf field: repeated stream.video.sfu.signal.TrackSubscriptionDetails subscriptions = 3;\n   */\n  subscriptions: TrackSubscriptionDetails[];\n}\n/**\n * @generated from protobuf message stream.video.sfu.event.JoinResponse\n */\nexport interface JoinResponse {\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.CallState call_state = 1;\n   */\n  callState?: CallState;\n  /**\n   * @generated from protobuf field: bool reconnected = 2;\n   */\n  reconnected: boolean;\n  /**\n   * @generated from protobuf field: int32 fast_reconnect_deadline_seconds = 3;\n   */\n  fastReconnectDeadlineSeconds: number;\n}\n/**\n * ParticipantJoined is fired when a user joins a call\n *\n * @generated from protobuf message stream.video.sfu.event.ParticipantJoined\n */\nexport interface ParticipantJoined {\n  /**\n   * @generated from protobuf field: string call_cid = 1;\n   */\n  callCid: string;\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.Participant participant = 2;\n   */\n  participant?: Participant;\n}\n/**\n * ParticipantJoined is fired when a user leaves a call\n *\n * @generated from protobuf message stream.video.sfu.event.ParticipantLeft\n */\nexport interface ParticipantLeft {\n  /**\n   * @generated from protobuf field: string call_cid = 1;\n   */\n  callCid: string;\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.Participant participant = 2;\n   */\n  participant?: Participant;\n}\n/**\n * ParticipantUpdated is fired when user data is updated\n *\n * @generated from protobuf message stream.video.sfu.event.ParticipantUpdated\n */\nexport interface ParticipantUpdated {\n  /**\n   * @generated from protobuf field: string call_cid = 1;\n   */\n  callCid: string;\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.Participant participant = 2;\n   */\n  participant?: Participant;\n}\n/**\n * SubscriberOffer is sent when the SFU adds tracks to a subscription\n *\n * @generated from protobuf message stream.video.sfu.event.SubscriberOffer\n */\nexport interface SubscriberOffer {\n  /**\n   * @generated from protobuf field: bool ice_restart = 1;\n   */\n  iceRestart: boolean;\n  /**\n   * @generated from protobuf field: string sdp = 2;\n   */\n  sdp: string;\n}\n/**\n * @generated from protobuf message stream.video.sfu.event.PublisherAnswer\n */\nexport interface PublisherAnswer {\n  /**\n   * @generated from protobuf field: string sdp = 1;\n   */\n  sdp: string;\n}\n/**\n * ConnectionQuality is sent to inform about connection quality changes\n * eg. thierry's connection is not good -> render a red icon Zoom style\n *\n * @generated from protobuf message stream.video.sfu.event.ConnectionQualityChanged\n */\nexport interface ConnectionQualityChanged {\n  /**\n   * @generated from protobuf field: repeated stream.video.sfu.event.ConnectionQualityInfo connection_quality_updates = 1;\n   */\n  connectionQualityUpdates: ConnectionQualityInfo[];\n}\n/**\n * @generated from protobuf message stream.video.sfu.event.ConnectionQualityInfo\n */\nexport interface ConnectionQualityInfo {\n  /**\n   * @generated from protobuf field: string user_id = 1;\n   */\n  userId: string;\n  /**\n   * @generated from protobuf field: string session_id = 2;\n   */\n  sessionId: string;\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.ConnectionQuality connection_quality = 3;\n   */\n  connectionQuality: ConnectionQuality;\n}\n/**\n * DominantSpeakerChanged is sent by the SFU to notify when there is a new dominant speaker in the call\n *\n * @generated from protobuf message stream.video.sfu.event.DominantSpeakerChanged\n */\nexport interface DominantSpeakerChanged {\n  /**\n   * @generated from protobuf field: string user_id = 1;\n   */\n  userId: string;\n  /**\n   * @generated from protobuf field: string session_id = 2;\n   */\n  sessionId: string;\n}\n/**\n * @generated from protobuf message stream.video.sfu.event.AudioLevel\n */\nexport interface AudioLevel {\n  /**\n   * @generated from protobuf field: string user_id = 1;\n   */\n  userId: string;\n  /**\n   * @generated from protobuf field: string session_id = 2;\n   */\n  sessionId: string;\n  /**\n   * 0.0 means complete silence, 1.0 loudest\n   *\n   * @generated from protobuf field: float level = 3;\n   */\n  level: number;\n  /**\n   * @generated from protobuf field: bool is_speaking = 4;\n   */\n  isSpeaking: boolean;\n}\n/**\n * AudioLevelChanged is sent by the SFU to notify about audio levels by user\n *\n * @generated from protobuf message stream.video.sfu.event.AudioLevelChanged\n */\nexport interface AudioLevelChanged {\n  /**\n   * @generated from protobuf field: repeated stream.video.sfu.event.AudioLevel audio_levels = 1;\n   */\n  audioLevels: AudioLevel[];\n}\n/**\n * @generated from protobuf message stream.video.sfu.event.AudioSender\n */\nexport interface AudioSender {\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.Codec codec = 2;\n   */\n  codec?: Codec;\n}\n/**\n * VideoLayerSetting is used to specify various parameters of a particular encoding in simulcast.\n * The parameters are specified here - https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpEncodingParameters\n * SDKs use these parameters sent from the server to dynamically adjust these parameters to save CPU, bandwidth\n *\n * @generated from protobuf message stream.video.sfu.event.VideoLayerSetting\n */\nexport interface VideoLayerSetting {\n  /**\n   * @generated from protobuf field: string name = 1;\n   */\n  name: string;\n  /**\n   * @generated from protobuf field: bool active = 2;\n   */\n  active: boolean;\n  /**\n   * @generated from protobuf field: int32 max_bitrate = 3;\n   */\n  maxBitrate: number;\n  /**\n   * @generated from protobuf field: float scale_resolution_down_by = 4;\n   */\n  scaleResolutionDownBy: number;\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.Codec codec = 6;\n   */\n  codec?: Codec;\n  /**\n   * @generated from protobuf field: uint32 max_framerate = 7;\n   */\n  maxFramerate: number;\n  /**\n   * @generated from protobuf field: string scalability_mode = 8;\n   */\n  scalabilityMode: string;\n}\n/**\n * @generated from protobuf message stream.video.sfu.event.VideoSender\n */\nexport interface VideoSender {\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.Codec codec = 2;\n   */\n  codec?: Codec;\n  /**\n   * @generated from protobuf field: repeated stream.video.sfu.event.VideoLayerSetting layers = 3;\n   */\n  layers: VideoLayerSetting[];\n}\n/**\n * sent to users when they need to change the quality of their video\n *\n * @generated from protobuf message stream.video.sfu.event.ChangePublishQuality\n */\nexport interface ChangePublishQuality {\n  /**\n   * @generated from protobuf field: repeated stream.video.sfu.event.AudioSender audio_senders = 1;\n   */\n  audioSenders: AudioSender[];\n  /**\n   * @generated from protobuf field: repeated stream.video.sfu.event.VideoSender video_senders = 2;\n   */\n  videoSenders: VideoSender[];\n}\n/**\n * CallGrants is sent to users when there is a change in the call permissions\n * to publish audio, video or share the screen for a user or a role. This is\n * idempotent and can be sent at any time. Only the current_grants in the latest\n * message should be considered. In other words, this is not dependent on any\n * other message (including previous call_grants_updated message)\n *\n * When this message is received, the client (say, React component) should mute\n * the tracks which are not allowed anymore. For example, if the message has\n * grants {audio:true, video:false} while the user is publishing video, then the\n * client component should mute the video track and gray out the video button.\n * This way, the user will not be able to publish video until the permissions\n * are granted again. Also, muting the track on the client side will prevent\n * the SFU from receiving the video track and will save bandwidth.\n *\n * In simple words, this is exactly the same as muting a track on the client.\n * Here, instead of the user instructing the client, SFU would be doing it.\n *\n * @generated from protobuf message stream.video.sfu.event.CallGrantsUpdated\n */\nexport interface CallGrantsUpdated {\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.CallGrants current_grants = 1;\n   */\n  currentGrants?: CallGrants;\n  /**\n   * @generated from protobuf field: string message = 2;\n   */\n  message: string;\n}\n/**\n * Go away is sent by the SFU to the client to signal to migrate away from the SFU.\n * The evict reason may specify why the user is being evicted.\n *\n * @generated from protobuf message stream.video.sfu.event.GoAway\n */\nexport interface GoAway {\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.GoAwayReason reason = 1;\n   */\n  reason: GoAwayReason;\n}\n/**\n * CallEnded is sent by the SFU to the client to signal that the call has ended.\n * The reason may specify why the call has ended.\n *\n * @generated from protobuf message stream.video.sfu.event.CallEnded\n */\nexport interface CallEnded {\n  /**\n   * @generated from protobuf field: stream.video.sfu.models.CallEndedReason reason = 1;\n   */\n  reason: CallEndedReason;\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass SfuEvent$Type extends MessageType<SfuEvent> {\n  constructor() {\n    super('stream.video.sfu.event.SfuEvent', [\n      {\n        no: 1,\n        name: 'subscriber_offer',\n        kind: 'message',\n        oneof: 'eventPayload',\n        T: () => SubscriberOffer,\n      },\n      {\n        no: 2,\n        name: 'publisher_answer',\n        kind: 'message',\n        oneof: 'eventPayload',\n        T: () => PublisherAnswer,\n      },\n      {\n        no: 3,\n        name: 'connection_quality_changed',\n        kind: 'message',\n        oneof: 'eventPayload',\n        T: () => ConnectionQualityChanged,\n      },\n      {\n        no: 4,\n        name: 'audio_level_changed',\n        kind: 'message',\n        oneof: 'eventPayload',\n        T: () => AudioLevelChanged,\n      },\n      {\n        no: 5,\n        name: 'ice_trickle',\n        kind: 'message',\n        oneof: 'eventPayload',\n        T: () => ICETrickle$,\n      },\n      {\n        no: 6,\n        name: 'change_publish_quality',\n        kind: 'message',\n        oneof: 'eventPayload',\n        T: () => ChangePublishQuality,\n      },\n      {\n        no: 10,\n        name: 'participant_joined',\n        kind: 'message',\n        oneof: 'eventPayload',\n        T: () => ParticipantJoined,\n      },\n      {\n        no: 11,\n        name: 'participant_left',\n        kind: 'message',\n        oneof: 'eventPayload',\n        T: () => ParticipantLeft,\n      },\n      {\n        no: 12,\n        name: 'dominant_speaker_changed',\n        kind: 'message',\n        oneof: 'eventPayload',\n        T: () => DominantSpeakerChanged,\n      },\n      {\n        no: 13,\n        name: 'join_response',\n        kind: 'message',\n        oneof: 'eventPayload',\n        T: () => JoinResponse,\n      },\n      {\n        no: 14,\n        name: 'health_check_response',\n        kind: 'message',\n        oneof: 'eventPayload',\n        T: () => HealthCheckResponse,\n      },\n      {\n        no: 16,\n        name: 'track_published',\n        kind: 'message',\n        oneof: 'eventPayload',\n        T: () => TrackPublished,\n      },\n      {\n        no: 17,\n        name: 'track_unpublished',\n        kind: 'message',\n        oneof: 'eventPayload',\n        T: () => TrackUnpublished,\n      },\n      {\n        no: 18,\n        name: 'error',\n        kind: 'message',\n        oneof: 'eventPayload',\n        T: () => Error,\n      },\n      {\n        no: 19,\n        name: 'call_grants_updated',\n        kind: 'message',\n        oneof: 'eventPayload',\n        T: () => CallGrantsUpdated,\n      },\n      {\n        no: 20,\n        name: 'go_away',\n        kind: 'message',\n        oneof: 'eventPayload',\n        T: () => GoAway,\n      },\n      {\n        no: 21,\n        name: 'ice_restart',\n        kind: 'message',\n        oneof: 'eventPayload',\n        T: () => ICERestart,\n      },\n      {\n        no: 22,\n        name: 'pins_updated',\n        kind: 'message',\n        oneof: 'eventPayload',\n        T: () => PinsChanged,\n      },\n      {\n        no: 23,\n        name: 'call_ended',\n        kind: 'message',\n        oneof: 'eventPayload',\n        T: () => CallEnded,\n      },\n      {\n        no: 24,\n        name: 'participant_updated',\n        kind: 'message',\n        oneof: 'eventPayload',\n        T: () => ParticipantUpdated,\n      },\n      {\n        no: 25,\n        name: 'participant_migration_complete',\n        kind: 'message',\n        oneof: 'eventPayload',\n        T: () => ParticipantMigrationComplete,\n      },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.event.SfuEvent\n */\nexport const SfuEvent = new SfuEvent$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ParticipantMigrationComplete$Type extends MessageType<ParticipantMigrationComplete> {\n  constructor() {\n    super('stream.video.sfu.event.ParticipantMigrationComplete', []);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.event.ParticipantMigrationComplete\n */\nexport const ParticipantMigrationComplete =\n  new ParticipantMigrationComplete$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass PinsChanged$Type extends MessageType<PinsChanged> {\n  constructor() {\n    super('stream.video.sfu.event.PinsChanged', [\n      {\n        no: 1,\n        name: 'pins',\n        kind: 'message',\n        repeat: 1 /*RepeatType.PACKED*/,\n        T: () => Pin,\n      },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.event.PinsChanged\n */\nexport const PinsChanged = new PinsChanged$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Error$Type extends MessageType<Error> {\n  constructor() {\n    super('stream.video.sfu.event.Error', [\n      { no: 4, name: 'error', kind: 'message', T: () => Error$ },\n      {\n        no: 5,\n        name: 'reconnect_strategy',\n        kind: 'enum',\n        T: () => [\n          'stream.video.sfu.models.WebsocketReconnectStrategy',\n          WebsocketReconnectStrategy,\n          'WEBSOCKET_RECONNECT_STRATEGY_',\n        ],\n      },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.event.Error\n */\nexport const Error = new Error$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ICETrickle$Type extends MessageType<ICETrickle> {\n  constructor() {\n    super('stream.video.sfu.event.ICETrickle', [\n      {\n        no: 1,\n        name: 'peer_type',\n        kind: 'enum',\n        T: () => ['stream.video.sfu.models.PeerType', PeerType, 'PEER_TYPE_'],\n      },\n      {\n        no: 2,\n        name: 'ice_candidate',\n        kind: 'scalar',\n        T: 9 /*ScalarType.STRING*/,\n      },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.event.ICETrickle\n */\nexport const ICETrickle = new ICETrickle$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ICERestart$Type extends MessageType<ICERestart> {\n  constructor() {\n    super('stream.video.sfu.event.ICERestart', [\n      {\n        no: 1,\n        name: 'peer_type',\n        kind: 'enum',\n        T: () => ['stream.video.sfu.models.PeerType', PeerType, 'PEER_TYPE_'],\n      },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.event.ICERestart\n */\nexport const ICERestart = new ICERestart$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass SfuRequest$Type extends MessageType<SfuRequest> {\n  constructor() {\n    super('stream.video.sfu.event.SfuRequest', [\n      {\n        no: 1,\n        name: 'join_request',\n        kind: 'message',\n        oneof: 'requestPayload',\n        T: () => JoinRequest,\n      },\n      {\n        no: 2,\n        name: 'health_check_request',\n        kind: 'message',\n        oneof: 'requestPayload',\n        T: () => HealthCheckRequest,\n      },\n      {\n        no: 3,\n        name: 'leave_call_request',\n        kind: 'message',\n        oneof: 'requestPayload',\n        T: () => LeaveCallRequest,\n      },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.event.SfuRequest\n */\nexport const SfuRequest = new SfuRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass LeaveCallRequest$Type extends MessageType<LeaveCallRequest> {\n  constructor() {\n    super('stream.video.sfu.event.LeaveCallRequest', [\n      { no: 1, name: 'session_id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      { no: 2, name: 'reason', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.event.LeaveCallRequest\n */\nexport const LeaveCallRequest = new LeaveCallRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass HealthCheckRequest$Type extends MessageType<HealthCheckRequest> {\n  constructor() {\n    super('stream.video.sfu.event.HealthCheckRequest', []);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.event.HealthCheckRequest\n */\nexport const HealthCheckRequest = new HealthCheckRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass HealthCheckResponse$Type extends MessageType<HealthCheckResponse> {\n  constructor() {\n    super('stream.video.sfu.event.HealthCheckResponse', [\n      {\n        no: 1,\n        name: 'participant_count',\n        kind: 'message',\n        T: () => ParticipantCount,\n      },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.event.HealthCheckResponse\n */\nexport const HealthCheckResponse = new HealthCheckResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass TrackPublished$Type extends MessageType<TrackPublished> {\n  constructor() {\n    super('stream.video.sfu.event.TrackPublished', [\n      { no: 1, name: 'user_id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      { no: 2, name: 'session_id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      {\n        no: 3,\n        name: 'type',\n        kind: 'enum',\n        T: () => [\n          'stream.video.sfu.models.TrackType',\n          TrackType,\n          'TRACK_TYPE_',\n        ],\n      },\n      { no: 4, name: 'participant', kind: 'message', T: () => Participant },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.event.TrackPublished\n */\nexport const TrackPublished = new TrackPublished$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass TrackUnpublished$Type extends MessageType<TrackUnpublished> {\n  constructor() {\n    super('stream.video.sfu.event.TrackUnpublished', [\n      { no: 1, name: 'user_id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      { no: 2, name: 'session_id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      {\n        no: 3,\n        name: 'type',\n        kind: 'enum',\n        T: () => [\n          'stream.video.sfu.models.TrackType',\n          TrackType,\n          'TRACK_TYPE_',\n        ],\n      },\n      {\n        no: 4,\n        name: 'cause',\n        kind: 'enum',\n        T: () => [\n          'stream.video.sfu.models.TrackUnpublishReason',\n          TrackUnpublishReason,\n          'TRACK_UNPUBLISH_REASON_',\n        ],\n      },\n      { no: 5, name: 'participant', kind: 'message', T: () => Participant },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.event.TrackUnpublished\n */\nexport const TrackUnpublished = new TrackUnpublished$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass JoinRequest$Type extends MessageType<JoinRequest> {\n  constructor() {\n    super('stream.video.sfu.event.JoinRequest', [\n      { no: 1, name: 'token', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      { no: 2, name: 'session_id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      {\n        no: 3,\n        name: 'subscriber_sdp',\n        kind: 'scalar',\n        T: 9 /*ScalarType.STRING*/,\n      },\n      {\n        no: 4,\n        name: 'client_details',\n        kind: 'message',\n        T: () => ClientDetails,\n      },\n      { no: 5, name: 'migration', kind: 'message', T: () => Migration },\n      {\n        no: 6,\n        name: 'fast_reconnect',\n        kind: 'scalar',\n        T: 8 /*ScalarType.BOOL*/,\n      },\n      {\n        no: 7,\n        name: 'reconnect_details',\n        kind: 'message',\n        T: () => ReconnectDetails,\n      },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.event.JoinRequest\n */\nexport const JoinRequest = new JoinRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ReconnectDetails$Type extends MessageType<ReconnectDetails> {\n  constructor() {\n    super('stream.video.sfu.event.ReconnectDetails', [\n      {\n        no: 1,\n        name: 'strategy',\n        kind: 'enum',\n        T: () => [\n          'stream.video.sfu.models.WebsocketReconnectStrategy',\n          WebsocketReconnectStrategy,\n          'WEBSOCKET_RECONNECT_STRATEGY_',\n        ],\n      },\n      {\n        no: 3,\n        name: 'announced_tracks',\n        kind: 'message',\n        repeat: 1 /*RepeatType.PACKED*/,\n        T: () => TrackInfo,\n      },\n      {\n        no: 4,\n        name: 'subscriptions',\n        kind: 'message',\n        repeat: 1 /*RepeatType.PACKED*/,\n        T: () => TrackSubscriptionDetails,\n      },\n      {\n        no: 5,\n        name: 'reconnect_attempt',\n        kind: 'scalar',\n        T: 13 /*ScalarType.UINT32*/,\n      },\n      {\n        no: 6,\n        name: 'from_sfu_id',\n        kind: 'scalar',\n        T: 9 /*ScalarType.STRING*/,\n      },\n      {\n        no: 7,\n        name: 'previous_session_id',\n        kind: 'scalar',\n        T: 9 /*ScalarType.STRING*/,\n      },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.event.ReconnectDetails\n */\nexport const ReconnectDetails = new ReconnectDetails$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Migration$Type extends MessageType<Migration> {\n  constructor() {\n    super('stream.video.sfu.event.Migration', [\n      {\n        no: 1,\n        name: 'from_sfu_id',\n        kind: 'scalar',\n        T: 9 /*ScalarType.STRING*/,\n      },\n      {\n        no: 2,\n        name: 'announced_tracks',\n        kind: 'message',\n        repeat: 1 /*RepeatType.PACKED*/,\n        T: () => TrackInfo,\n      },\n      {\n        no: 3,\n        name: 'subscriptions',\n        kind: 'message',\n        repeat: 1 /*RepeatType.PACKED*/,\n        T: () => TrackSubscriptionDetails,\n      },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.event.Migration\n */\nexport const Migration = new Migration$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass JoinResponse$Type extends MessageType<JoinResponse> {\n  constructor() {\n    super('stream.video.sfu.event.JoinResponse', [\n      { no: 1, name: 'call_state', kind: 'message', T: () => CallState },\n      { no: 2, name: 'reconnected', kind: 'scalar', T: 8 /*ScalarType.BOOL*/ },\n      {\n        no: 3,\n        name: 'fast_reconnect_deadline_seconds',\n        kind: 'scalar',\n        T: 5 /*ScalarType.INT32*/,\n      },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.event.JoinResponse\n */\nexport const JoinResponse = new JoinResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ParticipantJoined$Type extends MessageType<ParticipantJoined> {\n  constructor() {\n    super('stream.video.sfu.event.ParticipantJoined', [\n      { no: 1, name: 'call_cid', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      { no: 2, name: 'participant', kind: 'message', T: () => Participant },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.event.ParticipantJoined\n */\nexport const ParticipantJoined = new ParticipantJoined$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ParticipantLeft$Type extends MessageType<ParticipantLeft> {\n  constructor() {\n    super('stream.video.sfu.event.ParticipantLeft', [\n      { no: 1, name: 'call_cid', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      { no: 2, name: 'participant', kind: 'message', T: () => Participant },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.event.ParticipantLeft\n */\nexport const ParticipantLeft = new ParticipantLeft$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ParticipantUpdated$Type extends MessageType<ParticipantUpdated> {\n  constructor() {\n    super('stream.video.sfu.event.ParticipantUpdated', [\n      { no: 1, name: 'call_cid', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      { no: 2, name: 'participant', kind: 'message', T: () => Participant },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.event.ParticipantUpdated\n */\nexport const ParticipantUpdated = new ParticipantUpdated$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass SubscriberOffer$Type extends MessageType<SubscriberOffer> {\n  constructor() {\n    super('stream.video.sfu.event.SubscriberOffer', [\n      { no: 1, name: 'ice_restart', kind: 'scalar', T: 8 /*ScalarType.BOOL*/ },\n      { no: 2, name: 'sdp', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.event.SubscriberOffer\n */\nexport const SubscriberOffer = new SubscriberOffer$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass PublisherAnswer$Type extends MessageType<PublisherAnswer> {\n  constructor() {\n    super('stream.video.sfu.event.PublisherAnswer', [\n      { no: 1, name: 'sdp', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.event.PublisherAnswer\n */\nexport const PublisherAnswer = new PublisherAnswer$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ConnectionQualityChanged$Type extends MessageType<ConnectionQualityChanged> {\n  constructor() {\n    super('stream.video.sfu.event.ConnectionQualityChanged', [\n      {\n        no: 1,\n        name: 'connection_quality_updates',\n        kind: 'message',\n        repeat: 1 /*RepeatType.PACKED*/,\n        T: () => ConnectionQualityInfo,\n      },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.event.ConnectionQualityChanged\n */\nexport const ConnectionQualityChanged = new ConnectionQualityChanged$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ConnectionQualityInfo$Type extends MessageType<ConnectionQualityInfo> {\n  constructor() {\n    super('stream.video.sfu.event.ConnectionQualityInfo', [\n      { no: 1, name: 'user_id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      { no: 2, name: 'session_id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      {\n        no: 3,\n        name: 'connection_quality',\n        kind: 'enum',\n        T: () => [\n          'stream.video.sfu.models.ConnectionQuality',\n          ConnectionQuality,\n          'CONNECTION_QUALITY_',\n        ],\n      },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.event.ConnectionQualityInfo\n */\nexport const ConnectionQualityInfo = new ConnectionQualityInfo$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass DominantSpeakerChanged$Type extends MessageType<DominantSpeakerChanged> {\n  constructor() {\n    super('stream.video.sfu.event.DominantSpeakerChanged', [\n      { no: 1, name: 'user_id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      { no: 2, name: 'session_id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.event.DominantSpeakerChanged\n */\nexport const DominantSpeakerChanged = new DominantSpeakerChanged$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass AudioLevel$Type extends MessageType<AudioLevel> {\n  constructor() {\n    super('stream.video.sfu.event.AudioLevel', [\n      { no: 1, name: 'user_id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      { no: 2, name: 'session_id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      { no: 3, name: 'level', kind: 'scalar', T: 2 /*ScalarType.FLOAT*/ },\n      { no: 4, name: 'is_speaking', kind: 'scalar', T: 8 /*ScalarType.BOOL*/ },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.event.AudioLevel\n */\nexport const AudioLevel = new AudioLevel$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass AudioLevelChanged$Type extends MessageType<AudioLevelChanged> {\n  constructor() {\n    super('stream.video.sfu.event.AudioLevelChanged', [\n      {\n        no: 1,\n        name: 'audio_levels',\n        kind: 'message',\n        repeat: 1 /*RepeatType.PACKED*/,\n        T: () => AudioLevel,\n      },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.event.AudioLevelChanged\n */\nexport const AudioLevelChanged = new AudioLevelChanged$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass AudioSender$Type extends MessageType<AudioSender> {\n  constructor() {\n    super('stream.video.sfu.event.AudioSender', [\n      { no: 2, name: 'codec', kind: 'message', T: () => Codec },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.event.AudioSender\n */\nexport const AudioSender = new AudioSender$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass VideoLayerSetting$Type extends MessageType<VideoLayerSetting> {\n  constructor() {\n    super('stream.video.sfu.event.VideoLayerSetting', [\n      { no: 1, name: 'name', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n      { no: 2, name: 'active', kind: 'scalar', T: 8 /*ScalarType.BOOL*/ },\n      { no: 3, name: 'max_bitrate', kind: 'scalar', T: 5 /*ScalarType.INT32*/ },\n      {\n        no: 4,\n        name: 'scale_resolution_down_by',\n        kind: 'scalar',\n        T: 2 /*ScalarType.FLOAT*/,\n      },\n      { no: 6, name: 'codec', kind: 'message', T: () => Codec },\n      {\n        no: 7,\n        name: 'max_framerate',\n        kind: 'scalar',\n        T: 13 /*ScalarType.UINT32*/,\n      },\n      {\n        no: 8,\n        name: 'scalability_mode',\n        kind: 'scalar',\n        T: 9 /*ScalarType.STRING*/,\n      },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.event.VideoLayerSetting\n */\nexport const VideoLayerSetting = new VideoLayerSetting$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass VideoSender$Type extends MessageType<VideoSender> {\n  constructor() {\n    super('stream.video.sfu.event.VideoSender', [\n      { no: 2, name: 'codec', kind: 'message', T: () => Codec },\n      {\n        no: 3,\n        name: 'layers',\n        kind: 'message',\n        repeat: 1 /*RepeatType.PACKED*/,\n        T: () => VideoLayerSetting,\n      },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.event.VideoSender\n */\nexport const VideoSender = new VideoSender$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ChangePublishQuality$Type extends MessageType<ChangePublishQuality> {\n  constructor() {\n    super('stream.video.sfu.event.ChangePublishQuality', [\n      {\n        no: 1,\n        name: 'audio_senders',\n        kind: 'message',\n        repeat: 1 /*RepeatType.PACKED*/,\n        T: () => AudioSender,\n      },\n      {\n        no: 2,\n        name: 'video_senders',\n        kind: 'message',\n        repeat: 1 /*RepeatType.PACKED*/,\n        T: () => VideoSender,\n      },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.event.ChangePublishQuality\n */\nexport const ChangePublishQuality = new ChangePublishQuality$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass CallGrantsUpdated$Type extends MessageType<CallGrantsUpdated> {\n  constructor() {\n    super('stream.video.sfu.event.CallGrantsUpdated', [\n      { no: 1, name: 'current_grants', kind: 'message', T: () => CallGrants },\n      { no: 2, name: 'message', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.event.CallGrantsUpdated\n */\nexport const CallGrantsUpdated = new CallGrantsUpdated$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GoAway$Type extends MessageType<GoAway> {\n  constructor() {\n    super('stream.video.sfu.event.GoAway', [\n      {\n        no: 1,\n        name: 'reason',\n        kind: 'enum',\n        T: () => [\n          'stream.video.sfu.models.GoAwayReason',\n          GoAwayReason,\n          'GO_AWAY_REASON_',\n        ],\n      },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.event.GoAway\n */\nexport const GoAway = new GoAway$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass CallEnded$Type extends MessageType<CallEnded> {\n  constructor() {\n    super('stream.video.sfu.event.CallEnded', [\n      {\n        no: 1,\n        name: 'reason',\n        kind: 'enum',\n        T: () => [\n          'stream.video.sfu.models.CallEndedReason',\n          CallEndedReason,\n          'CALL_ENDED_REASON_',\n        ],\n      },\n    ]);\n  }\n}\n/**\n * @generated MessageType for protobuf message stream.video.sfu.event.CallEnded\n */\nexport const CallEnded = new CallEnded$Type();\n", "import type {\n  Participant,\n  VideoDimension,\n} from './gen/video/sfu/models/models';\nimport type {\n  JoinCallRequest,\n  MemberResponse,\n  OwnCapability,\n  ReactionResponse,\n} from './gen/coordinator';\nimport type { StreamClient } from './coordinator/connection/client';\nimport type { Comparator } from './sorting';\nimport type { StreamVideoWriteableStateStore } from './store';\nimport { AxiosError } from 'axios';\n\nexport type StreamReaction = Pick<\n  ReactionResponse,\n  'type' | 'emoji_code' | 'custom'\n>;\n\nexport enum VisibilityState {\n  UNKNOWN = 'UNKNOWN',\n  VISIBLE = 'VISIBLE',\n  INVISIBLE = 'INVISIBLE',\n}\n\nexport enum DebounceType {\n  IMMEDIATE = 20,\n  FAST = 100,\n  MEDIUM = 600,\n  SLOW = 1200,\n}\n\nexport interface StreamVideoParticipant extends Participant {\n  /**\n   * The participant's audio stream, if they are publishing audio and\n   * we have subscribed to it.\n   */\n  audioStream?: MediaStream;\n\n  /**\n   * The participant's video stream, if they are sharing their video,\n   * and we are subscribed to it.\n   */\n  videoStream?: MediaStream;\n\n  /**\n   * The participant's screen share stream, if they are sharing their screen,\n   * and we are subscribed to it.\n   */\n  screenShareStream?: MediaStream;\n\n  /**\n   * The participant's screen audio stream, if they are sharing their audio,\n   * and we are subscribed to it.\n   */\n  screenShareAudioStream?: MediaStream;\n\n  /**\n   * The preferred video dimensions for this participant.\n   * Set it to `undefined` to unsubscribe from this participant's video.\n   */\n  videoDimension?: VideoDimension;\n\n  /**\n   * The preferred screen share dimensions for this participant.\n   * Set it to `undefined` to unsubscribe from this participant's screen share.\n   */\n  screenShareDimension?: VideoDimension;\n\n  /**\n   * True if the participant is the local participant.\n   */\n  isLocalParticipant?: boolean;\n\n  /**\n   * The pin state of the participant.\n   */\n  pin?: ParticipantPin;\n\n  /**\n   * The last reaction this user has sent to this call.\n   * Integrators can batch/collect past reactions and show them to the UI.\n   */\n  reaction?: StreamReaction;\n\n  /**\n   * The visibility state of the participant's tracks within a defined viewport.\n   */\n  viewportVisibilityState?: Record<VideoTrackType, VisibilityState>;\n\n  /**\n   * The volume of the participant's audio stream (from 0 to 1).\n   * Set it to `undefined` to use the default volume.\n   *\n   * Note: this value is not applicable in React Native.\n   */\n  audioVolume?: number;\n}\n\nexport type VideoTrackType = 'videoTrack' | 'screenShareTrack';\nexport type AudioTrackType = 'audioTrack' | 'screenShareAudioTrack';\nexport type TrackMuteType =\n  | 'audio'\n  | 'video'\n  | 'screenshare'\n  | 'screenshare_audio';\n\n/**\n * Represents a participant's pin state.\n */\nexport type ParticipantPin = {\n  /**\n   * Set to true if the participant is pinned by the local user.\n   * False if the participant is pinned server-side, by the call moderator.\n   */\n  isLocalPin: boolean;\n\n  /**\n   * Timestamp when the participant is pinned.\n   */\n  pinnedAt: number;\n};\n\n/**\n * A partial representation of the StreamVideoParticipant.\n */\nexport type StreamVideoParticipantPatch = Partial<StreamVideoParticipant>;\n\n/**\n * A collection of {@link StreamVideoParticipantPatch} organized by sessionId.\n */\nexport type StreamVideoParticipantPatches = {\n  [sessionId: string]: StreamVideoParticipantPatch;\n};\n\nexport type SubscriptionChange = {\n  /**\n   * The video dimension to request.\n   * Set it to `undefined` in case you want to unsubscribe.\n   */\n  dimension: VideoDimension | undefined;\n};\n\nexport type SubscriptionChanges = {\n  [sessionId: string]: SubscriptionChange;\n};\n\n/**\n * A preferred codec to use when publishing a video track.\n * @internal\n */\nexport type PreferredCodec = 'vp8' | 'h264' | 'vp9' | 'av1';\n\n/**\n * A collection of track publication options.\n * @internal\n */\nexport type PublishOptions = {\n  /**\n   * The preferred codec to use when publishing the video stream.\n   */\n  preferredCodec?: PreferredCodec;\n  /**\n   * Force the codec to use when publishing the video stream.\n   * This will override the preferred codec and the internal codec selection logic.\n   * Use with caution.\n   */\n  forceCodec?: PreferredCodec;\n  /**\n   * The preferred scalability to use when publishing the video stream.\n   * Applicable only for SVC codecs.\n   */\n  scalabilityMode?: string;\n  /**\n   * The preferred bitrate to use when publishing the video stream.\n   */\n  preferredBitrate?: number;\n  /**\n   * The preferred downscale factor to use when publishing the video stream\n   * in simulcast mode (non-SVC).\n   */\n  bitrateDownscaleFactor?: number;\n  /**\n   * The maximum number of simulcast layers to use when publishing the video stream.\n   */\n  maxSimulcastLayers?: number;\n  /**\n   * Screen share settings.\n   */\n  screenShareSettings?: ScreenShareSettings;\n};\n\nexport type ScreenShareSettings = {\n  /**\n   * Limits the maximum framerate (in frames per second) of the screen share.\n   * Defaults to 30.\n   */\n  maxFramerate?: number;\n\n  /**\n   * Limits the maximum bitrate (in bits per second) of the screen share.\n   * Defaults to 3000000 (3Mbps).\n   */\n  maxBitrate?: number;\n};\n\nexport type CallLeaveOptions = {\n  /**\n   * If true, the caller will get a `call.rejected` event.\n   * Has an effect only if the call is in the `ringing` state.\n   *\n   * @default `false`.\n   */\n  reject?: boolean;\n\n  /**\n   * The reason for leaving the call.\n   * This will be sent to the backend and will be visible in the logs.\n   */\n  reason?: string;\n};\n\n/**\n * The options to pass to {@link Call} constructor.\n */\nexport type CallConstructor = {\n  /**\n   * The streamClient instance to use.\n   */\n  streamClient: StreamClient;\n\n  /**\n   * The Call type.\n   */\n  type: string;\n\n  /**\n   * The Call ID.\n   */\n  id: string;\n\n  /**\n   * An optional list of {@link MemberResponse} from the backend.\n   * If provided, the call will be initialized with the data from this object.\n   * This is useful when initializing a new \"pending call\" from an event.\n   */\n  members?: MemberResponse[];\n\n  /**\n   * An optional list of {@link OwnCapability} coming from the backed.\n   * If provided, the call will be initialized with the data from this object.\n   * This is useful when initializing a new \"pending call\" from an event.\n   */\n  ownCapabilities?: OwnCapability[];\n\n  /**\n   * Flags the call as a ringing call.\n   * @default false\n   */\n  ringing?: boolean;\n\n  /**\n   * Set to true if this call instance should receive updates from the backend.\n   *\n   * @default false.\n   */\n  watching?: boolean;\n\n  /**\n   * The default comparator to use when sorting participants.\n   */\n  sortParticipantsBy?: Comparator<StreamVideoParticipant>;\n\n  /**\n   * The state store of the client\n   */\n  clientStore: StreamVideoWriteableStateStore;\n};\n\n/**\n * The options to pass to {@link Call.join} method.\n */\nexport type JoinCallData = Omit<JoinCallRequest, 'location'>;\nexport { AxiosError };\n", "/* eslint-disable */\n// @generated by protobuf-ts 2.9.4 with parameter long_type_string,client_generic,server_none,eslint_disable,optimize_code_size\n// @generated from protobuf file \"video/sfu/signal_rpc/signal.proto\" (package \"stream.video.sfu.signal\", syntax proto3)\n// tslint:disable\nimport type {\n  RpcOptions,\n  RpcTransport,\n  ServiceInfo,\n  UnaryCall,\n} from '@protobuf-ts/runtime-rpc';\nimport { stackIntercept } from '@protobuf-ts/runtime-rpc';\nimport type {\n  ICERestartRequest,\n  ICERestartResponse,\n  ICETrickleResponse,\n  SendAnswerRequest,\n  SendAnswerResponse,\n  SendStatsRequest,\n  SendStatsResponse,\n  SetPublisherRequest,\n  SetPublisherResponse,\n  StartNoiseCancellationRequest,\n  StartNoiseCancellationResponse,\n  StopNoiseCancellationRequest,\n  StopNoiseCancellationResponse,\n  UpdateMuteStatesRequest,\n  UpdateMuteStatesResponse,\n  UpdateSubscriptionsRequest,\n  UpdateSubscriptionsResponse,\n} from './signal';\nimport { SignalServer } from './signal';\nimport type { ICETrickle } from '../models/models';\n\n/**\n * @generated from protobuf service stream.video.sfu.signal.SignalServer\n */\nexport interface ISignalServerClient {\n  /**\n   * SetPublisher sends the WebRTC offer for the peer connection used to publish A/V\n   *\n   * @generated from protobuf rpc: SetPublisher(stream.video.sfu.signal.SetPublisherRequest) returns (stream.video.sfu.signal.SetPublisherResponse);\n   */\n  setPublisher(\n    input: SetPublisherRequest,\n    options?: RpcOptions,\n  ): UnaryCall<SetPublisherRequest, SetPublisherResponse>;\n  /**\n   * answer is sent by the client to the SFU after receiving a subscriber_offer.\n   *\n   * @generated from protobuf rpc: SendAnswer(stream.video.sfu.signal.SendAnswerRequest) returns (stream.video.sfu.signal.SendAnswerResponse);\n   */\n  sendAnswer(\n    input: SendAnswerRequest,\n    options?: RpcOptions,\n  ): UnaryCall<SendAnswerRequest, SendAnswerResponse>;\n  /**\n   * SendICECandidate sends an ICE candidate to the client\n   *\n   * @generated from protobuf rpc: IceTrickle(stream.video.sfu.models.ICETrickle) returns (stream.video.sfu.signal.ICETrickleResponse);\n   */\n  iceTrickle(\n    input: ICETrickle,\n    options?: RpcOptions,\n  ): UnaryCall<ICETrickle, ICETrickleResponse>;\n  /**\n   * UpdateSubscribers is used to notify the SFU about the list of video subscriptions\n   * TODO: sync subscriptions based on this + update tracks using the dimension info sent by the user\n   *\n   * @generated from protobuf rpc: UpdateSubscriptions(stream.video.sfu.signal.UpdateSubscriptionsRequest) returns (stream.video.sfu.signal.UpdateSubscriptionsResponse);\n   */\n  updateSubscriptions(\n    input: UpdateSubscriptionsRequest,\n    options?: RpcOptions,\n  ): UnaryCall<UpdateSubscriptionsRequest, UpdateSubscriptionsResponse>;\n  /**\n   * @generated from protobuf rpc: UpdateMuteStates(stream.video.sfu.signal.UpdateMuteStatesRequest) returns (stream.video.sfu.signal.UpdateMuteStatesResponse);\n   */\n  updateMuteStates(\n    input: UpdateMuteStatesRequest,\n    options?: RpcOptions,\n  ): UnaryCall<UpdateMuteStatesRequest, UpdateMuteStatesResponse>;\n  /**\n   * @generated from protobuf rpc: IceRestart(stream.video.sfu.signal.ICERestartRequest) returns (stream.video.sfu.signal.ICERestartResponse);\n   */\n  iceRestart(\n    input: ICERestartRequest,\n    options?: RpcOptions,\n  ): UnaryCall<ICERestartRequest, ICERestartResponse>;\n  /**\n   * @generated from protobuf rpc: SendStats(stream.video.sfu.signal.SendStatsRequest) returns (stream.video.sfu.signal.SendStatsResponse);\n   */\n  sendStats(\n    input: SendStatsRequest,\n    options?: RpcOptions,\n  ): UnaryCall<SendStatsRequest, SendStatsResponse>;\n  /**\n   * @generated from protobuf rpc: StartNoiseCancellation(stream.video.sfu.signal.StartNoiseCancellationRequest) returns (stream.video.sfu.signal.StartNoiseCancellationResponse);\n   */\n  startNoiseCancellation(\n    input: StartNoiseCancellationRequest,\n    options?: RpcOptions,\n  ): UnaryCall<StartNoiseCancellationRequest, StartNoiseCancellationResponse>;\n  /**\n   * @generated from protobuf rpc: StopNoiseCancellation(stream.video.sfu.signal.StopNoiseCancellationRequest) returns (stream.video.sfu.signal.StopNoiseCancellationResponse);\n   */\n  stopNoiseCancellation(\n    input: StopNoiseCancellationRequest,\n    options?: RpcOptions,\n  ): UnaryCall<StopNoiseCancellationRequest, StopNoiseCancellationResponse>;\n}\n/**\n * @generated from protobuf service stream.video.sfu.signal.SignalServer\n */\nexport class SignalServerClient implements ISignalServerClient, ServiceInfo {\n  typeName = SignalServer.typeName;\n  methods = SignalServer.methods;\n  options = SignalServer.options;\n  constructor(private readonly _transport: RpcTransport) {}\n  /**\n   * SetPublisher sends the WebRTC offer for the peer connection used to publish A/V\n   *\n   * @generated from protobuf rpc: SetPublisher(stream.video.sfu.signal.SetPublisherRequest) returns (stream.video.sfu.signal.SetPublisherResponse);\n   */\n  setPublisher(\n    input: SetPublisherRequest,\n    options?: RpcOptions,\n  ): UnaryCall<SetPublisherRequest, SetPublisherResponse> {\n    const method = this.methods[0],\n      opt = this._transport.mergeOptions(options);\n    return stackIntercept<SetPublisherRequest, SetPublisherResponse>(\n      'unary',\n      this._transport,\n      method,\n      opt,\n      input,\n    );\n  }\n  /**\n   * answer is sent by the client to the SFU after receiving a subscriber_offer.\n   *\n   * @generated from protobuf rpc: SendAnswer(stream.video.sfu.signal.SendAnswerRequest) returns (stream.video.sfu.signal.SendAnswerResponse);\n   */\n  sendAnswer(\n    input: SendAnswerRequest,\n    options?: RpcOptions,\n  ): UnaryCall<SendAnswerRequest, SendAnswerResponse> {\n    const method = this.methods[1],\n      opt = this._transport.mergeOptions(options);\n    return stackIntercept<SendAnswerRequest, SendAnswerResponse>(\n      'unary',\n      this._transport,\n      method,\n      opt,\n      input,\n    );\n  }\n  /**\n   * SendICECandidate sends an ICE candidate to the client\n   *\n   * @generated from protobuf rpc: IceTrickle(stream.video.sfu.models.ICETrickle) returns (stream.video.sfu.signal.ICETrickleResponse);\n   */\n  iceTrickle(\n    input: ICETrickle,\n    options?: RpcOptions,\n  ): UnaryCall<ICETrickle, ICETrickleResponse> {\n    const method = this.methods[2],\n      opt = this._transport.mergeOptions(options);\n    return stackIntercept<ICETrickle, ICETrickleResponse>(\n      'unary',\n      this._transport,\n      method,\n      opt,\n      input,\n    );\n  }\n  /**\n   * UpdateSubscribers is used to notify the SFU about the list of video subscriptions\n   * TODO: sync subscriptions based on this + update tracks using the dimension info sent by the user\n   *\n   * @generated from protobuf rpc: UpdateSubscriptions(stream.video.sfu.signal.UpdateSubscriptionsRequest) returns (stream.video.sfu.signal.UpdateSubscriptionsResponse);\n   */\n  updateSubscriptions(\n    input: UpdateSubscriptionsRequest,\n    options?: RpcOptions,\n  ): UnaryCall<UpdateSubscriptionsRequest, UpdateSubscriptionsResponse> {\n    const method = this.methods[3],\n      opt = this._transport.mergeOptions(options);\n    return stackIntercept<\n      UpdateSubscriptionsRequest,\n      UpdateSubscriptionsResponse\n    >('unary', this._transport, method, opt, input);\n  }\n  /**\n   * @generated from protobuf rpc: UpdateMuteStates(stream.video.sfu.signal.UpdateMuteStatesRequest) returns (stream.video.sfu.signal.UpdateMuteStatesResponse);\n   */\n  updateMuteStates(\n    input: UpdateMuteStatesRequest,\n    options?: RpcOptions,\n  ): UnaryCall<UpdateMuteStatesRequest, UpdateMuteStatesResponse> {\n    const method = this.methods[4],\n      opt = this._transport.mergeOptions(options);\n    return stackIntercept<UpdateMuteStatesRequest, UpdateMuteStatesResponse>(\n      'unary',\n      this._transport,\n      method,\n      opt,\n      input,\n    );\n  }\n  /**\n   * @generated from protobuf rpc: IceRestart(stream.video.sfu.signal.ICERestartRequest) returns (stream.video.sfu.signal.ICERestartResponse);\n   */\n  iceRestart(\n    input: ICERestartRequest,\n    options?: RpcOptions,\n  ): UnaryCall<ICERestartRequest, ICERestartResponse> {\n    const method = this.methods[5],\n      opt = this._transport.mergeOptions(options);\n    return stackIntercept<ICERestartRequest, ICERestartResponse>(\n      'unary',\n      this._transport,\n      method,\n      opt,\n      input,\n    );\n  }\n  /**\n   * @generated from protobuf rpc: SendStats(stream.video.sfu.signal.SendStatsRequest) returns (stream.video.sfu.signal.SendStatsResponse);\n   */\n  sendStats(\n    input: SendStatsRequest,\n    options?: RpcOptions,\n  ): UnaryCall<SendStatsRequest, SendStatsResponse> {\n    const method = this.methods[6],\n      opt = this._transport.mergeOptions(options);\n    return stackIntercept<SendStatsRequest, SendStatsResponse>(\n      'unary',\n      this._transport,\n      method,\n      opt,\n      input,\n    );\n  }\n  /**\n   * @generated from protobuf rpc: StartNoiseCancellation(stream.video.sfu.signal.StartNoiseCancellationRequest) returns (stream.video.sfu.signal.StartNoiseCancellationResponse);\n   */\n  startNoiseCancellation(\n    input: StartNoiseCancellationRequest,\n    options?: RpcOptions,\n  ): UnaryCall<StartNoiseCancellationRequest, StartNoiseCancellationResponse> {\n    const method = this.methods[7],\n      opt = this._transport.mergeOptions(options);\n    return stackIntercept<\n      StartNoiseCancellationRequest,\n      StartNoiseCancellationResponse\n    >('unary', this._transport, method, opt, input);\n  }\n  /**\n   * @generated from protobuf rpc: StopNoiseCancellation(stream.video.sfu.signal.StopNoiseCancellationRequest) returns (stream.video.sfu.signal.StopNoiseCancellationResponse);\n   */\n  stopNoiseCancellation(\n    input: StopNoiseCancellationRequest,\n    options?: RpcOptions,\n  ): UnaryCall<StopNoiseCancellationRequest, StopNoiseCancellationResponse> {\n    const method = this.methods[8],\n      opt = this._transport.mergeOptions(options);\n    return stackIntercept<\n      StopNoiseCancellationRequest,\n      StopNoiseCancellationResponse\n    >('unary', this._transport, method, opt, input);\n  }\n}\n", "import {\n  MethodInfo,\n  NextUnaryFn,\n  RpcInterceptor,\n  RpcOptions,\n  UnaryCall,\n} from '@protobuf-ts/runtime-rpc';\nimport {\n  TwirpFetchTransport,\n  TwirpOptions,\n} from '@protobuf-ts/twirp-transport';\nimport { SignalServerClient } from '../gen/video/sfu/signal_rpc/signal.client';\nimport { Logger, LogLevel } from '../coordinator/connection/types';\n\nconst defaultOptions: TwirpOptions = {\n  baseUrl: '',\n  sendJson: true,\n  timeout: 5 * 1000, // ms.\n  jsonOptions: {\n    ignoreUnknownFields: true,\n  },\n};\n\nexport const withHeaders = (\n  headers: Record<string, string>,\n): RpcInterceptor => {\n  return {\n    interceptUnary(\n      next: NextUnaryFn,\n      method: MethodInfo,\n      input: object,\n      options: RpcOptions,\n    ): UnaryCall {\n      options.meta = { ...options.meta, ...headers };\n      return next(method, input, options);\n    },\n  };\n};\n\nexport const withRequestLogger = (\n  logger: Logger,\n  level: LogLevel,\n): RpcInterceptor => {\n  return {\n    interceptUnary: (\n      next: NextUnaryFn,\n      method: MethodInfo,\n      input: object,\n      options: RpcOptions,\n    ): UnaryCall => {\n      logger(level, `Calling SFU RPC method ${method.name}`, {\n        input,\n        options,\n      });\n      return next(method, input, options);\n    },\n  };\n};\n\n/**\n * Creates new SignalServerClient instance.\n *\n * @param options the twirp options.\n */\nexport const createSignalClient = (options?: TwirpOptions) => {\n  const transport = new TwirpFetchTransport({\n    ...defaultOptions,\n    ...options,\n  });\n\n  return new SignalServerClient(transport);\n};\n", "import { Logger } from './types';\n\nexport const sleep = (m: number): Promise<void> =>\n  new Promise((r) => setTimeout(r, m));\n\nexport function isFunction<T>(value: Function | T): value is Function {\n  return (\n    value &&\n    (Object.prototype.toString.call(value) === '[object Function]' ||\n      'function' === typeof value ||\n      value instanceof Function)\n  );\n}\n\n/**\n * A map of known error codes.\n */\nexport const KnownCodes = {\n  TOKEN_EXPIRED: 40,\n  WS_CLOSED_SUCCESS: 1000,\n  WS_CLOSED_ABRUPTLY: 1006,\n  WS_POLICY_VIOLATION: 1008,\n};\n\n/**\n * retryInterval - A retry interval which increases acc to number of failures\n *\n * @return {number} Duration to wait in milliseconds\n */\nexport function retryInterval(numberOfFailures: number) {\n  // try to reconnect in 0.25-5 seconds (random to spread out the load from failures)\n  const max = Math.min(500 + numberOfFailures * 2000, 5000);\n  const min = Math.min(Math.max(250, (numberOfFailures - 1) * 2000), 5000);\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nexport function randomId() {\n  return generateUUIDv4();\n}\n\nfunction hex(bytes: Uint8Array): string {\n  let s = '';\n  for (let i = 0; i < bytes.length; i++) {\n    s += bytes[i].toString(16).padStart(2, '0');\n  }\n  return s;\n}\n\n// https://tools.ietf.org/html/rfc4122\nexport function generateUUIDv4() {\n  const bytes = getRandomBytes(16);\n  bytes[6] = (bytes[6] & 0x0f) | 0x40; // version\n  bytes[8] = (bytes[8] & 0xbf) | 0x80; // variant\n\n  return (\n    hex(bytes.subarray(0, 4)) +\n    '-' +\n    hex(bytes.subarray(4, 6)) +\n    '-' +\n    hex(bytes.subarray(6, 8)) +\n    '-' +\n    hex(bytes.subarray(8, 10)) +\n    '-' +\n    hex(bytes.subarray(10, 16))\n  );\n}\n\nfunction getRandomValuesWithMathRandom(bytes: Uint8Array): void {\n  const max = Math.pow(2, (8 * bytes.byteLength) / bytes.length);\n  for (let i = 0; i < bytes.length; i++) {\n    bytes[i] = Math.random() * max;\n  }\n}\ndeclare const msCrypto: Crypto;\n\nconst getRandomValues = (() => {\n  if (\n    typeof crypto !== 'undefined' &&\n    typeof crypto?.getRandomValues !== 'undefined'\n  ) {\n    return crypto.getRandomValues.bind(crypto);\n  } else if (typeof msCrypto !== 'undefined') {\n    return msCrypto.getRandomValues.bind(msCrypto);\n  } else {\n    return getRandomValuesWithMathRandom;\n  }\n})();\n\nfunction getRandomBytes(length: number): Uint8Array {\n  const bytes = new Uint8Array(length);\n  getRandomValues(bytes);\n  return bytes;\n}\n\nexport function convertErrorToJson(err: Error) {\n  const jsonObj = {} as Record<string, unknown>;\n\n  if (!err) return jsonObj;\n\n  try {\n    Object.getOwnPropertyNames(err).forEach((key) => {\n      jsonObj[key] = Object.getOwnPropertyDescriptor(err, key);\n    });\n  } catch (_) {\n    return {\n      error: 'failed to serialize the error',\n    };\n  }\n\n  return jsonObj;\n}\n\n/**\n * Informs if a promise is yet to be resolved or rejected\n */\nexport async function isPromisePending<T>(promise: Promise<T>) {\n  const emptyObj = {};\n  return Promise.race([promise, emptyObj]).then(\n    (value) => (value === emptyObj ? true : false),\n    () => false,\n  );\n}\n\n/**\n * isOnline safely return the navigator.online value for browser env\n * if navigator is not in global object, it always return true\n */\nexport function isOnline(logger: Logger) {\n  const nav =\n    typeof navigator !== 'undefined'\n      ? navigator\n      : typeof window !== 'undefined' && window.navigator\n        ? window.navigator\n        : undefined;\n\n  if (!nav) {\n    logger(\n      'warn',\n      'isOnline failed to access window.navigator and assume browser is online',\n    );\n    return true;\n  }\n\n  // RN navigator has undefined for onLine\n  if (typeof nav.onLine !== 'boolean') {\n    return true;\n  }\n\n  return nav.onLine;\n}\n\n/**\n * listenForConnectionChanges - Adds an event listener fired on browser going online or offline\n */\nexport function addConnectionEventListeners(cb: (e: Event) => void) {\n  if (typeof window !== 'undefined' && window.addEventListener) {\n    window.addEventListener('offline', cb);\n    window.addEventListener('online', cb);\n  }\n}\n\nexport function removeConnectionEventListeners(cb: (e: Event) => void) {\n  if (typeof window !== 'undefined' && window.removeEventListener) {\n    window.removeEventListener('offline', cb);\n    window.removeEventListener('online', cb);\n  }\n}\n", "/**\n * Checks whether we are using React Native\n */\nexport const isReactNative = () => {\n  if (typeof navigator === 'undefined') return false;\n  return navigator.product?.toLowerCase() === 'reactnative';\n};\n", "import { Logger, LogLevel } from './coordinator/connection/types';\nimport { isReactNative } from './helpers/platforms';\n\n// log levels, sorted by verbosity\nexport const logLevels: Record<LogLevel, number> = Object.freeze({\n  trace: 0,\n  debug: 1,\n  info: 2,\n  warn: 3,\n  error: 4,\n});\n\nlet logger: Logger | undefined;\nlet level: LogLevel = 'info';\n\nexport const logToConsole: Logger = (logLevel, message, ...args) => {\n  let logMethod;\n  switch (logLevel) {\n    case 'error':\n      if (isReactNative()) {\n        message = `ERROR: ${message}`;\n        logMethod = console.info;\n        break;\n      }\n      logMethod = console.error;\n      break;\n    case 'warn':\n      if (isReactNative()) {\n        message = `WARN: ${message}`;\n        logMethod = console.info;\n        break;\n      }\n      logMethod = console.warn;\n      break;\n    case 'info':\n      logMethod = console.info;\n      break;\n    case 'trace':\n      logMethod = console.trace;\n      break;\n    default:\n      logMethod = console.log;\n      break;\n  }\n\n  logMethod(message, ...args);\n};\n\nexport const setLogger = (l: Logger, lvl?: LogLevel) => {\n  logger = l;\n  if (lvl) {\n    setLogLevel(lvl);\n  }\n};\n\nexport const setLogLevel = (l: LogLevel) => {\n  level = l;\n};\n\nexport const getLogLevel = (): LogLevel => level;\n\nexport const getLogger = (withTags?: string[]) => {\n  const loggerMethod = logger || logToConsole;\n  const tags = (withTags || []).filter(Boolean).join(':');\n  const result: Logger = (logLevel, message, ...args) => {\n    if (logLevels[logLevel] >= logLevels[level]) {\n      loggerMethod(logLevel, `[${tags}]: ${message}`, ...args);\n    }\n  };\n  return result;\n};\n", "import {\n  FinishedUnaryCall,\n  RpcError,\n  UnaryCall,\n} from '@protobuf-ts/runtime-rpc';\nimport { TwirpErrorCode } from '@protobuf-ts/twirp-transport';\nimport { retryInterval, sleep } from '../coordinator/connection/utils';\nimport { Error as SfuError } from '../gen/video/sfu/models/models';\nimport { getLogger } from '../logger';\n\n/**\n * An internal interface which asserts that \"retryable\" SFU responses\n * contain a field called \"error\".\n * Ideally, this should be coming from the Protobuf definitions.\n */\nexport interface SfuResponseWithError {\n  /**\n   * An optional error field which should be present in all SFU responses.\n   */\n  error?: SfuError;\n}\n\n/**\n * Creates a closure which wraps the given RPC call and retries invoking\n * the RPC until it succeeds or the maximum number of retries is reached.\n *\n * For each retry, there would be a delay to avoid request bursts toward the SFU.\n *\n * @param rpc the closure around the RPC call to execute.\n * @param signal the signal to abort the RPC call and retries loop.\n */\nexport const retryable = async <\n  I extends object,\n  O extends SfuResponseWithError,\n>(\n  rpc: () => UnaryCall<I, O>,\n  signal?: AbortSignal,\n): Promise<FinishedUnaryCall<I, O>> => {\n  let attempt = 0;\n  let result: FinishedUnaryCall<I, O> | undefined = undefined;\n  do {\n    if (attempt > 0) await sleep(retryInterval(attempt));\n    try {\n      result = await rpc();\n    } catch (err) {\n      const isRequestCancelled =\n        err instanceof RpcError &&\n        err.code === TwirpErrorCode[TwirpErrorCode.cancelled];\n      const isAborted = signal?.aborted ?? false;\n      if (isRequestCancelled || isAborted) throw err;\n      getLogger(['sfu-client', 'rpc'])('debug', `rpc failed (${attempt})`, err);\n      attempt++;\n    }\n  } while (!result || result.response.error?.shouldRetry);\n\n  return result;\n};\n", "import {\n  ClientDetails,\n  Device,\n  OS,\n  Sdk,\n  SdkType,\n} from './gen/video/sfu/models/models';\nimport { isReactNative } from './helpers/platforms';\nimport { UAParser } from 'ua-parser-js';\n\ntype WebRTCInfoType = {\n  version: string;\n};\n\nconst version = process.env.PKG_VERSION || '0.0.0';\nconst [major, minor, patch] = version.split('.');\n\nlet sdkInfo: Sdk | undefined = {\n  type: SdkType.PLAIN_JAVASCRIPT,\n  major,\n  minor,\n  patch,\n};\n\nlet osInfo: OS | undefined;\nlet deviceInfo: Device | undefined;\nlet webRtcInfo: WebRTCInfoType | undefined;\n\nexport const setSdkInfo = (info: Sdk) => {\n  sdkInfo = info;\n};\n\nexport const getSdkInfo = () => {\n  return sdkInfo;\n};\n\nexport const setOSInfo = (info: OS) => {\n  osInfo = info;\n};\n\nexport const getOSInfo = () => {\n  return osInfo;\n};\n\nexport const setDeviceInfo = (info: Device) => {\n  deviceInfo = info;\n};\n\nexport const getDeviceInfo = () => {\n  return deviceInfo;\n};\n\nexport const getWebRTCInfo = () => {\n  return webRtcInfo;\n};\n\nexport const setWebRTCInfo = (info: WebRTCInfoType) => {\n  webRtcInfo = info;\n};\n\nexport type LocalClientDetailsType = ClientDetails & {\n  webRTCInfo?: WebRTCInfoType;\n};\n\nexport const getClientDetails = (): LocalClientDetailsType => {\n  if (isReactNative()) {\n    // Since RN doesn't support web, sharing browser info is not required\n    return {\n      sdk: getSdkInfo(),\n      os: getOSInfo(),\n      device: getDeviceInfo(),\n    };\n  }\n\n  const userAgent = new UAParser(navigator.userAgent);\n  const { browser, os, device, cpu } = userAgent.getResult();\n  return {\n    sdk: getSdkInfo(),\n    browser: {\n      name: browser.name || navigator.userAgent,\n      version: browser.version || '',\n    },\n    os: {\n      name: os.name || '',\n      version: os.version || '',\n      architecture: cpu.architecture || '',\n    },\n    device: {\n      name: [device.vendor, device.model, device.type]\n        .filter(Boolean)\n        .join(' '),\n      version: '',\n    },\n  };\n};\n", "/**\n * Checks whether the current browser is Safari.\n */\nexport const isSafari = () => {\n  if (typeof navigator === 'undefined') return false;\n  return /^((?!chrome|android).)*safari/i.test(navigator.userAgent || '');\n};\n\n/**\n * Checks whether the current browser is Firefox.\n */\nexport const isFirefox = () => {\n  if (typeof navigator === 'undefined') return false;\n  return navigator.userAgent?.includes('Firefox');\n};\n\n/**\n * Checks whether the current browser is Google Chrome.\n */\nexport const isChrome = () => {\n  if (typeof navigator === 'undefined') return false;\n  return navigator.userAgent?.includes('Chrome');\n};\n", "import { getOSInfo } from '../client-details';\nimport { isReactNative } from '../helpers/platforms';\nimport { isFirefox, isSafari } from '../helpers/browsers';\nimport type { PreferredCodec } from '../types';\n\n/**\n * Returns back a list of sorted codecs, with the preferred codec first.\n *\n * @param kind the kind of codec to get.\n * @param preferredCodec the codec to prioritize (vp8, h264, vp9, av1...).\n * @param codecToRemove the codec to exclude from the list.\n */\nexport const getPreferredCodecs = (\n  kind: 'audio' | 'video',\n  preferredCodec: string,\n  codecToRemove?: string,\n): RTCRtpCodecCapability[] | undefined => {\n  if (!('getCapabilities' in RTCRtpReceiver)) return;\n\n  const capabilities = RTCRtpReceiver.getCapabilities(kind);\n  if (!capabilities) return;\n\n  const preferred: RTCRtpCodecCapability[] = [];\n  const partiallyPreferred: RTCRtpCodecCapability[] = [];\n  const unpreferred: RTCRtpCodecCapability[] = [];\n\n  const preferredCodecMimeType = `${kind}/${preferredCodec.toLowerCase()}`;\n  const codecToRemoveMimeType =\n    codecToRemove && `${kind}/${codecToRemove.toLowerCase()}`;\n\n  for (const codec of capabilities.codecs) {\n    const codecMimeType = codec.mimeType.toLowerCase();\n\n    const shouldRemoveCodec = codecMimeType === codecToRemoveMimeType;\n    if (shouldRemoveCodec) continue; // skip this codec\n\n    const isPreferredCodec = codecMimeType === preferredCodecMimeType;\n    if (!isPreferredCodec) {\n      unpreferred.push(codec);\n      continue;\n    }\n\n    // h264 is a special case, we want to prioritize the baseline codec with\n    // profile-level-id is 42e01f and packetization-mode=0 for maximum\n    // cross-browser compatibility.\n    // this branch covers the other cases, such as vp8.\n    if (codecMimeType !== 'video/h264') {\n      preferred.push(codec);\n      continue;\n    }\n\n    const sdpFmtpLine = codec.sdpFmtpLine;\n    if (!sdpFmtpLine || !sdpFmtpLine.includes('profile-level-id=42e01f')) {\n      // this is not the baseline h264 codec, prioritize it lower\n      partiallyPreferred.push(codec);\n      continue;\n    }\n\n    // packetization-mode mode is optional; when not present it defaults to 0:\n    // https://datatracker.ietf.org/doc/html/rfc6184#section-6.2\n    if (\n      sdpFmtpLine.includes('packetization-mode=0') ||\n      !sdpFmtpLine.includes('packetization-mode')\n    ) {\n      preferred.unshift(codec);\n    } else {\n      preferred.push(codec);\n    }\n  }\n\n  // return a sorted list of codecs, with the preferred codecs first\n  return [...preferred, ...partiallyPreferred, ...unpreferred];\n};\n\n/**\n * Returns a generic SDP for the given direction.\n * We use this SDP to send it as part of our JoinRequest so that the SFU\n * can use it to determine client's codec capabilities.\n *\n * @param direction the direction of the transceiver.\n */\nexport const getGenericSdp = async (direction: RTCRtpTransceiverDirection) => {\n  const tempPc = new RTCPeerConnection();\n  tempPc.addTransceiver('video', { direction });\n  tempPc.addTransceiver('audio', { direction });\n\n  const offer = await tempPc.createOffer();\n  const sdp = offer.sdp ?? '';\n\n  tempPc.getTransceivers().forEach((t) => {\n    t.stop?.();\n  });\n  tempPc.close();\n  return sdp;\n};\n\n/**\n * Returns the optimal video codec for the device.\n */\nexport const getOptimalVideoCodec = (\n  preferredCodec: PreferredCodec | undefined,\n): PreferredCodec => {\n  if (isReactNative()) {\n    const os = getOSInfo()?.name.toLowerCase();\n    if (os === 'android') return preferredOr(preferredCodec, 'vp8');\n    if (os === 'ios' || os === 'ipados') return 'h264';\n    return preferredOr(preferredCodec, 'h264');\n  }\n  if (isSafari()) return 'h264';\n  if (isFirefox()) return 'vp8';\n  return preferredOr(preferredCodec, 'vp8');\n};\n\n/**\n * Determines if the platform supports the preferred codec.\n * If not, it returns the fallback codec.\n */\nconst preferredOr = (\n  codec: PreferredCodec | undefined,\n  fallback: PreferredCodec,\n): PreferredCodec => {\n  if (!codec) return fallback;\n  if (!('getCapabilities' in RTCRtpSender)) return fallback;\n  const capabilities = RTCRtpSender.getCapabilities('video');\n  if (!capabilities) return fallback;\n\n  // Safari and Firefox do not have a good support encoding to SVC codecs,\n  // so we disable it for them.\n  if (isSvcCodec(codec) && (isSafari() || isFirefox())) return fallback;\n\n  const { codecs } = capabilities;\n  const codecMimeType = `video/${codec}`.toLowerCase();\n  return codecs.some((c) => c.mimeType.toLowerCase() === codecMimeType)\n    ? codec\n    : fallback;\n};\n\n/**\n * Returns whether the codec is an SVC codec.\n *\n * @param codecOrMimeType the codec to check.\n */\nexport const isSvcCodec = (codecOrMimeType: string | undefined) => {\n  if (!codecOrMimeType) return false;\n  codecOrMimeType = codecOrMimeType.toLowerCase();\n  return (\n    codecOrMimeType === 'vp9' ||\n    codecOrMimeType === 'av1' ||\n    codecOrMimeType === 'video/vp9' ||\n    codecOrMimeType === 'video/av1'\n  );\n};\n", "import { CallEventListener, EventTypes } from '../coordinator/connection/types';\nimport type { SfuEvent } from '../gen/video/sfu/event/events';\nimport { getLogger } from '../logger';\n\nexport type SfuEventKinds = NonNullable<SfuEvent['eventPayload']['oneofKind']>;\nexport type AllSfuEvents = {\n  [K in SfuEventKinds]: K extends keyof Extract<\n    SfuEvent['eventPayload'],\n    { oneofKind: K }\n  >\n    ? Extract<SfuEvent['eventPayload'], { oneofKind: K }>[K]\n    : never;\n};\n\nexport type DispatchableMessage<K extends SfuEventKinds> = {\n  eventPayload: {\n    oneofKind: K;\n  } & {\n    [Key in K]: AllSfuEvents[Key];\n  };\n};\n\nconst sfuEventKinds: { [key in SfuEventKinds]: undefined } = {\n  subscriberOffer: undefined,\n  publisherAnswer: undefined,\n  connectionQualityChanged: undefined,\n  audioLevelChanged: undefined,\n  iceTrickle: undefined,\n  changePublishQuality: undefined,\n  participantJoined: undefined,\n  participantLeft: undefined,\n  dominantSpeakerChanged: undefined,\n  joinResponse: undefined,\n  healthCheckResponse: undefined,\n  trackPublished: undefined,\n  trackUnpublished: undefined,\n  error: undefined,\n  callGrantsUpdated: undefined,\n  goAway: undefined,\n  iceRestart: undefined,\n  pinsUpdated: undefined,\n  callEnded: undefined,\n  participantUpdated: undefined,\n  participantMigrationComplete: undefined,\n};\n\nexport const isSfuEvent = (\n  eventName: SfuEventKinds | EventTypes,\n): eventName is SfuEventKinds => {\n  return Object.prototype.hasOwnProperty.call(sfuEventKinds, eventName);\n};\n\nexport class Dispatcher {\n  private readonly logger = getLogger(['Dispatcher']);\n  private subscribers: Partial<\n    Record<SfuEventKinds, CallEventListener<any>[] | undefined>\n  > = {};\n\n  dispatch = <K extends SfuEventKinds>(\n    message: DispatchableMessage<K>,\n    logTag: string = '0',\n  ) => {\n    const eventKind = message.eventPayload.oneofKind;\n    if (!eventKind) return;\n    const payload = message.eventPayload[eventKind];\n    this.logger('debug', `Dispatching ${eventKind}, tag=${logTag}`, payload);\n    const listeners = this.subscribers[eventKind];\n    if (!listeners) return;\n    for (const fn of listeners) {\n      try {\n        fn(payload);\n      } catch (e) {\n        this.logger('warn', 'Listener failed with error', e);\n      }\n    }\n  };\n\n  on = <E extends keyof AllSfuEvents>(\n    eventName: E,\n    fn: CallEventListener<E>,\n  ) => {\n    (this.subscribers[eventName] ??= []).push(fn as never);\n    return () => {\n      this.off(eventName, fn);\n    };\n  };\n\n  off = <E extends keyof AllSfuEvents>(\n    eventName: E,\n    fn: CallEventListener<E>,\n  ) => {\n    this.subscribers[eventName] = (this.subscribers[eventName] || []).filter(\n      (f) => f !== fn,\n    );\n  };\n\n  offAll = (eventName?: SfuEventKinds) => {\n    if (eventName) {\n      this.subscribers[eventName] = [];\n    } else {\n      this.subscribers = {};\n    }\n  };\n}\n", "import { ReplaySubject } from 'rxjs';\nimport { ICETrickle } from '../gen/video/sfu/event/events';\nimport { PeerType } from '../gen/video/sfu/models/models';\nimport { getLogger } from '../logger';\n\n/**\n * A buffer for ICE Candidates. Used for ICE Trickle:\n * - https://bloggeek.me/webrtcglossary/trickle-ice/\n */\nexport class IceTrickleBuffer {\n  readonly subscriberCandidates = new ReplaySubject<ICETrickle>();\n  readonly publisherCandidates = new ReplaySubject<ICETrickle>();\n\n  push = (iceTrickle: ICETrickle) => {\n    if (iceTrickle.peerType === PeerType.SUBSCRIBER) {\n      this.subscriberCandidates.next(iceTrickle);\n    } else if (iceTrickle.peerType === PeerType.PUBLISHER_UNSPECIFIED) {\n      this.publisherCandidates.next(iceTrickle);\n    } else {\n      const logger = getLogger(['sfu-client']);\n      logger('warn', `ICETrickle, Unknown peer type`, iceTrickle);\n    }\n  };\n}\n", "import { ICETrickle } from '../../gen/video/sfu/models/models';\n\nexport function getIceCandidate(\n  candidate: RTCIceCandidate,\n): ICETrickle['iceCandidate'] {\n  if (!candidate.usernameFragment) {\n    // react-native-webrtc doesn't include usernameFragment in the candidate\n    const splittedCandidate = candidate.candidate.split(' ');\n    const ufragIndex =\n      splittedCandidate.findIndex((s: string) => s === 'ufrag') + 1;\n    const usernameFragment = splittedCandidate[ufragIndex];\n    return JSON.stringify({ ...candidate, usernameFragment });\n  } else {\n    return JSON.stringify(candidate.toJSON());\n  }\n}\n", "import { PreferredCodec } from '../types';\n\nconst bitrateLookupTable: Record<\n  PreferredCodec,\n  Record<number | 'default', number | undefined> | undefined\n> = {\n  h264: {\n    2160: 5_000_000,\n    1440: 3_000_000,\n    1080: 2_000_000,\n    720: 1_250_000,\n    540: 750_000,\n    360: 400_000,\n    default: 1_250_000,\n  },\n  vp8: {\n    2160: 5_000_000,\n    1440: 2_750_000,\n    1080: 2_000_000,\n    720: 1_250_000,\n    540: 600_000,\n    360: 350_000,\n    default: 1_250_000,\n  },\n  vp9: {\n    2160: 3_000_000,\n    1440: 2_000_000,\n    1080: 1_500_000,\n    720: 1_250_000,\n    540: 500_000,\n    360: 275_000,\n    default: 1_250_000,\n  },\n  av1: {\n    2160: 2_000_000,\n    1440: 1_550_000,\n    1080: 1_000_000,\n    720: 600_000,\n    540: 350_000,\n    360: 200_000,\n    default: 600_000,\n  },\n};\n\nexport const getOptimalBitrate = (\n  codec: PreferredCodec,\n  frameHeight: number,\n): number => {\n  const codecLookup = bitrateLookupTable[codec];\n  if (!codecLookup) throw new Error(`Unknown codec: ${codec}`);\n\n  let bitrate = codecLookup[frameHeight];\n  if (!bitrate) {\n    const keys = Object.keys(codecLookup).map(Number);\n    const nearest = keys.reduce((a, b) =>\n      Math.abs(b - frameHeight) < Math.abs(a - frameHeight) ? b : a,\n    );\n    bitrate = codecLookup[nearest];\n  }\n  return bitrate ?? codecLookup.default!;\n};\n", "import { PreferredCodec, PublishOptions } from '../types';\nimport { TargetResolutionResponse } from '../gen/shims';\nimport { isSvcCodec } from './codecs';\nimport { getOptimalBitrate } from './bitrateLookup';\nimport { VideoQuality } from '../gen/video/sfu/models/models';\n\nexport type OptimalVideoLayer = RTCRtpEncodingParameters & {\n  width: number;\n  height: number;\n  // NOTE OL: should be part of RTCRtpEncodingParameters\n  scalabilityMode?: string;\n};\n\nconst DEFAULT_BITRATE = 1250000;\nconst defaultTargetResolution: TargetResolutionResponse = {\n  bitrate: DEFAULT_BITRATE,\n  width: 1280,\n  height: 720,\n};\n\nconst defaultBitratePerRid: Record<string, number> = {\n  q: 300000,\n  h: 750000,\n  f: DEFAULT_BITRATE,\n};\n\n/**\n * In SVC, we need to send only one video encoding (layer).\n * this layer will have the additional spatial and temporal layers\n * defined via the scalabilityMode property.\n *\n * @param layers the layers to process.\n */\nexport const toSvcEncodings = (layers: OptimalVideoLayer[] | undefined) => {\n  // we take the `f` layer, and we rename it to `q`.\n  return layers?.filter((l) => l.rid === 'f').map((l) => ({ ...l, rid: 'q' }));\n};\n\n/**\n * Converts the rid to a video quality.\n */\nexport const ridToVideoQuality = (rid: string): VideoQuality => {\n  return rid === 'q'\n    ? VideoQuality.LOW_UNSPECIFIED\n    : rid === 'h'\n      ? VideoQuality.MID\n      : VideoQuality.HIGH; // default to HIGH\n};\n\n/**\n * Determines the most optimal video layers for simulcasting\n * for the given track.\n *\n * @param videoTrack the video track to find optimal layers for.\n * @param targetResolution the expected target resolution.\n * @param codecInUse the codec in use.\n * @param publishOptions the publish options for the track.\n */\nexport const findOptimalVideoLayers = (\n  videoTrack: MediaStreamTrack,\n  targetResolution: TargetResolutionResponse = defaultTargetResolution,\n  codecInUse?: PreferredCodec,\n  publishOptions?: PublishOptions,\n) => {\n  const optimalVideoLayers: OptimalVideoLayer[] = [];\n  const settings = videoTrack.getSettings();\n  const { width = 0, height = 0 } = settings;\n  const {\n    scalabilityMode,\n    bitrateDownscaleFactor = 2,\n    maxSimulcastLayers = 3,\n  } = publishOptions || {};\n  const maxBitrate = getComputedMaxBitrate(\n    targetResolution,\n    width,\n    height,\n    codecInUse,\n    publishOptions,\n  );\n  let downscaleFactor = 1;\n  let bitrateFactor = 1;\n  const svcCodec = isSvcCodec(codecInUse);\n  const totalLayers = svcCodec ? 3 : Math.min(3, maxSimulcastLayers);\n  for (const rid of ['f', 'h', 'q'].slice(0, totalLayers)) {\n    const layer: OptimalVideoLayer = {\n      active: true,\n      rid,\n      width: Math.round(width / downscaleFactor),\n      height: Math.round(height / downscaleFactor),\n      maxBitrate:\n        Math.round(maxBitrate / bitrateFactor) || defaultBitratePerRid[rid],\n      maxFramerate: 30,\n    };\n    if (svcCodec) {\n      // for SVC codecs, we need to set the scalability mode, and the\n      // codec will handle the rest (layers, temporal layers, etc.)\n      layer.scalabilityMode = scalabilityMode || 'L3T2_KEY';\n    } else {\n      // for non-SVC codecs, we need to downscale proportionally (simulcast)\n      layer.scaleResolutionDownBy = downscaleFactor;\n    }\n\n    downscaleFactor *= 2;\n    bitrateFactor *= bitrateDownscaleFactor;\n\n    // Reversing the order [f, h, q] to [q, h, f] as Chrome uses encoding index\n    // when deciding which layer to disable when CPU or bandwidth is constrained.\n    // Encodings should be ordered in increasing spatial resolution order.\n    optimalVideoLayers.unshift(layer);\n  }\n\n  // for simplicity, we start with all layers enabled, then this function\n  // will clear/reassign the layers that are not needed\n  return withSimulcastConstraints(settings, optimalVideoLayers);\n};\n\n/**\n * Computes the maximum bitrate for a given resolution.\n * If the current resolution is lower than the target resolution,\n * we want to proportionally reduce the target bitrate.\n * If the current resolution is higher than the target resolution,\n * we want to use the target bitrate.\n *\n * @param targetResolution the target resolution.\n * @param currentWidth the current width of the track.\n * @param currentHeight the current height of the track.\n * @param codecInUse the codec in use.\n * @param publishOptions the publish options.\n */\nexport const getComputedMaxBitrate = (\n  targetResolution: TargetResolutionResponse,\n  currentWidth: number,\n  currentHeight: number,\n  codecInUse?: PreferredCodec,\n  publishOptions?: PublishOptions,\n): number => {\n  // if the current resolution is lower than the target resolution,\n  // we want to proportionally reduce the target bitrate\n  const {\n    width: targetWidth,\n    height: targetHeight,\n    bitrate: targetBitrate,\n  } = targetResolution;\n  const { preferredBitrate } = publishOptions || {};\n  const frameHeight =\n    currentWidth > currentHeight ? currentHeight : currentWidth;\n  const bitrate =\n    preferredBitrate ||\n    (codecInUse ? getOptimalBitrate(codecInUse, frameHeight) : targetBitrate);\n  if (currentWidth < targetWidth || currentHeight < targetHeight) {\n    const currentPixels = currentWidth * currentHeight;\n    const targetPixels = targetWidth * targetHeight;\n    const reductionFactor = currentPixels / targetPixels;\n    return Math.round(bitrate * reductionFactor);\n  }\n  return bitrate;\n};\n\n/**\n * Browsers have different simulcast constraints for different video resolutions.\n *\n * This function modifies the provided list of video layers according to the\n * current implementation of simulcast constraints in the Chromium based browsers.\n *\n * https://chromium.googlesource.com/external/webrtc/+/refs/heads/main/media/engine/simulcast.cc#90\n */\nconst withSimulcastConstraints = (\n  settings: MediaTrackSettings,\n  optimalVideoLayers: OptimalVideoLayer[],\n) => {\n  let layers: OptimalVideoLayer[];\n\n  const size = Math.max(settings.width || 0, settings.height || 0);\n  if (size <= 320) {\n    // provide only one layer 320x240 (q), the one with the highest quality\n    layers = optimalVideoLayers.filter((layer) => layer.rid === 'f');\n  } else if (size <= 640) {\n    // provide two layers, 160x120 (q) and 640x480 (h)\n    layers = optimalVideoLayers.filter((layer) => layer.rid !== 'h');\n  } else {\n    // provide three layers for sizes > 640x480\n    layers = optimalVideoLayers;\n  }\n\n  const ridMapping = ['q', 'h', 'f'];\n  return layers.map<OptimalVideoLayer>((layer, index) => ({\n    ...layer,\n    rid: ridMapping[index], // reassign rid\n  }));\n};\n\nexport const findOptimalScreenSharingLayers = (\n  videoTrack: MediaStreamTrack,\n  publishOptions?: PublishOptions,\n  defaultMaxBitrate = 3000000,\n): OptimalVideoLayer[] => {\n  const { screenShareSettings: preferences } = publishOptions || {};\n  const settings = videoTrack.getSettings();\n  return [\n    {\n      active: true,\n      rid: 'q', // single track, start from 'q'\n      width: settings.width || 0,\n      height: settings.height || 0,\n      scaleResolutionDownBy: 1,\n      maxBitrate: preferences?.maxBitrate ?? defaultMaxBitrate,\n      maxFramerate: preferences?.maxFramerate ?? 30,\n    },\n  ];\n};\n", "import { getLogger } from '../logger';\n\nexport const ensureExhausted = (x: never, message: string) => {\n  getLogger(['helpers'])('warn', message, x);\n};\n", "import { TrackType } from '../../gen/video/sfu/models/models';\nimport { TrackMuteType } from '../../types';\nimport { ensureExhausted } from '../../helpers/ensureExhausted';\n\nexport const trackTypeToParticipantStreamKey = (\n  trackType: TrackType,\n):\n  | 'audioStream'\n  | 'videoStream'\n  | 'screenShareStream'\n  | 'screenShareAudioStream'\n  | undefined => {\n  switch (trackType) {\n    case TrackType.SCREEN_SHARE:\n      return 'screenShareStream';\n    case TrackType.SCREEN_SHARE_AUDIO:\n      return 'screenShareAudioStream';\n    case TrackType.VIDEO:\n      return 'videoStream';\n    case TrackType.AUDIO:\n      return 'audioStream';\n    case TrackType.UNSPECIFIED:\n      throw new Error('Track type is unspecified');\n    default:\n      ensureExhausted(trackType, 'Unknown track type');\n  }\n};\n\nexport const muteTypeToTrackType = (\n  muteType: TrackMuteType,\n): TrackType | undefined => {\n  switch (muteType) {\n    case 'audio':\n      return TrackType.AUDIO;\n    case 'video':\n      return TrackType.VIDEO;\n    case 'screenshare':\n      return TrackType.SCREEN_SHARE;\n    case 'screenshare_audio':\n      return TrackType.SCREEN_SHARE_AUDIO;\n    default:\n      ensureExhausted(muteType, 'Unknown mute type');\n  }\n};\n\nexport const toTrackType = (trackType: string): TrackType | undefined => {\n  switch (trackType) {\n    case 'TRACK_TYPE_AUDIO':\n      return TrackType.AUDIO;\n    case 'TRACK_TYPE_VIDEO':\n      return TrackType.VIDEO;\n    case 'TRACK_TYPE_SCREEN_SHARE':\n      return TrackType.SCREEN_SHARE;\n    case 'TRACK_TYPE_SCREEN_SHARE_AUDIO':\n      return TrackType.SCREEN_SHARE_AUDIO;\n    default:\n      return undefined;\n  }\n};\n", "interface PendingPromise {\n  promise: Promise<unknown>;\n  onContinued: () => void;\n}\n\ntype AsyncWrapper<P extends unknown[], T> = (\n  tag: string | symbol,\n  cb: (...args: P) => Promise<T>,\n) => {\n  cb: () => Promise<T>;\n  onContinued: () => void;\n};\n\n/**\n * Runs async functions serially. Useful for wrapping async actions that\n * should never run simultaneously: if marked with the same tag, functions\n * will run one after another.\n *\n * @param tag Async functions with the same tag will run serially. Async functions\n * with different tags can run in parallel.\n * @param cb Async function to run.\n * @returns Promise that resolves when async functions returns.\n */\nexport const withoutConcurrency = createRunner(wrapWithContinuationTracking);\n\n/**\n * Runs async functions serially, and cancels all other actions with the same tag\n * when a new action is scheduled. Useful for wrapping async actions that override\n * each other (e.g. enabling and disabling camera).\n *\n * If an async function hasn't started yet and was canceled, it will never run.\n * If an async function is already running and was canceled, it will be notified\n * via an abort signal passed as an argument.\n *\n * @param tag Async functions with the same tag will run serially and are canceled\n * when a new action with the same tag is scheduled.\n * @param cb Async function to run. Receives AbortSignal as the only argument.\n * @returns Promise that resolves when async functions returns. If the function didn't\n * start and was canceled, will resolve with 'canceled'. If the function started to run,\n * it's up to the function to decide how to react to cancelation.\n */\nexport const withCancellation = createRunner(wrapWithCancellation);\n\nconst pendingPromises = new Map<string | symbol, PendingPromise>();\n\nexport function hasPending(tag: string | symbol) {\n  return pendingPromises.has(tag);\n}\n\nexport async function settled(tag: string | symbol) {\n  await pendingPromises.get(tag)?.promise;\n}\n\n/**\n * Implements common functionality of running async functions serially, by chaining\n * their promises one after another.\n *\n * Before running, async function is \"wrapped\" using the provided wrapper. This wrapper\n * can add additional steps to run before or after the function.\n *\n * When async function is scheduled to run, the previous function is notified\n * by calling the associated onContinued callback. This behavior of this callback\n * is defined by the wrapper.\n */\nfunction createRunner<P extends unknown[], T>(wrapper: AsyncWrapper<P, T>) {\n  return function run(tag: string | symbol, cb: (...args: P) => Promise<T>) {\n    const { cb: wrapped, onContinued } = wrapper(tag, cb);\n    const pending = pendingPromises.get(tag);\n    pending?.onContinued();\n    const promise = pending\n      ? pending.promise.then(wrapped, wrapped)\n      : wrapped();\n    pendingPromises.set(tag, { promise, onContinued });\n    return promise;\n  };\n}\n\n/**\n * Wraps an async function with an additional step run after the function:\n * if the function is the last in the queue, it cleans up the whole chain\n * of promises after finishing.\n */\nfunction wrapWithContinuationTracking<T>(\n  tag: string | symbol,\n  cb: () => Promise<T>,\n) {\n  let hasContinuation = false;\n  const wrapped = () =>\n    cb().finally(() => {\n      if (!hasContinuation) {\n        pendingPromises.delete(tag);\n      }\n    });\n  const onContinued = () => (hasContinuation = true);\n  return { cb: wrapped, onContinued };\n}\n\n/**\n * Wraps an async function with additional functionalilty:\n * 1. Associates an abort signal with every function, that is passed to it\n *    as an argument. When a new function is scheduled to run after the current\n *    one, current signal is aborted.\n * 2. If current function didn't start and was aborted, in will never start.\n * 3. If the function is the last in the queue, it cleans up the whole chain\n *    of promises after finishing.\n */\nfunction wrapWithCancellation<T>(\n  tag: string | symbol,\n  cb: (signal: AbortSignal) => Promise<T | 'canceled'>,\n) {\n  const ac = new AbortController();\n  const wrapped = () => {\n    if (ac.signal.aborted) {\n      return Promise.resolve('canceled' as const);\n    }\n\n    return cb(ac.signal).finally(() => {\n      if (!ac.signal.aborted) {\n        pendingPromises.delete(tag);\n      }\n    });\n  };\n  const onContinued = () => ac.abort();\n  return { cb: wrapped, onContinued };\n}\n", "import { combineLatest, Observable, Subject } from 'rxjs';\nimport { withoutConcurrency } from '../helpers/concurrency';\nimport { getLogger } from '../logger';\n\ntype FunctionPatch<T> = (currentValue: T) => T;\n\n/**\n * A value or a function which takes the current value and returns a new value.\n */\nexport type Patch<T> = T | FunctionPatch<T>;\n\n/**\n * Checks if the provided update is a function patch.\n *\n * @param update the value to check.\n */\nconst isFunctionPatch = <T>(update: Patch<T>): update is FunctionPatch<T> =>\n  typeof update === 'function';\n\n/**\n * Gets the current value of an observable, or undefined if the observable has\n * not emitted a value yet.\n *\n * @param observable$ the observable to get the value from.\n */\nexport const getCurrentValue = <T>(observable$: Observable<T>) => {\n  let value!: T;\n  let err: Error | undefined = undefined;\n  combineLatest([observable$])\n    .subscribe({\n      next: ([v]) => {\n        value = v;\n      },\n      error: (e) => {\n        err = e;\n      },\n    })\n    .unsubscribe();\n\n  if (err) throw err;\n  return value;\n};\n\n/**\n * Updates the value of the provided Subject.\n * An `update` can either be a new value or a function which takes\n * the current value and returns a new value.\n *\n * @param subject the subject to update.\n * @param update the update to apply to the subject.\n * @return the updated value.\n */\nexport const setCurrentValue = <T>(subject: Subject<T>, update: Patch<T>) => {\n  const next = isFunctionPatch(update)\n    ? update(getCurrentValue(subject))\n    : update;\n\n  subject.next(next);\n  return next;\n};\n\n/**\n * Creates a subscription and returns a function to unsubscribe.\n *\n * @param observable the observable to subscribe to.\n * @param handler the handler to call when the observable emits a value.\n * @param onError an optional error handler.\n */\nexport const createSubscription = <T>(\n  observable: Observable<T>,\n  handler: (value: T) => void,\n  onError: (error: any) => void = (error) =>\n    getLogger(['RxUtils'])('warn', 'An observable emitted an error', error),\n) => {\n  const subscription = observable.subscribe({ next: handler, error: onError });\n  return () => {\n    subscription.unsubscribe();\n  };\n};\n\n/**\n * Creates a subscription and returns a function to unsubscribe. Makes sure that\n * only one async handler runs at the same time. If updates come in quicker than\n * it takes for the current handler to finish, other handlers will wait.\n *\n * @param observable the observable to subscribe to.\n * @param handler the async handler to call when the observable emits a value.\n */\nexport const createSafeAsyncSubscription = <T>(\n  observable: Observable<T>,\n  handler: (value: T) => Promise<void>,\n) => {\n  const tag = Symbol();\n  return createSubscription(observable, (value) => {\n    withoutConcurrency(tag, () => handler(value));\n  });\n};\n", "/**\n * Represents the state of the current call.\n */\nexport enum CallingState {\n  /**\n   * The call is in an unknown state.\n   */\n  UNKNOWN = 'unknown',\n\n  /**\n   * The call is in an idle state.\n   */\n  IDLE = 'idle',\n\n  /**\n   * The call is in the process of ringing.\n   * (User hasn't accepted nor rejected the call yet.)\n   */\n  RINGING = 'ringing',\n\n  /**\n   * The call is in the process of joining.\n   */\n  JOINING = 'joining',\n\n  /**\n   * The call is currently active.\n   */\n  JOINED = 'joined',\n\n  /**\n   * The call has been left.\n   */\n  LEFT = 'left',\n\n  /**\n   * The call is in the process of reconnecting.\n   */\n  RECONNECTING = 'reconnecting',\n\n  /**\n   * The call is in the process of migrating from one node to another.\n   */\n  MIGRATING = 'migrating',\n\n  /**\n   * The call has failed to reconnect.\n   */\n  RECONNECTING_FAILED = 'reconnecting-failed',\n\n  /**\n   * The call is in offline mode.\n   */\n  OFFLINE = 'offline',\n}\n", "import { BehaviorSubject, Observable } from 'rxjs';\nimport type { Patch } from './rxUtils';\nimport * as RxUtils from './rxUtils';\nimport { Call } from '../Call';\nimport { CallingState } from './CallingState';\nimport type { OwnUserResponse } from '../gen/coordinator';\nimport { getLogger } from '../logger';\n\nexport class StreamVideoWriteableStateStore {\n  /**\n   * A store keeping data of a successfully connected user over WS to the coordinator server.\n   */\n  connectedUserSubject = new BehaviorSubject<OwnUserResponse | undefined>(\n    undefined,\n  );\n\n  /**\n   * A list of {@link Call} objects created/tracked by this client.\n   */\n  callsSubject = new BehaviorSubject<Call[]>([]);\n\n  constructor() {\n    this.connectedUserSubject.subscribe(async (user) => {\n      // leave all calls when the user disconnects.\n      if (!user) {\n        const logger = getLogger(['client-state']);\n        for (const call of this.calls) {\n          if (call.state.callingState === CallingState.LEFT) continue;\n\n          logger('info', `User disconnected, leaving call: ${call.cid}`);\n          await call\n            .leave({ reason: 'client.disconnectUser() called' })\n            .catch((err) => {\n              logger('error', `Error leaving call: ${call.cid}`, err);\n            });\n        }\n      }\n    });\n  }\n\n  /**\n   * The currently connected user.\n   */\n  get connectedUser(): OwnUserResponse | undefined {\n    return RxUtils.getCurrentValue(this.connectedUserSubject);\n  }\n\n  /**\n   * Sets the currently connected user.\n   *\n   * @internal\n   * @param user the user to set as connected.\n   */\n  setConnectedUser = (user: Patch<OwnUserResponse | undefined>) => {\n    return RxUtils.setCurrentValue(this.connectedUserSubject, user);\n  };\n\n  /**\n   * A list of {@link Call} objects created/tracked by this client.\n   */\n  get calls(): Call[] {\n    return RxUtils.getCurrentValue(this.callsSubject);\n  }\n\n  /**\n   * Sets the list of {@link Call} objects created/tracked by this client.\n   * @param calls\n   */\n  setCalls = (calls: Patch<Call[]>) => {\n    return RxUtils.setCurrentValue(this.callsSubject, calls);\n  };\n\n  /**\n   * Adds a {@link Call} object to the list of {@link Call} objects created/tracked by this client.\n   *\n   * @param call the call to add.\n   */\n  registerCall = (call: Call) => {\n    if (!this.calls.find((c) => c.cid === call.cid)) {\n      this.setCalls((calls) => [...calls, call]);\n    }\n  };\n\n  /**\n   * Removes a {@link Call} object from the list of {@link Call} objects created/tracked by this client.\n   *\n   * @param call the call to remove\n   */\n  unregisterCall = (call: Call) => {\n    return this.setCalls((calls) => calls.filter((c) => c !== call));\n  };\n\n  /**\n   * Finds a {@link Call} object in the list of {@link Call} objects created/tracked by this client.\n   *\n   * @param type the type of call to find.\n   * @param id the id of the call to find.\n   */\n  findCall = (type: string, id: string) => {\n    return this.calls.find((c) => c.type === type && c.id === id);\n  };\n}\n\n/**\n * A reactive store that exposes state variables in a reactive manner.\n * You can subscribe to changes of the different state variables.\n * This central store contains all the state variables related to [`StreamVideoClient`](./StreamVideClient.md) and [`Call`](./Call.md).\n */\nexport class StreamVideoReadOnlyStateStore {\n  /**\n   * Data describing a user successfully connected over WS to coordinator server.\n   */\n  connectedUser$: Observable<OwnUserResponse | undefined>;\n\n  /**\n   * A list of {@link Call} objects created/tracked by this client.\n   */\n  calls$: Observable<Call[]>;\n\n  /**\n   * This method allows you the get the current value of a state variable.\n   *\n   * @param observable the observable to get the current value of.\n   * @returns the current value of the observable.\n   */\n  getCurrentValue = RxUtils.getCurrentValue;\n\n  constructor(store: StreamVideoWriteableStateStore) {\n    // convert and expose subjects as observables\n    this.connectedUser$ = store.connectedUserSubject.asObservable();\n    this.calls$ = store.callsSubject.asObservable();\n  }\n\n  /**\n   * The current user connected over WS to the backend.\n   */\n  get connectedUser(): OwnUserResponse | undefined {\n    return RxUtils.getCurrentValue(this.connectedUser$);\n  }\n\n  /**\n   * A list of {@link Call} objects created/tracked by this client.\n   */\n  get calls(): Call[] {\n    return RxUtils.getCurrentValue(this.calls$);\n  }\n}\n", "/**\n * Defines a comparator function which can be used for sorting items.\n */\nexport type Comparator<T> = (a: T, b: T) => -1 | 0 | 1;\n\n/**\n * Creates a new combined {@link Comparator<T>} which sorts items by the given comparators.\n * The comparators are applied in the order they are given (left -> right).\n *\n * @param comparators the comparators to use for sorting.\n * @returns a combined {@link Comparator<T>}.\n */\nexport const combineComparators = <T>(\n  ...comparators: Comparator<T>[]\n): Comparator<T> => {\n  return (a, b) => {\n    for (const comparator of comparators) {\n      const result = comparator(a, b);\n      if (result !== 0) return result;\n    }\n    return 0;\n  };\n};\n\n/**\n * Creates a new comparator which sorts items in descending order.\n *\n * @example\n * const byValue = (a, b) => a < b ? - 1 : a > b ? 1 : 0;\n * const byValueDesc = descending(byValue);\n *\n * @param comparator the comparator to wrap.\n */\nexport const descending = <T>(comparator: Comparator<T>): Comparator<T> => {\n  return (a, b) => comparator(b, a);\n};\n\n/**\n * Creates a new comparator which conditionally applies the given comparator.\n *\n * @example\n * const shouldSortByValue = (a, b) => a % 2 === 0; // return false to turn it off\n * const byValue = (a, b) => a < b ? - 1 : a > b ? 1 : 0;\n * const comparator = conditional(shouldSortByValue)(byValue);\n *\n * @param predicate the predicate to use for determining whether to apply the comparator.\n */\nexport const conditional = <T>(predicate: (a: T, b: T) => boolean) => {\n  return (comparator: Comparator<T>): Comparator<T> => {\n    return (a, b) => {\n      if (!predicate(a, b)) return 0;\n      return comparator(a, b);\n    };\n  };\n};\n\n/**\n * A no-op comparator which always returns 0.\n */\nexport const noopComparator = <T>(): Comparator<T> => {\n  return () => 0;\n};\n", "import { StreamVideoParticipant } from '../types';\nimport { TrackType } from '../gen/video/sfu/models/models';\n\n/**\n * Check if a participant has a video.\n *\n * @param p the participant to check.\n */\nexport const hasVideo = (p: StreamVideoParticipant): boolean =>\n  p.publishedTracks.includes(TrackType.VIDEO);\n\n/**\n * Check if a participant has audio.\n *\n * @param p the participant to check.\n */\nexport const hasAudio = (p: StreamVideoParticipant): boolean =>\n  p.publishedTracks.includes(TrackType.AUDIO);\n\n/**\n * Check if a participant is screen sharing.\n *\n * @param p the participant to check.\n */\nexport const hasScreenShare = (p: StreamVideoParticipant): boolean =>\n  p.publishedTracks.includes(TrackType.SCREEN_SHARE);\n\n/**\n * Check if a participant is screen sharing audio.\n *\n * @param p the participant to check.\n */\nexport const hasScreenShareAudio = (p: StreamVideoParticipant): boolean =>\n  p.publishedTracks.includes(TrackType.SCREEN_SHARE_AUDIO);\n\n/**\n * Check if the participant is pinned.\n *\n * @param p the participant.\n */\nexport const isPinned = (p: StreamVideoParticipant): boolean =>\n  !!p.pin && (p.pin.isLocalPin || p.pin.pinnedAt > 0);\n", "import { Comparator } from './';\nimport { StreamVideoParticipant } from '../types';\nimport {\n  hasAudio,\n  hasScreenShare,\n  hasVideo,\n} from '../helpers/participantUtils';\n\n/**\n * A comparator which sorts participants by the fact that they are the dominant speaker or not.\n *\n * @param a the first participant.\n * @param b the second participant.\n */\nexport const dominantSpeaker: Comparator<StreamVideoParticipant> = (a, b) => {\n  if (a.isDominantSpeaker && !b.isDominantSpeaker) return -1;\n  if (!a.isDominantSpeaker && b.isDominantSpeaker) return 1;\n  return 0;\n};\n\n/**\n * A comparator which sorts participants by the fact that they are speaking or not.\n *\n * @param a the first participant.\n * @param b the second participant.\n */\nexport const speaking: Comparator<StreamVideoParticipant> = (a, b) => {\n  if (a.isSpeaking && !b.isSpeaking) return -1;\n  if (!a.isSpeaking && b.isSpeaking) return 1;\n  return 0;\n};\n\n/**\n * A comparator which sorts participants by screen sharing status.\n *\n * @param a the first participant.\n * @param b the second participant.\n */\nexport const screenSharing: Comparator<StreamVideoParticipant> = (a, b) => {\n  if (hasScreenShare(a) && !hasScreenShare(b)) return -1;\n  if (!hasScreenShare(a) && hasScreenShare(b)) return 1;\n  return 0;\n};\n\n/**\n * A comparator which sorts participants by video status.\n *\n * @param a the first participant.\n * @param b the second participant.\n */\nexport const publishingVideo: Comparator<StreamVideoParticipant> = (a, b) => {\n  if (hasVideo(a) && !hasVideo(b)) return -1;\n  if (!hasVideo(a) && hasVideo(b)) return 1;\n  return 0;\n};\n\n/**\n * A comparator which sorts participants by audio status.\n *\n * @param a the first participant.\n * @param b the second participant.\n */\nexport const publishingAudio: Comparator<StreamVideoParticipant> = (a, b) => {\n  if (hasAudio(a) && !hasAudio(b)) return -1;\n  if (!hasAudio(a) && hasAudio(b)) return 1;\n  return 0;\n};\n\n/**\n * A comparator which prioritizes participants who are pinned.\n *\n * @param a the first participant.\n * @param b the second participant.\n */\nexport const pinned: Comparator<StreamVideoParticipant> = (a, b) => {\n  if (a.pin && b.pin) {\n    if (!a.pin.isLocalPin && b.pin.isLocalPin) return -1;\n    if (a.pin.isLocalPin && !b.pin.isLocalPin) return 1;\n    if (a.pin.pinnedAt > b.pin.pinnedAt) return -1;\n    if (a.pin.pinnedAt < b.pin.pinnedAt) return 1;\n  }\n\n  if (a.pin && !b.pin) return -1;\n  if (!a.pin && b.pin) return 1;\n\n  return 0;\n};\n\n/**\n * A comparator creator which will set up a comparator which prioritizes\n * participants who have a specific reaction.\n *\n * @param type the reaction type.\n */\nexport const reactionType = (\n  type: string,\n): Comparator<StreamVideoParticipant> => {\n  return (a, b) => {\n    if (a.reaction?.type === type && b.reaction?.type !== type) return -1;\n    if (a.reaction?.type !== type && b.reaction?.type === type) return 1;\n    return 0;\n  };\n};\n\n/**\n * A comparator creator which will set up a comparator which prioritizes\n * participants who have a specific role.\n *\n * @param roles the roles to prioritize.\n */\nexport const role =\n  (...roles: string[]): Comparator<StreamVideoParticipant> =>\n  (a, b) => {\n    if (hasAnyRole(a, roles) && !hasAnyRole(b, roles)) return -1;\n    if (!hasAnyRole(a, roles) && hasAnyRole(b, roles)) return 1;\n    return 0;\n  };\n\n/**\n * A comparator which sorts participants by name.\n *\n * @param a the first participant.\n * @param b the second participant.\n */\nexport const name: Comparator<StreamVideoParticipant> = (a, b) => {\n  if (a.name < b.name) return -1;\n  if (a.name > b.name) return 1;\n  return 0;\n};\n\nconst hasAnyRole = (p: StreamVideoParticipant, roles: string[]) =>\n  (p.roles || []).some((r) => roles.includes(r));\n", "import { StreamVideoParticipant, VisibilityState } from '../types';\nimport { combineComparators, conditional } from './comparator';\nimport {\n  dominantSpeaker,\n  pinned,\n  publishingAudio,\n  publishingVideo,\n  reactionType,\n  role,\n  screenSharing,\n  speaking,\n} from './participants';\n\n// a comparator decorator which applies the decorated comparator only if the\n// participant is invisible.\n// This ensures stable sorting when all participants are visible.\nconst ifInvisibleBy = conditional(\n  (a: StreamVideoParticipant, b: StreamVideoParticipant) =>\n    a.viewportVisibilityState?.videoTrack === VisibilityState.INVISIBLE ||\n    b.viewportVisibilityState?.videoTrack === VisibilityState.INVISIBLE,\n);\n\n/**\n * A comparator that applies the decorated comparator when a participant is\n * either invisible or its visibility state isn't known.\n * For visible participants, it ensures stable sorting.\n */\nconst ifInvisibleOrUnknownBy = conditional(\n  (a: StreamVideoParticipant, b: StreamVideoParticipant) =>\n    a.viewportVisibilityState?.videoTrack === VisibilityState.INVISIBLE ||\n    a.viewportVisibilityState?.videoTrack === VisibilityState.UNKNOWN ||\n    b.viewportVisibilityState?.videoTrack === VisibilityState.INVISIBLE ||\n    b.viewportVisibilityState?.videoTrack === VisibilityState.UNKNOWN,\n);\n\n/**\n * The default sorting preset.\n */\nexport const defaultSortPreset = combineComparators(\n  pinned,\n  screenSharing,\n  ifInvisibleBy(\n    combineComparators(\n      dominantSpeaker,\n      speaking,\n      reactionType('raised-hand'),\n      publishingVideo,\n      publishingAudio,\n    ),\n  ),\n  // ifInvisibleBy(name),\n);\n\n/**\n * The sorting preset for speaker layout.\n */\nexport const speakerLayoutSortPreset = combineComparators(\n  pinned,\n  screenSharing,\n  dominantSpeaker,\n  ifInvisibleBy(\n    combineComparators(\n      speaking,\n      reactionType('raised-hand'),\n      publishingVideo,\n      publishingAudio,\n    ),\n  ),\n  // ifInvisibleBy(name),\n);\n\n/**\n * The sorting preset for layouts that don't render all participants but\n * instead, render them in pages.\n */\nexport const paginatedLayoutSortPreset = combineComparators(\n  pinned,\n  ifInvisibleOrUnknownBy(\n    combineComparators(\n      dominantSpeaker,\n      speaking,\n      reactionType('raised-hand'),\n      publishingVideo,\n      publishingAudio,\n    ),\n  ),\n  // ifInvisibleOrUnknownBy(name),\n);\n\n/**\n * The sorting preset for livestreams and audio rooms.\n */\nexport const livestreamOrAudioRoomSortPreset = combineComparators(\n  ifInvisibleBy(\n    combineComparators(\n      dominantSpeaker,\n      speaking,\n      reactionType('raised-hand'),\n      publishingVideo,\n      publishingAudio,\n    ),\n  ),\n  role('admin', 'host', 'speaker'),\n  // name,\n);\n", "import {\n  BehaviorSubject,\n  distinctUntilChanged,\n  map,\n  Observable,\n  shareReplay,\n} from 'rxjs';\nimport type { Patch } from './rxUtils';\nimport * as RxUtils from './rxUtils';\nimport { CallingState } from './CallingState';\nimport {\n  type StreamVideoParticipant,\n  type StreamVideoParticipantPatch,\n  type StreamVideoParticipantPatches,\n  type SubscriptionChanges,\n  VideoTrackType,\n  VisibilityState,\n} from '../types';\nimport { CallStatsReport } from '../stats';\nimport {\n  BlockedUserEvent,\n  CallHLSBroadcastingStartedEvent,\n  CallIngressResponse,\n  CallMemberAddedEvent,\n  CallMemberRemovedEvent,\n  CallMemberUpdatedEvent,\n  CallMemberUpdatedPermissionEvent,\n  CallReactionEvent,\n  CallResponse,\n  CallSessionParticipantCountsUpdatedEvent,\n  CallSessionParticipantJoinedEvent,\n  CallSessionParticipantLeftEvent,\n  CallSessionResponse,\n  CallSettingsResponse,\n  EgressResponse,\n  MemberResponse,\n  OwnCapability,\n  ThumbnailResponse,\n  UnblockedUserEvent,\n  UpdatedCallPermissionsEvent,\n  UserResponse,\n  WSEvent,\n} from '../gen/coordinator';\nimport { Timestamp } from '../gen/google/protobuf/timestamp';\nimport { ReconnectDetails } from '../gen/video/sfu/event/events';\nimport {\n  CallState as SfuCallState,\n  Pin,\n  TrackType,\n} from '../gen/video/sfu/models/models';\nimport { Comparator, defaultSortPreset } from '../sorting';\nimport { getLogger } from '../logger';\nimport { hasScreenShare } from '../helpers/participantUtils';\n\n/**\n * Returns the default egress object - when no egress data is available.\n */\nconst defaultEgress: EgressResponse = {\n  broadcasting: false,\n  hls: { playlist_url: '' },\n  rtmps: [],\n};\n\ntype OrphanedTrack = {\n  id: string;\n  trackLookupPrefix: string;\n  trackType: TrackType;\n  track: MediaStream;\n};\n\n/**\n * Holds the state of the current call.\n * @react You don't have to use this class directly, as we are exposing the state through Hooks.\n */\nexport class CallState {\n  private backstageSubject = new BehaviorSubject<boolean>(true);\n  private blockedUserIdsSubject = new BehaviorSubject<string[]>([]);\n  private createdAtSubject = new BehaviorSubject<Date>(new Date());\n  private endedAtSubject = new BehaviorSubject<Date | undefined>(undefined);\n  private startsAtSubject = new BehaviorSubject<Date | undefined>(undefined);\n  private updatedAtSubject = new BehaviorSubject<Date>(new Date());\n  private createdBySubject = new BehaviorSubject<UserResponse | undefined>(\n    undefined,\n  );\n  private customSubject = new BehaviorSubject<Record<string, any>>({});\n  private egressSubject = new BehaviorSubject<EgressResponse | undefined>(\n    undefined,\n  );\n  private ingressSubject = new BehaviorSubject<CallIngressResponse | undefined>(\n    undefined,\n  );\n  private recordingSubject = new BehaviorSubject<boolean>(false);\n  private sessionSubject = new BehaviorSubject<CallSessionResponse | undefined>(\n    undefined,\n  );\n  private settingsSubject = new BehaviorSubject<\n    CallSettingsResponse | undefined\n  >(undefined);\n  private transcribingSubject = new BehaviorSubject<boolean>(false);\n  private endedBySubject = new BehaviorSubject<UserResponse | undefined>(\n    undefined,\n  );\n  private thumbnailsSubject = new BehaviorSubject<\n    ThumbnailResponse | undefined\n  >(undefined);\n  private membersSubject = new BehaviorSubject<MemberResponse[]>([]);\n  private ownCapabilitiesSubject = new BehaviorSubject<OwnCapability[]>([]);\n  private callingStateSubject = new BehaviorSubject<CallingState>(\n    CallingState.UNKNOWN,\n  );\n  private startedAtSubject = new BehaviorSubject<Date | undefined>(undefined);\n  private participantCountSubject = new BehaviorSubject<number>(0);\n  private anonymousParticipantCountSubject = new BehaviorSubject<number>(0);\n  private participantsSubject = new BehaviorSubject<StreamVideoParticipant[]>(\n    [],\n  );\n  private callStatsReportSubject = new BehaviorSubject<\n    CallStatsReport | undefined\n  >(undefined);\n\n  // These are tracks that were delivered to the Subscriber's onTrack event\n  // that we couldn't associate with a participant yet.\n  // This happens when the participantJoined event hasn't been received yet.\n  // We keep these tracks around until we can associate them with a participant.\n  private orphanedTracks: OrphanedTrack[] = [];\n\n  // Derived state\n\n  /**\n   * The time the call session actually started.\n   * Useful for displaying the call duration.\n   */\n  startedAt$: Observable<Date | undefined>;\n\n  /**\n   * The server-side counted number of participants connected to the current call.\n   * This number includes the anonymous participants as well.\n   */\n  participantCount$: Observable<number>;\n\n  /**\n   * The server-side counted number of anonymous participants connected to the current call.\n   * This number excludes the regular participants.\n   */\n  anonymousParticipantCount$: Observable<number>;\n\n  /**\n   * All participants of the current call (this includes the current user and other participants as well).\n   */\n  participants$: Observable<StreamVideoParticipant[]>;\n\n  /**\n   * Remote participants of the current call (this includes every participant except the logged-in user).\n   */\n  remoteParticipants$: Observable<StreamVideoParticipant[]>;\n\n  /**\n   * The local participant of the current call (the logged-in user).\n   */\n  localParticipant$: Observable<StreamVideoParticipant | undefined>;\n\n  /**\n   * Pinned participants of the current call.\n   */\n  pinnedParticipants$: Observable<StreamVideoParticipant[]>;\n\n  /**\n   * The currently elected dominant speaker in the current call.\n   */\n  dominantSpeaker$: Observable<StreamVideoParticipant | undefined>;\n\n  /**\n   * Emits true whenever there is an active screen sharing session within\n   * the current call. Useful for displaying a \"screen sharing\" indicator and\n   * switching the layout to a screen sharing layout.\n   *\n   * The actual screen sharing track isn't exposed here, but can be retrieved\n   * from the list of call participants. We also don't want to be limiting\n   * to the number of share screen tracks are displayed in a call.\n   */\n  hasOngoingScreenShare$: Observable<boolean>;\n\n  /**\n   * The latest stats report of the current call.\n   * When stats gathering is enabled, this observable will emit a new value\n   * at a regular (configurable) interval.\n   *\n   * Consumers of this observable can implement their own batching logic\n   * in case they want to show historical stats data.\n   */\n  callStatsReport$: Observable<CallStatsReport | undefined>;\n\n  /**\n   * The list of members in the current call.\n   */\n  members$: Observable<MemberResponse[]>;\n\n  /**\n   * The list of capabilities of the current user.\n   */\n  ownCapabilities$: Observable<OwnCapability[]>;\n\n  /**\n   * The calling state.\n   */\n  callingState$: Observable<CallingState>;\n\n  /**\n   * The backstage state.\n   */\n  backstage$: Observable<boolean>;\n\n  /**\n   * Will provide the list of blocked user IDs.\n   */\n  blockedUserIds$: Observable<string[]>;\n\n  /**\n   * Will provide the time when this call has been created.\n   */\n  createdAt$: Observable<Date>;\n\n  /**\n   * Will provide the time when this call has been ended.\n   */\n  endedAt$: Observable<Date | undefined>;\n\n  /**\n   * Will provide the time when this call has been scheduled to start.\n   */\n  startsAt$: Observable<Date | undefined>;\n\n  /**\n   * Will provide the time when this call has been updated.\n   */\n  updatedAt$: Observable<Date>;\n\n  /**\n   * Will provide the user who created this call.\n   */\n  createdBy$: Observable<UserResponse | undefined>;\n\n  /**\n   * Will provide the custom data of this call.\n   */\n  custom$: Observable<Record<string, any>>;\n\n  /**\n   * Will provide the egress data of this call.\n   */\n  egress$: Observable<EgressResponse | undefined>;\n\n  /**\n   * Will provide the ingress data of this call.\n   */\n  ingress$: Observable<CallIngressResponse | undefined>;\n\n  /**\n   * Will provide the recording state of this call.\n   */\n  recording$: Observable<boolean>;\n\n  /**\n   * Will provide the session data of this call.\n   */\n  session$: Observable<CallSessionResponse | undefined>;\n\n  /**\n   * Will provide the settings of this call.\n   */\n  settings$: Observable<CallSettingsResponse | undefined>;\n\n  /**\n   * Will provide the transcribing state of this call.\n   */\n  transcribing$: Observable<boolean>;\n\n  /**\n   * Will provide the user who ended this call.\n   */\n  endedBy$: Observable<UserResponse | undefined>;\n\n  /**\n   * Will provide the thumbnails of this call.\n   */\n  thumbnails$: Observable<ThumbnailResponse | undefined>;\n\n  readonly logger = getLogger(['CallState']);\n\n  /**\n   * A list of comparators that are used to sort the participants.\n   *\n   * @private\n   */\n  private sortParticipantsBy = defaultSortPreset;\n\n  private readonly eventHandlers: {\n    [EventType in WSEvent['type']]:\n      | ((event: Extract<WSEvent, { type: EventType }>) => void)\n      | undefined;\n  };\n\n  /**\n   * Creates a new instance of the CallState class.\n   *\n   */\n  constructor() {\n    this.participants$ = this.participantsSubject.asObservable().pipe(\n      // maintain stable-sort by mutating the participants stored\n      // in the original subject\n      map((ps) => ps.sort(this.sortParticipantsBy)),\n      shareReplay({ bufferSize: 1, refCount: true }),\n    );\n\n    this.localParticipant$ = this.participants$.pipe(\n      map((participants) => participants.find((p) => p.isLocalParticipant)),\n      shareReplay({ bufferSize: 1, refCount: true }),\n    );\n\n    this.remoteParticipants$ = this.participants$.pipe(\n      map((participants) => participants.filter((p) => !p.isLocalParticipant)),\n      shareReplay({ bufferSize: 1, refCount: true }),\n    );\n\n    this.pinnedParticipants$ = this.participants$.pipe(\n      map((participants) => participants.filter((p) => !!p.pin)),\n      shareReplay({ bufferSize: 1, refCount: true }),\n    );\n\n    this.dominantSpeaker$ = this.participants$.pipe(\n      map((participants) => participants.find((p) => p.isDominantSpeaker)),\n      shareReplay({ bufferSize: 1, refCount: true }),\n    );\n\n    this.hasOngoingScreenShare$ = this.participants$.pipe(\n      map((participants) => participants.some((p) => hasScreenShare(p))),\n      distinctUntilChanged(),\n      shareReplay({ bufferSize: 1, refCount: true }),\n    );\n\n    // dates\n    this.createdAt$ = this.createdAtSubject.asObservable();\n    this.endedAt$ = this.endedAtSubject.asObservable();\n    this.startsAt$ = this.startsAtSubject.asObservable();\n    this.startedAt$ = this.startedAtSubject.asObservable();\n    this.updatedAt$ = this.updatedAtSubject.asObservable();\n\n    this.callStatsReport$ = this.callStatsReportSubject.asObservable();\n    this.members$ = this.membersSubject.asObservable();\n\n    // complex objects should work as streams of data\n    this.createdBy$ = this.createdBySubject.asObservable();\n    this.custom$ = this.customSubject.asObservable();\n    this.egress$ = this.egressSubject.asObservable();\n    this.ingress$ = this.ingressSubject.asObservable();\n    this.session$ = this.sessionSubject.asObservable();\n    this.settings$ = this.settingsSubject.asObservable();\n    this.endedBy$ = this.endedBySubject.asObservable();\n    this.thumbnails$ = this.thumbnailsSubject.asObservable();\n\n    /**\n     * Performs shallow comparison of two arrays.\n     * Expects primitive values: [1, 2, 3] is equal to [2, 1, 3].\n     */\n    const isShallowEqual = <T>(a: Array<T>, b: Array<T>): boolean => {\n      if (a.length !== b.length) return false;\n      for (const item of a) if (!b.includes(item)) return false;\n      for (const item of b) if (!a.includes(item)) return false;\n      return true;\n    };\n\n    /**\n     * Creates an Observable from the given subject by piping to the\n     * `distinctUntilChanged()` operator.\n     */\n    const duc = <T>(\n      subject: BehaviorSubject<T>,\n      comparator?: (a: T, b: T) => boolean,\n    ): Observable<T> =>\n      subject.asObservable().pipe(distinctUntilChanged(comparator));\n\n    // primitive values should only emit once the value they hold changes\n    this.anonymousParticipantCount$ = duc(\n      this.anonymousParticipantCountSubject,\n    );\n    this.blockedUserIds$ = duc(this.blockedUserIdsSubject, isShallowEqual);\n    this.backstage$ = duc(this.backstageSubject);\n    this.callingState$ = duc(this.callingStateSubject);\n    this.ownCapabilities$ = duc(this.ownCapabilitiesSubject, isShallowEqual);\n    this.participantCount$ = duc(this.participantCountSubject);\n    this.recording$ = duc(this.recordingSubject);\n    this.transcribing$ = duc(this.transcribingSubject);\n\n    this.eventHandlers = {\n      // these events are not updating the call state:\n      'call.closed_caption': undefined,\n      'call.deleted': undefined,\n      'call.permission_request': undefined,\n      'call.recording_ready': undefined,\n      'call.transcription_ready': undefined,\n      'call.user_muted': undefined,\n      'connection.error': undefined,\n      'connection.ok': undefined,\n      'health.check': undefined,\n      'user.banned': undefined,\n      'user.deactivated': undefined,\n      'user.deleted': undefined,\n      'user.muted': undefined,\n      'user.presence.changed': undefined,\n      'user.reactivated': undefined,\n      'user.unbanned': undefined,\n      'user.updated': undefined,\n      custom: undefined,\n\n      // events that update call state:\n      'call.accepted': (e) => this.updateFromCallResponse(e.call),\n      'call.blocked_user': this.blockUser,\n      'call.created': (e) => this.updateFromCallResponse(e.call),\n      'call.ended': (e) => {\n        this.updateFromCallResponse(e.call);\n        this.setCurrentValue(this.endedBySubject, e.user);\n      },\n      'call.hls_broadcasting_failed': this.updateFromHLSBroadcastingFailed,\n      'call.hls_broadcasting_started': this.updateFromHLSBroadcastStarted,\n      'call.hls_broadcasting_stopped': this.updateFromHLSBroadcastStopped,\n      'call.live_started': (e) => this.updateFromCallResponse(e.call),\n      'call.member_added': this.updateFromMemberAdded,\n      'call.member_removed': this.updateFromMemberRemoved,\n      'call.member_updated_permission': this.updateMembers,\n      'call.member_updated': this.updateMembers,\n      'call.notification': (e) => {\n        this.updateFromCallResponse(e.call);\n        this.setMembers(e.members);\n      },\n      'call.permissions_updated': this.updateOwnCapabilities,\n      'call.reaction_new': this.updateParticipantReaction,\n      'call.recording_started': () =>\n        this.setCurrentValue(this.recordingSubject, true),\n      'call.recording_stopped': () =>\n        this.setCurrentValue(this.recordingSubject, false),\n      'call.recording_failed': () =>\n        this.setCurrentValue(this.recordingSubject, false),\n      'call.rejected': (e) => this.updateFromCallResponse(e.call),\n      'call.ring': (e) => this.updateFromCallResponse(e.call),\n      'call.missed': (e) => this.updateFromCallResponse(e.call),\n      'call.session_ended': (e) => this.updateFromCallResponse(e.call),\n      'call.session_participant_count_updated':\n        this.updateFromSessionParticipantCountUpdate,\n      'call.session_participant_joined':\n        this.updateFromSessionParticipantJoined,\n      'call.session_participant_left': this.updateFromSessionParticipantLeft,\n      'call.session_started': (e) => this.updateFromCallResponse(e.call),\n      'call.transcription_started': () => {\n        this.setCurrentValue(this.transcribingSubject, true);\n      },\n      'call.transcription_stopped': () => {\n        this.setCurrentValue(this.transcribingSubject, false);\n      },\n      'call.transcription_failed': () => {\n        this.setCurrentValue(this.transcribingSubject, false);\n      },\n      'call.unblocked_user': this.unblockUser,\n      'call.updated': (e) => this.updateFromCallResponse(e.call),\n    };\n  }\n\n  /**\n   * Sets the list of criteria that are used to sort the participants.\n   * To disable sorting, you can pass `noopComparator()`.\n   *\n   * @param comparator the comparator to use to sort the participants.\n   */\n  setSortParticipantsBy = (comparator: Comparator<StreamVideoParticipant>) => {\n    this.sortParticipantsBy = comparator;\n    // trigger re-sorting of participants\n    this.setCurrentValue(this.participantsSubject, (ps) => ps);\n  };\n\n  /**\n   * Gets the current value of an observable, or undefined if the observable has\n   * not emitted a value yet.\n   *\n   * @param observable$ the observable to get the value from.\n   */\n  getCurrentValue = RxUtils.getCurrentValue;\n\n  /**\n   * Updates the value of the provided Subject.\n   * An `update` can either be a new value or a function which takes\n   * the current value and returns a new value.\n   *\n   * @internal\n   *\n   * @param subject the subject to update.\n   * @param update the update to apply to the subject.\n   * @return the updated value.\n   */\n  setCurrentValue = RxUtils.setCurrentValue;\n\n  /**\n   * The server-side counted number of participants connected to the current call.\n   * This number includes the anonymous participants as well.\n   */\n  get participantCount() {\n    return this.getCurrentValue(this.participantCount$);\n  }\n\n  /**\n   * Sets the number of participants in the current call.\n   *\n   * @internal\n   * @param count the number of participants.\n   */\n  setParticipantCount = (count: Patch<number>) => {\n    return this.setCurrentValue(this.participantCountSubject, count);\n  };\n\n  /**\n   * The time the call session actually started.\n   * Useful for displaying the call duration.\n   */\n  get startedAt() {\n    return this.getCurrentValue(this.startedAt$);\n  }\n\n  /**\n   * Sets the time the call session actually started.\n   *\n   * @internal\n   * @param startedAt the time the call session actually started.\n   */\n  setStartedAt = (startedAt: Patch<Date | undefined>) => {\n    return this.setCurrentValue(this.startedAtSubject, startedAt);\n  };\n\n  /**\n   * The server-side counted number of anonymous participants connected to the current call.\n   * This number includes the anonymous participants as well.\n   */\n  get anonymousParticipantCount() {\n    return this.getCurrentValue(this.anonymousParticipantCount$);\n  }\n\n  /**\n   * Sets the number of anonymous participants in the current call.\n   *\n   * @internal\n   * @param count the number of anonymous participants.\n   */\n  setAnonymousParticipantCount = (count: Patch<number>) => {\n    return this.setCurrentValue(this.anonymousParticipantCountSubject, count);\n  };\n\n  /**\n   * The list of participants in the current call.\n   */\n  get participants() {\n    return this.getCurrentValue(this.participants$);\n  }\n\n  /**\n   * Sets the list of participants in the current call.\n   *\n   * @internal\n   *\n   * @param participants the list of participants.\n   */\n  setParticipants = (participants: Patch<StreamVideoParticipant[]>) => {\n    return this.setCurrentValue(this.participantsSubject, participants);\n  };\n\n  /**\n   * The local participant in the current call.\n   */\n  get localParticipant() {\n    return this.getCurrentValue(this.localParticipant$);\n  }\n\n  /**\n   * The list of remote participants in the current call.\n   */\n  get remoteParticipants() {\n    return this.getCurrentValue(this.remoteParticipants$);\n  }\n\n  /**\n   * The dominant speaker in the current call.\n   */\n  get dominantSpeaker() {\n    return this.getCurrentValue(this.dominantSpeaker$);\n  }\n\n  /**\n   * The list of pinned participants in the current call.\n   */\n  get pinnedParticipants() {\n    return this.getCurrentValue(this.pinnedParticipants$);\n  }\n\n  /**\n   * Tell if there is an ongoing screen share in this call.\n   */\n  get hasOngoingScreenShare() {\n    return this.getCurrentValue(this.hasOngoingScreenShare$);\n  }\n\n  /**\n   * The calling state.\n   */\n  get callingState() {\n    return this.getCurrentValue(this.callingState$);\n  }\n\n  /**\n   * Sets the calling state.\n   *\n   * @internal\n   * @param state the new calling state.\n   */\n  setCallingState = (state: Patch<CallingState>) => {\n    return this.setCurrentValue(this.callingStateSubject, state);\n  };\n\n  /**\n   * The call stats report.\n   */\n  get callStatsReport() {\n    return this.getCurrentValue(this.callStatsReport$);\n  }\n\n  /**\n   * Sets the call stats report.\n   *\n   * @internal\n   * @param report the report to set.\n   */\n  setCallStatsReport = (report: Patch<CallStatsReport | undefined>) => {\n    return this.setCurrentValue(this.callStatsReportSubject, report);\n  };\n\n  /**\n   * The members of the current call.\n   */\n  get members() {\n    return this.getCurrentValue(this.members$);\n  }\n\n  /**\n   * Sets the members of the current call.\n   *\n   * @internal\n   * @param members the members to set.\n   */\n  setMembers = (members: Patch<MemberResponse[]>) => {\n    this.setCurrentValue(this.membersSubject, members);\n  };\n\n  /**\n   * The capabilities of the current user for the current call.\n   */\n  get ownCapabilities() {\n    return this.getCurrentValue(this.ownCapabilities$);\n  }\n\n  /**\n   * Sets the own capabilities.\n   *\n   * @internal\n   * @param capabilities the capabilities to set.\n   */\n  setOwnCapabilities = (capabilities: Patch<OwnCapability[]>) => {\n    return this.setCurrentValue(this.ownCapabilitiesSubject, capabilities);\n  };\n\n  /**\n   * The backstage state.\n   */\n  get backstage() {\n    return this.getCurrentValue(this.backstage$);\n  }\n\n  /**\n   * Will provide the list of blocked user IDs.\n   */\n  get blockedUserIds() {\n    return this.getCurrentValue(this.blockedUserIds$);\n  }\n\n  /**\n   * Will provide the time when this call has been created.\n   */\n  get createdAt() {\n    return this.getCurrentValue(this.createdAt$);\n  }\n\n  /**\n   * Will provide the time when this call has been ended.\n   */\n  get endedAt() {\n    return this.getCurrentValue(this.endedAt$);\n  }\n\n  /**\n   * Sets the time when this call has been ended.\n   * @param endedAt the time when this call has been ended.\n   */\n  setEndedAt = (endedAt: Patch<Date | undefined>) => {\n    return this.setCurrentValue(this.endedAtSubject, endedAt);\n  };\n\n  /**\n   * Will provide the time when this call has been scheduled to start.\n   */\n  get startsAt() {\n    return this.getCurrentValue(this.startsAt$);\n  }\n\n  /**\n   * Will provide the time when this call has been updated.\n   */\n  get updatedAt() {\n    return this.getCurrentValue(this.updatedAt$);\n  }\n\n  /**\n   * Will provide the user who created this call.\n   */\n  get createdBy() {\n    return this.getCurrentValue(this.createdBy$);\n  }\n\n  /**\n   * Will provide the custom data of this call.\n   */\n  get custom() {\n    return this.getCurrentValue(this.custom$);\n  }\n\n  /**\n   * Will provide the egress data of this call.\n   */\n  get egress() {\n    return this.getCurrentValue(this.egress$);\n  }\n\n  /**\n   * Will provide the ingress data of this call.\n   */\n  get ingress() {\n    return this.getCurrentValue(this.ingress$);\n  }\n\n  /**\n   * Will provide the recording state of this call.\n   */\n  get recording() {\n    return this.getCurrentValue(this.recording$);\n  }\n\n  /**\n   * Will provide the session data of this call.\n   */\n  get session() {\n    return this.getCurrentValue(this.session$);\n  }\n\n  /**\n   * Will provide the settings of this call.\n   */\n  get settings() {\n    return this.getCurrentValue(this.settings$);\n  }\n\n  /**\n   * Will provide the transcribing state of this call.\n   */\n  get transcribing() {\n    return this.getCurrentValue(this.transcribing$);\n  }\n\n  /**\n   * Will provide the user who ended this call.\n   */\n  get endedBy() {\n    return this.getCurrentValue(this.endedBy$);\n  }\n\n  /**\n   * Will provide the thumbnails of this call, if enabled in the call settings.\n   */\n  get thumbnails() {\n    return this.getCurrentValue(this.thumbnails$);\n  }\n\n  /**\n   * Will try to find the participant with the given sessionId in the current call.\n   *\n   * @param sessionId the sessionId of the participant to find.\n   * @returns the participant with the given sessionId or undefined if not found.\n   */\n  findParticipantBySessionId = (\n    sessionId: string,\n  ): StreamVideoParticipant | undefined => {\n    return this.participants.find((p) => p.sessionId === sessionId);\n  };\n\n  /**\n   * Returns a new lookup table of participants indexed by their session ID.\n   */\n  getParticipantLookupBySessionId = () => {\n    return this.participants.reduce<{\n      [sessionId: string]: StreamVideoParticipant | undefined;\n    }>((lookupTable, participant) => {\n      lookupTable[participant.sessionId] = participant;\n      return lookupTable;\n    }, {});\n  };\n\n  /**\n   * Updates a participant in the current call identified by the given `sessionId`.\n   * If the participant can't be found, this operation is no-op.\n   *\n   * @internal\n   *\n   * @param sessionId the session ID of the participant to update.\n   * @param patch the patch to apply to the participant.\n   * @returns the updated participant or `undefined` if the participant couldn't be found.\n   */\n  updateParticipant = (\n    sessionId: string,\n    patch:\n      | StreamVideoParticipantPatch\n      | ((p: StreamVideoParticipant) => StreamVideoParticipantPatch),\n  ) => {\n    const participant = this.findParticipantBySessionId(sessionId);\n    if (!participant) {\n      this.logger('warn', `Participant with sessionId ${sessionId} not found`);\n      return;\n    }\n\n    const thePatch = typeof patch === 'function' ? patch(participant) : patch;\n    const updatedParticipant: StreamVideoParticipant = {\n      // FIXME OL: this is not a deep merge, we might want to revisit this\n      ...participant,\n      ...thePatch,\n    };\n    return this.setParticipants((participants) =>\n      participants.map((p) =>\n        p.sessionId === sessionId ? updatedParticipant : p,\n      ),\n    );\n  };\n\n  /**\n   * Updates a participant in the current call identified by the given `sessionId`.\n   * If a participant with matching `sessionId` can't be found, the provided\n   * `participant` is added to the list of participants.\n   *\n   * @param sessionId the session ID of the participant to update.\n   * @param participant the participant to update or add.\n   */\n  updateOrAddParticipant = (\n    sessionId: string,\n    participant: StreamVideoParticipant,\n  ) => {\n    return this.setParticipants((participants) => {\n      let add = true;\n      const nextParticipants = participants.map((p) => {\n        if (p.sessionId === sessionId) {\n          add = false;\n          return {\n            ...p,\n            ...participant,\n          };\n        }\n        return p;\n      });\n      if (add) nextParticipants.push(participant);\n      return nextParticipants;\n    });\n  };\n\n  /**\n   * Updates all participants in the current call whose session ID is in the given `sessionIds`.\n   * If no patches are provided, this operation is no-op.\n   *\n   * @internal\n   *\n   * @param patch the patch to apply to the participants.\n   * @returns all participants, with all patch applied.\n   */\n  updateParticipants = (patch: StreamVideoParticipantPatches) => {\n    if (Object.keys(patch).length === 0) return this.participants;\n    return this.setParticipants((participants) =>\n      participants.map((p) => {\n        const thePatch = patch[p.sessionId];\n        if (thePatch) {\n          return {\n            ...p,\n            ...thePatch,\n          };\n        }\n        return p;\n      }),\n    );\n  };\n\n  /**\n   * Update track subscription configuration for one or more participants.\n   * You have to create a subscription for each participant for all the different kinds of tracks you want to receive.\n   * You can only subscribe for tracks after the participant started publishing the given kind of track.\n   *\n   * @param trackType the kind of subscription to update.\n   * @param changes the list of subscription changes to do.\n   * @param type the debounce type to use for the update.\n   */\n  updateParticipantTracks = (\n    trackType: VideoTrackType,\n    changes: SubscriptionChanges,\n  ) => {\n    return this.updateParticipants(\n      Object.entries(changes).reduce<StreamVideoParticipantPatches>(\n        (acc, [sessionId, change]) => {\n          if (change.dimension) {\n            change.dimension.height = Math.ceil(change.dimension.height);\n            change.dimension.width = Math.ceil(change.dimension.width);\n          }\n          const prop: keyof StreamVideoParticipant | undefined =\n            trackType === 'videoTrack'\n              ? 'videoDimension'\n              : trackType === 'screenShareTrack'\n                ? 'screenShareDimension'\n                : undefined;\n          if (prop) {\n            acc[sessionId] = {\n              [prop]: change.dimension,\n            };\n          }\n          return acc;\n        },\n        {},\n      ),\n    );\n  };\n\n  /**\n   * Updates the call state with the data received from the server.\n   *\n   * @internal\n   *\n   * @param event the video event that our backend sent us.\n   */\n  updateFromEvent = (event: WSEvent) => {\n    const update = this.eventHandlers[event.type];\n    if (update) {\n      update(event as any);\n    }\n  };\n\n  /**\n   * Updates the participant pinned state with server side pinning data.\n   *\n   * @param pins the latest pins from the server.\n   */\n  setServerSidePins = (pins: Pin[]) => {\n    const pinsLookup = pins.reduce<{ [sessionId: string]: number | undefined }>(\n      (lookup, pin) => {\n        lookup[pin.sessionId] = Date.now();\n        return lookup;\n      },\n      {},\n    );\n\n    return this.setParticipants((participants) =>\n      participants.map((participant) => {\n        const serverSidePinnedAt = pinsLookup[participant.sessionId];\n        // the participant is newly pinned\n        if (serverSidePinnedAt) {\n          return {\n            ...participant,\n            pin: {\n              isLocalPin: false,\n              pinnedAt: serverSidePinnedAt,\n            },\n          };\n        }\n        // the participant is no longer pinned server side\n        // we need to reset the pin\n        if (participant.pin && !participant.pin.isLocalPin) {\n          return {\n            ...participant,\n            pin: undefined,\n          };\n        }\n        // no changes to be applied\n        return participant;\n      }),\n    );\n  };\n\n  /**\n   * Adds an orphaned track to the call state.\n   *\n   * @internal\n   *\n   * @param orphanedTrack the orphaned track to add.\n   */\n  registerOrphanedTrack = (orphanedTrack: OrphanedTrack) => {\n    this.orphanedTracks.push(orphanedTrack);\n  };\n\n  /**\n   * Removes an orphaned track from the call state.\n   *\n   * @internal\n   *\n   * @param id the ID of the orphaned track to remove.\n   */\n  removeOrphanedTrack = (id: string) => {\n    this.orphanedTracks = this.orphanedTracks.filter((o) => o.id !== id);\n  };\n\n  /**\n   * Takes all orphaned tracks with the given track lookup prefix.\n   * All orphaned tracks with the given track lookup prefix are removed from the call state.\n   *\n   * @internal\n   *\n   * @param trackLookupPrefix the track lookup prefix to match the orphaned tracks by.\n   */\n  takeOrphanedTracks = (trackLookupPrefix: string): OrphanedTrack[] => {\n    const orphans = this.orphanedTracks.filter(\n      (orphan) => orphan.trackLookupPrefix === trackLookupPrefix,\n    );\n    if (orphans.length > 0) {\n      this.orphanedTracks = this.orphanedTracks.filter(\n        (orphan) => orphan.trackLookupPrefix !== trackLookupPrefix,\n      );\n    }\n    return orphans;\n  };\n\n  /**\n   * Updates the call state with the data received from the server.\n   *\n   * @internal\n   *\n   * @param call the call response from the server.\n   */\n  updateFromCallResponse = (call: CallResponse) => {\n    this.setCurrentValue(this.backstageSubject, call.backstage);\n    this.setCurrentValue(this.blockedUserIdsSubject, call.blocked_user_ids);\n    this.setCurrentValue(this.createdAtSubject, new Date(call.created_at));\n    this.setCurrentValue(this.updatedAtSubject, new Date(call.updated_at));\n    this.setCurrentValue(\n      this.startsAtSubject,\n      call.starts_at ? new Date(call.starts_at) : undefined,\n    );\n    this.setEndedAt(call.ended_at ? new Date(call.ended_at) : undefined);\n    this.setCurrentValue(this.createdBySubject, call.created_by);\n    this.setCurrentValue(this.customSubject, call.custom);\n    this.setCurrentValue(this.egressSubject, call.egress);\n    this.setCurrentValue(this.ingressSubject, call.ingress);\n    this.setCurrentValue(this.recordingSubject, call.recording);\n    const s = this.setCurrentValue(this.sessionSubject, call.session);\n    this.updateParticipantCountFromSession(s);\n    this.setCurrentValue(this.settingsSubject, call.settings);\n    this.setCurrentValue(this.transcribingSubject, call.transcribing);\n    this.setCurrentValue(this.thumbnailsSubject, call.thumbnails);\n  };\n\n  /**\n   * Updates the call state with the data received from the SFU server.\n   *\n   * @internal\n   *\n   * @param callState the call state from the SFU server.\n   * @param currentSessionId the session ID of the current user.\n   * @param reconnectDetails optional reconnect details.\n   */\n  updateFromSfuCallState = (\n    callState: SfuCallState,\n    currentSessionId: string,\n    reconnectDetails?: ReconnectDetails,\n  ) => {\n    const { participants, participantCount, startedAt, pins } = callState;\n    const localPublishedTracks =\n      reconnectDetails?.announcedTracks.map((t) => t.trackType) ?? [];\n    this.setParticipants(() => {\n      const participantLookup = this.getParticipantLookupBySessionId();\n      return participants.map<StreamVideoParticipant>((p) => {\n        // We need to preserve the local state of the participant\n        // (e.g. videoDimension, visibilityState, pinnedAt, etc.)\n        // as it doesn't exist on the server.\n        const existingParticipant = participantLookup[p.sessionId];\n        const isLocalParticipant = p.sessionId === currentSessionId;\n        return Object.assign({}, existingParticipant, p, {\n          isLocalParticipant,\n          publishedTracks: isLocalParticipant\n            ? localPublishedTracks\n            : p.publishedTracks,\n          viewportVisibilityState:\n            existingParticipant?.viewportVisibilityState ?? {\n              videoTrack: VisibilityState.UNKNOWN,\n              screenShareTrack: VisibilityState.UNKNOWN,\n            },\n        } satisfies Partial<StreamVideoParticipant>);\n      });\n    });\n\n    this.setParticipantCount(participantCount?.total || 0);\n    this.setAnonymousParticipantCount(participantCount?.anonymous || 0);\n    this.setStartedAt(startedAt ? Timestamp.toDate(startedAt) : new Date());\n    this.setServerSidePins(pins);\n  };\n\n  private updateFromMemberRemoved = (event: CallMemberRemovedEvent) => {\n    this.updateFromCallResponse(event.call);\n    this.setCurrentValue(this.membersSubject, (members) =>\n      members.filter((m) => event.members.indexOf(m.user_id) === -1),\n    );\n  };\n\n  private updateFromMemberAdded = (event: CallMemberAddedEvent) => {\n    this.updateFromCallResponse(event.call);\n    this.setCurrentValue(this.membersSubject, (members) => [\n      ...members,\n      ...event.members,\n    ]);\n  };\n\n  private updateFromHLSBroadcastStopped = () => {\n    this.setCurrentValue(this.egressSubject, (egress = defaultEgress) => ({\n      ...egress,\n      broadcasting: false,\n    }));\n  };\n\n  private updateFromHLSBroadcastingFailed = () => {\n    this.setCurrentValue(this.egressSubject, (egress = defaultEgress) => ({\n      ...egress,\n      broadcasting: false,\n    }));\n  };\n\n  private updateFromHLSBroadcastStarted = (\n    event: CallHLSBroadcastingStartedEvent,\n  ) => {\n    this.setCurrentValue(this.egressSubject, (egress = defaultEgress) => ({\n      ...egress,\n      broadcasting: true,\n      hls: {\n        ...egress.hls,\n        playlist_url: event.hls_playlist_url,\n      },\n    }));\n  };\n\n  private updateParticipantCountFromSession = (\n    session: CallSessionResponse | undefined,\n  ) => {\n    // when in JOINED state, we should use the participant count coming through\n    // the SFU healthcheck event, as it's more accurate.\n    if (!session || this.callingState === CallingState.JOINED) return;\n    const byRoleCount = Object.values(\n      session.participants_count_by_role,\n    ).reduce((total, countByRole) => total + countByRole, 0);\n    const participantCount = Math.max(byRoleCount, session.participants.length);\n    this.setParticipantCount(participantCount);\n    this.setAnonymousParticipantCount(session.anonymous_participant_count || 0);\n  };\n\n  private updateFromSessionParticipantCountUpdate = (\n    event: CallSessionParticipantCountsUpdatedEvent,\n  ) => {\n    const s = this.setCurrentValue(this.sessionSubject, (session) => {\n      if (!session) return session;\n      return {\n        ...session,\n        anonymous_participant_count: event.anonymous_participant_count,\n        participants_count_by_role: event.participants_count_by_role,\n      };\n    });\n    this.updateParticipantCountFromSession(s);\n  };\n\n  private updateFromSessionParticipantLeft = (\n    event: CallSessionParticipantLeftEvent,\n  ) => {\n    const s = this.setCurrentValue(this.sessionSubject, (session) => {\n      if (!session) return session;\n      const { participants, participants_count_by_role } = session;\n      const { user, user_session_id } = event.participant;\n      return {\n        ...session,\n        participants: participants.filter(\n          (p) => p.user_session_id !== user_session_id,\n        ),\n        participants_count_by_role: {\n          ...participants_count_by_role,\n          [user.role]: Math.max(\n            0,\n            (participants_count_by_role[user.role] || 0) - 1,\n          ),\n        },\n      };\n    });\n    this.updateParticipantCountFromSession(s);\n  };\n\n  private updateFromSessionParticipantJoined = (\n    event: CallSessionParticipantJoinedEvent,\n  ) => {\n    const s = this.setCurrentValue(this.sessionSubject, (session) => {\n      if (!session) return session;\n      const { participants, participants_count_by_role } = session;\n      const { user, user_session_id } = event.participant;\n      // It could happen that the backend delivers the same participant more than once.\n      // Once with the call.session_started event and once again with the\n      // call.session_participant_joined event. In this case,\n      // we should update the existing participant and prevent duplicating it.\n      let shouldInsertParticipant = true;\n      const updatedParticipants = participants.map((p) => {\n        if (p.user_session_id === user_session_id) {\n          shouldInsertParticipant = false;\n          return event.participant;\n        }\n        return p;\n      });\n      if (shouldInsertParticipant) {\n        // this is a new array, we can safely push the new participant\n        updatedParticipants.push(event.participant);\n      }\n\n      // If we are updating an existing participant, we don't want to increment\n      // the participant_by_role count.\n      const increment = shouldInsertParticipant ? 1 : 0;\n      return {\n        ...session,\n        participants: updatedParticipants,\n        participants_count_by_role: {\n          ...participants_count_by_role,\n          [user.role]: (participants_count_by_role[user.role] || 0) + increment,\n        },\n      };\n    });\n    this.updateParticipantCountFromSession(s);\n  };\n\n  private updateMembers = (\n    event: CallMemberUpdatedEvent | CallMemberUpdatedPermissionEvent,\n  ) => {\n    this.updateFromCallResponse(event.call);\n    this.setCurrentValue(this.membersSubject, (members) =>\n      members.map((member) => {\n        const memberUpdate = event.members.find(\n          (m) => m.user_id === member.user_id,\n        );\n        return memberUpdate ? memberUpdate : member;\n      }),\n    );\n  };\n\n  private updateParticipantReaction = (event: CallReactionEvent) => {\n    const { user, custom, type, emoji_code } = event.reaction;\n    this.setParticipants((participants) => {\n      return participants.map((p) => {\n        // skip if the reaction is not for this participant\n        if (p.userId !== user.id) return p;\n        // update the participant with the new reaction\n        return {\n          ...p,\n          reaction: {\n            type,\n            emoji_code,\n            custom,\n          },\n        };\n      });\n    });\n  };\n\n  private unblockUser = (event: UnblockedUserEvent) => {\n    this.setCurrentValue(this.blockedUserIdsSubject, (current) => {\n      if (!current) return current;\n      return current.filter((id) => id !== event.user.id);\n    });\n  };\n\n  private blockUser = (event: BlockedUserEvent) => {\n    this.setCurrentValue(this.blockedUserIdsSubject, (current) => [\n      ...(current || []),\n      event.user.id,\n    ]);\n  };\n\n  private updateOwnCapabilities = (event: UpdatedCallPermissionsEvent) => {\n    if (event.user.id === this.localParticipant?.userId) {\n      this.setCurrentValue(this.ownCapabilitiesSubject, event.own_capabilities);\n    }\n  };\n}\n", "import * as SDP from 'sdp-transform';\n\ntype Media = {\n  original: string;\n  mediaWithPorts: string;\n  codecOrder: string;\n};\n\ntype RtpMap = {\n  original: string;\n  payload: string;\n  codec: string;\n};\n\ntype Fmtp = {\n  original: string;\n  payload: string;\n  config: string;\n};\n\nconst getRtpMap = (line: string): RtpMap | undefined => {\n  // Example: a=rtpmap:110 opus/48000/2\n  const rtpRegex = /^a=rtpmap:(\\d*) ([\\w\\-.]*)(?:\\s*\\/(\\d*)(?:\\s*\\/(\\S*))?)?/;\n  // The first captured group is the payload type number, the second captured group is the encoding name, the third captured group is the clock rate, and the fourth captured group is any additional parameters.\n  const rtpMatch = rtpRegex.exec(line);\n  if (rtpMatch) {\n    return {\n      original: rtpMatch[0],\n      payload: rtpMatch[1],\n      codec: rtpMatch[2],\n    };\n  }\n};\n\nconst getFmtp = (line: string): Fmtp | undefined => {\n  // Example: a=fmtp:111 minptime=10; useinbandfec=1\n  const fmtpRegex = /^a=fmtp:(\\d*) (.*)/;\n  const fmtpMatch = fmtpRegex.exec(line);\n  // The first captured group is the payload type number, the second captured group is any additional parameters.\n  if (fmtpMatch) {\n    return {\n      original: fmtpMatch[0],\n      payload: fmtpMatch[1],\n      config: fmtpMatch[2],\n    };\n  }\n};\n\n/**\n * gets the media section for the specified media type.\n * The media section contains the media type, port, codec, and payload type.\n * Example: m=video 9 UDP/TLS/RTP/SAVPF 100 101 96 97 35 36 102 125 127\n */\nconst getMedia = (line: string, mediaType: string): Media | undefined => {\n  const regex = new RegExp(`(m=${mediaType} \\\\d+ [\\\\w/]+) ([\\\\d\\\\s]+)`);\n  const match = regex.exec(line);\n  if (match) {\n    return {\n      original: match[0],\n      mediaWithPorts: match[1],\n      codecOrder: match[2],\n    };\n  }\n};\n\nconst getMediaSection = (sdp: string, mediaType: 'video' | 'audio') => {\n  let media: Media | undefined;\n  const rtpMap: RtpMap[] = [];\n  const fmtp: Fmtp[] = [];\n  let isTheRequiredMediaSection = false;\n  sdp.split(/(\\r\\n|\\r|\\n)/).forEach((line) => {\n    const isValidLine = /^([a-z])=(.*)/.test(line);\n    if (!isValidLine) return;\n    /*\n      NOTE: according to https://www.rfc-editor.org/rfc/rfc8866.pdf\n      Each media description starts with an \"m=\" line and continues to the next media description or the end of the whole session description, whichever comes first\n    */\n    const type = line[0];\n    if (type === 'm') {\n      const _media = getMedia(line, mediaType);\n      isTheRequiredMediaSection = !!_media;\n      if (_media) {\n        media = _media;\n      }\n    } else if (isTheRequiredMediaSection && type === 'a') {\n      const rtpMapLine = getRtpMap(line);\n      const fmtpLine = getFmtp(line);\n      if (rtpMapLine) {\n        rtpMap.push(rtpMapLine);\n      } else if (fmtpLine) {\n        fmtp.push(fmtpLine);\n      }\n    }\n  });\n  if (media) {\n    return {\n      media,\n      rtpMap,\n      fmtp,\n    };\n  }\n};\n\n/**\n * Gets the fmtp line corresponding to opus\n */\nconst getOpusFmtp = (sdp: string): Fmtp | undefined => {\n  const section = getMediaSection(sdp, 'audio');\n  const rtpMap = section?.rtpMap.find((r) => r.codec.toLowerCase() === 'opus');\n  const codecId = rtpMap?.payload;\n  if (codecId) {\n    return section?.fmtp.find((f) => f.payload === codecId);\n  }\n};\n\n/**\n * Returns an SDP with DTX enabled or disabled.\n */\nexport const toggleDtx = (sdp: string, enable: boolean): string => {\n  const opusFmtp = getOpusFmtp(sdp);\n  if (!opusFmtp) return sdp;\n\n  const matchDtx = /usedtx=(\\d)/.exec(opusFmtp.config);\n  const requiredDtxConfig = `usedtx=${enable ? '1' : '0'}`;\n  const newFmtp = matchDtx\n    ? opusFmtp.original.replace(/usedtx=(\\d)/, requiredDtxConfig)\n    : `${opusFmtp.original};${requiredDtxConfig}`;\n\n  return sdp.replace(opusFmtp.original, newFmtp);\n};\n\n/**\n * Enables high-quality audio through SDP munging for the given trackMid.\n *\n * @param sdp the SDP to munge.\n * @param trackMid the trackMid.\n * @param maxBitrate the max bitrate to set.\n */\nexport const enableHighQualityAudio = (\n  sdp: string,\n  trackMid: string,\n  maxBitrate: number = 510000,\n): string => {\n  maxBitrate = Math.max(Math.min(maxBitrate, 510000), 96000);\n\n  const parsedSdp = SDP.parse(sdp);\n  const audioMedia = parsedSdp.media.find(\n    (m) => m.type === 'audio' && String(m.mid) === trackMid,\n  );\n\n  if (!audioMedia) return sdp;\n\n  const opusRtp = audioMedia.rtp.find((r) => r.codec === 'opus');\n  if (!opusRtp) return sdp;\n\n  const opusFmtp = audioMedia.fmtp.find((f) => f.payload === opusRtp.payload);\n  if (!opusFmtp) return sdp;\n\n  // enable stereo, if not already enabled\n  if (opusFmtp.config.match(/stereo=(\\d)/)) {\n    opusFmtp.config = opusFmtp.config.replace(/stereo=(\\d)/, 'stereo=1');\n  } else {\n    opusFmtp.config = `${opusFmtp.config};stereo=1`;\n  }\n\n  // set maxaveragebitrate, to the given value\n  if (opusFmtp.config.match(/maxaveragebitrate=(\\d*)/)) {\n    opusFmtp.config = opusFmtp.config.replace(\n      /maxaveragebitrate=(\\d*)/,\n      `maxaveragebitrate=${maxBitrate}`,\n    );\n  } else {\n    opusFmtp.config = `${opusFmtp.config};maxaveragebitrate=${maxBitrate}`;\n  }\n\n  return SDP.write(parsedSdp);\n};\n\n/**\n * Extracts the mid from the transceiver or the SDP.\n *\n * @param transceiver the transceiver.\n * @param transceiverInitIndex the index of the transceiver in the transceiver's init array.\n * @param sdp the SDP.\n */\nexport const extractMid = (\n  transceiver: RTCRtpTransceiver,\n  transceiverInitIndex: number,\n  sdp: string | undefined,\n): string => {\n  if (transceiver.mid) return transceiver.mid;\n  if (!sdp) return '';\n\n  const track = transceiver.sender.track!;\n  const parsedSdp = SDP.parse(sdp);\n  const media = parsedSdp.media.find((m) => {\n    return (\n      m.type === track.kind &&\n      // if `msid` is not present, we assume that the track is the first one\n      (m.msid?.includes(track.id) ?? true)\n    );\n  });\n  if (typeof media?.mid !== 'undefined') return String(media.mid);\n  if (transceiverInitIndex === -1) return '';\n  return String(transceiverInitIndex);\n};\n", "import { StreamSfuClient } from '../StreamSfuClient';\nimport {\n  PeerType,\n  TrackInfo,\n  TrackType,\n  VideoLayer,\n} from '../gen/video/sfu/models/models';\nimport { getIceCandidate } from './helpers/iceCandidate';\nimport {\n  findOptimalScreenSharingLayers,\n  findOptimalVideoLayers,\n  OptimalVideoLayer,\n  ridToVideoQuality,\n  toSvcEncodings,\n} from './videoLayers';\nimport { getOptimalVideoCodec, getPreferredCodecs, isSvcCodec } from './codecs';\nimport { trackTypeToParticipantStreamKey } from './helpers/tracks';\nimport { CallingState, CallState } from '../store';\nimport { PublishOptions } from '../types';\nimport {\n  enableHighQualityAudio,\n  extractMid,\n  toggleDtx,\n} from '../helpers/sdp-munging';\nimport { Logger } from '../coordinator/connection/types';\nimport { getLogger } from '../logger';\nimport { Dispatcher } from './Dispatcher';\nimport { VideoLayerSetting } from '../gen/video/sfu/event/events';\nimport { TargetResolutionResponse } from '../gen/shims';\nimport { withoutConcurrency } from '../helpers/concurrency';\n\nexport type PublisherConstructorOpts = {\n  sfuClient: StreamSfuClient;\n  state: CallState;\n  dispatcher: Dispatcher;\n  connectionConfig?: RTCConfiguration;\n  isDtxEnabled: boolean;\n  isRedEnabled: boolean;\n  onUnrecoverableError?: () => void;\n  logTag: string;\n};\n\n/**\n * The `Publisher` is responsible for publishing/unpublishing media streams to/from the SFU\n *\n * @internal\n */\nexport class Publisher {\n  private readonly logger: Logger;\n  private pc: RTCPeerConnection;\n  private readonly state: CallState;\n  private readonly transceiverCache = new Map<TrackType, RTCRtpTransceiver>();\n  private readonly trackLayersCache = new Map<TrackType, OptimalVideoLayer[]>();\n  private readonly publishOptsForTrack = new Map<TrackType, PublishOptions>();\n\n  /**\n   * An array maintaining the order how transceivers were added to the peer connection.\n   * This is needed because some browsers (Firefox) don't reliably report\n   * trackId and `mid` parameters.\n   *\n   * @internal\n   */\n  private readonly transceiverInitOrder: TrackType[] = [];\n  private readonly isDtxEnabled: boolean;\n  private readonly isRedEnabled: boolean;\n\n  private readonly unsubscribeOnIceRestart: () => void;\n  private readonly unsubscribeChangePublishQuality: () => void;\n  private readonly onUnrecoverableError?: () => void;\n\n  private isIceRestarting = false;\n  private sfuClient: StreamSfuClient;\n\n  /**\n   * Constructs a new `Publisher` instance.\n   */\n  constructor({\n    connectionConfig,\n    sfuClient,\n    dispatcher,\n    state,\n    isDtxEnabled,\n    isRedEnabled,\n    onUnrecoverableError,\n    logTag,\n  }: PublisherConstructorOpts) {\n    this.logger = getLogger(['Publisher', logTag]);\n    this.pc = this.createPeerConnection(connectionConfig);\n    this.sfuClient = sfuClient;\n    this.state = state;\n    this.isDtxEnabled = isDtxEnabled;\n    this.isRedEnabled = isRedEnabled;\n    this.onUnrecoverableError = onUnrecoverableError;\n\n    this.unsubscribeOnIceRestart = dispatcher.on('iceRestart', (iceRestart) => {\n      if (iceRestart.peerType !== PeerType.PUBLISHER_UNSPECIFIED) return;\n      this.restartIce().catch((err) => {\n        this.logger('warn', `ICERestart failed`, err);\n        this.onUnrecoverableError?.();\n      });\n    });\n\n    this.unsubscribeChangePublishQuality = dispatcher.on(\n      'changePublishQuality',\n      ({ videoSenders }) => {\n        withoutConcurrency('publisher.changePublishQuality', async () => {\n          for (const videoSender of videoSenders) {\n            const { layers } = videoSender;\n            const enabledLayers = layers.filter((l) => l.active);\n            await this.changePublishQuality(enabledLayers);\n          }\n        }).catch((err) => {\n          this.logger('warn', 'Failed to change publish quality', err);\n        });\n      },\n    );\n  }\n\n  private createPeerConnection = (connectionConfig?: RTCConfiguration) => {\n    const pc = new RTCPeerConnection(connectionConfig);\n    pc.addEventListener('icecandidate', this.onIceCandidate);\n    pc.addEventListener('negotiationneeded', this.onNegotiationNeeded);\n\n    pc.addEventListener('icecandidateerror', this.onIceCandidateError);\n    pc.addEventListener(\n      'iceconnectionstatechange',\n      this.onIceConnectionStateChange,\n    );\n    pc.addEventListener(\n      'icegatheringstatechange',\n      this.onIceGatheringStateChange,\n    );\n    pc.addEventListener('signalingstatechange', this.onSignalingStateChange);\n    return pc;\n  };\n\n  /**\n   * Closes the publisher PeerConnection and cleans up the resources.\n   */\n  close = ({ stopTracks }: { stopTracks: boolean }) => {\n    if (stopTracks) {\n      this.stopPublishing();\n      this.transceiverCache.clear();\n      this.trackLayersCache.clear();\n    }\n\n    this.detachEventHandlers();\n    this.pc.close();\n  };\n\n  /**\n   * Detaches the event handlers from the `RTCPeerConnection`.\n   * This is useful when we want to replace the `RTCPeerConnection`\n   * instance with a new one (in case of migration).\n   */\n  detachEventHandlers = () => {\n    this.unsubscribeOnIceRestart();\n    this.unsubscribeChangePublishQuality();\n\n    this.pc.removeEventListener('icecandidate', this.onIceCandidate);\n    this.pc.removeEventListener('negotiationneeded', this.onNegotiationNeeded);\n    this.pc.removeEventListener('icecandidateerror', this.onIceCandidateError);\n    this.pc.removeEventListener(\n      'iceconnectionstatechange',\n      this.onIceConnectionStateChange,\n    );\n    this.pc.removeEventListener(\n      'icegatheringstatechange',\n      this.onIceGatheringStateChange,\n    );\n    this.pc.removeEventListener(\n      'signalingstatechange',\n      this.onSignalingStateChange,\n    );\n  };\n\n  /**\n   * Starts publishing the given track of the given media stream.\n   *\n   * Consecutive calls to this method will replace the stream.\n   * The previous stream will be stopped.\n   *\n   * @param mediaStream the media stream to publish.\n   * @param track the track to publish.\n   * @param trackType the track type to publish.\n   * @param opts the optional publish options to use.\n   */\n  publishStream = async (\n    mediaStream: MediaStream,\n    track: MediaStreamTrack,\n    trackType: TrackType,\n    opts: PublishOptions = {},\n  ) => {\n    if (track.readyState === 'ended') {\n      throw new Error(`Can't publish a track that has ended already.`);\n    }\n\n    // enable the track if it is disabled\n    if (!track.enabled) track.enabled = true;\n\n    const transceiver = this.transceiverCache.get(trackType);\n    if (!transceiver || !transceiver.sender.track) {\n      // listen for 'ended' event on the track as it might be ended abruptly\n      // by an external factors such as permission revokes, a disconnected device, etc.\n      // keep in mind that `track.stop()` doesn't trigger this event.\n      const handleTrackEnded = () => {\n        this.logger('info', `Track ${TrackType[trackType]} has ended abruptly`);\n        track.removeEventListener('ended', handleTrackEnded);\n        this.notifyTrackMuteStateChanged(mediaStream, trackType, true).catch(\n          (err) => this.logger('warn', `Couldn't notify track mute state`, err),\n        );\n      };\n      track.addEventListener('ended', handleTrackEnded);\n      this.addTransceiver(trackType, track, opts, mediaStream);\n    } else {\n      await this.updateTransceiver(transceiver, track);\n    }\n\n    await this.notifyTrackMuteStateChanged(mediaStream, trackType, false);\n  };\n\n  /**\n   * Adds a new transceiver to the peer connection.\n   * This needs to be called when a new track kind is added to the peer connection.\n   * In other cases, use `updateTransceiver` method.\n   */\n  private addTransceiver = (\n    trackType: TrackType,\n    track: MediaStreamTrack,\n    opts: PublishOptions,\n    mediaStream: MediaStream,\n  ) => {\n    const { forceCodec, preferredCodec } = opts;\n    const codecInUse = forceCodec || getOptimalVideoCodec(preferredCodec);\n    const videoEncodings = this.computeLayers(trackType, track, opts);\n    const transceiver = this.pc.addTransceiver(track, {\n      direction: 'sendonly',\n      streams:\n        trackType === TrackType.VIDEO || trackType === TrackType.SCREEN_SHARE\n          ? [mediaStream]\n          : undefined,\n      sendEncodings: isSvcCodec(codecInUse)\n        ? toSvcEncodings(videoEncodings)\n        : videoEncodings,\n    });\n\n    this.logger('debug', `Added ${TrackType[trackType]} transceiver`);\n    this.transceiverInitOrder.push(trackType);\n    this.transceiverCache.set(trackType, transceiver);\n    this.publishOptsForTrack.set(trackType, opts);\n\n    // handle codec preferences\n    if (!('setCodecPreferences' in transceiver)) return;\n\n    const codecPreferences = this.getCodecPreferences(\n      trackType,\n      trackType === TrackType.VIDEO ? codecInUse : undefined,\n    );\n    if (!codecPreferences) return;\n\n    try {\n      this.logger(\n        'info',\n        `Setting ${TrackType[trackType]} codec preferences`,\n        codecPreferences,\n      );\n      transceiver.setCodecPreferences(codecPreferences);\n    } catch (err) {\n      this.logger('warn', `Couldn't set codec preferences`, err);\n    }\n  };\n\n  /**\n   * Updates the given transceiver with the new track.\n   * Stops the previous track and replaces it with the new one.\n   */\n  private updateTransceiver = async (\n    transceiver: RTCRtpTransceiver,\n    track: MediaStreamTrack,\n  ) => {\n    const previousTrack = transceiver.sender.track;\n    // don't stop the track if we are re-publishing the same track\n    if (previousTrack && previousTrack !== track) {\n      previousTrack.stop();\n    }\n    await transceiver.sender.replaceTrack(track);\n  };\n\n  /**\n   * Stops publishing the given track type to the SFU, if it is currently being published.\n   * Underlying track will be stopped and removed from the publisher.\n   * @param trackType the track type to unpublish.\n   * @param stopTrack specifies whether track should be stopped or just disabled\n   */\n  unpublishStream = async (trackType: TrackType, stopTrack: boolean) => {\n    const transceiver = this.transceiverCache.get(trackType);\n    if (\n      transceiver &&\n      transceiver.sender.track &&\n      (stopTrack\n        ? transceiver.sender.track.readyState === 'live'\n        : transceiver.sender.track.enabled)\n    ) {\n      stopTrack\n        ? transceiver.sender.track.stop()\n        : (transceiver.sender.track.enabled = false);\n      // We don't need to notify SFU if unpublishing in response to remote soft mute\n      if (this.state.localParticipant?.publishedTracks.includes(trackType)) {\n        await this.notifyTrackMuteStateChanged(undefined, trackType, true);\n      }\n    }\n  };\n\n  /**\n   * Returns true if the given track type is currently being published to the SFU.\n   *\n   * @param trackType the track type to check.\n   */\n  isPublishing = (trackType: TrackType): boolean => {\n    const transceiver = this.transceiverCache.get(trackType);\n    if (!transceiver || !transceiver.sender) return false;\n    const track = transceiver.sender.track;\n    return !!track && track.readyState === 'live' && track.enabled;\n  };\n\n  private notifyTrackMuteStateChanged = async (\n    mediaStream: MediaStream | undefined,\n    trackType: TrackType,\n    isMuted: boolean,\n  ) => {\n    await this.sfuClient.updateMuteState(trackType, isMuted);\n\n    const audioOrVideoOrScreenShareStream =\n      trackTypeToParticipantStreamKey(trackType);\n    if (!audioOrVideoOrScreenShareStream) return;\n    if (isMuted) {\n      this.state.updateParticipant(this.sfuClient.sessionId, (p) => ({\n        publishedTracks: p.publishedTracks.filter((t) => t !== trackType),\n        [audioOrVideoOrScreenShareStream]: undefined,\n      }));\n    } else {\n      this.state.updateParticipant(this.sfuClient.sessionId, (p) => {\n        return {\n          publishedTracks: p.publishedTracks.includes(trackType)\n            ? p.publishedTracks\n            : [...p.publishedTracks, trackType],\n          [audioOrVideoOrScreenShareStream]: mediaStream,\n        };\n      });\n    }\n  };\n\n  /**\n   * Stops publishing all tracks and stop all tracks.\n   */\n  private stopPublishing = () => {\n    this.logger('debug', 'Stopping publishing all tracks');\n    this.pc.getSenders().forEach((s) => {\n      s.track?.stop();\n      if (this.pc.signalingState !== 'closed') {\n        this.pc.removeTrack(s);\n      }\n    });\n  };\n\n  private changePublishQuality = async (enabledLayers: VideoLayerSetting[]) => {\n    this.logger(\n      'info',\n      'Update publish quality, requested layers by SFU:',\n      enabledLayers,\n    );\n\n    const videoSender = this.transceiverCache.get(TrackType.VIDEO)?.sender;\n    if (!videoSender) {\n      this.logger('warn', 'Update publish quality, no video sender found.');\n      return;\n    }\n\n    const params = videoSender.getParameters();\n    if (params.encodings.length === 0) {\n      this.logger(\n        'warn',\n        'Update publish quality, No suitable video encoding quality found',\n      );\n      return;\n    }\n\n    const [codecInUse] = params.codecs;\n    const usesSvcCodec = codecInUse && isSvcCodec(codecInUse.mimeType);\n\n    let changed = false;\n    for (const encoder of params.encodings) {\n      const layer = usesSvcCodec\n        ? // for SVC, we only have one layer (q) and often rid is omitted\n          enabledLayers[0]\n        : // for non-SVC, we need to find the layer by rid (simulcast)\n          enabledLayers.find((l) => l.name === encoder.rid) ??\n          (params.encodings.length === 1 ? enabledLayers[0] : undefined);\n\n      // flip 'active' flag only when necessary\n      const shouldActivate = !!layer?.active;\n      if (shouldActivate !== encoder.active) {\n        encoder.active = shouldActivate;\n        changed = true;\n      }\n\n      // skip the rest of the settings if the layer is disabled or not found\n      if (!layer) continue;\n\n      const {\n        maxFramerate,\n        scaleResolutionDownBy,\n        maxBitrate,\n        scalabilityMode,\n      } = layer;\n      if (\n        scaleResolutionDownBy >= 1 &&\n        scaleResolutionDownBy !== encoder.scaleResolutionDownBy\n      ) {\n        encoder.scaleResolutionDownBy = scaleResolutionDownBy;\n        changed = true;\n      }\n      if (maxBitrate > 0 && maxBitrate !== encoder.maxBitrate) {\n        encoder.maxBitrate = maxBitrate;\n        changed = true;\n      }\n      if (maxFramerate > 0 && maxFramerate !== encoder.maxFramerate) {\n        encoder.maxFramerate = maxFramerate;\n        changed = true;\n      }\n      // @ts-expect-error scalabilityMode is not in the typedefs yet\n      if (scalabilityMode && scalabilityMode !== encoder.scalabilityMode) {\n        // @ts-expect-error scalabilityMode is not in the typedefs yet\n        encoder.scalabilityMode = scalabilityMode;\n        changed = true;\n      }\n    }\n\n    const activeLayers = params.encodings.filter((e) => e.active);\n    if (!changed) {\n      this.logger('info', `Update publish quality, no change:`, activeLayers);\n      return;\n    }\n\n    await videoSender.setParameters(params);\n    this.logger('info', `Update publish quality, enabled rids:`, activeLayers);\n  };\n\n  /**\n   * Returns the result of the `RTCPeerConnection.getStats()` method\n   * @param selector\n   * @returns\n   */\n  getStats = (selector?: MediaStreamTrack | null | undefined) => {\n    return this.pc.getStats(selector);\n  };\n\n  private getCodecPreferences = (\n    trackType: TrackType,\n    preferredCodec?: string,\n  ) => {\n    if (trackType === TrackType.VIDEO) {\n      return getPreferredCodecs('video', preferredCodec || 'vp8');\n    }\n    if (trackType === TrackType.AUDIO) {\n      const defaultAudioCodec = this.isRedEnabled ? 'red' : 'opus';\n      const codecToRemove = !this.isRedEnabled ? 'red' : undefined;\n      return getPreferredCodecs(\n        'audio',\n        preferredCodec ?? defaultAudioCodec,\n        codecToRemove,\n      );\n    }\n  };\n\n  private onIceCandidate = (e: RTCPeerConnectionIceEvent) => {\n    const { candidate } = e;\n    if (!candidate) {\n      this.logger('debug', 'null ice candidate');\n      return;\n    }\n    this.sfuClient\n      .iceTrickle({\n        iceCandidate: getIceCandidate(candidate),\n        peerType: PeerType.PUBLISHER_UNSPECIFIED,\n      })\n      .catch((err) => {\n        this.logger('warn', `ICETrickle failed`, err);\n      });\n  };\n\n  /**\n   * Sets the SFU client to use.\n   *\n   * @param sfuClient the SFU client to use.\n   */\n  setSfuClient = (sfuClient: StreamSfuClient) => {\n    this.sfuClient = sfuClient;\n  };\n\n  /**\n   * Restarts the ICE connection and renegotiates with the SFU.\n   */\n  restartIce = async () => {\n    this.logger('debug', 'Restarting ICE connection');\n    const signalingState = this.pc.signalingState;\n    if (this.isIceRestarting || signalingState === 'have-local-offer') {\n      this.logger('debug', 'ICE restart is already in progress');\n      return;\n    }\n    await this.negotiate({ iceRestart: true });\n  };\n\n  private onNegotiationNeeded = () => {\n    this.negotiate().catch((err) => {\n      this.logger('error', `Negotiation failed.`, err);\n      this.onUnrecoverableError?.();\n    });\n  };\n\n  /**\n   * Initiates a new offer/answer exchange with the currently connected SFU.\n   *\n   * @param options the optional offer options to use.\n   */\n  private negotiate = async (options?: RTCOfferOptions) => {\n    const offer = await this.pc.createOffer(options);\n    if (offer.sdp) {\n      offer.sdp = toggleDtx(offer.sdp, this.isDtxEnabled);\n      if (this.isPublishing(TrackType.SCREEN_SHARE_AUDIO)) {\n        offer.sdp = this.enableHighQualityAudio(offer.sdp);\n      }\n    }\n\n    const trackInfos = this.getAnnouncedTracks(offer.sdp);\n    if (trackInfos.length === 0) {\n      throw new Error(`Can't negotiate without announcing any tracks`);\n    }\n\n    try {\n      this.isIceRestarting = options?.iceRestart ?? false;\n      await this.pc.setLocalDescription(offer);\n\n      const { response } = await this.sfuClient.setPublisher({\n        sdp: offer.sdp || '',\n        tracks: trackInfos,\n      });\n\n      if (response.error) throw new Error(response.error.message);\n      await this.pc.setRemoteDescription({ type: 'answer', sdp: response.sdp });\n    } finally {\n      this.isIceRestarting = false;\n    }\n\n    this.sfuClient.iceTrickleBuffer.publisherCandidates.subscribe(\n      async (candidate) => {\n        try {\n          const iceCandidate = JSON.parse(candidate.iceCandidate);\n          await this.pc.addIceCandidate(iceCandidate);\n        } catch (e) {\n          this.logger('warn', `ICE candidate error`, e, candidate);\n        }\n      },\n    );\n  };\n\n  private enableHighQualityAudio = (sdp: string) => {\n    const transceiver = this.transceiverCache.get(TrackType.SCREEN_SHARE_AUDIO);\n    if (!transceiver) return sdp;\n\n    const transceiverInitIndex = this.transceiverInitOrder.indexOf(\n      TrackType.SCREEN_SHARE_AUDIO,\n    );\n    const mid = extractMid(transceiver, transceiverInitIndex, sdp);\n    return enableHighQualityAudio(sdp, mid);\n  };\n\n  /**\n   * Returns a list of tracks that are currently being published.\n   *\n   * @internal\n   * @param sdp an optional SDP to extract the `mid` from.\n   */\n  getAnnouncedTracks = (sdp?: string): TrackInfo[] => {\n    sdp = sdp || this.pc.localDescription?.sdp;\n    return this.pc\n      .getTransceivers()\n      .filter((t) => t.direction === 'sendonly' && t.sender.track)\n      .map<TrackInfo>((transceiver) => {\n        let trackType!: TrackType;\n        this.transceiverCache.forEach((value, key) => {\n          if (value === transceiver) trackType = key;\n        });\n        const track = transceiver.sender.track!;\n        let optimalLayers: OptimalVideoLayer[];\n        const isTrackLive = track.readyState === 'live';\n        if (isTrackLive) {\n          optimalLayers = this.computeLayers(trackType, track) || [];\n          this.trackLayersCache.set(trackType, optimalLayers);\n        } else {\n          // we report the last known optimal layers for ended tracks\n          optimalLayers = this.trackLayersCache.get(trackType) || [];\n          this.logger(\n            'debug',\n            `Track ${TrackType[trackType]} is ended. Announcing last known optimal layers`,\n            optimalLayers,\n          );\n        }\n\n        const layers = optimalLayers.map<VideoLayer>((optimalLayer) => ({\n          rid: optimalLayer.rid || '',\n          bitrate: optimalLayer.maxBitrate || 0,\n          fps: optimalLayer.maxFramerate || 0,\n          quality: ridToVideoQuality(optimalLayer.rid || ''),\n          videoDimension: {\n            width: optimalLayer.width,\n            height: optimalLayer.height,\n          },\n        }));\n\n        const isAudioTrack = [\n          TrackType.AUDIO,\n          TrackType.SCREEN_SHARE_AUDIO,\n        ].includes(trackType);\n\n        const trackSettings = track.getSettings();\n        const isStereo = isAudioTrack && trackSettings.channelCount === 2;\n        const transceiverInitIndex =\n          this.transceiverInitOrder.indexOf(trackType);\n        return {\n          trackId: track.id,\n          layers: layers,\n          trackType,\n          mid: extractMid(transceiver, transceiverInitIndex, sdp),\n          stereo: isStereo,\n          dtx: isAudioTrack && this.isDtxEnabled,\n          red: isAudioTrack && this.isRedEnabled,\n          muted: !isTrackLive,\n        };\n      });\n  };\n\n  private computeLayers = (\n    trackType: TrackType,\n    track: MediaStreamTrack,\n    opts?: PublishOptions,\n  ): OptimalVideoLayer[] | undefined => {\n    const { settings } = this.state;\n    const targetResolution = settings?.video\n      .target_resolution as TargetResolutionResponse;\n    const screenShareBitrate =\n      settings?.screensharing.target_resolution?.bitrate;\n\n    const publishOpts = opts || this.publishOptsForTrack.get(trackType);\n    const codecInUse = getOptimalVideoCodec(publishOpts?.preferredCodec);\n    return trackType === TrackType.VIDEO\n      ? findOptimalVideoLayers(track, targetResolution, codecInUse, publishOpts)\n      : trackType === TrackType.SCREEN_SHARE\n        ? findOptimalScreenSharingLayers(track, publishOpts, screenShareBitrate)\n        : undefined;\n  };\n\n  private onIceCandidateError = (e: Event) => {\n    const errorMessage =\n      e instanceof RTCPeerConnectionIceErrorEvent &&\n      `${e.errorCode}: ${e.errorText}`;\n    const iceState = this.pc.iceConnectionState;\n    const logLevel =\n      iceState === 'connected' || iceState === 'checking' ? 'debug' : 'warn';\n    this.logger(logLevel, `ICE Candidate error`, errorMessage);\n  };\n\n  private onIceConnectionStateChange = () => {\n    const state = this.pc.iceConnectionState;\n    this.logger('debug', `ICE Connection state changed to`, state);\n\n    if (this.state.callingState === CallingState.RECONNECTING) return;\n\n    if (state === 'failed' || state === 'disconnected') {\n      this.logger('debug', `Attempting to restart ICE`);\n      this.restartIce().catch((e) => {\n        this.logger('error', `ICE restart error`, e);\n        this.onUnrecoverableError?.();\n      });\n    }\n  };\n\n  private onIceGatheringStateChange = () => {\n    this.logger('debug', `ICE Gathering State`, this.pc.iceGatheringState);\n  };\n\n  private onSignalingStateChange = () => {\n    this.logger('debug', `Signaling state changed`, this.pc.signalingState);\n  };\n}\n", "import { StreamSfuClient } from '../StreamSfuClient';\nimport { getIceCandidate } from './helpers/iceCandidate';\nimport { PeerType } from '../gen/video/sfu/models/models';\nimport { SubscriberOffer } from '../gen/video/sfu/event/events';\nimport { Dispatcher } from './Dispatcher';\nimport { getLogger } from '../logger';\nimport { CallingState, CallState } from '../store';\nimport { withoutConcurrency } from '../helpers/concurrency';\nimport { toTrackType, trackTypeToParticipantStreamKey } from './helpers/tracks';\nimport { Logger } from '../coordinator/connection/types';\n\nexport type SubscriberOpts = {\n  sfuClient: StreamSfuClient;\n  dispatcher: Dispatcher;\n  state: CallState;\n  connectionConfig?: RTCConfiguration;\n  onUnrecoverableError?: () => void;\n  logTag: string;\n};\n\n/**\n * A wrapper around the `RTCPeerConnection` that handles the incoming\n * media streams from the SFU.\n *\n * @internal\n */\nexport class Subscriber {\n  private readonly logger: Logger;\n  private pc: RTCPeerConnection;\n  private sfuClient: StreamSfuClient;\n  private state: CallState;\n\n  private readonly unregisterOnSubscriberOffer: () => void;\n  private readonly unregisterOnIceRestart: () => void;\n  private readonly onUnrecoverableError?: () => void;\n\n  private isIceRestarting = false;\n\n  /**\n   * Constructs a new `Subscriber` instance.\n   *\n   * @param sfuClient the SFU client to use.\n   * @param dispatcher the dispatcher to use.\n   * @param state the state of the call.\n   * @param connectionConfig the connection configuration to use.\n   * @param iceRestartDelay the delay in milliseconds to wait before restarting ICE when connection goes to `disconnected` state.\n   * @param onUnrecoverableError a callback to call when an unrecoverable error occurs.\n   * @param logTag a tag to use for logging.\n   */\n  constructor({\n    sfuClient,\n    dispatcher,\n    state,\n    connectionConfig,\n    onUnrecoverableError,\n    logTag,\n  }: SubscriberOpts) {\n    this.logger = getLogger(['Subscriber', logTag]);\n    this.sfuClient = sfuClient;\n    this.state = state;\n    this.onUnrecoverableError = onUnrecoverableError;\n\n    this.pc = this.createPeerConnection(connectionConfig);\n\n    const subscriberOfferConcurrencyTag = Symbol('subscriberOffer');\n    this.unregisterOnSubscriberOffer = dispatcher.on(\n      'subscriberOffer',\n      (subscriberOffer) => {\n        withoutConcurrency(subscriberOfferConcurrencyTag, () => {\n          return this.negotiate(subscriberOffer);\n        }).catch((err) => {\n          this.logger('error', `Negotiation failed.`, err);\n        });\n      },\n    );\n\n    const iceRestartConcurrencyTag = Symbol('iceRestart');\n    this.unregisterOnIceRestart = dispatcher.on('iceRestart', (iceRestart) => {\n      withoutConcurrency(iceRestartConcurrencyTag, async () => {\n        if (iceRestart.peerType !== PeerType.SUBSCRIBER) return;\n        await this.restartIce();\n      }).catch((err) => {\n        this.logger('error', `ICERestart failed`, err);\n        this.onUnrecoverableError?.();\n      });\n    });\n  }\n\n  /**\n   * Creates a new `RTCPeerConnection` instance with the given configuration.\n   *\n   * @param connectionConfig the connection configuration to use.\n   */\n  private createPeerConnection = (connectionConfig?: RTCConfiguration) => {\n    const pc = new RTCPeerConnection(connectionConfig);\n    pc.addEventListener('icecandidate', this.onIceCandidate);\n    pc.addEventListener('track', this.handleOnTrack);\n\n    pc.addEventListener('icecandidateerror', this.onIceCandidateError);\n    pc.addEventListener(\n      'iceconnectionstatechange',\n      this.onIceConnectionStateChange,\n    );\n    pc.addEventListener(\n      'icegatheringstatechange',\n      this.onIceGatheringStateChange,\n    );\n\n    return pc;\n  };\n\n  /**\n   * Closes the `RTCPeerConnection` and unsubscribes from the dispatcher.\n   */\n  close = () => {\n    this.detachEventHandlers();\n    this.pc.close();\n  };\n\n  /**\n   * Detaches the event handlers from the `RTCPeerConnection`.\n   * This is useful when we want to replace the `RTCPeerConnection`\n   * instance with a new one (in case of migration).\n   */\n  detachEventHandlers = () => {\n    this.unregisterOnSubscriberOffer();\n    this.unregisterOnIceRestart();\n\n    this.pc.removeEventListener('icecandidate', this.onIceCandidate);\n    this.pc.removeEventListener('track', this.handleOnTrack);\n    this.pc.removeEventListener('icecandidateerror', this.onIceCandidateError);\n    this.pc.removeEventListener(\n      'iceconnectionstatechange',\n      this.onIceConnectionStateChange,\n    );\n    this.pc.removeEventListener(\n      'icegatheringstatechange',\n      this.onIceGatheringStateChange,\n    );\n  };\n\n  /**\n   * Returns the result of the `RTCPeerConnection.getStats()` method\n   * @param selector\n   * @returns\n   */\n  getStats = (selector?: MediaStreamTrack | null | undefined) => {\n    return this.pc.getStats(selector);\n  };\n\n  /**\n   * Sets the SFU client to use.\n   *\n   * @param sfuClient the SFU client to use.\n   */\n  setSfuClient = (sfuClient: StreamSfuClient) => {\n    this.sfuClient = sfuClient;\n  };\n\n  /**\n   * Restarts the ICE connection and renegotiates with the SFU.\n   */\n  restartIce = async () => {\n    this.logger('debug', 'Restarting ICE connection');\n    if (this.pc.signalingState === 'have-remote-offer') {\n      this.logger('debug', 'ICE restart is already in progress');\n      return;\n    }\n    if (this.pc.connectionState === 'new') {\n      this.logger(\n        'debug',\n        `ICE connection is not yet established, skipping restart.`,\n      );\n      return;\n    }\n    const previousIsIceRestarting = this.isIceRestarting;\n    try {\n      this.isIceRestarting = true;\n      await this.sfuClient.iceRestart({\n        peerType: PeerType.SUBSCRIBER,\n      });\n    } catch (e) {\n      // restore the previous state, as our intent for restarting ICE failed\n      this.isIceRestarting = previousIsIceRestarting;\n      throw e;\n    }\n  };\n\n  private handleOnTrack = (e: RTCTrackEvent) => {\n    const [primaryStream] = e.streams;\n    // example: `e3f6aaf8-b03d-4911-be36-83f47d37a76a:TRACK_TYPE_VIDEO`\n    const [trackId, rawTrackType] = primaryStream.id.split(':');\n    const participantToUpdate = this.state.participants.find(\n      (p) => p.trackLookupPrefix === trackId,\n    );\n    this.logger(\n      'debug',\n      `[onTrack]: Got remote ${rawTrackType} track for userId: ${participantToUpdate?.userId}`,\n      e.track.id,\n      e.track,\n    );\n\n    const trackDebugInfo = `${participantToUpdate?.userId} ${rawTrackType}:${trackId}`;\n    e.track.addEventListener('mute', () => {\n      this.logger('info', `[onTrack]: Track muted: ${trackDebugInfo}`);\n    });\n\n    e.track.addEventListener('unmute', () => {\n      this.logger('info', `[onTrack]: Track unmuted: ${trackDebugInfo}`);\n    });\n\n    e.track.addEventListener('ended', () => {\n      this.logger('info', `[onTrack]: Track ended: ${trackDebugInfo}`);\n      this.state.removeOrphanedTrack(primaryStream.id);\n    });\n\n    const trackType = toTrackType(rawTrackType);\n    if (!trackType) {\n      return this.logger('error', `Unknown track type: ${rawTrackType}`);\n    }\n\n    if (!participantToUpdate) {\n      this.logger(\n        'warn',\n        `[onTrack]: Received track for unknown participant: ${trackId}`,\n        e,\n      );\n      this.state.registerOrphanedTrack({\n        id: primaryStream.id,\n        trackLookupPrefix: trackId,\n        track: primaryStream,\n        trackType,\n      });\n      return;\n    }\n\n    const streamKindProp = trackTypeToParticipantStreamKey(trackType);\n    if (!streamKindProp) {\n      this.logger('error', `Unknown track type: ${rawTrackType}`);\n      return;\n    }\n    const previousStream = participantToUpdate[streamKindProp];\n    if (previousStream) {\n      this.logger(\n        'info',\n        `[onTrack]: Cleaning up previous remote ${e.track.kind} tracks for userId: ${participantToUpdate.userId}`,\n      );\n      previousStream.getTracks().forEach((t) => {\n        t.stop();\n        previousStream.removeTrack(t);\n      });\n    }\n    this.state.updateParticipant(participantToUpdate.sessionId, {\n      [streamKindProp]: primaryStream,\n    });\n  };\n\n  private onIceCandidate = (e: RTCPeerConnectionIceEvent) => {\n    const { candidate } = e;\n    if (!candidate) {\n      this.logger('debug', 'null ice candidate');\n      return;\n    }\n\n    this.sfuClient\n      .iceTrickle({\n        iceCandidate: getIceCandidate(candidate),\n        peerType: PeerType.SUBSCRIBER,\n      })\n      .catch((err) => {\n        this.logger('warn', `ICETrickle failed`, err);\n      });\n  };\n\n  private negotiate = async (subscriberOffer: SubscriberOffer) => {\n    this.logger('info', `Received subscriberOffer`, subscriberOffer);\n\n    await this.pc.setRemoteDescription({\n      type: 'offer',\n      sdp: subscriberOffer.sdp,\n    });\n\n    this.sfuClient.iceTrickleBuffer.subscriberCandidates.subscribe(\n      async (candidate) => {\n        try {\n          const iceCandidate = JSON.parse(candidate.iceCandidate);\n          await this.pc.addIceCandidate(iceCandidate);\n        } catch (e) {\n          this.logger('warn', `ICE candidate error`, [e, candidate]);\n        }\n      },\n    );\n\n    const answer = await this.pc.createAnswer();\n    await this.pc.setLocalDescription(answer);\n\n    await this.sfuClient.sendAnswer({\n      peerType: PeerType.SUBSCRIBER,\n      sdp: answer.sdp || '',\n    });\n\n    this.isIceRestarting = false;\n  };\n\n  private onIceConnectionStateChange = () => {\n    const state = this.pc.iceConnectionState;\n    this.logger('debug', `ICE connection state changed`, state);\n\n    if (this.state.callingState === CallingState.RECONNECTING) return;\n\n    // do nothing when ICE is restarting\n    if (this.isIceRestarting) return;\n\n    if (state === 'failed' || state === 'disconnected') {\n      this.logger('debug', `Attempting to restart ICE`);\n      this.restartIce().catch((e) => {\n        this.logger('error', `ICE restart failed`, e);\n        this.onUnrecoverableError?.();\n      });\n    }\n  };\n\n  private onIceGatheringStateChange = () => {\n    this.logger(\n      'debug',\n      `ICE gathering state changed`,\n      this.pc.iceGatheringState,\n    );\n  };\n\n  private onIceCandidateError = (e: Event) => {\n    const errorMessage =\n      e instanceof RTCPeerConnectionIceErrorEvent &&\n      `${e.errorCode}: ${e.errorText}`;\n    const iceState = this.pc.iceConnectionState;\n    const logLevel =\n      iceState === 'connected' || iceState === 'checking' ? 'debug' : 'warn';\n    this.logger(logLevel, `ICE Candidate error`, errorMessage);\n  };\n}\n", "import { SfuEvent } from '../gen/video/sfu/event/events';\nimport { getLogger } from '../logger';\nimport { DispatchableMessage, SfuEventKinds } from './Dispatcher';\n\nexport const createWebSocketSignalChannel = (opts: {\n  endpoint: string;\n  onMessage: <K extends SfuEventKinds>(message: DispatchableMessage<K>) => void;\n  logTag: string;\n}) => {\n  const { endpoint, onMessage, logTag } = opts;\n  const logger = getLogger(['SfuClientWS', logTag]);\n  const ws = new WebSocket(endpoint);\n  ws.binaryType = 'arraybuffer'; // do we need this?\n\n  ws.addEventListener('error', (e) => {\n    logger('error', 'Signaling WS channel error', e);\n  });\n\n  ws.addEventListener('close', (e) => {\n    logger('info', 'Signaling WS channel is closed', e);\n  });\n\n  ws.addEventListener('open', (e) => {\n    logger('info', 'Signaling WS channel is open', e);\n  });\n\n  ws.addEventListener('message', (e) => {\n    try {\n      const message =\n        e.data instanceof ArrayBuffer\n          ? SfuEvent.fromBinary(new Uint8Array(e.data))\n          : SfuEvent.fromJsonString(e.data.toString());\n\n      onMessage(message as DispatchableMessage<SfuEventKinds>);\n    } catch (err) {\n      logger(\n        'error',\n        'Failed to decode a message. Check whether the Proto models match.',\n        { event: e, error: err },\n      );\n    }\n  });\n  return ws;\n};\n", "export type PromiseWithResolvers<T> = {\n  promise: Promise<T>;\n  resolve: (value: T | PromiseLike<T>) => void;\n  reject: (reason: any) => void;\n  isResolved: boolean;\n  isRejected: boolean;\n};\n\n/**\n * Creates a new promise with resolvers.\n *\n * Based on:\n * - https://github.com/tc39/proposal-promise-with-resolvers/blob/main/polyfills.js\n */\nexport const promiseWithResolvers = <T = void>(): PromiseWithResolvers<T> => {\n  let resolve: (value: T | PromiseLike<T>) => void;\n  let reject: (reason: any) => void;\n  const promise = new Promise<T>((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n\n  let isResolved = false;\n  let isRejected = false;\n\n  const resolver = (value: T | PromiseLike<T>) => {\n    isResolved = true;\n    resolve(value);\n  };\n\n  const rejecter = (reason: any) => {\n    isRejected = true;\n    reject(reason);\n  };\n\n  return {\n    promise,\n    resolve: resolver,\n    reject: rejecter,\n    isResolved,\n    isRejected,\n  };\n};\n", "import { SignalServerClient } from './gen/video/sfu/signal_rpc/signal.client';\nimport {\n  createSignalClient,\n  retryable,\n  withHeaders,\n  withRequestLogger,\n} from './rpc';\nimport {\n  createWebSocketSignalChannel,\n  Dispatcher,\n  IceTrickleBuffer,\n} from './rtc';\nimport {\n  JoinRequest,\n  JoinResponse,\n  SfuRequest,\n} from './gen/video/sfu/event/events';\nimport {\n  ICERestartRequest,\n  SendAnswerRequest,\n  SendStatsRequest,\n  SetPublisherRequest,\n  TrackSubscriptionDetails,\n  UpdateMuteStatesRequest,\n} from './gen/video/sfu/signal_rpc/signal';\nimport { ICETrickle, TrackType } from './gen/video/sfu/models/models';\nimport { StreamClient } from './coordinator/connection/client';\nimport { generateUUIDv4, sleep } from './coordinator/connection/utils';\nimport { Credentials } from './gen/coordinator';\nimport { Logger } from './coordinator/connection/types';\nimport { getLogger, getLogLevel } from './logger';\nimport { withoutConcurrency } from './helpers/concurrency';\nimport {\n  promiseWithResolvers,\n  PromiseWithResolvers,\n} from './helpers/withResolvers';\n\nexport type StreamSfuClientConstructor = {\n  /**\n   * The event dispatcher instance to use.\n   */\n  dispatcher: Dispatcher;\n\n  /**\n   * The credentials to use for the connection.\n   */\n  credentials: Credentials;\n\n  /**\n   * `sessionId` to use for the connection.\n   */\n  sessionId?: string;\n\n  /**\n   * A log tag to use for logging. Useful for debugging multiple instances.\n   */\n  logTag: string;\n\n  /**\n   * The timeout in milliseconds for waiting for the `joinResponse`.\n   * Defaults to 5000ms.\n   */\n  joinResponseTimeout?: number;\n\n  /**\n   * Callback for when the WebSocket connection is closed.\n   */\n  onSignalClose?: () => void;\n\n  /**\n   * The StreamClient instance to use for the connection.\n   */\n  streamClient: StreamClient;\n};\n\n/**\n * The client used for exchanging information with the SFU.\n */\nexport class StreamSfuClient {\n  /**\n   * A buffer for ICE Candidates that are received before\n   * the Publisher and Subscriber Peer Connections are ready to handle them.\n   */\n  readonly iceTrickleBuffer = new IceTrickleBuffer();\n\n  /**\n   * The `sessionId` of the currently connected participant.\n   */\n  readonly sessionId: string;\n\n  /**\n   * The `edgeName` representing the edge the client is connected to.\n   */\n  readonly edgeName: string;\n\n  /**\n   * Holds the current WebSocket connection to the SFU.\n   */\n  private signalWs!: WebSocket;\n\n  /**\n   * Promise that resolves when the WebSocket connection is ready (open).\n   */\n  private signalReady!: Promise<WebSocket>;\n\n  /**\n   * Flag to indicate if the client is in the process of leaving the call.\n   * This is set to `true` when the user initiates the leave process.\n   */\n  isLeaving = false;\n\n  private readonly rpc: SignalServerClient;\n  private keepAliveInterval?: NodeJS.Timeout;\n  private connectionCheckTimeout?: NodeJS.Timeout;\n  private migrateAwayTimeout?: NodeJS.Timeout;\n  private pingIntervalInMs = 10 * 1000;\n  private unhealthyTimeoutInMs = this.pingIntervalInMs + 5 * 1000;\n  private lastMessageTimestamp?: Date;\n  private readonly restoreWebSocketConcurrencyTag = Symbol('recoverWebSocket');\n  private readonly unsubscribeIceTrickle: () => void;\n  private readonly unsubscribeNetworkChanged: () => void;\n  private readonly onSignalClose: (() => void) | undefined;\n  private readonly logger: Logger;\n  private readonly logTag: string;\n  private readonly credentials: Credentials;\n  private readonly dispatcher: Dispatcher;\n  private readonly joinResponseTimeout?: number;\n  private networkAvailableTask: PromiseWithResolvers<void> | undefined;\n  /**\n   * Promise that resolves when the JoinResponse is received.\n   * Rejects after a certain threshold if the response is not received.\n   */\n  private joinResponseTask = promiseWithResolvers<JoinResponse>();\n\n  /**\n   * Promise that resolves when the migration is complete.\n   * Rejects after a certain threshold if the migration is not complete.\n   */\n  private migrationTask?: PromiseWithResolvers<void>;\n\n  /**\n   * A controller to abort the current requests.\n   */\n  private readonly abortController = new AbortController();\n\n  /**\n   * The normal closure code. Used for controlled shutdowns.\n   */\n  static NORMAL_CLOSURE = 1000;\n  /**\n   * The error code used when the SFU connection is unhealthy.\n   * Usually, this means that no message has been received from the SFU for\n   * a certain amount of time (`connectionCheckTimeout`).\n   */\n  static ERROR_CONNECTION_UNHEALTHY = 4001;\n  /**\n   * The error code used when the SFU connection is disposed because a new\n   * connection is established or is about to be established.\n   * Here, we don't use 1000 (normal closure) because we don't want the\n   * SFU to clean up the resources associated with the current participant.\n   */\n  static DISPOSE_OLD_SOCKET = 4002;\n\n  /**\n   * Constructs a new SFU client.\n   */\n  constructor({\n    dispatcher,\n    credentials,\n    sessionId,\n    logTag,\n    joinResponseTimeout = 5000,\n    onSignalClose,\n    streamClient,\n  }: StreamSfuClientConstructor) {\n    this.dispatcher = dispatcher;\n    this.sessionId = sessionId || generateUUIDv4();\n    this.onSignalClose = onSignalClose;\n    this.credentials = credentials;\n    const { server, token } = credentials;\n    this.edgeName = server.edge_name;\n    this.joinResponseTimeout = joinResponseTimeout;\n    this.logTag = logTag;\n    this.logger = getLogger(['SfuClient', logTag]);\n    this.rpc = createSignalClient({\n      baseUrl: server.url,\n      interceptors: [\n        withHeaders({\n          Authorization: `Bearer ${token}`,\n        }),\n        getLogLevel() === 'trace' && withRequestLogger(this.logger, 'trace'),\n      ].filter((v) => !!v),\n    });\n\n    // Special handling for the ICETrickle kind of events.\n    // The SFU might trigger these events before the initial RTC\n    // connection is established or \"JoinResponse\" received.\n    // In that case, those events (ICE candidates) need to be buffered\n    // and later added to the appropriate PeerConnection\n    // once the remoteDescription is known and set.\n    this.unsubscribeIceTrickle = dispatcher.on('iceTrickle', (iceTrickle) => {\n      this.iceTrickleBuffer.push(iceTrickle);\n    });\n\n    // listen to network changes to handle offline state\n    // we shouldn't attempt to recover websocket connection when offline\n    this.unsubscribeNetworkChanged = streamClient.on('network.changed', (e) => {\n      if (!e.online) {\n        this.networkAvailableTask = promiseWithResolvers();\n      } else {\n        this.networkAvailableTask?.resolve();\n      }\n    });\n\n    this.createWebSocket();\n  }\n\n  private createWebSocket = () => {\n    this.signalWs = createWebSocketSignalChannel({\n      logTag: this.logTag,\n      endpoint: `${this.credentials.server.ws_endpoint}?tag=${this.logTag}`,\n      onMessage: (message) => {\n        this.lastMessageTimestamp = new Date();\n        this.scheduleConnectionCheck();\n        this.dispatcher.dispatch(message, this.logTag);\n      },\n    });\n\n    this.signalWs.addEventListener('close', this.handleWebSocketClose);\n    this.signalWs.addEventListener('error', this.restoreWebSocket);\n\n    this.signalReady = new Promise((resolve) => {\n      const onOpen = () => {\n        this.signalWs.removeEventListener('open', onOpen);\n        resolve(this.signalWs);\n      };\n      this.signalWs.addEventListener('open', onOpen);\n    });\n  };\n\n  private cleanUpWebSocket = () => {\n    this.signalWs.removeEventListener('error', this.restoreWebSocket);\n    this.signalWs.removeEventListener('close', this.handleWebSocketClose);\n  };\n\n  private restoreWebSocket = () => {\n    withoutConcurrency(this.restoreWebSocketConcurrencyTag, async () => {\n      await this.networkAvailableTask?.promise;\n      this.logger('debug', 'Restoring SFU WS connection');\n      this.cleanUpWebSocket();\n      await sleep(500);\n      this.createWebSocket();\n    }).catch((err) => this.logger('debug', `Can't restore WS connection`, err));\n  };\n\n  get isHealthy() {\n    return this.signalWs.readyState === WebSocket.OPEN;\n  }\n\n  get joinTask() {\n    return this.joinResponseTask.promise;\n  }\n\n  private handleWebSocketClose = () => {\n    this.signalWs.removeEventListener('close', this.handleWebSocketClose);\n    clearInterval(this.keepAliveInterval);\n    clearTimeout(this.connectionCheckTimeout);\n    this.onSignalClose?.();\n  };\n\n  close = (code: number = StreamSfuClient.NORMAL_CLOSURE, reason?: string) => {\n    if (this.signalWs.readyState === WebSocket.OPEN) {\n      this.logger('debug', `Closing SFU WS connection: ${code} - ${reason}`);\n      this.signalWs.close(code, `js-client: ${reason}`);\n      this.cleanUpWebSocket();\n    }\n    this.dispose();\n  };\n\n  dispose = () => {\n    this.logger('debug', 'Disposing SFU client');\n    this.unsubscribeIceTrickle();\n    this.unsubscribeNetworkChanged();\n    clearInterval(this.keepAliveInterval);\n    clearTimeout(this.connectionCheckTimeout);\n    clearTimeout(this.migrateAwayTimeout);\n    this.abortController.abort();\n    this.migrationTask?.resolve();\n  };\n\n  leaveAndClose = async (reason: string) => {\n    await this.joinTask;\n    try {\n      this.isLeaving = true;\n      await this.notifyLeave(reason);\n    } catch (err) {\n      this.logger('debug', 'Error notifying SFU about leaving call', err);\n    }\n\n    this.close(StreamSfuClient.NORMAL_CLOSURE, reason.substring(0, 115));\n  };\n\n  updateSubscriptions = async (tracks: TrackSubscriptionDetails[]) => {\n    await this.joinTask;\n    return retryable(\n      () => this.rpc.updateSubscriptions({ sessionId: this.sessionId, tracks }),\n      this.abortController.signal,\n    );\n  };\n\n  setPublisher = async (data: Omit<SetPublisherRequest, 'sessionId'>) => {\n    await this.joinTask;\n    return retryable(\n      () => this.rpc.setPublisher({ ...data, sessionId: this.sessionId }),\n      this.abortController.signal,\n    );\n  };\n\n  sendAnswer = async (data: Omit<SendAnswerRequest, 'sessionId'>) => {\n    await this.joinTask;\n    return retryable(\n      () => this.rpc.sendAnswer({ ...data, sessionId: this.sessionId }),\n      this.abortController.signal,\n    );\n  };\n\n  iceTrickle = async (data: Omit<ICETrickle, 'sessionId'>) => {\n    await this.joinTask;\n    return retryable(\n      () => this.rpc.iceTrickle({ ...data, sessionId: this.sessionId }),\n      this.abortController.signal,\n    );\n  };\n\n  iceRestart = async (data: Omit<ICERestartRequest, 'sessionId'>) => {\n    await this.joinTask;\n    return retryable(\n      () => this.rpc.iceRestart({ ...data, sessionId: this.sessionId }),\n      this.abortController.signal,\n    );\n  };\n\n  updateMuteState = async (trackType: TrackType, muted: boolean) => {\n    await this.joinTask;\n    return this.updateMuteStates({ muteStates: [{ trackType, muted }] });\n  };\n\n  updateMuteStates = async (\n    data: Omit<UpdateMuteStatesRequest, 'sessionId'>,\n  ) => {\n    await this.joinTask;\n    return retryable(\n      () => this.rpc.updateMuteStates({ ...data, sessionId: this.sessionId }),\n      this.abortController.signal,\n    );\n  };\n\n  sendStats = async (stats: Omit<SendStatsRequest, 'sessionId'>) => {\n    await this.joinTask;\n    return retryable(\n      () => this.rpc.sendStats({ ...stats, sessionId: this.sessionId }),\n      this.abortController.signal,\n    );\n  };\n\n  startNoiseCancellation = async () => {\n    await this.joinTask;\n    return retryable(\n      () => this.rpc.startNoiseCancellation({ sessionId: this.sessionId }),\n      this.abortController.signal,\n    );\n  };\n\n  stopNoiseCancellation = async () => {\n    await this.joinTask;\n    return retryable(\n      () => this.rpc.stopNoiseCancellation({ sessionId: this.sessionId }),\n      this.abortController.signal,\n    );\n  };\n\n  enterMigration = async (opts: { timeout?: number } = {}) => {\n    this.isLeaving = true;\n    const { timeout = 7 * 1000 } = opts;\n\n    this.migrationTask?.reject(new Error('Cancelled previous migration'));\n    const task = (this.migrationTask = promiseWithResolvers());\n    const unsubscribe = this.dispatcher.on(\n      'participantMigrationComplete',\n      () => {\n        unsubscribe();\n        clearTimeout(this.migrateAwayTimeout);\n        task.resolve();\n      },\n    );\n    this.migrateAwayTimeout = setTimeout(() => {\n      unsubscribe();\n      task.reject(\n        new Error(\n          `Migration (${this.logTag}) failed to complete in ${timeout}ms`,\n        ),\n      );\n    }, timeout);\n\n    return task.promise;\n  };\n\n  join = async (\n    data: Omit<JoinRequest, 'sessionId' | 'token'>,\n  ): Promise<JoinResponse> => {\n    // wait for the signal web socket to be ready before sending \"joinRequest\"\n    await this.signalReady;\n    if (this.joinResponseTask.isResolved || this.joinResponseTask.isRejected) {\n      // we need to lock the RPC requests until we receive a JoinResponse.\n      // that's why we have this primitive lock mechanism.\n      // the client starts with already initialized joinResponseTask,\n      // and this code creates a new one for the next join request.\n      this.joinResponseTask = promiseWithResolvers<JoinResponse>();\n    }\n\n    // capture a reference to the current joinResponseTask as it might\n    // be replaced with a new one in case a second join request is made\n    const current = this.joinResponseTask;\n\n    let timeoutId: NodeJS.Timeout;\n    const unsubscribe = this.dispatcher.on('joinResponse', (joinResponse) => {\n      this.logger('debug', 'Received joinResponse', joinResponse);\n      clearTimeout(timeoutId);\n      unsubscribe();\n      this.keepAlive();\n      current.resolve(joinResponse);\n    });\n\n    timeoutId = setTimeout(() => {\n      unsubscribe();\n      current.reject(new Error('Waiting for \"joinResponse\" has timed out'));\n    }, this.joinResponseTimeout);\n\n    await this.send(\n      SfuRequest.create({\n        requestPayload: {\n          oneofKind: 'joinRequest',\n          joinRequest: JoinRequest.create({\n            ...data,\n            sessionId: this.sessionId,\n            token: this.credentials.token,\n          }),\n        },\n      }),\n    );\n\n    return current.promise;\n  };\n\n  ping = async () => {\n    return this.send(\n      SfuRequest.create({\n        requestPayload: {\n          oneofKind: 'healthCheckRequest',\n          healthCheckRequest: {},\n        },\n      }),\n    );\n  };\n\n  private notifyLeave = async (reason: string) => {\n    return this.send(\n      SfuRequest.create({\n        requestPayload: {\n          oneofKind: 'leaveCallRequest',\n          leaveCallRequest: {\n            sessionId: this.sessionId,\n            reason,\n          },\n        },\n      }),\n    );\n  };\n\n  private send = async (message: SfuRequest) => {\n    await this.signalReady; // wait for the signal ws to be open\n    const msgJson = SfuRequest.toJson(message);\n    if (this.signalWs.readyState !== WebSocket.OPEN) {\n      this.logger('debug', 'Signal WS is not open. Skipping message', msgJson);\n      return;\n    }\n    this.logger('debug', `Sending message to: ${this.edgeName}`, msgJson);\n    this.signalWs.send(SfuRequest.toBinary(message));\n  };\n\n  private keepAlive = () => {\n    clearInterval(this.keepAliveInterval);\n    this.keepAliveInterval = setInterval(() => {\n      this.ping().catch((e) => {\n        this.logger('error', 'Error sending healthCheckRequest to SFU', e);\n      });\n    }, this.pingIntervalInMs);\n  };\n\n  private scheduleConnectionCheck = () => {\n    clearTimeout(this.connectionCheckTimeout);\n    this.connectionCheckTimeout = setTimeout(() => {\n      if (this.lastMessageTimestamp) {\n        const timeSinceLastMessage =\n          new Date().getTime() - this.lastMessageTimestamp.getTime();\n\n        if (timeSinceLastMessage > this.unhealthyTimeoutInMs) {\n          this.close(\n            StreamSfuClient.ERROR_CONNECTION_UNHEALTHY,\n            `SFU connection unhealthy. Didn't receive any message for ${this.unhealthyTimeoutInMs}ms`,\n          );\n        }\n      }\n    }, this.unhealthyTimeoutInMs);\n  };\n}\n", "import { ICEServer } from '../../gen/coordinator';\n\nexport const toRtcConfiguration = (config: ICEServer[]): RTCConfiguration => {\n  return {\n    iceServers: config.map((ice) => ({\n      urls: ice.urls,\n      username: ice.username,\n      credential: ice.password,\n    })),\n  };\n};\n", "import { CallingState } from '../store';\nimport { Call } from '../Call';\nimport type { CallAcceptedEvent, CallRejectedEvent } from '../gen/coordinator';\nimport { CallEnded } from '../gen/video/sfu/event/events';\nimport { CallEndedReason } from '../gen/video/sfu/models/models';\n\n/**\n * Event handler that watched the delivery of `call.accepted`.\n * Once the event is received, the call is joined.\n */\nexport const watchCallAccepted = (call: Call) => {\n  return async function onCallAccepted(event: CallAcceptedEvent) {\n    // We want to discard the event if it's from the current user\n    if (event.user.id === call.currentUserId) return;\n    const { state } = call;\n    if (\n      event.call.created_by.id === call.currentUserId &&\n      state.callingState === CallingState.RINGING\n    ) {\n      await call.join();\n    }\n  };\n};\n\n/**\n * Event handler that watches delivery of `call.rejected` Websocket event.\n * Once the event is received, the call is left.\n */\nexport const watchCallRejected = (call: Call) => {\n  return async function onCallRejected(event: CallRejectedEvent) {\n    // We want to discard the event if it's from the current user\n    if (event.user.id === call.currentUserId) return;\n    const { call: eventCall } = event;\n    const { session: callSession } = eventCall;\n\n    if (!callSession) {\n      call.logger(\n        'warn',\n        'No call session provided. Ignoring call.rejected event.',\n        event,\n      );\n      return;\n    }\n\n    const rejectedBy = callSession.rejected_by;\n    const { members, callingState } = call.state;\n    if (callingState !== CallingState.RINGING) {\n      call.logger(\n        'info',\n        'Call is not in ringing mode (it is either accepted or rejected already). Ignoring call.rejected event.',\n        event,\n      );\n      return;\n    }\n    if (call.isCreatedByMe) {\n      const everyoneElseRejected = members\n        .filter((m) => m.user_id !== call.currentUserId)\n        .every((m) => rejectedBy[m.user_id]);\n      if (everyoneElseRejected) {\n        call.logger('info', 'everyone rejected, leaving the call');\n        await call.leave({ reason: 'ring: everyone rejected' });\n      }\n    } else {\n      if (rejectedBy[eventCall.created_by.id]) {\n        call.logger('info', 'call creator rejected, leaving call');\n        await call.leave({ reason: 'ring: creator rejected' });\n      }\n    }\n  };\n};\n\n/**\n * Event handler that watches the delivery of `call.ended` Websocket event.\n */\nexport const watchCallEnded = (call: Call) => {\n  return function onCallEnded() {\n    const { callingState } = call.state;\n    if (\n      callingState !== CallingState.IDLE &&\n      callingState !== CallingState.LEFT\n    ) {\n      call.leave({ reason: 'call.ended event received' }).catch((err) => {\n        call.logger('error', 'Failed to leave call after call.ended ', err);\n      });\n    }\n  };\n};\n\n/**\n * Watches for `callEnded` events.\n */\nexport const watchSfuCallEnded = (call: Call) => {\n  return call.on('callEnded', async (e: CallEnded) => {\n    if (call.state.callingState === CallingState.LEFT) return;\n    try {\n      // `call.ended` event arrived after the call is already left\n      // and all event handlers are detached. We need to manually\n      // update the call state to reflect the call has ended.\n      call.state.setEndedAt(new Date());\n      const reason = CallEndedReason[e.reason];\n      await call.leave({ reason: `callEnded received: ${reason}` });\n    } catch (err) {\n      call.logger(\n        'error',\n        'Failed to leave call after being ended by the SFU',\n        err,\n      );\n    }\n  });\n};\n", "import { CallState } from '../store';\nimport type { CallGrantsUpdated } from '../gen/video/sfu/event/events';\nimport { OwnCapability } from '../gen/coordinator';\n\n/**\n * Event handler that watches for `callGrantsUpdated` events.\n *\n * @param state the call state to update.\n */\nexport const watchCallGrantsUpdated = (state: CallState) => {\n  return function onCallGrantsUpdated(event: CallGrantsUpdated) {\n    const { currentGrants } = event;\n    if (currentGrants) {\n      const { canPublishAudio, canPublishVideo, canScreenshare } =\n        currentGrants;\n\n      const update: Partial<Record<OwnCapability, boolean>> = {\n        [OwnCapability.SEND_AUDIO]: canPublishAudio,\n        [OwnCapability.SEND_VIDEO]: canPublishVideo,\n        [OwnCapability.SCREENSHARE]: canScreenshare,\n      };\n\n      const nextCapabilities = state.ownCapabilities.filter(\n        (capability) => update[capability] !== false,\n      );\n      Object.entries(update).forEach(([capability, value]) => {\n        if (value && !nextCapabilities.includes(capability as OwnCapability)) {\n          nextCapabilities.push(capability as OwnCapability);\n        }\n      });\n\n      state.setOwnCapabilities(nextCapabilities);\n    }\n  };\n};\n", "import { Dispatcher } from '../rtc';\nimport { Call } from '../Call';\nimport { CallState } from '../store';\nimport { StreamVideoParticipantPatches } from '../types';\nimport { getLogger } from '../logger';\nimport type { PinsChanged } from '../gen/video/sfu/event/events';\nimport {\n  ErrorCode,\n  WebsocketReconnectStrategy,\n} from '../gen/video/sfu/models/models';\nimport { OwnCapability } from '../gen/coordinator';\n\nexport const watchConnectionQualityChanged = (\n  dispatcher: Dispatcher,\n  state: CallState,\n) => {\n  return dispatcher.on('connectionQualityChanged', (e) => {\n    const { connectionQualityUpdates } = e;\n    if (!connectionQualityUpdates) return;\n    state.updateParticipants(\n      connectionQualityUpdates.reduce<StreamVideoParticipantPatches>(\n        (patches, update) => {\n          const { sessionId, connectionQuality } = update;\n          patches[sessionId] = {\n            connectionQuality,\n          };\n          return patches;\n        },\n        {},\n      ),\n    );\n  });\n};\n\n/**\n * Updates the approximate number of participants in the call by peeking at the\n * health check events that our SFU sends.\n */\nexport const watchParticipantCountChanged = (\n  dispatcher: Dispatcher,\n  state: CallState,\n) => {\n  return dispatcher.on('healthCheckResponse', (e) => {\n    const { participantCount } = e;\n    if (participantCount) {\n      state.setParticipantCount(participantCount.total);\n      state.setAnonymousParticipantCount(participantCount.anonymous);\n    }\n  });\n};\n\nexport const watchLiveEnded = (dispatcher: Dispatcher, call: Call) => {\n  return dispatcher.on('error', (e) => {\n    if (e.error && e.error.code !== ErrorCode.LIVE_ENDED) return;\n\n    if (!call.permissionsContext.hasPermission(OwnCapability.JOIN_BACKSTAGE)) {\n      call.leave({ reason: 'live ended' }).catch((err) => {\n        call.logger('error', 'Failed to leave call after live ended', err);\n      });\n    }\n  });\n};\n\n/**\n * Watches and logs the errors reported by the currently connected SFU.\n */\nexport const watchSfuErrorReports = (dispatcher: Dispatcher) => {\n  return dispatcher.on('error', (e) => {\n    if (!e.error) return;\n    const logger = getLogger(['SfuClient']);\n    const { error, reconnectStrategy } = e;\n    logger('error', 'SFU reported error', {\n      code: ErrorCode[error.code],\n      reconnectStrategy: WebsocketReconnectStrategy[reconnectStrategy],\n      message: error.message,\n      shouldRetry: error.shouldRetry,\n    });\n  });\n};\n\n/**\n * Watches for `pinsUpdated` events and updates the pinned state of participants\n * in the call.\n */\nexport const watchPinsUpdated = (state: CallState) => {\n  return function onPinsUpdated(e: PinsChanged) {\n    const { pins } = e;\n    state.setServerSidePins(pins);\n  };\n};\n", "import { Call } from '../Call';\nimport {\n  TrackType,\n  TrackUnpublishReason,\n} from '../gen/video/sfu/models/models';\n\n/**\n * An event handler that handles soft mutes.\n *\n * @param call the call.\n */\nexport const handleRemoteSoftMute = (call: Call) => {\n  return call.on('trackUnpublished', async (event) => {\n    const { cause, type, sessionId } = event;\n    const { localParticipant } = call.state;\n    if (\n      cause === TrackUnpublishReason.MODERATION &&\n      sessionId === localParticipant?.sessionId\n    ) {\n      const logger = call.logger;\n      logger(\n        'info',\n        `Local participant's ${TrackType[type]} track is muted remotely`,\n      );\n      try {\n        if (type === TrackType.VIDEO) {\n          await call.camera.disable();\n        } else if (type === TrackType.AUDIO) {\n          await call.microphone.disable();\n        } else if (\n          type === TrackType.SCREEN_SHARE ||\n          type === TrackType.SCREEN_SHARE_AUDIO\n        ) {\n          await call.screenShare.disable();\n        } else {\n          logger(\n            'warn',\n            'Unsupported track type to soft mute',\n            TrackType[type],\n          );\n        }\n      } catch (error) {\n        logger('error', 'Failed to stop publishing', error);\n      }\n    }\n  });\n};\n", "import type {\n  ParticipantJoined,\n  ParticipantLeft,\n  ParticipantUpdated,\n  TrackPublished,\n  TrackUnpublished,\n} from '../gen/video/sfu/event/events';\nimport type { Participant } from '../gen/video/sfu/models/models';\nimport {\n  StreamVideoParticipant,\n  StreamVideoParticipantPatch,\n  VisibilityState,\n} from '../types';\nimport { CallState } from '../store';\nimport { trackTypeToParticipantStreamKey } from '../rtc/helpers/tracks';\n\n/**\n * An event responder which handles the `participantJoined` event.\n */\nexport const watchParticipantJoined = (state: CallState) => {\n  return function onParticipantJoined(e: ParticipantJoined) {\n    const { participant } = e;\n    if (!participant) return;\n    // `state.updateOrAddParticipant` acts as a safeguard against\n    // potential duplicate events from the SFU.\n    //\n    // Although the SFU should not send duplicate events, we have seen\n    // some race conditions in the past during the `join-flow`.\n    // The SFU would send participant info as part of the `join`\n    // response and then follow up with a `participantJoined` event for\n    // already announced participants.\n    const orphanedTracks = reconcileOrphanedTracks(state, participant);\n    state.updateOrAddParticipant(\n      participant.sessionId,\n      Object.assign<\n        StreamVideoParticipant,\n        StreamVideoParticipantPatch | undefined,\n        Partial<StreamVideoParticipant>\n      >(participant, orphanedTracks, {\n        viewportVisibilityState: {\n          videoTrack: VisibilityState.UNKNOWN,\n          screenShareTrack: VisibilityState.UNKNOWN,\n        },\n      }),\n    );\n  };\n};\n\n/**\n * An event responder which handles the `participantLeft` event.\n */\nexport const watchParticipantLeft = (state: CallState) => {\n  return function onParticipantLeft(e: ParticipantLeft) {\n    const { participant } = e;\n    if (!participant) return;\n\n    state.setParticipants((participants) =>\n      participants.filter((p) => p.sessionId !== participant.sessionId),\n    );\n  };\n};\n\n/**\n * An event responder which handles the `participantUpdated` event.\n */\nexport const watchParticipantUpdated = (state: CallState) => {\n  return function onParticipantUpdated(e: ParticipantUpdated) {\n    const { participant } = e;\n    if (!participant) return;\n    state.updateParticipant(participant.sessionId, participant);\n  };\n};\n\n/**\n * An event responder which handles the `trackPublished` event.\n * The SFU will send this event when a participant publishes a track.\n */\nexport const watchTrackPublished = (state: CallState) => {\n  return function onTrackPublished(e: TrackPublished) {\n    const { type, sessionId } = e;\n    // An optimization for large calls.\n    // After a certain threshold, the SFU would stop emitting `participantJoined`\n    // events, and instead, it would only provide the participant's information\n    // once they start publishing a track.\n    if (e.participant) {\n      const orphanedTracks = reconcileOrphanedTracks(state, e.participant);\n      const participant = Object.assign(e.participant, orphanedTracks);\n      state.updateOrAddParticipant(sessionId, participant);\n    } else {\n      state.updateParticipant(sessionId, (p) => ({\n        publishedTracks: [...p.publishedTracks, type].filter(unique),\n      }));\n    }\n  };\n};\n\n/**\n * An event responder which handles the `trackUnpublished` event.\n * The SFU will send this event when a participant unpublishes a track.\n */\nexport const watchTrackUnpublished = (state: CallState) => {\n  return function onTrackUnpublished(e: TrackUnpublished) {\n    const { type, sessionId } = e;\n    // An optimization for large calls. See `watchTrackPublished`.\n    if (e.participant) {\n      const orphanedTracks = reconcileOrphanedTracks(state, e.participant);\n      const participant = Object.assign(e.participant, orphanedTracks);\n      state.updateOrAddParticipant(sessionId, participant);\n    } else {\n      state.updateParticipant(sessionId, (p) => ({\n        publishedTracks: p.publishedTracks.filter((t) => t !== type),\n      }));\n    }\n  };\n};\n\nconst unique = <T>(v: T, i: number, arr: T[]) => arr.indexOf(v) === i;\n\n/**\n * Reconciles orphaned tracks (if any) for the given participant.\n *\n * @param state the call state.\n * @param participant the participant.\n */\nconst reconcileOrphanedTracks = (\n  state: CallState,\n  participant: Participant,\n): StreamVideoParticipantPatch | undefined => {\n  const orphanTracks = state.takeOrphanedTracks(participant.trackLookupPrefix);\n  if (!orphanTracks.length) return;\n  const reconciledTracks: StreamVideoParticipantPatch = {};\n  for (const orphan of orphanTracks) {\n    const key = trackTypeToParticipantStreamKey(orphan.trackType);\n    if (!key) continue;\n    reconciledTracks[key] = orphan.track;\n  }\n  return reconciledTracks;\n};\n", "import { Dispatcher } from '../rtc';\nimport { CallState } from '../store';\nimport { StreamVideoParticipantPatches } from '../types';\n\n/**\n * Watches for `dominantSpeakerChanged` events.\n */\nexport const watchDominantSpeakerChanged = (\n  dispatcher: Dispatcher,\n  state: CallState,\n) => {\n  return dispatcher.on('dominantSpeakerChanged', (e) => {\n    const { sessionId } = e;\n    if (sessionId === state.dominantSpeaker?.sessionId) return;\n    state.setParticipants((participants) =>\n      participants.map((participant) => {\n        // mark the new dominant speaker\n        if (participant.sessionId === sessionId) {\n          return {\n            ...participant,\n            isDominantSpeaker: true,\n          };\n        }\n        // unmark the old dominant speaker\n        if (participant.isDominantSpeaker) {\n          return {\n            ...participant,\n            isDominantSpeaker: false,\n          };\n        }\n        return participant; // no change\n      }),\n    );\n  });\n};\n\n/**\n * Watches for `audioLevelChanged` events.\n */\nexport const watchAudioLevelChanged = (\n  dispatcher: Dispatcher,\n  state: CallState,\n) => {\n  return dispatcher.on('audioLevelChanged', (e) => {\n    const { audioLevels } = e;\n    state.updateParticipants(\n      audioLevels.reduce<StreamVideoParticipantPatches>((patches, current) => {\n        patches[current.sessionId] = {\n          audioLevel: current.level,\n          isSpeaking: current.isSpeaking,\n        };\n        return patches;\n      }, {}),\n    );\n  });\n};\n", "import { Call } from '../Call';\nimport { Dispatcher } from '../rtc';\nimport {\n  handleRemoteSoftMute,\n  watchAudioLevelChanged,\n  watchCallAccepted,\n  watchCallEnded,\n  watchCallGrantsUpdated,\n  watchCallRejected,\n  watchConnectionQualityChanged,\n  watchDominantSpeakerChanged,\n  watchLiveEnded,\n  watchParticipantCountChanged,\n  watchParticipantJoined,\n  watchParticipantLeft,\n  watchParticipantUpdated,\n  watchPinsUpdated,\n  watchSfuCallEnded,\n  watchSfuErrorReports,\n  watchTrackPublished,\n  watchTrackUnpublished,\n} from '../events';\nimport {\n  AllCallEvents,\n  AllClientCallEvents,\n  CallEventListener,\n} from '../coordinator/connection/types';\n\ntype RingCallEvents = Extract<\n  AllClientCallEvents,\n  'call.accepted' | 'call.rejected' | 'call.missed'\n>;\n\n/**\n * Registers the default event handlers for a call during its lifecycle.\n *\n * @param call the call to register event handlers for.\n * @param dispatcher the dispatcher.\n */\nexport const registerEventHandlers = (call: Call, dispatcher: Dispatcher) => {\n  const state = call.state;\n  const eventHandlers = [\n    call.on('call.ended', watchCallEnded(call)),\n    watchSfuCallEnded(call),\n\n    watchLiveEnded(dispatcher, call),\n    watchSfuErrorReports(dispatcher),\n    watchConnectionQualityChanged(dispatcher, state),\n    watchParticipantCountChanged(dispatcher, state),\n\n    call.on('participantJoined', watchParticipantJoined(state)),\n    call.on('participantLeft', watchParticipantLeft(state)),\n    call.on('participantUpdated', watchParticipantUpdated(state)),\n\n    call.on('trackPublished', watchTrackPublished(state)),\n    call.on('trackUnpublished', watchTrackUnpublished(state)),\n\n    watchAudioLevelChanged(dispatcher, state),\n    watchDominantSpeakerChanged(dispatcher, state),\n\n    call.on('callGrantsUpdated', watchCallGrantsUpdated(state)),\n    call.on('pinsUpdated', watchPinsUpdated(state)),\n\n    handleRemoteSoftMute(call),\n  ];\n\n  if (call.ringing) {\n    // these events are only relevant when the call is ringing\n    eventHandlers.push(registerRingingCallEventHandlers(call));\n  }\n\n  return () => {\n    eventHandlers.forEach((unsubscribe) => unsubscribe());\n  };\n};\n\n/**\n * Registers event handlers for a call that is of ringing type.\n *\n * @param call the call to register event handlers for.\n */\nexport const registerRingingCallEventHandlers = (call: Call) => {\n  const coordinatorRingEvents: {\n    [key in RingCallEvents]: (\n      call: Call,\n    ) => CallEventListener<AllCallEvents[key]>;\n  } = {\n    'call.accepted': watchCallAccepted(call),\n    'call.rejected': watchCallRejected(call),\n  };\n\n  const eventHandlers = Object.keys(coordinatorRingEvents).map((event) => {\n    const eventName = event as RingCallEvents;\n    return call.on(eventName, coordinatorRingEvents[eventName]);\n  });\n\n  return () => {\n    eventHandlers.forEach((unsubscribe) => unsubscribe());\n  };\n};\n", "import { LocalClientDetailsType } from '../client-details';\nimport { Sdk, SdkType } from '../gen/video/sfu/models/models';\n\n/**\n * Flatten the stats report into an array of stats objects.\n *\n * @param report the report to flatten.\n */\nexport const flatten = (report: RTCStatsReport) => {\n  const stats: RTCStats[] = [];\n  report.forEach((s) => {\n    stats.push(s);\n  });\n  return stats;\n};\n\nexport const getSdkSignature = (clientDetails: LocalClientDetailsType) => {\n  const { sdk, ...platform } = clientDetails;\n  const sdkName = getSdkName(sdk);\n  const sdkVersion = getSdkVersion(sdk);\n\n  return {\n    sdkName,\n    sdkVersion,\n    ...platform,\n  };\n};\n\nexport const getSdkName = (sdk: Sdk | undefined) => {\n  return sdk && sdk.type === SdkType.REACT\n    ? 'stream-react'\n    : sdk && sdk.type === SdkType.REACT_NATIVE\n      ? 'stream-react-native'\n      : 'stream-js';\n};\n\nexport const getSdkVersion = (sdk: Sdk | undefined) => {\n  return sdk ? `${sdk.major}.${sdk.minor}.${sdk.patch}` : '0.0.0-development';\n};\n", "import type {\n  AggregatedStatsReport,\n  BaseStats,\n  ParticipantsStatsReport,\n  StatsReport,\n} from './types';\nimport { CallState } from '../store';\nimport { Publisher, Subscriber } from '../rtc';\nimport { getLogger } from '../logger';\nimport { flatten } from './utils';\n\nexport type StatsReporterOpts = {\n  subscriber: Subscriber;\n  publisher?: Publisher;\n  state: CallState;\n  datacenter: string;\n  pollingIntervalInMs?: number;\n};\n\nexport type StatsReporter = {\n  /**\n   * Will turn on stats reporting for a given sessionId.\n   *\n   * @param sessionId the session id.\n   */\n  startReportingStatsFor: (sessionId: string) => void;\n\n  /**\n   * Will turn off stats reporting for a given sessionId.\n   *\n   * @param sessionId the session id.\n   */\n  stopReportingStatsFor: (sessionId: string) => void;\n\n  /**\n   * Helper method for retrieving stats for a given peer connection kind\n   * and media stream flowing through it.\n   *\n   * @param kind the peer connection kind (subscriber or publisher).\n   * @param mediaStream the media stream.\n   */\n  getStatsForStream: (\n    kind: 'subscriber' | 'publisher',\n    mediaStream: MediaStream,\n  ) => Promise<StatsReport[]>;\n\n  /**\n   * Helper method for retrieving raw stats for a given peer connection kind.\n   *\n   * @param kind the peer connection kind (subscriber or publisher).\n   * @param selector the track selector. If not provided, stats for all tracks will be returned.\n   */\n  getRawStatsForTrack: (\n    kind: 'subscriber' | 'publisher',\n    selector?: MediaStreamTrack,\n  ) => Promise<RTCStatsReport | undefined>;\n\n  /**\n   * Stops the stats reporter and releases all resources.\n   */\n  stop: () => void;\n};\n\n/**\n * Creates a new StatsReporter instance that collects metrics about the ongoing call and reports them to the state store\n */\nexport const createStatsReporter = ({\n  subscriber,\n  publisher,\n  state,\n  datacenter,\n  pollingIntervalInMs = 2000,\n}: StatsReporterOpts): StatsReporter => {\n  const logger = getLogger(['stats']);\n  const getRawStatsForTrack = async (\n    kind: 'subscriber' | 'publisher',\n    selector?: MediaStreamTrack,\n  ) => {\n    if (kind === 'subscriber' && subscriber) {\n      return subscriber.getStats(selector);\n    } else if (kind === 'publisher' && publisher) {\n      return publisher.getStats(selector);\n    } else {\n      return undefined;\n    }\n  };\n\n  const getStatsForStream = async (\n    kind: 'subscriber' | 'publisher',\n    mediaStream: MediaStream,\n  ) => {\n    const pc = kind === 'subscriber' ? subscriber : publisher;\n    if (!pc) return [];\n    const statsForStream: StatsReport[] = [];\n    for (let track of mediaStream.getTracks()) {\n      const report = await pc.getStats(track);\n      const stats = transform(report, {\n        // @ts-ignore\n        trackKind: track.kind,\n        kind,\n      });\n      statsForStream.push(stats);\n    }\n    return statsForStream;\n  };\n\n  const startReportingStatsFor = (sessionId: string) => {\n    sessionIdsToTrack.add(sessionId);\n    void run();\n  };\n\n  const stopReportingStatsFor = (sessionId: string) => {\n    sessionIdsToTrack.delete(sessionId);\n    void run();\n  };\n\n  const sessionIdsToTrack = new Set<string>();\n\n  /**\n   * The main stats reporting loop.\n   */\n  const run = async () => {\n    const participantStats: ParticipantsStatsReport = {};\n    const sessionIds = new Set(sessionIdsToTrack);\n    if (sessionIds.size > 0) {\n      for (let participant of state.participants) {\n        if (!sessionIds.has(participant.sessionId)) continue;\n        const kind = participant.isLocalParticipant\n          ? 'publisher'\n          : 'subscriber';\n        try {\n          const mergedStream = new MediaStream([\n            ...(participant.videoStream?.getVideoTracks() || []),\n            ...(participant.audioStream?.getAudioTracks() || []),\n          ]);\n          participantStats[participant.sessionId] = await getStatsForStream(\n            kind,\n            mergedStream,\n          );\n          mergedStream.getTracks().forEach((t) => {\n            mergedStream.removeTrack(t);\n          });\n        } catch (e) {\n          logger(\n            'error',\n            `Failed to collect stats for ${kind} of ${participant.userId}`,\n            e,\n          );\n        }\n      }\n    }\n\n    const [subscriberStats, publisherStats] = await Promise.all([\n      subscriber\n        .getStats()\n        .then((report) =>\n          transform(report, {\n            kind: 'subscriber',\n            trackKind: 'video',\n          }),\n        )\n        .then(aggregate),\n      publisher\n        ? publisher\n            .getStats()\n            .then((report) =>\n              transform(report, {\n                kind: 'publisher',\n                trackKind: 'video',\n              }),\n            )\n            .then(aggregate)\n        : getEmptyStats(),\n    ]);\n\n    const [subscriberRawStats, publisherRawStats] = await Promise.all([\n      getRawStatsForTrack('subscriber'),\n      publisher ? getRawStatsForTrack('publisher') : undefined,\n    ]);\n\n    state.setCallStatsReport({\n      datacenter,\n      publisherStats,\n      subscriberStats,\n      subscriberRawStats,\n      publisherRawStats,\n      participants: participantStats,\n      timestamp: Date.now(),\n    });\n  };\n\n  let timeoutId: NodeJS.Timeout | undefined;\n  if (pollingIntervalInMs > 0) {\n    const loop = async () => {\n      await run().catch((e) => {\n        logger('debug', 'Failed to collect stats', e);\n      });\n      timeoutId = setTimeout(loop, pollingIntervalInMs);\n    };\n    void loop();\n  }\n\n  const stop = () => {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n  };\n\n  return {\n    getRawStatsForTrack,\n    getStatsForStream,\n    startReportingStatsFor,\n    stopReportingStatsFor,\n    stop,\n  };\n};\n\nexport type StatsTransformOpts = {\n  /**\n   * The kind of track we are transforming stats for.\n   */\n  trackKind: 'audio' | 'video';\n\n  /**\n   * The kind of peer connection we are transforming stats for.\n   */\n  kind: 'subscriber' | 'publisher';\n};\n\n/**\n * Transforms raw RTC stats into a slimmer and uniform across browsers format.\n *\n * @param report the report to transform.\n * @param opts the transform options.\n */\nconst transform = (\n  report: RTCStatsReport,\n  opts: StatsTransformOpts,\n): StatsReport => {\n  const { trackKind, kind } = opts;\n  const direction = kind === 'subscriber' ? 'inbound-rtp' : 'outbound-rtp';\n  const stats = flatten(report);\n  const streams = stats\n    .filter(\n      (stat) =>\n        stat.type === direction &&\n        (stat as RTCRtpStreamStats).kind === trackKind,\n    )\n    .map((stat): BaseStats => {\n      const rtcStreamStats = stat as RTCInboundRtpStreamStats &\n        RTCOutboundRtpStreamStats;\n\n      const codec = stats.find(\n        (s) => s.type === 'codec' && s.id === rtcStreamStats.codecId,\n      ) as RTCRtpCodec | undefined;\n\n      const transport = stats.find(\n        (s) => s.type === 'transport' && s.id === rtcStreamStats.transportId,\n      ) as RTCTransportStats | undefined;\n\n      let roundTripTime: number | undefined;\n      if (transport && transport.dtlsState === 'connected') {\n        const candidatePair = stats.find(\n          (s) =>\n            s.type === 'candidate-pair' &&\n            s.id === transport.selectedCandidatePairId,\n        ) as RTCIceCandidatePairStats | undefined;\n        roundTripTime = candidatePair?.currentRoundTripTime;\n      }\n\n      return {\n        bytesSent: rtcStreamStats.bytesSent,\n        bytesReceived: rtcStreamStats.bytesReceived,\n        codec: codec?.mimeType,\n        currentRoundTripTime: roundTripTime,\n        frameHeight: rtcStreamStats.frameHeight,\n        frameWidth: rtcStreamStats.frameWidth,\n        framesPerSecond: rtcStreamStats.framesPerSecond,\n        jitter: rtcStreamStats.jitter,\n        kind: rtcStreamStats.kind,\n        // @ts-ignore: available in Chrome only, TS doesn't recognize this\n        qualityLimitationReason: rtcStreamStats.qualityLimitationReason,\n        rid: rtcStreamStats.rid,\n        ssrc: rtcStreamStats.ssrc,\n      };\n    });\n\n  return {\n    rawStats: report,\n    streams,\n    timestamp: Date.now(),\n  };\n};\n\nconst getEmptyStats = (stats?: StatsReport): AggregatedStatsReport => {\n  return {\n    rawReport: stats ?? { streams: [], timestamp: Date.now() },\n    totalBytesSent: 0,\n    totalBytesReceived: 0,\n    averageJitterInMs: 0,\n    averageRoundTripTimeInMs: 0,\n    qualityLimitationReasons: 'none',\n    highestFrameWidth: 0,\n    highestFrameHeight: 0,\n    highestFramesPerSecond: 0,\n    codec: '',\n    timestamp: Date.now(),\n  };\n};\n\n/**\n * Aggregates generic stats.\n *\n * @param stats the stats to aggregate.\n */\nconst aggregate = (stats: StatsReport): AggregatedStatsReport => {\n  const aggregatedStats = getEmptyStats(stats);\n\n  let maxArea = -1;\n  const area = (w: number, h: number) => w * h;\n\n  const qualityLimitationReasons = new Set<string>();\n  const streams = stats.streams;\n  const report = streams.reduce((acc, stream) => {\n    acc.totalBytesSent += stream.bytesSent || 0;\n    acc.totalBytesReceived += stream.bytesReceived || 0;\n    acc.averageJitterInMs += stream.jitter || 0;\n    acc.averageRoundTripTimeInMs += stream.currentRoundTripTime || 0;\n\n    // naive calculation of the highest resolution\n    const streamArea = area(stream.frameWidth || 0, stream.frameHeight || 0);\n    if (streamArea > maxArea) {\n      acc.highestFrameWidth = stream.frameWidth || 0;\n      acc.highestFrameHeight = stream.frameHeight || 0;\n      acc.highestFramesPerSecond = stream.framesPerSecond || 0;\n      maxArea = streamArea;\n    }\n\n    qualityLimitationReasons.add(stream.qualityLimitationReason || '');\n    return acc;\n  }, aggregatedStats);\n\n  if (streams.length > 0) {\n    report.averageJitterInMs = Math.round(\n      (report.averageJitterInMs / streams.length) * 1000,\n    );\n    report.averageRoundTripTimeInMs = Math.round(\n      (report.averageRoundTripTimeInMs / streams.length) * 1000,\n    );\n    // we take the first codec we find, as it should be the same for all streams\n    report.codec = streams[0].codec || '';\n  }\n\n  const qualityLimitationReason = [\n    qualityLimitationReasons.has('cpu') && 'cpu',\n    qualityLimitationReasons.has('bandwidth') && 'bandwidth',\n    qualityLimitationReasons.has('other') && 'other',\n  ]\n    .filter(Boolean)\n    .join(', ');\n  if (qualityLimitationReason) {\n    report.qualityLimitationReasons = qualityLimitationReason;\n  }\n\n  return report;\n};\n", "import { combineLatest } from 'rxjs';\nimport { StreamSfuClient } from '../StreamSfuClient';\nimport { OwnCapability, StatsOptions } from '../gen/coordinator';\nimport { getLogger } from '../logger';\nimport { Publisher, Subscriber } from '../rtc';\nimport { flatten, getSdkName, getSdkVersion } from './utils';\nimport { getWebRTCInfo, LocalClientDetailsType } from '../client-details';\nimport { InputDevices } from '../gen/video/sfu/models/models';\nimport { CameraManager, MicrophoneManager } from '../devices';\nimport { createSubscription } from '../store/rxUtils';\nimport { CallState } from '../store';\n\nexport type SfuStatsReporterOptions = {\n  options: StatsOptions;\n  clientDetails: LocalClientDetailsType;\n  subscriber: Subscriber;\n  publisher?: Publisher;\n  microphone: MicrophoneManager;\n  camera: CameraManager;\n  state: CallState;\n};\n\nexport class SfuStatsReporter {\n  private readonly logger = getLogger(['SfuStatsReporter']);\n\n  readonly options: StatsOptions;\n\n  private readonly sfuClient: StreamSfuClient;\n  private readonly subscriber: Subscriber;\n  private readonly publisher?: Publisher;\n  private readonly microphone: MicrophoneManager;\n  private readonly camera: CameraManager;\n  private readonly state: CallState;\n\n  private intervalId: NodeJS.Timeout | undefined;\n  private unsubscribeDevicePermissionsSubscription?: () => void;\n  private unsubscribeListDevicesSubscription?: () => void;\n  private readonly sdkName: string;\n  private readonly sdkVersion: string;\n  private readonly webRTCVersion: string;\n  private readonly inputDevices = new Map<'mic' | 'camera', InputDevices>();\n\n  constructor(\n    sfuClient: StreamSfuClient,\n    {\n      options,\n      clientDetails,\n      subscriber,\n      publisher,\n      microphone,\n      camera,\n      state,\n    }: SfuStatsReporterOptions,\n  ) {\n    this.sfuClient = sfuClient;\n    this.options = options;\n    this.subscriber = subscriber;\n    this.publisher = publisher;\n    this.microphone = microphone;\n    this.camera = camera;\n    this.state = state;\n\n    const { sdk, browser } = clientDetails;\n    this.sdkName = getSdkName(sdk);\n    this.sdkVersion = getSdkVersion(sdk);\n\n    // use the WebRTC version if set by the SDK (React Native) otherwise,\n    // use the browser version as a fallback\n    const webRTCInfo = getWebRTCInfo();\n    this.webRTCVersion =\n      webRTCInfo?.version ||\n      `${browser?.name || ''}-${browser?.version || ''}` ||\n      'N/A';\n  }\n\n  private observeDevice = (\n    device: CameraManager | MicrophoneManager,\n    kind: 'mic' | 'camera',\n  ) => {\n    const { hasBrowserPermission$ } = device.state;\n    this.unsubscribeDevicePermissionsSubscription?.();\n    this.unsubscribeDevicePermissionsSubscription = createSubscription(\n      combineLatest([hasBrowserPermission$, this.state.ownCapabilities$]),\n      ([hasPermission, ownCapabilities]) => {\n        // cleanup the previous listDevices() subscription in case\n        // permissions or capabilities have changed.\n        // we will subscribe again if everything is in order.\n        this.unsubscribeListDevicesSubscription?.();\n        const hasCapability =\n          kind === 'mic'\n            ? ownCapabilities.includes(OwnCapability.SEND_AUDIO)\n            : ownCapabilities.includes(OwnCapability.SEND_VIDEO);\n        if (!hasPermission || !hasCapability) {\n          this.inputDevices.set(kind, {\n            currentDevice: '',\n            availableDevices: [],\n            isPermitted: false,\n          });\n          return;\n        }\n        this.unsubscribeListDevicesSubscription = createSubscription(\n          combineLatest([device.listDevices(), device.state.selectedDevice$]),\n          ([devices, deviceId]) => {\n            const selected = devices.find((d) => d.deviceId === deviceId);\n            this.inputDevices.set(kind, {\n              currentDevice: selected?.label || deviceId || '',\n              availableDevices: devices.map((d) => d.label),\n              isPermitted: true,\n            });\n          },\n        );\n      },\n    );\n  };\n\n  private run = async () => {\n    const [subscriberStats, publisherStats] = await Promise.all([\n      this.subscriber.getStats().then(flatten).then(JSON.stringify),\n      this.publisher?.getStats().then(flatten).then(JSON.stringify) ?? '[]',\n    ]);\n\n    await this.sfuClient.sendStats({\n      sdk: this.sdkName,\n      sdkVersion: this.sdkVersion,\n      webrtcVersion: this.webRTCVersion,\n      subscriberStats,\n      publisherStats,\n      audioDevices: this.inputDevices.get('mic'),\n      videoDevices: this.inputDevices.get('camera'),\n      deviceState: { oneofKind: undefined },\n    });\n  };\n\n  start = () => {\n    if (this.options.reporting_interval_ms <= 0) return;\n\n    this.observeDevice(this.microphone, 'mic');\n    this.observeDevice(this.camera, 'camera');\n\n    clearInterval(this.intervalId);\n    this.intervalId = setInterval(() => {\n      this.run().catch((err) => {\n        this.logger('warn', 'Failed to report stats', err);\n      });\n    }, this.options.reporting_interval_ms);\n  };\n\n  stop = () => {\n    this.unsubscribeDevicePermissionsSubscription?.();\n    this.unsubscribeDevicePermissionsSubscription = undefined;\n    this.unsubscribeListDevicesSubscription?.();\n    this.unsubscribeListDevicesSubscription = undefined;\n\n    this.inputDevices.clear();\n    clearInterval(this.intervalId);\n    this.intervalId = undefined;\n  };\n}\n", "const DEFAULT_THRESHOLD = 0.35;\n\nexport type EntryHandler = (entry: IntersectionObserverEntry) => void;\n\nexport type Unobserve = () => void;\n\nexport type Observe = (\n  element: HTMLElement,\n  entryHandler: EntryHandler,\n) => Unobserve;\n\nexport class ViewportTracker {\n  /**\n   * @private\n   */\n  private elementHandlerMap: Map<\n    HTMLElement,\n    (entry: IntersectionObserverEntry) => void\n  > = new Map();\n  /**\n   * @private\n   */\n  private observer: IntersectionObserver | null = null;\n  // in React children render before viewport is set, add\n  // them to the queue and observe them once the observer is ready\n  /**\n   * @private\n   */\n  private queueSet: Set<readonly [HTMLElement, EntryHandler]> = new Set();\n\n  /**\n   * Method to set scrollable viewport as root for the IntersectionObserver, returns\n   * cleanup function to be invoked upon disposing of the DOM element to prevent memory leaks\n   *\n   * @param viewportElement\n   * @param options\n   * @returns Unobserve\n   */\n  public setViewport = (\n    viewportElement: HTMLElement,\n    options?: Pick<IntersectionObserverInit, 'threshold' | 'rootMargin'>,\n  ) => {\n    const cleanup = () => {\n      this.observer?.disconnect();\n      this.observer = null;\n      this.elementHandlerMap.clear();\n    };\n\n    this.observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          const handler = this.elementHandlerMap.get(\n            entry.target as HTMLElement,\n          );\n          handler?.(entry);\n        });\n      },\n      {\n        root: viewportElement,\n        ...options,\n        threshold: options?.threshold ?? DEFAULT_THRESHOLD,\n      },\n    );\n\n    if (this.queueSet.size) {\n      this.queueSet.forEach(([queueElement, queueHandler]) => {\n        // check if element which requested observation is\n        // a child of a viewport element, skip if isn't\n        if (!viewportElement.contains(queueElement)) return;\n\n        this.observer!.observe(queueElement);\n        this.elementHandlerMap.set(queueElement, queueHandler);\n      });\n      this.queueSet.clear();\n    }\n\n    return cleanup;\n  };\n\n  /**\n   * Method to set element to observe and handler to be triggered whenever IntersectionObserver\n   * detects a possible change in element's visibility within specified viewport, returns\n   * cleanup function to be invoked upon disposing of the DOM element to prevent memory leaks\n   *\n   * @param element\n   * @param handler\n   * @returns Unobserve\n   */\n  public observe: Observe = (element, handler) => {\n    const queueItem = [element, handler] as const;\n\n    const cleanup = () => {\n      this.elementHandlerMap.delete(element);\n      this.observer?.unobserve(element);\n      this.queueSet.delete(queueItem);\n    };\n\n    if (this.elementHandlerMap.has(element)) return cleanup;\n\n    if (!this.observer) {\n      this.queueSet.add(queueItem);\n      return cleanup;\n    }\n\n    if (this.observer.root!.contains(element)) {\n      this.elementHandlerMap.set(element, handler);\n      this.observer.observe(element);\n    }\n\n    return cleanup;\n  };\n}\n", "import {\n  AudioTrackType,\n  DebounceType,\n  StreamVideoParticipant,\n  VideoTrackType,\n  VisibilityState,\n} from '../types';\nimport { TrackType, VideoDimension } from '../gen/video/sfu/models/models';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  distinctUntilChanged,\n  distinctUntilKeyChanged,\n  map,\n  shareReplay,\n  takeWhile,\n} from 'rxjs';\nimport { ViewportTracker } from './ViewportTracker';\nimport { getLogger } from '../logger';\nimport { isFirefox, isSafari } from './browsers';\nimport {\n  hasScreenShare,\n  hasScreenShareAudio,\n  hasVideo,\n} from './participantUtils';\nimport type { TrackSubscriptionDetails } from '../gen/video/sfu/signal_rpc/signal';\nimport type { CallState } from '../store';\nimport type { StreamSfuClient } from '../StreamSfuClient';\nimport { SpeakerManager } from '../devices';\nimport { getCurrentValue, setCurrentValue } from '../store/rxUtils';\n\nconst DEFAULT_VIEWPORT_VISIBILITY_STATE: Record<\n  VideoTrackType,\n  VisibilityState\n> = {\n  videoTrack: VisibilityState.UNKNOWN,\n  screenShareTrack: VisibilityState.UNKNOWN,\n} as const;\n\ntype VideoTrackSubscriptionOverride =\n  | {\n      enabled: true;\n      dimension: VideoDimension;\n    }\n  | { enabled: false };\n\nconst globalOverrideKey = Symbol('globalOverrideKey');\n\ninterface VideoTrackSubscriptionOverrides {\n  [sessionId: string]: VideoTrackSubscriptionOverride | undefined;\n  [globalOverrideKey]?: VideoTrackSubscriptionOverride;\n}\n\n/**\n * A manager class that handles dynascale related tasks like:\n *\n * - binding video elements to session ids\n * - binding audio elements to session ids\n * - tracking element visibility\n * - updating subscriptions based on viewport visibility\n * - updating subscriptions based on video element dimensions\n * - updating subscriptions based on published tracks\n */\nexport class DynascaleManager {\n  /**\n   * The viewport tracker instance.\n   */\n  readonly viewportTracker = new ViewportTracker();\n\n  private logger = getLogger(['DynascaleManager']);\n  private callState: CallState;\n  private speaker: SpeakerManager;\n  private sfuClient: StreamSfuClient | undefined;\n  private pendingSubscriptionsUpdate: NodeJS.Timeout | null = null;\n\n  private videoTrackSubscriptionOverridesSubject =\n    new BehaviorSubject<VideoTrackSubscriptionOverrides>({});\n\n  videoTrackSubscriptionOverrides$ =\n    this.videoTrackSubscriptionOverridesSubject.asObservable();\n\n  incomingVideoSettings$ = this.videoTrackSubscriptionOverrides$.pipe(\n    map((overrides) => {\n      const { [globalOverrideKey]: globalSettings, ...participants } =\n        overrides;\n      return {\n        enabled: globalSettings?.enabled !== false,\n        preferredResolution: globalSettings?.enabled\n          ? globalSettings.dimension\n          : undefined,\n        participants: Object.fromEntries(\n          Object.entries(participants).map(\n            ([sessionId, participantOverride]) => [\n              sessionId,\n              {\n                enabled: participantOverride?.enabled !== false,\n                preferredResolution: participantOverride?.enabled\n                  ? participantOverride.dimension\n                  : undefined,\n              },\n            ],\n          ),\n        ),\n        isParticipantVideoEnabled: (sessionId: string) =>\n          overrides[sessionId]?.enabled ??\n          overrides[globalOverrideKey]?.enabled ??\n          true,\n      };\n    }),\n    shareReplay(1),\n  );\n\n  /**\n   * Creates a new DynascaleManager instance.\n   *\n   * @param call the call to manage.\n   */\n  constructor(callState: CallState, speaker: SpeakerManager) {\n    this.callState = callState;\n    this.speaker = speaker;\n  }\n\n  setSfuClient(sfuClient: StreamSfuClient | undefined) {\n    this.sfuClient = sfuClient;\n  }\n\n  get trackSubscriptions() {\n    const subscriptions: TrackSubscriptionDetails[] = [];\n    for (const p of this.callState.remoteParticipants) {\n      // NOTE: audio tracks don't have to be requested explicitly\n      // as the SFU will implicitly subscribe us to all of them,\n      // once they become available.\n      if (p.videoDimension && hasVideo(p)) {\n        const override =\n          this.videoTrackSubscriptionOverrides[p.sessionId] ??\n          this.videoTrackSubscriptionOverrides[globalOverrideKey];\n\n        if (override?.enabled !== false) {\n          subscriptions.push({\n            userId: p.userId,\n            sessionId: p.sessionId,\n            trackType: TrackType.VIDEO,\n            dimension: override?.dimension ?? p.videoDimension,\n          });\n        }\n      }\n      if (p.screenShareDimension && hasScreenShare(p)) {\n        subscriptions.push({\n          userId: p.userId,\n          sessionId: p.sessionId,\n          trackType: TrackType.SCREEN_SHARE,\n          dimension: p.screenShareDimension,\n        });\n      }\n      if (hasScreenShareAudio(p)) {\n        subscriptions.push({\n          userId: p.userId,\n          sessionId: p.sessionId,\n          trackType: TrackType.SCREEN_SHARE_AUDIO,\n        });\n      }\n    }\n    return subscriptions;\n  }\n\n  get videoTrackSubscriptionOverrides() {\n    return getCurrentValue(this.videoTrackSubscriptionOverrides$);\n  }\n\n  setVideoTrackSubscriptionOverrides = (\n    override: VideoTrackSubscriptionOverride | undefined,\n    sessionIds?: string[],\n  ) => {\n    if (!sessionIds) {\n      return setCurrentValue(\n        this.videoTrackSubscriptionOverridesSubject,\n        override ? { [globalOverrideKey]: override } : {},\n      );\n    }\n\n    return setCurrentValue(\n      this.videoTrackSubscriptionOverridesSubject,\n      (overrides) => ({\n        ...overrides,\n        ...Object.fromEntries(sessionIds.map((id) => [id, override])),\n      }),\n    );\n  };\n\n  applyTrackSubscriptions = (\n    debounceType: DebounceType = DebounceType.SLOW,\n  ) => {\n    if (this.pendingSubscriptionsUpdate) {\n      clearTimeout(this.pendingSubscriptionsUpdate);\n    }\n\n    const updateSubscriptions = () => {\n      this.pendingSubscriptionsUpdate = null;\n      this.sfuClient\n        ?.updateSubscriptions(this.trackSubscriptions)\n        .catch((err: unknown) => {\n          this.logger('debug', `Failed to update track subscriptions`, err);\n        });\n    };\n\n    if (debounceType) {\n      this.pendingSubscriptionsUpdate = setTimeout(\n        updateSubscriptions,\n        debounceType,\n      );\n    } else {\n      updateSubscriptions();\n    }\n  };\n\n  /**\n   * Will begin tracking the given element for visibility changes within the\n   * configured viewport element (`call.setViewport`).\n   *\n   * @param element the element to track.\n   * @param sessionId the session id.\n   * @param trackType the kind of video.\n   * @returns Untrack.\n   */\n  trackElementVisibility = <T extends HTMLElement>(\n    element: T,\n    sessionId: string,\n    trackType: VideoTrackType,\n  ) => {\n    const cleanup = this.viewportTracker.observe(element, (entry) => {\n      this.callState.updateParticipant(sessionId, (participant) => {\n        const previousVisibilityState =\n          participant.viewportVisibilityState ??\n          DEFAULT_VIEWPORT_VISIBILITY_STATE;\n\n        // observer triggers when the element is \"moved\" to be a fullscreen element\n        // keep it VISIBLE if that happens to prevent fullscreen with placeholder\n        const isVisible =\n          entry.isIntersecting || document.fullscreenElement === element\n            ? VisibilityState.VISIBLE\n            : VisibilityState.INVISIBLE;\n        return {\n          ...participant,\n          viewportVisibilityState: {\n            ...previousVisibilityState,\n            [trackType]: isVisible,\n          },\n        };\n      });\n    });\n\n    return () => {\n      cleanup();\n      // reset visibility state to UNKNOWN upon cleanup\n      // so that the layouts that are not actively observed\n      // can still function normally (runtime layout switching)\n      this.callState.updateParticipant(sessionId, (participant) => {\n        const previousVisibilityState =\n          participant.viewportVisibilityState ??\n          DEFAULT_VIEWPORT_VISIBILITY_STATE;\n        return {\n          ...participant,\n          viewportVisibilityState: {\n            ...previousVisibilityState,\n            [trackType]: VisibilityState.UNKNOWN,\n          },\n        };\n      });\n    };\n  };\n\n  /**\n   * Sets the viewport element to track bound video elements for visibility.\n   *\n   * @param element the viewport element.\n   */\n  setViewport = <T extends HTMLElement>(element: T) => {\n    return this.viewportTracker.setViewport(element);\n  };\n\n  /**\n   * Binds a DOM <video> element to the given session id.\n   * This method will make sure that the video element will play\n   * the correct video stream for the given session id.\n   *\n   * Under the hood, it would also keep track of the video element dimensions\n   * and update the subscription accordingly in order to optimize the bandwidth.\n   *\n   * If a \"viewport\" is configured, the video element will be automatically\n   * tracked for visibility and the subscription will be updated accordingly.\n   *\n   * @param videoElement the video element to bind to.\n   * @param sessionId the session id.\n   * @param trackType the kind of video.\n   */\n  bindVideoElement = (\n    videoElement: HTMLVideoElement,\n    sessionId: string,\n    trackType: VideoTrackType,\n  ) => {\n    const boundParticipant =\n      this.callState.findParticipantBySessionId(sessionId);\n    if (!boundParticipant) return;\n\n    const requestTrackWithDimensions = (\n      debounceType: DebounceType,\n      dimension: VideoDimension | undefined,\n    ) => {\n      if (dimension && (dimension.width === 0 || dimension.height === 0)) {\n        // ignore 0x0 dimensions. this can happen when the video element\n        // is not visible (e.g., has display: none).\n        // we treat this as \"unsubscription\" as we don't want to keep\n        // consuming bandwidth for a video that is not visible on the screen.\n        this.logger('debug', `Ignoring 0x0 dimension`, boundParticipant);\n        dimension = undefined;\n      }\n      this.callState.updateParticipantTracks(trackType, {\n        [sessionId]: { dimension },\n      });\n      this.applyTrackSubscriptions(debounceType);\n    };\n\n    const participant$ = this.callState.participants$.pipe(\n      map(\n        (participants) =>\n          participants.find(\n            (participant) => participant.sessionId === sessionId,\n          ) as StreamVideoParticipant,\n      ),\n      takeWhile((participant) => !!participant),\n      distinctUntilChanged(),\n      shareReplay({ bufferSize: 1, refCount: true }),\n    );\n\n    /**\n     * Since the video elements are now being removed from the DOM (React SDK) upon\n     * visibility change, this subscription is not in use an stays here only for the\n     * plain JS integrations where integrators might choose not to remove the video\n     * elements from the DOM.\n     */\n    // keep copy for resize observer handler\n    let viewportVisibilityState: VisibilityState | undefined;\n    const viewportVisibilityStateSubscription =\n      boundParticipant.isLocalParticipant\n        ? null\n        : participant$\n            .pipe(\n              map((p) => p.viewportVisibilityState?.[trackType]),\n              distinctUntilChanged(),\n            )\n            .subscribe((nextViewportVisibilityState) => {\n              // skip initial trigger\n              if (!viewportVisibilityState) {\n                viewportVisibilityState =\n                  nextViewportVisibilityState ?? VisibilityState.UNKNOWN;\n                return;\n              }\n              viewportVisibilityState =\n                nextViewportVisibilityState ?? VisibilityState.UNKNOWN;\n\n              if (nextViewportVisibilityState === VisibilityState.INVISIBLE) {\n                return requestTrackWithDimensions(\n                  DebounceType.MEDIUM,\n                  undefined,\n                );\n              }\n\n              requestTrackWithDimensions(DebounceType.MEDIUM, {\n                width: videoElement.clientWidth,\n                height: videoElement.clientHeight,\n              });\n            });\n\n    let lastDimensions: string | undefined;\n    const resizeObserver = boundParticipant.isLocalParticipant\n      ? null\n      : new ResizeObserver(() => {\n          const currentDimensions = `${videoElement.clientWidth},${videoElement.clientHeight}`;\n\n          // skip initial trigger\n          if (!lastDimensions) {\n            lastDimensions = currentDimensions;\n            return;\n          }\n\n          if (\n            lastDimensions === currentDimensions ||\n            viewportVisibilityState === VisibilityState.INVISIBLE\n          ) {\n            return;\n          }\n\n          requestTrackWithDimensions(DebounceType.SLOW, {\n            width: videoElement.clientWidth,\n            height: videoElement.clientHeight,\n          });\n          lastDimensions = currentDimensions;\n        });\n    resizeObserver?.observe(videoElement);\n\n    // element renders and gets bound - track subscription gets\n    // triggered first other ones get skipped on initial subscriptions\n    const publishedTracksSubscription = boundParticipant.isLocalParticipant\n      ? null\n      : participant$\n          .pipe(\n            distinctUntilKeyChanged('publishedTracks'),\n            map((p) =>\n              trackType === 'videoTrack' ? hasVideo(p) : hasScreenShare(p),\n            ),\n            distinctUntilChanged(),\n          )\n          .subscribe((isPublishing) => {\n            if (isPublishing) {\n              // the participant just started to publish a track\n              requestTrackWithDimensions(DebounceType.FAST, {\n                width: videoElement.clientWidth,\n                height: videoElement.clientHeight,\n              });\n            } else {\n              // the participant just stopped publishing a track\n              requestTrackWithDimensions(DebounceType.FAST, undefined);\n            }\n          });\n\n    videoElement.autoplay = true;\n    videoElement.playsInline = true;\n\n    // explicitly marking the element as muted will allow autoplay to work\n    // without prior user interaction:\n    // https://developer.mozilla.org/en-US/docs/Web/Media/Autoplay_guide\n    videoElement.muted = true;\n\n    const streamSubscription = participant$\n      .pipe(\n        distinctUntilKeyChanged(\n          trackType === 'videoTrack' ? 'videoStream' : 'screenShareStream',\n        ),\n      )\n      .subscribe((p) => {\n        const source =\n          trackType === 'videoTrack' ? p.videoStream : p.screenShareStream;\n        if (videoElement.srcObject === source) return;\n        videoElement.srcObject = source ?? null;\n        if (isSafari() || isFirefox()) {\n          setTimeout(() => {\n            videoElement.srcObject = source ?? null;\n            videoElement.play().catch((e) => {\n              this.logger('warn', `Failed to play stream`, e);\n            });\n            // we add extra delay until we attempt to force-play\n            // the participant's media stream in Firefox and Safari,\n            // as they seem to have some timing issues\n          }, 25);\n        }\n      });\n\n    return () => {\n      requestTrackWithDimensions(DebounceType.FAST, undefined);\n      viewportVisibilityStateSubscription?.unsubscribe();\n      publishedTracksSubscription?.unsubscribe();\n      streamSubscription.unsubscribe();\n      resizeObserver?.disconnect();\n    };\n  };\n\n  /**\n   * Binds a DOM <audio> element to the given session id.\n   *\n   * This method will make sure that the audio element will\n   * play the correct audio stream for the given session id.\n   *\n   * @param audioElement the audio element to bind to.\n   * @param sessionId the session id.\n   * @param trackType the kind of audio.\n   * @returns a cleanup function that will unbind the audio element.\n   */\n  bindAudioElement = (\n    audioElement: HTMLAudioElement,\n    sessionId: string,\n    trackType: AudioTrackType,\n  ) => {\n    const participant = this.callState.findParticipantBySessionId(sessionId);\n    if (!participant || participant.isLocalParticipant) return;\n\n    const participant$ = this.callState.participants$.pipe(\n      map(\n        (participants) =>\n          participants.find(\n            (p) => p.sessionId === sessionId,\n          ) as StreamVideoParticipant,\n      ),\n      takeWhile((p) => !!p),\n      distinctUntilChanged(),\n      shareReplay({ bufferSize: 1, refCount: true }),\n    );\n\n    const updateMediaStreamSubscription = participant$\n      .pipe(\n        distinctUntilKeyChanged(\n          trackType === 'screenShareAudioTrack'\n            ? 'screenShareAudioStream'\n            : 'audioStream',\n        ),\n      )\n      .subscribe((p) => {\n        const source =\n          trackType === 'screenShareAudioTrack'\n            ? p.screenShareAudioStream\n            : p.audioStream;\n        if (audioElement.srcObject === source) return;\n\n        setTimeout(() => {\n          audioElement.srcObject = source ?? null;\n          if (audioElement.srcObject) {\n            audioElement.play().catch((e) => {\n              this.logger('warn', `Failed to play stream`, e);\n            });\n\n            // audio output device shall be set after the audio element is played\n            // otherwise, the browser will not pick it up, and will always\n            // play audio through the system's default device\n            const { selectedDevice } = this.speaker.state;\n            if (selectedDevice && 'setSinkId' in audioElement) {\n              audioElement.setSinkId(selectedDevice);\n            }\n          }\n        });\n      });\n\n    const sinkIdSubscription = !('setSinkId' in audioElement)\n      ? null\n      : this.speaker.state.selectedDevice$.subscribe((deviceId) => {\n          if (deviceId) {\n            audioElement.setSinkId(deviceId);\n          }\n        });\n\n    const volumeSubscription = combineLatest([\n      this.speaker.state.volume$,\n      participant$.pipe(distinctUntilKeyChanged('audioVolume')),\n    ]).subscribe(([volume, p]) => {\n      audioElement.volume = p.audioVolume ?? volume;\n    });\n\n    audioElement.autoplay = true;\n\n    return () => {\n      sinkIdSubscription?.unsubscribe();\n      volumeSubscription.unsubscribe();\n      updateMediaStreamSubscription.unsubscribe();\n    };\n  };\n}\n", "import { CallSettingsResponse, OwnCapability } from '../gen/coordinator';\n\n/**\n * Stores the permissions for the current user and exposes\n * a few helper methods which make it easier to work with permissions.\n *\n * This is an internal class meant to be used in combination with\n * a {@link Call} instance.\n *\n * @internal\n */\nexport class PermissionsContext {\n  private permissions: OwnCapability[] = [];\n  private settings?: CallSettingsResponse;\n\n  /**\n   * Sets the permissions for the current user.\n   *\n   * @param permissions the permissions to set.\n   */\n  setPermissions = (permissions: OwnCapability[]) => {\n    this.permissions = permissions || [];\n  };\n\n  /**\n   * Sets the settings for the bound call.\n   * @param settings\n   */\n  setCallSettings = (settings: CallSettingsResponse) => {\n    this.settings = settings;\n  };\n\n  /**\n   * Checks if the current user has a specific permission.\n   *\n   * @param permission the permission to check for.\n   */\n  hasPermission = (permission: OwnCapability) => {\n    return this.permissions.includes(permission);\n  };\n\n  /**\n   * Checks if the current user can request a specific permission\n   * within the call.\n   *\n   * @param permission the permission to check for.\n   * @param settings the call settings to check against (optional).\n   */\n  canRequest = (\n    permission: OwnCapability,\n    settings: CallSettingsResponse | undefined = this.settings,\n  ) => {\n    if (!settings) return false;\n\n    const { audio, video, screensharing } = settings;\n    switch (permission) {\n      case OwnCapability.SEND_AUDIO:\n        return audio.access_request_enabled;\n      case OwnCapability.SEND_VIDEO:\n        return video.access_request_enabled;\n      case OwnCapability.SCREENSHARE:\n        return screensharing.access_request_enabled;\n      default:\n        return false;\n    }\n  };\n}\n", "import { StreamVideoParticipant } from './types';\nimport {\n  Comparator,\n  defaultSortPreset,\n  livestreamOrAudioRoomSortPreset,\n} from './sorting';\n\n/**\n * The options for a {@link CallType}.\n */\nexport type CallTypeOptions = {\n  /**\n   * The {@link Comparator} to use to sorting the participants in the call.\n   */\n  sortParticipantsBy?: Comparator<StreamVideoParticipant>;\n};\n\n/**\n * Represents a call type.\n */\nexport class CallType {\n  /**\n   * The name of the call type.\n   */\n  name: string;\n\n  /**\n   * The options for the call type.\n   */\n  options: CallTypeOptions;\n\n  /**\n   * Constructs a new CallType.\n   *\n   * @param name the name of the call type.\n   * @param options the options for the call type.\n   */\n  constructor(\n    name: string,\n    options: CallTypeOptions = {\n      sortParticipantsBy: defaultSortPreset,\n    },\n  ) {\n    this.name = name;\n    this.options = options;\n  }\n}\n\n/**\n * A registry of {@link CallType}s.\n * You can register and unregister call types.\n */\nclass CallTypesRegistry {\n  /**\n   * The call types registered in this registry.\n   * @private\n   */\n  private readonly callTypes: { [key: string]: CallType };\n\n  /**\n   * Constructs a new CallTypesRegistry.\n   *\n   * @param callTypes the initial call types to register.\n   */\n  constructor(callTypes: CallType[]) {\n    this.callTypes = callTypes.reduce<{ [key: string]: CallType }>(\n      (acc, callType) => {\n        acc[callType.name] = callType;\n        return acc;\n      },\n      {},\n    );\n  }\n\n  /**\n   * Registers a new call type.\n   *\n   * @param callType the call type to register.\n   */\n  register = (callType: CallType) => {\n    this.callTypes[callType.name] = callType;\n  };\n\n  /**\n   * Unregisters a call type.\n   *\n   * @param name the name of the call type to unregister.\n   */\n  unregister = (name: string) => {\n    delete this.callTypes[name];\n  };\n\n  /**\n   * Gets a call type by name.\n   *\n   * @param name the name of the call type to get.\n   */\n  get = (name: string): CallType => {\n    if (!this.callTypes[name]) {\n      this.register(new CallType(name));\n    }\n    return this.callTypes[name];\n  };\n}\n\n/**\n * The default call types registry.\n * You can use this instance to dynamically register and unregister call types.\n */\nexport const CallTypes = new CallTypesRegistry([\n  new CallType('default', {\n    sortParticipantsBy: defaultSortPreset,\n  }),\n  new CallType('development', {\n    sortParticipantsBy: defaultSortPreset,\n  }),\n  new CallType('livestream', {\n    sortParticipantsBy: livestreamOrAudioRoomSortPreset,\n  }),\n  new CallType('audio_room', {\n    sortParticipantsBy: livestreamOrAudioRoomSortPreset,\n  }),\n]);\n", "import { fromEventPattern, map } from 'rxjs';\nimport { isReactNative } from '../helpers/platforms';\nimport { getLogger } from '../logger';\nimport { disposeOfMediaStream } from './devices';\nimport { withoutConcurrency } from '../helpers/concurrency';\n\ninterface BrowserPermissionConfig {\n  constraints: DisplayMediaStreamOptions;\n  queryName: PermissionName;\n}\n\nexport class BrowserPermission {\n  private ready: Promise<void>;\n  private disposeController = new AbortController();\n  private state: PermissionState | undefined;\n  private wasPrompted: boolean = false;\n  private listeners = new Set<(state: PermissionState) => void>();\n  private logger = getLogger(['permissions']);\n\n  constructor(private readonly permission: BrowserPermissionConfig) {\n    const signal = this.disposeController.signal;\n\n    this.ready = (async () => {\n      const assumeGranted = (error?: unknown) => {\n        this.setState('prompt');\n      };\n\n      if (!canQueryPermissions()) {\n        return assumeGranted();\n      }\n\n      try {\n        const status = await navigator.permissions.query({\n          name: permission.queryName,\n        });\n\n        if (!signal.aborted) {\n          this.setState(status.state);\n          status.addEventListener('change', () => this.setState(status.state), {\n            signal,\n          });\n        }\n      } catch (err) {\n        assumeGranted(err);\n      }\n    })();\n  }\n\n  dispose() {\n    this.state = undefined;\n    this.disposeController.abort();\n  }\n\n  async getState() {\n    await this.ready;\n    if (!this.state) {\n      throw new Error('BrowserPermission instance possibly disposed');\n    }\n    return this.state;\n  }\n\n  async prompt({\n    forcePrompt = false,\n    throwOnNotAllowed = false,\n  }: { forcePrompt?: boolean; throwOnNotAllowed?: boolean } = {}) {\n    await withoutConcurrency(\n      `permission-prompt-${this.permission.queryName}`,\n      async () => {\n        if (\n          (await this.getState()) !== 'prompt' ||\n          (this.wasPrompted && !forcePrompt)\n        ) {\n          const isGranted = this.state === 'granted';\n\n          if (!isGranted && throwOnNotAllowed) {\n            throw new DOMException(\n              'Permission was not granted previously, and prompting again is not allowed',\n              'NotAllowedError',\n            );\n          }\n\n          return isGranted;\n        }\n\n        try {\n          this.wasPrompted = true;\n          const stream = await navigator.mediaDevices.getUserMedia(\n            this.permission.constraints,\n          );\n          disposeOfMediaStream(stream);\n          this.setState('granted');\n          return true;\n        } catch (e) {\n          if (e instanceof DOMException && e.name === 'NotAllowedError') {\n            this.logger('info', 'Browser permission was not granted', {\n              permission: this.permission,\n            });\n            this.setState('denied');\n\n            if (throwOnNotAllowed) {\n              throw e;\n            }\n\n            return false;\n          }\n\n          this.logger('error', `Failed to getUserMedia`, {\n            error: e,\n            permission: this.permission,\n          });\n          throw e;\n        }\n      },\n    );\n  }\n\n  listen(cb: (state: PermissionState) => void) {\n    this.listeners.add(cb);\n    if (this.state) cb(this.state);\n    return () => this.listeners.delete(cb);\n  }\n\n  asObservable() {\n    return fromEventPattern<PermissionState>(\n      (handler) => this.listen(handler),\n      (handler, unlisten) => unlisten(),\n    ).pipe(\n      // In some browsers, the 'change' event doesn't reliably emit and hence,\n      // permissionState stays in 'prompt' state forever.\n      // Typically, this happens when a user grants one-time permission.\n      // Instead of checking if a permission is granted, we check if it isn't denied\n      map((state) => state !== 'denied'),\n    );\n  }\n\n  private setState(state: PermissionState) {\n    if (this.state !== state) {\n      this.state = state;\n      this.listeners.forEach((listener) => listener(state));\n    }\n  }\n}\n\nfunction canQueryPermissions() {\n  return (\n    !isReactNative() &&\n    typeof navigator !== 'undefined' &&\n    !!navigator.permissions?.query\n  );\n}\n", "const uninitialized = Symbol('uninitialized');\n\n/**\n * Lazily creates a value using a provided factory\n */\nexport function lazy<T>(factory: () => T): () => T {\n  let value: T | typeof uninitialized = uninitialized;\n  return () => {\n    if (value === uninitialized) {\n      value = factory();\n    }\n\n    return value;\n  };\n}\n", "import {\n  concatMap,\n  debounceTime,\n  from,\n  fromEvent,\n  map,\n  merge,\n  shareReplay,\n  startWith,\n} from 'rxjs';\nimport { getLogger } from '../logger';\nimport { BrowserPermission } from './BrowserPermission';\nimport { lazy } from '../helpers/lazy';\nimport { isFirefox } from '../helpers/browsers';\n\n/**\n * Returns an Observable that emits the list of available devices\n * that meet the given constraints.\n *\n * @param permission a BrowserPermission instance.\n * @param kind the kind of devices to enumerate.\n */\nconst getDevices = (permission: BrowserPermission, kind: MediaDeviceKind) => {\n  return from(\n    (async () => {\n      let devices = await navigator.mediaDevices.enumerateDevices();\n      // for privacy reasons, most browsers don't give you device labels\n      // unless you have a corresponding camera or microphone permission\n      const shouldPromptForBrowserPermission = devices.some(\n        (device) => device.kind === kind && device.label === '',\n      );\n      if (shouldPromptForBrowserPermission) {\n        await permission.prompt({ throwOnNotAllowed: true });\n        devices = await navigator.mediaDevices.enumerateDevices();\n      }\n      return devices.filter(\n        (device) =>\n          device.kind === kind &&\n          device.label !== '' &&\n          device.deviceId !== 'default',\n      );\n    })(),\n  );\n};\n\n/**\n * Tells if the browser supports audio output change on 'audio' elements,\n * see https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/setSinkId.\n */\nexport const checkIfAudioOutputChangeSupported = () => {\n  if (typeof document === 'undefined') return false;\n  const element = document.createElement('audio');\n  return 'setSinkId' in element;\n};\n\n/**\n * The default constraints used to request audio devices.\n */\nconst audioDeviceConstraints = {\n  audio: {\n    autoGainControl: true,\n    noiseSuppression: true,\n    echoCancellation: true,\n  },\n} satisfies MediaStreamConstraints;\n\n/**\n * The default constraints used to request video devices.\n */\nconst videoDeviceConstraints = {\n  video: {\n    width: 1280,\n    height: 720,\n  },\n} satisfies MediaStreamConstraints;\n\n/**\n * Keeps track of the browser permission to use microphone. This permission also\n * affects an ability to enumerate audio devices.\n */\nexport const getAudioBrowserPermission = lazy(\n  () =>\n    new BrowserPermission({\n      constraints: audioDeviceConstraints,\n      queryName: 'microphone' as PermissionName,\n    }),\n);\n\n/**\n * Keeps track of the browser permission to use camera. This permission also\n * affects an ability to enumerate video devices.\n */\nexport const getVideoBrowserPermission = lazy(\n  () =>\n    new BrowserPermission({\n      constraints: videoDeviceConstraints,\n      queryName: 'camera' as PermissionName,\n    }),\n);\n\nconst getDeviceChangeObserver = lazy(() => {\n  // 'addEventListener' is not available in React Native, returning\n  // an observable that will never fire\n  if (!navigator.mediaDevices.addEventListener) return from([]);\n  return fromEvent(navigator.mediaDevices, 'devicechange').pipe(\n    map(() => undefined),\n    debounceTime(500),\n  );\n});\n\n/**\n * Prompts the user for a permission to use audio devices (if not already granted\n * and was not prompted before) and lists the available 'audioinput' devices,\n * if devices are added/removed the list is updated, and if the permission is revoked,\n * the observable errors.\n */\nexport const getAudioDevices = lazy(() => {\n  return merge(\n    getDeviceChangeObserver(),\n    getAudioBrowserPermission().asObservable(),\n  ).pipe(\n    startWith(undefined),\n    concatMap(() => getDevices(getAudioBrowserPermission(), 'audioinput')),\n    shareReplay(1),\n  );\n});\n\n/**\n * Prompts the user for a permission to use video devices (if not already granted\n * and was not prompted before) and lists the available 'videoinput' devices,\n * if devices are added/removed the list is updated, and if the permission is revoked,\n * the observable errors.\n */\nexport const getVideoDevices = lazy(() => {\n  return merge(\n    getDeviceChangeObserver(),\n    getVideoBrowserPermission().asObservable(),\n  ).pipe(\n    startWith(undefined),\n    concatMap(() => getDevices(getVideoBrowserPermission(), 'videoinput')),\n    shareReplay(1),\n  );\n});\n\n/**\n * Prompts the user for a permission to use video devices (if not already granted\n * and was not prompted before) and lists the available 'audiooutput' devices,\n * if devices are added/removed the list is updated, and if the permission is revoked,\n * the observable errors.\n */\nexport const getAudioOutputDevices = lazy(() => {\n  return merge(\n    getDeviceChangeObserver(),\n    getAudioBrowserPermission().asObservable(),\n  ).pipe(\n    startWith(undefined),\n    concatMap(() => getDevices(getAudioBrowserPermission(), 'audiooutput')),\n    shareReplay(1),\n  );\n});\n\nconst getStream = async (constraints: MediaStreamConstraints) => {\n  const stream = await navigator.mediaDevices.getUserMedia(constraints);\n  if (isFirefox()) {\n    // When enumerating devices, Firefox will hide device labels unless there's been\n    // an active user media stream on the page. So we force device list updates after\n    // every successful getUserMedia call.\n    navigator.mediaDevices.dispatchEvent(new Event('devicechange'));\n  }\n  return stream;\n};\n\n/**\n * Returns an audio media stream that fulfills the given constraints.\n * If no constraints are provided, it uses the browser's default ones.\n *\n * @angular It's recommended to use the [`DeviceManagerService`](./DeviceManagerService.md) for a higher level API, use this low-level method only if the `DeviceManagerService` doesn't suit your requirements.\n * @param trackConstraints the constraints to use when requesting the stream.\n * @returns the new `MediaStream` fulfilling the given constraints.\n */\nexport const getAudioStream = async (\n  trackConstraints?: MediaTrackConstraints,\n): Promise<MediaStream> => {\n  const constraints: MediaStreamConstraints = {\n    audio: {\n      ...audioDeviceConstraints.audio,\n      ...trackConstraints,\n    },\n  };\n\n  try {\n    await getAudioBrowserPermission().prompt({\n      throwOnNotAllowed: true,\n      forcePrompt: true,\n    });\n    return await getStream(constraints);\n  } catch (error) {\n    if (error instanceof OverconstrainedError && trackConstraints?.deviceId) {\n      const { deviceId, ...relaxedContraints } = trackConstraints;\n      getLogger(['devices'])(\n        'warn',\n        'Failed to get audio stream, will try again with relaxed contraints',\n        { error, constraints, relaxedContraints },\n      );\n      return getAudioStream(relaxedContraints);\n    }\n\n    getLogger(['devices'])('error', 'Failed to get audio stream', {\n      error,\n      constraints,\n    });\n    throw error;\n  }\n};\n\n/**\n * Returns a video media stream that fulfills the given constraints.\n * If no constraints are provided, it uses the browser's default ones.\n *\n * @angular It's recommended to use the [`DeviceManagerService`](./DeviceManagerService.md) for a higher level API, use this low-level method only if the `DeviceManagerService` doesn't suit your requirements.\n * @param trackConstraints the constraints to use when requesting the stream.\n * @returns a new `MediaStream` fulfilling the given constraints.\n */\nexport const getVideoStream = async (\n  trackConstraints?: MediaTrackConstraints,\n): Promise<MediaStream> => {\n  const constraints: MediaStreamConstraints = {\n    video: {\n      ...videoDeviceConstraints.video,\n      ...trackConstraints,\n    },\n  };\n  try {\n    await getVideoBrowserPermission().prompt({\n      throwOnNotAllowed: true,\n      forcePrompt: true,\n    });\n    return await getStream(constraints);\n  } catch (error) {\n    if (error instanceof OverconstrainedError && trackConstraints?.deviceId) {\n      const { deviceId, ...relaxedContraints } = trackConstraints;\n      getLogger(['devices'])(\n        'warn',\n        'Failed to get video stream, will try again with relaxed contraints',\n        { error, constraints, relaxedContraints },\n      );\n      return getVideoStream(relaxedContraints);\n    }\n\n    getLogger(['devices'])('error', 'Failed to get video stream', {\n      error,\n      constraints,\n    });\n    throw error;\n  }\n};\n\n/**\n * Prompts the user for a permission to share a screen.\n * If the user grants the permission, a screen sharing stream is returned. Throws otherwise.\n *\n * The callers of this API are responsible to handle the possible errors.\n *\n * @angular It's recommended to use the [`DeviceManagerService`](./DeviceManagerService.md) for a higher level API, use this low-level method only if the `DeviceManagerService` doesn't suit your requirements.\n *\n * @param options any additional options to pass to the [`getDisplayMedia`](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getDisplayMedia) API.\n */\nexport const getScreenShareStream = async (\n  options?: DisplayMediaStreamOptions,\n) => {\n  try {\n    return await navigator.mediaDevices.getDisplayMedia({\n      video: true,\n      audio: {\n        channelCount: {\n          ideal: 2,\n        },\n        echoCancellation: false,\n        autoGainControl: false,\n        noiseSuppression: false,\n      },\n      // @ts-expect-error - not present in types yet\n      systemAudio: 'include',\n      ...options,\n    });\n  } catch (e) {\n    getLogger(['devices'])('error', 'Failed to get screen share stream', e);\n    throw e;\n  }\n};\n\nexport const deviceIds$ =\n  typeof navigator !== 'undefined' &&\n  typeof navigator.mediaDevices !== 'undefined'\n    ? getDeviceChangeObserver().pipe(\n        startWith(undefined),\n        concatMap(() => navigator.mediaDevices.enumerateDevices()),\n        shareReplay(1),\n      )\n    : undefined;\n\n/**\n * Deactivates MediaStream (stops and removes tracks) to be later garbage collected\n *\n * @param stream MediaStream\n * @returns void\n */\nexport const disposeOfMediaStream = (stream: MediaStream) => {\n  if (!stream.active) return;\n  stream.getTracks().forEach((track) => {\n    track.stop();\n  });\n  // @ts-expect-error release() is present in react-native-webrtc and must be called to dispose the stream\n  if (typeof stream.release === 'function') {\n    // @ts-expect-error\n    stream.release();\n  }\n};\n", "import { combineLatest, Observable, pairwise } from 'rxjs';\nimport { Call } from '../Call';\nimport { CallingState } from '../store';\nimport { createSubscription } from '../store/rxUtils';\nimport { InputMediaDeviceManagerState } from './InputMediaDeviceManagerState';\nimport { isReactNative } from '../helpers/platforms';\nimport { Logger } from '../coordinator/connection/types';\nimport { getLogger } from '../logger';\nimport { TrackType } from '../gen/video/sfu/models/models';\nimport { deviceIds$ } from './devices';\nimport {\n  settled,\n  withCancellation,\n  withoutConcurrency,\n} from '../helpers/concurrency';\nimport {\n  MediaStreamFilter,\n  MediaStreamFilterEntry,\n  MediaStreamFilterRegistrationResult,\n} from './filters';\n\nexport abstract class InputMediaDeviceManager<\n  T extends InputMediaDeviceManagerState<C>,\n  C = MediaTrackConstraints,\n> {\n  /**\n   * if true, stops the media stream when call is left\n   */\n  stopOnLeave = true;\n  logger: Logger;\n\n  protected subscriptions: Function[] = [];\n  private isTrackStoppedDueToTrackEnd = false;\n  private filters: MediaStreamFilterEntry[] = [];\n  private statusChangeConcurrencyTag = Symbol('statusChangeConcurrencyTag');\n  private filterRegistrationConcurrencyTag = Symbol(\n    'filterRegistrationConcurrencyTag',\n  );\n\n  protected constructor(\n    protected readonly call: Call,\n    public readonly state: T,\n    protected readonly trackType: TrackType,\n  ) {\n    this.logger = getLogger([`${TrackType[trackType].toLowerCase()} manager`]);\n    if (\n      deviceIds$ &&\n      !isReactNative() &&\n      (this.trackType === TrackType.AUDIO || this.trackType === TrackType.VIDEO)\n    ) {\n      this.handleDisconnectedOrReplacedDevices();\n    }\n  }\n\n  /**\n   * Lists the available audio/video devices\n   *\n   * Note: It prompts the user for a permission to use devices (if not already granted)\n   *\n   * @returns an Observable that will be updated if a device is connected or disconnected\n   */\n  listDevices() {\n    return this.getDevices();\n  }\n\n  /**\n   * Returns `true` when this device is in enabled state.\n   */\n  get enabled() {\n    return this.state.status === 'enabled';\n  }\n\n  /**\n   * Starts stream.\n   */\n  async enable() {\n    this.state.prevStatus = this.state.optimisticStatus;\n    if (this.state.optimisticStatus === 'enabled') {\n      return;\n    }\n    this.state.setPendingStatus('enabled');\n\n    await withCancellation(this.statusChangeConcurrencyTag, async (signal) => {\n      try {\n        await this.unmuteStream();\n        this.state.setStatus('enabled');\n      } finally {\n        if (!signal.aborted) {\n          this.state.setPendingStatus(this.state.status);\n        }\n      }\n    });\n  }\n\n  /**\n   * Stops or pauses the stream based on state.disableMode\n   * @param {boolean} [forceStop=false] when true, stops the tracks regardless of the state.disableMode\n   */\n  async disable(forceStop: boolean = false) {\n    this.state.prevStatus = this.state.optimisticStatus;\n    if (!forceStop && this.state.optimisticStatus === 'disabled') {\n      return;\n    }\n\n    this.state.setPendingStatus('disabled');\n\n    await withCancellation(this.statusChangeConcurrencyTag, async (signal) => {\n      try {\n        const stopTracks =\n          forceStop || this.state.disableMode === 'stop-tracks';\n        await this.muteStream(stopTracks);\n        this.state.setStatus('disabled');\n      } finally {\n        if (!signal.aborted) {\n          this.state.setPendingStatus(this.state.status);\n        }\n      }\n    });\n  }\n\n  /**\n   * Returns a promise that resolves when all pe\n   */\n  async statusChangeSettled() {\n    await settled(this.statusChangeConcurrencyTag);\n  }\n\n  /**\n   * If status was previously enabled, it will re-enable the device.\n   */\n  async resume() {\n    if (\n      this.state.prevStatus === 'enabled' &&\n      this.state.status !== 'enabled'\n    ) {\n      await this.enable();\n    }\n  }\n\n  /**\n   * If the current device status is disabled, it will enable the device,\n   * else it will disable it.\n   */\n  async toggle() {\n    if (this.state.optimisticStatus === 'enabled') {\n      return await this.disable();\n    } else {\n      return await this.enable();\n    }\n  }\n\n  /**\n   * Registers a filter that will be applied to the stream.\n   *\n   * The registered filter will get the existing stream, and it should return\n   * a new stream with the applied filter.\n   *\n   * @param filter the filter to register.\n   * @returns MediaStreamFilterRegistrationResult\n   */\n  registerFilter(\n    filter: MediaStreamFilter,\n  ): MediaStreamFilterRegistrationResult {\n    const entry: MediaStreamFilterEntry = {\n      start: filter,\n      stop: undefined,\n    };\n\n    const registered = withoutConcurrency(\n      this.filterRegistrationConcurrencyTag,\n      async () => {\n        this.filters.push(entry);\n        await this.applySettingsToStream();\n      },\n    );\n\n    return {\n      registered,\n      unregister: () =>\n        withoutConcurrency(this.filterRegistrationConcurrencyTag, async () => {\n          entry.stop?.();\n          this.filters = this.filters.filter((f) => f !== entry);\n          await this.applySettingsToStream();\n        }),\n    };\n  }\n\n  /**\n   * Will set the default constraints for the device.\n   *\n   * @param constraints the constraints to set.\n   */\n  setDefaultConstraints(constraints: C) {\n    this.state.setDefaultConstraints(constraints);\n  }\n\n  /**\n   * Selects a device.\n   *\n   * Note: This method is not supported in React Native\n   * @param deviceId the device id to select.\n   */\n  async select(deviceId: string | undefined) {\n    if (isReactNative()) {\n      throw new Error(\n        'This method is not supported in React Native. Please visit https://getstream.io/video/docs/reactnative/core/camera-and-microphone/#speaker-management for reference.',\n      );\n    }\n    const prevDeviceId = this.state.selectedDevice;\n    if (deviceId === prevDeviceId) {\n      return;\n    }\n    try {\n      this.state.setDevice(deviceId);\n      await this.applySettingsToStream();\n    } catch (error) {\n      this.state.setDevice(prevDeviceId);\n      throw error;\n    }\n  }\n\n  /**\n   * Disposes the manager.\n   *\n   * @internal\n   */\n  dispose = () => {\n    this.subscriptions.forEach((s) => s());\n  };\n\n  protected async applySettingsToStream() {\n    await withCancellation(this.statusChangeConcurrencyTag, async () => {\n      if (this.enabled) {\n        await this.muteStream();\n        await this.unmuteStream();\n      }\n    });\n  }\n\n  protected abstract getDevices(): Observable<MediaDeviceInfo[]>;\n\n  protected abstract getStream(constraints: C): Promise<MediaStream>;\n\n  protected abstract publishStream(stream: MediaStream): Promise<void>;\n\n  protected abstract stopPublishStream(stopTracks: boolean): Promise<void>;\n\n  protected getTracks(): MediaStreamTrack[] {\n    return this.state.mediaStream?.getTracks() ?? [];\n  }\n\n  protected async muteStream(stopTracks: boolean = true) {\n    if (!this.state.mediaStream) return;\n    this.logger('debug', `${stopTracks ? 'Stopping' : 'Disabling'} stream`);\n    if (this.call.state.callingState === CallingState.JOINED) {\n      await this.stopPublishStream(stopTracks);\n    }\n    this.muteLocalStream(stopTracks);\n    const allEnded = this.getTracks().every((t) => t.readyState === 'ended');\n    if (allEnded) {\n      if (\n        this.state.mediaStream &&\n        // @ts-expect-error release() is present in react-native-webrtc\n        typeof this.state.mediaStream.release === 'function'\n      ) {\n        // @ts-expect-error called to dispose the stream in RN\n        this.state.mediaStream.release();\n      }\n      this.state.setMediaStream(undefined, undefined);\n      this.filters.forEach((entry) => entry.stop?.());\n    }\n  }\n\n  private muteTracks() {\n    this.getTracks().forEach((track) => {\n      if (track.enabled) track.enabled = false;\n    });\n  }\n\n  private unmuteTracks() {\n    this.getTracks().forEach((track) => {\n      if (!track.enabled) track.enabled = true;\n    });\n  }\n\n  private stopTracks() {\n    this.getTracks().forEach((track) => {\n      if (track.readyState === 'live') track.stop();\n    });\n  }\n\n  private muteLocalStream(stopTracks: boolean) {\n    if (!this.state.mediaStream) {\n      return;\n    }\n    if (stopTracks) {\n      this.stopTracks();\n    } else {\n      this.muteTracks();\n    }\n  }\n\n  protected async unmuteStream() {\n    this.logger('debug', 'Starting stream');\n    let stream: MediaStream;\n    let rootStream: Promise<MediaStream> | undefined;\n    if (\n      this.state.mediaStream &&\n      this.getTracks().every((t) => t.readyState === 'live')\n    ) {\n      stream = this.state.mediaStream;\n      this.unmuteTracks();\n    } else {\n      const defaultConstraints = this.state.defaultConstraints;\n      const constraints: MediaTrackConstraints = {\n        ...defaultConstraints,\n        deviceId: this.state.selectedDevice\n          ? { exact: this.state.selectedDevice }\n          : undefined,\n      };\n\n      /**\n       * Chains two media streams together.\n       *\n       * In our case, filters MediaStreams are derived from their parent MediaStream.\n       * However, once a child filter's track is stopped,\n       * the tracks of the parent MediaStream aren't automatically stopped.\n       * This leads to a situation where the camera indicator light is still on\n       * even though the user stopped publishing video.\n       *\n       * This function works around this issue by stopping the parent MediaStream's tracks\n       * as well once the child filter's tracks are stopped.\n       *\n       * It works by patching the stop() method of the child filter's tracks to also stop\n       * the parent MediaStream's tracks of the same type. Here we assume that\n       * the parent MediaStream has only one track of each type.\n       *\n       * @param parentStream the parent MediaStream. Omit for the root stream.\n       */\n      const chainWith =\n        (parentStream?: Promise<MediaStream>) =>\n        async (filterStream: MediaStream): Promise<MediaStream> => {\n          if (!parentStream) return filterStream;\n          // TODO OL: take care of track.enabled property as well\n          const parent = await parentStream;\n          filterStream.getTracks().forEach((track) => {\n            const originalStop = track.stop;\n            track.stop = function stop() {\n              originalStop.call(track);\n              parent.getTracks().forEach((parentTrack) => {\n                if (parentTrack.kind === track.kind) {\n                  parentTrack.stop();\n                }\n              });\n            };\n          });\n\n          parent.getTracks().forEach((parentTrack) => {\n            // When the parent stream abruptly ends, we propagate the event\n            // to the filter stream.\n            // This usually happens when the camera/microphone permissions\n            // are revoked or when the device is disconnected.\n            const handleParentTrackEnded = () => {\n              filterStream.getTracks().forEach((track) => {\n                if (parentTrack.kind !== track.kind) return;\n                track.stop();\n                track.dispatchEvent(new Event('ended')); // propagate the event\n              });\n            };\n            parentTrack.addEventListener('ended', handleParentTrackEnded);\n            this.subscriptions.push(() => {\n              parentTrack.removeEventListener('ended', handleParentTrackEnded);\n            });\n          });\n\n          return filterStream;\n        };\n\n      // the rootStream represents the stream coming from the actual device\n      // e.g. camera or microphone stream\n      rootStream = this.getStream(constraints as C);\n      // we publish the last MediaStream of the chain\n      stream = await this.filters.reduce(\n        (parent, entry) =>\n          parent\n            .then((inputStream) => {\n              const { stop, output } = entry.start(inputStream);\n              entry.stop = stop;\n              return output;\n            })\n            .then(chainWith(parent), (error) => {\n              this.logger(\n                'warn',\n                'Filter failed to start and will be ignored',\n                error,\n              );\n              return parent;\n            }),\n        rootStream,\n      );\n    }\n    if (this.call.state.callingState === CallingState.JOINED) {\n      await this.publishStream(stream);\n    }\n    if (this.state.mediaStream !== stream) {\n      this.state.setMediaStream(stream, await rootStream);\n      const handleTrackEnded = async () => {\n        await this.statusChangeSettled();\n        if (this.enabled) {\n          this.isTrackStoppedDueToTrackEnd = true;\n          setTimeout(() => {\n            this.isTrackStoppedDueToTrackEnd = false;\n          }, 2000);\n          await this.disable();\n        }\n      };\n      this.getTracks().forEach((track) => {\n        track.addEventListener('ended', handleTrackEnded);\n        this.subscriptions.push(() =>\n          track.removeEventListener('ended', handleTrackEnded),\n        );\n      });\n    }\n  }\n\n  private get mediaDeviceKind() {\n    if (this.trackType === TrackType.AUDIO) {\n      return 'audioinput';\n    }\n    if (this.trackType === TrackType.VIDEO) {\n      return 'videoinput';\n    }\n    return '';\n  }\n\n  private handleDisconnectedOrReplacedDevices() {\n    this.subscriptions.push(\n      createSubscription(\n        combineLatest([\n          deviceIds$!.pipe(pairwise()),\n          this.state.selectedDevice$,\n        ]),\n        async ([[prevDevices, currentDevices], deviceId]) => {\n          try {\n            if (!deviceId) return;\n            await this.statusChangeSettled();\n\n            let isDeviceDisconnected = false;\n            let isDeviceReplaced = false;\n            const currentDevice = this.findDeviceInList(\n              currentDevices,\n              deviceId,\n            );\n            const prevDevice = this.findDeviceInList(prevDevices, deviceId);\n            if (!currentDevice && prevDevice) {\n              isDeviceDisconnected = true;\n            } else if (\n              currentDevice &&\n              prevDevice &&\n              currentDevice.deviceId === prevDevice.deviceId &&\n              currentDevice.groupId !== prevDevice.groupId\n            ) {\n              isDeviceReplaced = true;\n            }\n\n            if (isDeviceDisconnected) {\n              await this.disable();\n              await this.select(undefined);\n            }\n            if (isDeviceReplaced) {\n              if (\n                this.isTrackStoppedDueToTrackEnd &&\n                this.state.status === 'disabled'\n              ) {\n                await this.enable();\n                this.isTrackStoppedDueToTrackEnd = false;\n              } else {\n                await this.applySettingsToStream();\n              }\n            }\n          } catch (err) {\n            this.logger(\n              'warn',\n              'Unexpected error while handling disconnected or replaced device',\n              err,\n            );\n          }\n        },\n      ),\n    );\n  }\n\n  private findDeviceInList(devices: MediaDeviceInfo[], deviceId: string) {\n    return devices.find(\n      (d) => d.deviceId === deviceId && d.kind === this.mediaDeviceKind,\n    );\n  }\n}\n", "import {\n  BehaviorSubject,\n  distinctUntilChanged,\n  Observable,\n  of,\n  shareReplay,\n} from 'rxjs';\nimport { RxUtils } from '../store';\nimport { BrowserPermission } from './BrowserPermission';\n\nexport type InputDeviceStatus = 'enabled' | 'disabled' | undefined;\nexport type TrackDisableMode = 'stop-tracks' | 'disable-tracks';\n\nexport abstract class InputMediaDeviceManagerState<C = MediaTrackConstraints> {\n  protected statusSubject = new BehaviorSubject<InputDeviceStatus>(undefined);\n  protected optimisticStatusSubject = new BehaviorSubject<InputDeviceStatus>(\n    undefined,\n  );\n  protected mediaStreamSubject = new BehaviorSubject<MediaStream | undefined>(\n    undefined,\n  );\n  protected selectedDeviceSubject = new BehaviorSubject<string | undefined>(\n    undefined,\n  );\n  protected defaultConstraintsSubject = new BehaviorSubject<C | undefined>(\n    undefined,\n  );\n\n  /**\n   * @internal\n   */\n  prevStatus: InputDeviceStatus;\n\n  /**\n   * An Observable that emits the current media stream, or `undefined` if the device is currently disabled.\n   *\n   */\n  mediaStream$ = this.mediaStreamSubject.asObservable();\n\n  /**\n   * An Observable that emits the currently selected device\n   */\n  selectedDevice$ = this.selectedDeviceSubject\n    .asObservable()\n    .pipe(distinctUntilChanged());\n\n  /**\n   * An Observable that emits the device status\n   */\n  status$ = this.statusSubject.asObservable().pipe(distinctUntilChanged());\n\n  /**\n   * An Observable the reflects the requested device status. Useful for optimistic UIs\n   */\n  optimisticStatus$ = this.optimisticStatusSubject\n    .asObservable()\n    .pipe(distinctUntilChanged());\n\n  /**\n   * The default constraints for the device.\n   */\n  defaultConstraints$ = this.defaultConstraintsSubject.asObservable();\n\n  /**\n   * An observable that will emit `true` if browser/system permission\n   * is granted, `false` otherwise.\n   */\n  hasBrowserPermission$: Observable<boolean>;\n\n  /**\n   * Constructs new InputMediaDeviceManagerState instance.\n   *\n   * @param disableMode the disable mode to use.\n   * @param permission the BrowserPermission to use for querying.\n   * `undefined` means no permission is required.\n   */\n  constructor(\n    public readonly disableMode: TrackDisableMode = 'stop-tracks',\n    permission?: BrowserPermission,\n  ) {\n    this.hasBrowserPermission$ = permission\n      ? permission.asObservable().pipe(shareReplay(1))\n      : of(true);\n  }\n\n  /**\n   * The device status\n   */\n  get status() {\n    return this.getCurrentValue(this.status$);\n  }\n\n  /**\n   * The requested device status. Useful for optimistic UIs\n   */\n  get optimisticStatus() {\n    return this.getCurrentValue(this.optimisticStatus$);\n  }\n\n  /**\n   * The currently selected device\n   */\n  get selectedDevice() {\n    return this.getCurrentValue(this.selectedDevice$);\n  }\n\n  /**\n   * The current media stream, or `undefined` if the device is currently disabled.\n   */\n  get mediaStream() {\n    return this.getCurrentValue(this.mediaStream$);\n  }\n\n  /**\n   * Gets the current value of an observable, or undefined if the observable has\n   * not emitted a value yet.\n   *\n   * @param observable$ the observable to get the value from.\n   */\n  getCurrentValue = RxUtils.getCurrentValue;\n\n  /**\n   * @internal\n   * @param status\n   */\n  setStatus(status: InputDeviceStatus) {\n    this.setCurrentValue(this.statusSubject, status);\n  }\n\n  /**\n   * @internal\n   * @param pendingStatus\n   */\n  setPendingStatus(pendingStatus: InputDeviceStatus) {\n    this.setCurrentValue(this.optimisticStatusSubject, pendingStatus);\n  }\n\n  /**\n   * Updates the `mediaStream` state variable.\n   *\n   * @internal\n   * @param stream the stream to set.\n   * @param rootStream the root stream, applicable when filters are used\n   * as this is the stream that holds the actual deviceId information.\n   */\n  setMediaStream(\n    stream: MediaStream | undefined,\n    rootStream: MediaStream | undefined,\n  ) {\n    this.setCurrentValue(this.mediaStreamSubject, stream);\n    if (rootStream) {\n      this.setDevice(this.getDeviceIdFromStream(rootStream));\n    }\n  }\n\n  /**\n   * @internal\n   * @param deviceId the device id to set.\n   */\n  setDevice(deviceId: string | undefined) {\n    this.setCurrentValue(this.selectedDeviceSubject, deviceId);\n  }\n\n  /**\n   * Gets the default constraints for the device.\n   */\n  get defaultConstraints() {\n    return this.getCurrentValue(this.defaultConstraints$);\n  }\n\n  /**\n   * Sets the default constraints for the device.\n   *\n   * @internal\n   * @param constraints the constraints to set.\n   */\n  setDefaultConstraints(constraints: C | undefined) {\n    this.setCurrentValue(this.defaultConstraintsSubject, constraints);\n  }\n\n  /**\n   * Updates the value of the provided Subject.\n   * An `update` can either be a new value or a function which takes\n   * the current value and returns a new value.\n   *\n   * @internal\n   *\n   * @param subject the subject to update.\n   * @param update the update to apply to the subject.\n   * @return the updated value.\n   */\n  protected setCurrentValue = RxUtils.setCurrentValue;\n\n  protected abstract getDeviceIdFromStream(\n    stream: MediaStream,\n  ): string | undefined;\n}\n", "import { BehaviorSubject, distinctUntilChanged, Observable } from 'rxjs';\nimport { InputMediaDeviceManagerState } from './InputMediaDeviceManagerState';\nimport { isReactNative } from '../helpers/platforms';\nimport { getVideoBrowserPermission } from './devices';\n\nexport type CameraDirection = 'front' | 'back' | undefined;\n\nexport class CameraManagerState extends InputMediaDeviceManagerState {\n  private directionSubject = new BehaviorSubject<CameraDirection>(undefined);\n\n  /**\n   * Observable that emits the preferred camera direction\n   * front - means the camera facing the user\n   * back - means the camera facing the environment\n   */\n  direction$: Observable<CameraDirection>;\n\n  constructor() {\n    super('stop-tracks', getVideoBrowserPermission());\n    this.direction$ = this.directionSubject\n      .asObservable()\n      .pipe(distinctUntilChanged());\n  }\n\n  /**\n   * The preferred camera direction\n   * front - means the camera facing the user\n   * back - means the camera facing the environment\n   */\n  get direction() {\n    return this.getCurrentValue(this.direction$);\n  }\n\n  /**\n   * @internal\n   */\n  setDirection(direction: CameraDirection) {\n    this.setCurrentValue(this.directionSubject, direction);\n  }\n\n  /**\n   * @internal\n   */\n  setMediaStream(\n    stream: MediaStream | undefined,\n    rootStream: MediaStream | undefined,\n  ): void {\n    super.setMediaStream(stream, rootStream);\n    if (stream) {\n      // RN getSettings() doesn't return facingMode, so we don't verify camera direction\n      const direction = isReactNative()\n        ? this.direction\n        : stream.getVideoTracks()[0]?.getSettings().facingMode === 'environment'\n          ? 'back'\n          : 'front';\n      this.setDirection(direction);\n    }\n  }\n\n  protected getDeviceIdFromStream(stream: MediaStream): string | undefined {\n    const [track] = stream.getVideoTracks();\n    return track?.getSettings().deviceId;\n  }\n}\n", "/**\n * Checks if the current platform is a mobile device.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Browser_detection_using_the_user_agent\n */\nexport const isMobile = () => /Mobi/i.test(navigator.userAgent);\n", "import { Observable } from 'rxjs';\nimport { Call } from '../Call';\nimport { CameraDirection, CameraManagerState } from './CameraManagerState';\nimport { InputMediaDeviceManager } from './InputMediaDeviceManager';\nimport { getVideoDevices, getVideoStream } from './devices';\nimport { TrackType } from '../gen/video/sfu/models/models';\nimport { PreferredCodec } from '../types';\nimport { isMobile } from '../compatibility';\nimport { isReactNative } from '../helpers/platforms';\n\nexport class CameraManager extends InputMediaDeviceManager<CameraManagerState> {\n  private targetResolution = {\n    width: 1280,\n    height: 720,\n  };\n\n  /**\n   * Constructs a new CameraManager.\n   *\n   * @param call the call instance.\n   */\n  constructor(call: Call) {\n    super(call, new CameraManagerState(), TrackType.VIDEO);\n  }\n\n  private isDirectionSupportedByDevice() {\n    return isReactNative() || isMobile();\n  }\n\n  /**\n   * Select the camera direction.\n   *\n   * @param direction the direction of the camera to select.\n   */\n  async selectDirection(direction: Exclude<CameraDirection, undefined>) {\n    if (this.isDirectionSupportedByDevice()) {\n      this.state.setDirection(direction);\n      // Providing both device id and direction doesn't work, so we deselect the device\n      this.state.setDevice(undefined);\n      await this.applySettingsToStream();\n    } else {\n      this.logger('warn', 'Camera direction ignored for desktop devices');\n    }\n  }\n\n  /**\n   * Flips the camera direction: if it's front it will change to back, if it's back, it will change to front.\n   *\n   * Note: if there is no available camera with the desired direction, this method will do nothing.\n   * @returns\n   */\n  async flip() {\n    const newDirection = this.state.direction === 'front' ? 'back' : 'front';\n    await this.selectDirection(newDirection);\n  }\n\n  /**\n   * @internal\n   */\n  async selectTargetResolution(resolution: { width: number; height: number }) {\n    this.targetResolution.height = resolution.height;\n    this.targetResolution.width = resolution.width;\n    if (this.state.optimisticStatus === 'enabled') {\n      try {\n        await this.statusChangeSettled();\n      } catch (error) {\n        // couldn't enable device, target resolution will be applied the next time user attempts to start the device\n        this.logger('warn', 'could not apply target resolution', error);\n      }\n    }\n    if (this.enabled && this.state.mediaStream) {\n      const [videoTrack] = this.state.mediaStream.getVideoTracks();\n      if (!videoTrack) return;\n      const { width, height } = videoTrack.getSettings();\n      if (\n        width !== this.targetResolution.width ||\n        height !== this.targetResolution.height\n      ) {\n        await this.applySettingsToStream();\n        this.logger(\n          'debug',\n          `${width}x${height} target resolution applied to media stream`,\n        );\n      }\n    }\n  }\n\n  /**\n   * Sets the preferred codec for encoding the video.\n   *\n   * @internal internal use only, not part of the public API.\n   * @deprecated use {@link call.updatePublishOptions} instead.\n   * @param codec the codec to use for encoding the video.\n   */\n  setPreferredCodec(codec: PreferredCodec | undefined) {\n    this.call.updatePublishOptions({ preferredCodec: codec });\n  }\n\n  protected getDevices(): Observable<MediaDeviceInfo[]> {\n    return getVideoDevices();\n  }\n\n  protected getStream(\n    constraints: MediaTrackConstraints,\n  ): Promise<MediaStream> {\n    constraints.width = this.targetResolution.width;\n    constraints.height = this.targetResolution.height;\n    // We can't set both device id and facing mode\n    // Device id has higher priority\n\n    if (\n      !constraints.deviceId &&\n      this.state.direction &&\n      this.isDirectionSupportedByDevice()\n    ) {\n      constraints.facingMode =\n        this.state.direction === 'front' ? 'user' : 'environment';\n    }\n    return getVideoStream(constraints);\n  }\n\n  protected publishStream(stream: MediaStream): Promise<void> {\n    return this.call.publishVideoStream(stream);\n  }\n\n  protected stopPublishStream(stopTracks: boolean): Promise<void> {\n    return this.call.stopPublish(TrackType.VIDEO, stopTracks);\n  }\n}\n", "import { BehaviorSubject, distinctUntilChanged, Observable } from 'rxjs';\nimport {\n  InputMediaDeviceManagerState,\n  TrackDisableMode,\n} from './InputMediaDeviceManagerState';\nimport { getAudioBrowserPermission } from './devices';\n\nexport class MicrophoneManagerState extends InputMediaDeviceManagerState {\n  private speakingWhileMutedSubject = new BehaviorSubject<boolean>(false);\n\n  /**\n   * An Observable that emits `true` if the user's microphone is muted but they'are speaking.\n   *\n   * This feature is not available in the React Native SDK.\n   */\n  speakingWhileMuted$: Observable<boolean>;\n\n  constructor(disableMode: TrackDisableMode) {\n    super(disableMode, getAudioBrowserPermission());\n\n    this.speakingWhileMuted$ = this.speakingWhileMutedSubject\n      .asObservable()\n      .pipe(distinctUntilChanged());\n  }\n\n  /**\n   * `true` if the user's microphone is muted but they'are speaking.\n   *\n   * This feature is not available in the React Native SDK.\n   */\n  get speakingWhileMuted() {\n    return this.getCurrentValue(this.speakingWhileMuted$);\n  }\n\n  /**\n   * @internal\n   */\n  setSpeakingWhileMuted(isSpeaking: boolean) {\n    this.setCurrentValue(this.speakingWhileMutedSubject, isSpeaking);\n  }\n\n  protected getDeviceIdFromStream(stream: MediaStream): string | undefined {\n    const [track] = stream.getAudioTracks();\n    return track?.getSettings().deviceId;\n  }\n}\n", "export type SoundDetectorOptions = {\n  /**\n   * Defines how often the detector should check whether a sound is present.\n   * Defaults to 500ms.\n   */\n  detectionFrequencyInMs?: number;\n\n  /**\n   * Defines the audio level threshold before a \"change\" is emitted.\n   * Defaults to 150. This value should be in the range of 0-255.\n   */\n  audioLevelThreshold?: number;\n\n  /**\n   * See https://developer.mozilla.org/en-US/docs/web/api/analysernode/fftsize\n   *\n   * Defaults to 128.\n   */\n  fftSize?: number;\n\n  /**\n   * Defines whether the provided audio stream should be stopped (destroyed)\n   * when the sound detector is stopped.\n   *\n   * Defaults to `true`.\n   */\n  destroyStreamOnStop?: boolean;\n};\n\nexport type SoundDetectorState = {\n  isSoundDetected: boolean;\n  /**\n   * Represented as percentage (0-100) where 100% is defined by `audioLevelThreshold` property.\n   * Decrease time between samples (to 50-100ms) with `detectionFrequencyInMs` property.\n   */\n  audioLevel: number;\n};\n\nexport type SoundStateChangeHandler = (state: SoundDetectorState) => void;\n\nconst DETECTION_FREQUENCY_IN_MS = 500;\nconst AUDIO_LEVEL_THRESHOLD = 150;\nconst FFT_SIZE = 128;\n\n/**\n * Creates a new sound detector.\n *\n * @param audioStream the audio stream to observe. Depending on the provided configuration, this stream might be destroyed when the sound detector is stopped.\n * @param onSoundDetectedStateChanged a callback which is called when the sound state changes.\n * @param options custom options for the sound detector.\n * @returns a clean-up function which once invoked stops the sound detector.\n */\nexport const createSoundDetector = (\n  audioStream: MediaStream,\n  onSoundDetectedStateChanged: SoundStateChangeHandler,\n  options: SoundDetectorOptions = {},\n) => {\n  const {\n    detectionFrequencyInMs = DETECTION_FREQUENCY_IN_MS,\n    audioLevelThreshold = AUDIO_LEVEL_THRESHOLD,\n    fftSize = FFT_SIZE,\n    destroyStreamOnStop = true,\n  } = options;\n\n  const audioContext = new AudioContext();\n  const analyser = audioContext.createAnalyser();\n  analyser.fftSize = fftSize;\n\n  const microphone = audioContext.createMediaStreamSource(audioStream);\n  microphone.connect(analyser);\n\n  const intervalId = setInterval(() => {\n    const data = new Uint8Array(analyser.frequencyBinCount);\n    analyser.getByteFrequencyData(data);\n\n    const isSoundDetected = data.some((value) => value >= audioLevelThreshold);\n\n    const averagedDataValue = data.reduce((pv, cv) => pv + cv, 0) / data.length;\n\n    const percentage =\n      averagedDataValue > audioLevelThreshold\n        ? 100\n        : Math.round((averagedDataValue / audioLevelThreshold) * 100);\n\n    // When the track is disabled, it takes time for the buffer to empty\n    // This check will ensure that we don't send anything if the track is disabled\n    if (audioStream.getAudioTracks()[0]?.enabled) {\n      onSoundDetectedStateChanged({ isSoundDetected, audioLevel: percentage });\n    } else {\n      onSoundDetectedStateChanged({ isSoundDetected: false, audioLevel: 0 });\n    }\n  }, detectionFrequencyInMs);\n\n  return async function stop() {\n    clearInterval(intervalId);\n\n    // clean-up the AudioContext elements\n    microphone.disconnect();\n    analyser.disconnect();\n    if (audioContext.state !== 'closed') {\n      await audioContext.close();\n    }\n\n    // stop the stream\n    if (destroyStreamOnStop) {\n      audioStream.getTracks().forEach((track) => {\n        track.stop();\n        audioStream.removeTrack(track);\n      });\n    }\n  };\n};\n", "import { BaseStats } from '../stats';\nimport { SoundStateChangeHandler } from './sound-detector';\nimport { flatten } from '../stats/utils';\n\nconst AUDIO_LEVEL_THRESHOLD = 0.2;\n\nexport class RNSpeechDetector {\n  private pc1 = new RTCPeerConnection({});\n  private pc2 = new RTCPeerConnection({});\n  private intervalId: NodeJS.Timeout | undefined;\n  private audioStream: MediaStream | undefined;\n\n  /**\n   * Starts the speech detection.\n   */\n  public async start() {\n    try {\n      this.cleanupAudioStream();\n      const audioStream = await navigator.mediaDevices.getUserMedia({\n        audio: true,\n      });\n      this.audioStream = audioStream;\n\n      this.pc1.addEventListener('icecandidate', async (e) => {\n        await this.pc2.addIceCandidate(\n          e.candidate as RTCIceCandidateInit | undefined,\n        );\n      });\n      this.pc2.addEventListener('icecandidate', async (e) => {\n        await this.pc1.addIceCandidate(\n          e.candidate as RTCIceCandidateInit | undefined,\n        );\n      });\n\n      audioStream\n        .getTracks()\n        .forEach((track) => this.pc1.addTrack(track, audioStream));\n      const offer = await this.pc1.createOffer({});\n      await this.pc2.setRemoteDescription(offer);\n      await this.pc1.setLocalDescription(offer);\n      const answer = await this.pc2.createAnswer();\n      await this.pc1.setRemoteDescription(answer);\n      await this.pc2.setLocalDescription(answer);\n      const audioTracks = audioStream.getAudioTracks();\n      // We need to mute the audio track for this temporary stream, or else you will hear yourself twice while in the call.\n      audioTracks.forEach((track) => (track.enabled = false));\n    } catch (error) {\n      console.error(\n        'Error connecting and negotiating between PeerConnections:',\n        error,\n      );\n    }\n  }\n\n  /**\n   * Stops the speech detection and releases all allocated resources.\n   */\n  public stop() {\n    this.pc1.close();\n    this.pc2.close();\n    this.cleanupAudioStream();\n    if (this.intervalId) {\n      clearInterval(this.intervalId);\n    }\n  }\n\n  /**\n   * Public method that detects the audio levels and returns the status.\n   */\n  public onSpeakingDetectedStateChange(\n    onSoundDetectedStateChanged: SoundStateChangeHandler,\n  ) {\n    this.intervalId = setInterval(async () => {\n      const stats = (await this.pc1.getStats()) as RTCStatsReport;\n      const report = flatten(stats);\n      // Audio levels are present inside stats of type `media-source` and of kind `audio`\n      const audioMediaSourceStats = report.find(\n        (stat) =>\n          stat.type === 'media-source' &&\n          (stat as RTCRtpStreamStats).kind === 'audio',\n      ) as BaseStats;\n      if (audioMediaSourceStats) {\n        const { audioLevel } = audioMediaSourceStats;\n        if (audioLevel) {\n          if (audioLevel >= AUDIO_LEVEL_THRESHOLD) {\n            onSoundDetectedStateChanged({\n              isSoundDetected: true,\n              audioLevel,\n            });\n          } else {\n            onSoundDetectedStateChanged({\n              isSoundDetected: false,\n              audioLevel: 0,\n            });\n          }\n        }\n      }\n    }, 1000);\n\n    return () => {\n      clearInterval(this.intervalId);\n    };\n  }\n\n  private cleanupAudioStream() {\n    if (!this.audioStream) {\n      return;\n    }\n    this.audioStream.getTracks().forEach((track) => track.stop());\n    if (\n      // @ts-expect-error release() is present in react-native-webrtc\n      typeof this.audioStream.release === 'function'\n    ) {\n      // @ts-expect-error called to dispose the stream in RN\n      this.audioStream.release();\n    }\n  }\n}\n", "import { combineLatest, Observable } from 'rxjs';\nimport type { INoiseCancellation } from '@stream-io/audio-filters-web';\nimport { Call } from '../Call';\nimport { InputMediaDeviceManager } from './InputMediaDeviceManager';\nimport { MicrophoneManagerState } from './MicrophoneManagerState';\nimport { TrackDisableMode } from './InputMediaDeviceManagerState';\nimport { getAudioDevices, getAudioStream } from './devices';\nimport { TrackType } from '../gen/video/sfu/models/models';\nimport { createSoundDetector } from '../helpers/sound-detector';\nimport { isReactNative } from '../helpers/platforms';\nimport {\n  NoiseCancellationSettingsModeEnum,\n  OwnCapability,\n} from '../gen/coordinator';\nimport { CallingState } from '../store';\nimport { createSubscription } from '../store/rxUtils';\nimport { RNSpeechDetector } from '../helpers/RNSpeechDetector';\nimport { withoutConcurrency } from '../helpers/concurrency';\n\nexport class MicrophoneManager extends InputMediaDeviceManager<MicrophoneManagerState> {\n  private speakingWhileMutedNotificationEnabled = true;\n  private soundDetectorConcurrencyTag = Symbol('soundDetectorConcurrencyTag');\n  private soundDetectorCleanup?: Function;\n  private rnSpeechDetector: RNSpeechDetector | undefined;\n  private noiseCancellation: INoiseCancellation | undefined;\n  private noiseCancellationChangeUnsubscribe: (() => void) | undefined;\n  private noiseCancellationRegistration?: Promise<void>;\n  private unregisterNoiseCancellation?: () => Promise<void>;\n\n  constructor(\n    call: Call,\n    disableMode: TrackDisableMode = isReactNative()\n      ? 'disable-tracks'\n      : 'stop-tracks',\n  ) {\n    super(call, new MicrophoneManagerState(disableMode), TrackType.AUDIO);\n\n    this.subscriptions.push(\n      createSubscription(\n        combineLatest([\n          this.call.state.callingState$,\n          this.call.state.ownCapabilities$,\n          this.state.selectedDevice$,\n          this.state.status$,\n        ]),\n        async ([callingState, ownCapabilities, deviceId, status]) => {\n          try {\n            if (callingState === CallingState.LEFT) {\n              await this.stopSpeakingWhileMutedDetection();\n            }\n            if (callingState !== CallingState.JOINED) return;\n            if (!this.speakingWhileMutedNotificationEnabled) return;\n\n            if (ownCapabilities.includes(OwnCapability.SEND_AUDIO)) {\n              if (status === 'disabled') {\n                await this.startSpeakingWhileMutedDetection(deviceId);\n              } else {\n                await this.stopSpeakingWhileMutedDetection();\n              }\n            } else {\n              await this.stopSpeakingWhileMutedDetection();\n            }\n          } catch (err) {\n            this.logger('warn', 'Could not enable speaking while muted', err);\n          }\n        },\n      ),\n    );\n\n    this.subscriptions.push(\n      createSubscription(this.call.state.callingState$, (callingState) => {\n        // do nothing when noise filtering isn't turned on\n        if (!this.noiseCancellationRegistration || !this.noiseCancellation)\n          return;\n\n        const autoOn =\n          this.call.state.settings?.audio.noise_cancellation?.mode ===\n          NoiseCancellationSettingsModeEnum.AUTO_ON;\n\n        if (autoOn && callingState === CallingState.JOINED) {\n          this.noiseCancellationRegistration\n            .then(() => this.noiseCancellation?.enable())\n            .catch((err) => {\n              this.logger('warn', `Failed to enable noise cancellation`, err);\n              return this.call.notifyNoiseCancellationStopped();\n            });\n        } else if (callingState === CallingState.LEFT) {\n          this.noiseCancellationRegistration\n            .then(() => this.noiseCancellation?.disable())\n            .catch((err) => {\n              this.logger('warn', `Failed to disable noise cancellation`, err);\n            });\n        }\n      }),\n    );\n  }\n\n  /**\n   * Enables noise cancellation for the microphone.\n   *\n   * Note: not supported in React Native.\n   * @param noiseCancellation - a noise cancellation instance to use.\n   */\n  async enableNoiseCancellation(noiseCancellation: INoiseCancellation) {\n    if (isReactNative()) {\n      throw new Error('Noise cancellation is not supported in React Native');\n    }\n\n    const { ownCapabilities, settings } = this.call.state;\n    const hasNoiseCancellationCapability = ownCapabilities.includes(\n      OwnCapability.ENABLE_NOISE_CANCELLATION,\n    );\n    if (!hasNoiseCancellationCapability) {\n      throw new Error('Noise cancellation is not available.');\n    }\n    const noiseCancellationSettings = settings?.audio.noise_cancellation;\n    if (\n      !noiseCancellationSettings ||\n      noiseCancellationSettings.mode ===\n        NoiseCancellationSettingsModeEnum.DISABLED\n    ) {\n      throw new Error('Noise cancellation is disabled for this call type.');\n    }\n    try {\n      this.noiseCancellation = noiseCancellation;\n\n      // listen for change events and notify the SFU\n      this.noiseCancellationChangeUnsubscribe = this.noiseCancellation.on(\n        'change',\n        (enabled: boolean) => {\n          if (enabled) {\n            this.call.notifyNoiseCancellationStarting().catch((err) => {\n              this.logger('warn', `notifyNoiseCancellationStart failed`, err);\n            });\n          } else {\n            this.call.notifyNoiseCancellationStopped().catch((err) => {\n              this.logger('warn', `notifyNoiseCancellationStop failed`, err);\n            });\n          }\n        },\n      );\n\n      const registrationResult = this.registerFilter(\n        noiseCancellation.toFilter(),\n      );\n      this.noiseCancellationRegistration = registrationResult.registered;\n      this.unregisterNoiseCancellation = registrationResult.unregister;\n      await this.noiseCancellationRegistration;\n\n      // handles an edge case where a noise cancellation is enabled after\n      // the participant as joined the call -> we immediately enable NC\n      if (\n        noiseCancellationSettings.mode ===\n          NoiseCancellationSettingsModeEnum.AUTO_ON &&\n        this.call.state.callingState === CallingState.JOINED\n      ) {\n        noiseCancellation.enable();\n      }\n    } catch (e) {\n      this.logger('warn', 'Failed to enable noise cancellation', e);\n      await this.disableNoiseCancellation().catch((err) => {\n        this.logger('warn', 'Failed to disable noise cancellation', err);\n      });\n    }\n  }\n\n  /**\n   * Disables noise cancellation for the microphone.\n   *\n   * Note: not supported in React Native.\n   */\n  async disableNoiseCancellation() {\n    if (isReactNative()) {\n      throw new Error('Noise cancellation is not supported in React Native');\n    }\n    await (this.unregisterNoiseCancellation?.() ?? Promise.resolve())\n      .then(() => this.noiseCancellation?.disable())\n      .then(() => this.noiseCancellationChangeUnsubscribe?.())\n      .catch((err) => {\n        this.logger('warn', 'Failed to unregister noise cancellation', err);\n      });\n\n    await this.call.notifyNoiseCancellationStopped();\n  }\n\n  /**\n   * Enables speaking while muted notification.\n   */\n  async enableSpeakingWhileMutedNotification() {\n    this.speakingWhileMutedNotificationEnabled = true;\n    if (this.state.status === 'disabled') {\n      await this.startSpeakingWhileMutedDetection(this.state.selectedDevice);\n    }\n  }\n\n  /**\n   * Disables speaking while muted notification.\n   */\n  async disableSpeakingWhileMutedNotification() {\n    this.speakingWhileMutedNotificationEnabled = false;\n    await this.stopSpeakingWhileMutedDetection();\n  }\n\n  protected getDevices(): Observable<MediaDeviceInfo[]> {\n    return getAudioDevices();\n  }\n\n  protected getStream(\n    constraints: MediaTrackConstraints,\n  ): Promise<MediaStream> {\n    return getAudioStream(constraints);\n  }\n\n  protected publishStream(stream: MediaStream): Promise<void> {\n    return this.call.publishAudioStream(stream);\n  }\n\n  protected stopPublishStream(stopTracks: boolean): Promise<void> {\n    return this.call.stopPublish(TrackType.AUDIO, stopTracks);\n  }\n\n  private async startSpeakingWhileMutedDetection(deviceId?: string) {\n    await withoutConcurrency(this.soundDetectorConcurrencyTag, async () => {\n      await this.stopSpeakingWhileMutedDetection();\n      if (isReactNative()) {\n        this.rnSpeechDetector = new RNSpeechDetector();\n        await this.rnSpeechDetector.start();\n        const unsubscribe =\n          this.rnSpeechDetector?.onSpeakingDetectedStateChange((event) => {\n            this.state.setSpeakingWhileMuted(event.isSoundDetected);\n          });\n        this.soundDetectorCleanup = () => {\n          unsubscribe();\n          this.rnSpeechDetector?.stop();\n          this.rnSpeechDetector = undefined;\n        };\n      } else {\n        // Need to start a new stream that's not connected to publisher\n        const stream = await this.getStream({\n          deviceId,\n        });\n        this.soundDetectorCleanup = createSoundDetector(stream, (event) => {\n          this.state.setSpeakingWhileMuted(event.isSoundDetected);\n        });\n      }\n    });\n  }\n\n  private async stopSpeakingWhileMutedDetection() {\n    await withoutConcurrency(this.soundDetectorConcurrencyTag, async () => {\n      if (!this.soundDetectorCleanup) return;\n      const soundDetectorCleanup = this.soundDetectorCleanup;\n      this.soundDetectorCleanup = undefined;\n      this.state.setSpeakingWhileMuted(false);\n      await soundDetectorCleanup();\n    });\n  }\n}\n", "import { BehaviorSubject, distinctUntilChanged } from 'rxjs';\nimport { InputMediaDeviceManagerState } from './InputMediaDeviceManagerState';\nimport { ScreenShareSettings } from '../types';\n\nexport class ScreenShareState extends InputMediaDeviceManagerState<DisplayMediaStreamOptions> {\n  private audioEnabledSubject = new BehaviorSubject<boolean>(true);\n  private settingsSubject = new BehaviorSubject<\n    ScreenShareSettings | undefined\n  >(undefined);\n\n  /**\n   * An Observable that emits the current screen share audio status.\n   */\n  audioEnabled$ = this.audioEnabledSubject\n    .asObservable()\n    .pipe(distinctUntilChanged());\n\n  /**\n   * An Observable that emits the current screen share settings.\n   */\n  settings$ = this.settingsSubject.asObservable();\n\n  /**\n   * @internal\n   */\n  protected getDeviceIdFromStream = (\n    stream: MediaStream,\n  ): string | undefined => {\n    const [track] = stream.getTracks();\n    return track?.getSettings().deviceId;\n  };\n\n  /**\n   * The current screen share audio status.\n   */\n  get audioEnabled() {\n    return this.getCurrentValue(this.audioEnabled$);\n  }\n\n  /**\n   * Set the current screen share audio status.\n   */\n  setAudioEnabled(isEnabled: boolean) {\n    this.setCurrentValue(this.audioEnabledSubject, isEnabled);\n  }\n\n  /**\n   * The current screen share settings.\n   */\n  get settings() {\n    return this.getCurrentValue(this.settings$);\n  }\n\n  /**\n   * Set the current screen share settings.\n   *\n   * @param settings the screen share settings to set.\n   */\n  setSettings(settings: ScreenShareSettings | undefined) {\n    this.setCurrentValue(this.settingsSubject, settings);\n  }\n}\n", "import { Observable, of } from 'rxjs';\nimport { InputMediaDeviceManager } from './InputMediaDeviceManager';\nimport { ScreenShareState } from './ScreenShareState';\nimport { Call } from '../Call';\nimport { TrackType } from '../gen/video/sfu/models/models';\nimport { getScreenShareStream } from './devices';\nimport { ScreenShareSettings } from '../types';\nimport { createSubscription } from '../store/rxUtils';\n\nexport class ScreenShareManager extends InputMediaDeviceManager<\n  ScreenShareState,\n  DisplayMediaStreamOptions\n> {\n  constructor(call: Call) {\n    super(call, new ScreenShareState(), TrackType.SCREEN_SHARE);\n\n    this.subscriptions.push(\n      createSubscription(call.state.settings$, (settings) => {\n        const maybeTargetResolution = settings?.screensharing.target_resolution;\n\n        if (maybeTargetResolution) {\n          this.setDefaultConstraints({\n            video: {\n              width: maybeTargetResolution.width,\n              height: maybeTargetResolution.height,\n            },\n          });\n        }\n      }),\n    );\n  }\n\n  /**\n   * Will enable screen share audio options on supported platforms.\n   *\n   * Note: for ongoing screen share, audio won't be enabled until you\n   * re-publish the screen share stream.\n   */\n  enableScreenShareAudio(): void {\n    this.state.setAudioEnabled(true);\n  }\n\n  /**\n   * Will disable screen share audio options on supported platforms.\n   */\n  async disableScreenShareAudio(): Promise<void> {\n    this.state.setAudioEnabled(false);\n    if (this.call.publisher?.isPublishing(TrackType.SCREEN_SHARE_AUDIO)) {\n      await this.call.stopPublish(TrackType.SCREEN_SHARE_AUDIO, true);\n    }\n  }\n\n  /**\n   * Returns the current screen share settings.\n   */\n  getSettings(): ScreenShareSettings | undefined {\n    return this.state.settings;\n  }\n\n  /**\n   * Sets the current screen share settings.\n   *\n   * @param settings the settings to set.\n   */\n  setSettings(settings: ScreenShareSettings | undefined): void {\n    this.state.setSettings(settings);\n  }\n\n  protected getDevices(): Observable<MediaDeviceInfo[]> {\n    return of([]); // there are no devices to be listed for Screen Share\n  }\n\n  protected getStream(\n    constraints: DisplayMediaStreamOptions,\n  ): Promise<MediaStream> {\n    if (!this.state.audioEnabled) {\n      constraints.audio = false;\n    }\n    return getScreenShareStream(constraints);\n  }\n\n  protected publishStream(stream: MediaStream): Promise<void> {\n    return this.call.publishScreenShareStream(stream);\n  }\n\n  protected async stopPublishStream(stopTracks: boolean): Promise<void> {\n    await this.call.stopPublish(TrackType.SCREEN_SHARE, stopTracks);\n    await this.call.stopPublish(TrackType.SCREEN_SHARE_AUDIO, stopTracks);\n  }\n\n  /**\n   * Overrides the default `select` method to throw an error.\n   *\n   * @param deviceId ignored.\n   */\n  async select(deviceId: string | undefined): Promise<void> {\n    throw new Error('This method is not supported in for Screen Share');\n  }\n}\n", "import { BehaviorSubject, Observable, distinctUntilChanged } from 'rxjs';\nimport { RxUtils } from '../store';\nimport { checkIfAudioOutputChangeSupported } from './devices';\n\nexport class SpeakerState {\n  protected selectedDeviceSubject = new BehaviorSubject<string>('');\n  protected volumeSubject = new BehaviorSubject<number>(1);\n  /**\n   * [Tells if the browser supports audio output change on 'audio' elements](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/setSinkId).\n   */\n  readonly isDeviceSelectionSupported = checkIfAudioOutputChangeSupported();\n\n  /**\n   * An Observable that emits the currently selected device\n   *\n   * Note: this feature is not supported in React Native\n   */\n  selectedDevice$: Observable<string>;\n\n  /**\n   * An Observable that emits the currently selected volume\n   *\n   * Note: this feature is not supported in React Native\n   */\n  volume$: Observable<number>;\n\n  constructor() {\n    this.selectedDevice$ = this.selectedDeviceSubject\n      .asObservable()\n      .pipe(distinctUntilChanged());\n    this.volume$ = this.volumeSubject\n      .asObservable()\n      .pipe(distinctUntilChanged());\n  }\n\n  /**\n   * The currently selected device\n   *\n   * Note: this feature is not supported in React Native\n   */\n  get selectedDevice() {\n    return this.getCurrentValue(this.selectedDevice$);\n  }\n\n  /**\n   * The currently selected volume\n   *\n   * Note: this feature is not supported in React Native\n   */\n  get volume() {\n    return this.getCurrentValue(this.volume$);\n  }\n\n  /**\n   * Gets the current value of an observable, or undefined if the observable has\n   * not emitted a value yet.\n   *\n   * @param observable$ the observable to get the value from.\n   */\n  getCurrentValue = RxUtils.getCurrentValue;\n\n  /**\n   * @internal\n   * @param deviceId\n   */\n  setDevice(deviceId: string) {\n    this.setCurrentValue(this.selectedDeviceSubject, deviceId);\n  }\n\n  /**\n   * @internal\n   * @param volume\n   */\n  setVolume(volume: number) {\n    this.setCurrentValue(this.volumeSubject, volume);\n  }\n\n  /**\n   * Updates the value of the provided Subject.\n   * An `update` can either be a new value or a function which takes\n   * the current value and returns a new value.\n   *\n   * @internal\n   *\n   * @param subject the subject to update.\n   * @param update the update to apply to the subject.\n   * @return the updated value.\n   */\n  protected setCurrentValue = RxUtils.setCurrentValue;\n}\n", "import { combineLatest, Subscription } from 'rxjs';\nimport { Call } from '../Call';\nimport { isReactNative } from '../helpers/platforms';\nimport { SpeakerState } from './SpeakerState';\nimport { deviceIds$, getAudioOutputDevices } from './devices';\n\nexport class SpeakerManager {\n  public readonly state = new SpeakerState();\n  private subscriptions: Subscription[] = [];\n  private readonly call: Call;\n\n  constructor(call: Call) {\n    this.call = call;\n    if (deviceIds$ && !isReactNative()) {\n      this.subscriptions.push(\n        combineLatest([deviceIds$!, this.state.selectedDevice$]).subscribe(\n          ([devices, deviceId]) => {\n            if (!deviceId) {\n              return;\n            }\n            const device = devices.find(\n              (d) => d.deviceId === deviceId && d.kind === 'audiooutput',\n            );\n            if (!device) {\n              this.select('');\n            }\n          },\n        ),\n      );\n    }\n  }\n\n  /**\n   * Lists the available audio output devices\n   *\n   * Note: It prompts the user for a permission to use devices (if not already granted)\n   * Note: This method is not supported in React Native\n   *\n   * @returns an Observable that will be updated if a device is connected or disconnected\n   */\n  listDevices() {\n    if (isReactNative()) {\n      throw new Error(\n        'This feature is not supported in React Native. Please visit https://getstream.io/video/docs/reactnative/core/camera-and-microphone/#speaker-management for more details',\n      );\n    }\n    return getAudioOutputDevices();\n  }\n\n  /**\n   * Select a device.\n   *\n   * Note: This method is not supported in React Native\n   *\n   * @param deviceId empty string means the system default\n   */\n  select(deviceId: string) {\n    if (isReactNative()) {\n      throw new Error(\n        'This feature is not supported in React Native. Please visit https://getstream.io/video/docs/reactnative/core/camera-and-microphone/#speaker-management for more details',\n      );\n    }\n    this.state.setDevice(deviceId);\n  }\n\n  /**\n   * Disposes the manager.\n   *\n   * @internal\n   */\n  dispose = () => {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n  };\n\n  /**\n   * Set the volume of the audio elements\n   * @param volume a number between 0 and 1.\n   *\n   * Note: This method is not supported in React Native\n   */\n  setVolume(volume: number) {\n    if (isReactNative()) {\n      throw new Error(\n        'This feature is not supported in React Native. Please visit https://getstream.io/video/docs/reactnative/core/camera-and-microphone/#speaker-management for more details',\n      );\n    }\n    if (volume && (volume < 0 || volume > 1)) {\n      throw new Error('Volume must be between 0 and 1');\n    }\n    this.state.setVolume(volume);\n  }\n\n  /**\n   * Set the volume of a participant.\n   *\n   * Note: This method is not supported in React Native.\n   *\n   * @param sessionId the participant's session id.\n   * @param volume a number between 0 and 1. Set it to `undefined` to use the default volume.\n   */\n  setParticipantVolume(sessionId: string, volume: number | undefined) {\n    if (isReactNative()) {\n      throw new Error(\n        'This feature is not supported in React Native. Please visit https://getstream.io/video/docs/reactnative/core/camera-and-microphone/#speaker-management for more details',\n      );\n    }\n    if (volume && (volume < 0 || volume > 1)) {\n      throw new Error('Volume must be between 0 and 1, or undefined');\n    }\n    this.call.state.updateParticipant(sessionId, { audioVolume: volume });\n  }\n}\n", "import { StreamSfuClient } from './StreamSfuClient';\nimport {\n  Dispatcher,\n  getGenericSdp,\n  isSfuEvent,\n  Publisher,\n  Subscriber,\n} from './rtc';\nimport { muteTypeToTrackType } from './rtc/helpers/tracks';\nimport { toRtcConfiguration } from './rtc/helpers/rtcConfiguration';\nimport {\n  registerEventHandlers,\n  registerRingingCallEventHandlers,\n} from './events/callEventHandlers';\nimport {\n  CallingState,\n  CallState,\n  StreamVideoWriteableStateStore,\n} from './store';\nimport {\n  createSafeAsyncSubscription,\n  createSubscription,\n  getCurrentValue,\n} from './store/rxUtils';\nimport type {\n  AcceptCallResponse,\n  BlockUserRequest,\n  BlockUserResponse,\n  CollectUserFeedbackRequest,\n  CollectUserFeedbackResponse,\n  Credentials,\n  EndCallResponse,\n  GetCallResponse,\n  GetCallStatsResponse,\n  GetOrCreateCallRequest,\n  GetOrCreateCallResponse,\n  GoLiveRequest,\n  GoLiveResponse,\n  JoinCallRequest,\n  JoinCallResponse,\n  ListRecordingsResponse,\n  ListTranscriptionsResponse,\n  MuteUsersRequest,\n  MuteUsersResponse,\n  PinRequest,\n  PinResponse,\n  QueryCallMembersRequest,\n  QueryCallMembersResponse,\n  RejectCallRequest,\n  RejectCallResponse,\n  RequestPermissionRequest,\n  RequestPermissionResponse,\n  SendCallEventRequest,\n  SendCallEventResponse,\n  SendReactionRequest,\n  SendReactionResponse,\n  StartHLSBroadcastingResponse,\n  StartRecordingRequest,\n  StartRecordingResponse,\n  StartTranscriptionRequest,\n  StartTranscriptionResponse,\n  StatsOptions,\n  StopHLSBroadcastingResponse,\n  StopLiveResponse,\n  StopRecordingResponse,\n  StopTranscriptionResponse,\n  UnblockUserRequest,\n  UnblockUserResponse,\n  UnpinRequest,\n  UnpinResponse,\n  UpdateCallMembersRequest,\n  UpdateCallMembersResponse,\n  UpdateCallRequest,\n  UpdateCallResponse,\n  UpdateUserPermissionsRequest,\n  UpdateUserPermissionsResponse,\n  VideoResolution,\n} from './gen/coordinator';\nimport { OwnCapability } from './gen/coordinator';\nimport {\n  AudioTrackType,\n  CallConstructor,\n  CallLeaveOptions,\n  JoinCallData,\n  PublishOptions,\n  TrackMuteType,\n  VideoTrackType,\n} from './types';\nimport { BehaviorSubject, Subject, takeWhile } from 'rxjs';\nimport { ReconnectDetails } from './gen/video/sfu/event/events';\nimport {\n  ClientDetails,\n  TrackType,\n  WebsocketReconnectStrategy,\n} from './gen/video/sfu/models/models';\nimport { createStatsReporter, SfuStatsReporter, StatsReporter } from './stats';\nimport { DynascaleManager } from './helpers/DynascaleManager';\nimport { PermissionsContext } from './permissions';\nimport { CallTypes } from './CallType';\nimport { StreamClient } from './coordinator/connection/client';\nimport { sleep } from './coordinator/connection/utils';\nimport {\n  AllCallEvents,\n  CallEventListener,\n  ErrorFromResponse,\n  Logger,\n  RejectReason,\n  StreamCallEvent,\n} from './coordinator/connection/types';\nimport { getClientDetails } from './client-details';\nimport { getLogger } from './logger';\nimport {\n  CameraDirection,\n  CameraManager,\n  MicrophoneManager,\n  ScreenShareManager,\n  SpeakerManager,\n} from './devices';\nimport { getSdkSignature } from './stats/utils';\nimport { withoutConcurrency } from './helpers/concurrency';\nimport { ensureExhausted } from './helpers/ensureExhausted';\nimport {\n  PromiseWithResolvers,\n  promiseWithResolvers,\n} from './helpers/withResolvers';\n\n/**\n * An object representation of a `Call`.\n */\nexport class Call {\n  /**\n   * The type of the call.\n   */\n  readonly type: string;\n\n  /**\n   * The ID of the call.\n   */\n  readonly id: string;\n\n  /**\n   * The call CID.\n   */\n  readonly cid: string;\n\n  /**\n   * The state of this call.\n   */\n  readonly state = new CallState();\n\n  /**\n   * Flag indicating whether this call is \"watched\" and receives\n   * updates from the backend.\n   */\n  watching: boolean;\n\n  /**\n   * Device manager for the camera\n   */\n  readonly camera: CameraManager;\n\n  /**\n   * Device manager for the microphone.\n   */\n  readonly microphone: MicrophoneManager;\n\n  /**\n   * Device manager for the speaker.\n   */\n  readonly speaker: SpeakerManager;\n\n  /**\n   * Device manager for the screen.\n   */\n  readonly screenShare: ScreenShareManager;\n\n  /**\n   * The DynascaleManager instance.\n   */\n  readonly dynascaleManager: DynascaleManager;\n\n  subscriber?: Subscriber;\n  publisher?: Publisher;\n\n  /**\n   * Flag telling whether this call is a \"ringing\" call.\n   */\n  private readonly ringingSubject: Subject<boolean>;\n\n  /**\n   * The permissions context of this call.\n   */\n  readonly permissionsContext = new PermissionsContext();\n  readonly logger: Logger;\n\n  /**\n   * The event dispatcher instance dedicated to this Call instance.\n   * @private\n   */\n  private readonly dispatcher = new Dispatcher();\n\n  private publishOptions?: PublishOptions;\n  private statsReporter?: StatsReporter;\n  private sfuStatsReporter?: SfuStatsReporter;\n  private dropTimeout: ReturnType<typeof setTimeout> | undefined;\n\n  private readonly clientStore: StreamVideoWriteableStateStore;\n  public readonly streamClient: StreamClient;\n  private sfuClient?: StreamSfuClient;\n  private sfuClientTag = 0;\n\n  private readonly reconnectConcurrencyTag = Symbol('reconnectConcurrencyTag');\n  private reconnectAttempts = 0;\n  private reconnectStrategy = WebsocketReconnectStrategy.UNSPECIFIED;\n  private fastReconnectDeadlineSeconds: number = 0;\n  private lastOfflineTimestamp: number = 0;\n  private networkAvailableTask: PromiseWithResolvers<void> | undefined;\n  // maintain the order of publishing tracks to restore them after a reconnection\n  // it shouldn't contain duplicates\n  private trackPublishOrder: TrackType[] = [];\n  private joinCallData?: JoinCallData;\n  private hasJoinedOnce = false;\n  private deviceSettingsAppliedOnce = false;\n  private credentials?: Credentials;\n\n  private initialized = false;\n  private readonly joinLeaveConcurrencyTag = Symbol('joinLeaveConcurrencyTag');\n\n  /**\n   * A list hooks/functions to invoke when the call is left.\n   * A typical use case is to clean up some global event handlers.\n   * @private\n   */\n  private readonly leaveCallHooks: Set<Function> = new Set();\n\n  private readonly streamClientBasePath: string;\n  private streamClientEventHandlers = new Map<Function, () => void>();\n\n  /**\n   * Constructs a new `Call` instance.\n   *\n   * NOTE: Don't call the constructor directly, instead\n   * Use the [`StreamVideoClient.call`](./StreamVideoClient.md/#call)\n   * method to construct a `Call` instance.\n   */\n  constructor({\n    type,\n    id,\n    streamClient,\n    members,\n    ownCapabilities,\n    sortParticipantsBy,\n    clientStore,\n    ringing = false,\n    watching = false,\n  }: CallConstructor) {\n    this.type = type;\n    this.id = id;\n    this.cid = `${type}:${id}`;\n    this.ringingSubject = new BehaviorSubject(ringing);\n    this.watching = watching;\n    this.streamClient = streamClient;\n    this.clientStore = clientStore;\n    this.streamClientBasePath = `/call/${this.type}/${this.id}`;\n    this.logger = getLogger(['Call']);\n\n    const callTypeConfig = CallTypes.get(type);\n    const participantSorter =\n      sortParticipantsBy || callTypeConfig.options.sortParticipantsBy;\n    if (participantSorter) {\n      this.state.setSortParticipantsBy(participantSorter);\n    }\n\n    this.state.setMembers(members || []);\n    this.state.setOwnCapabilities(ownCapabilities || []);\n    this.state.setCallingState(\n      ringing ? CallingState.RINGING : CallingState.IDLE,\n    );\n\n    this.camera = new CameraManager(this);\n    this.microphone = new MicrophoneManager(this);\n    this.speaker = new SpeakerManager(this);\n    this.screenShare = new ScreenShareManager(this);\n    this.dynascaleManager = new DynascaleManager(this.state, this.speaker);\n  }\n\n  private async setup() {\n    await withoutConcurrency(this.joinLeaveConcurrencyTag, async () => {\n      if (this.initialized) return;\n\n      this.leaveCallHooks.add(\n        this.on('all', (event) => {\n          // update state with the latest event data\n          this.state.updateFromEvent(event);\n        }),\n      );\n\n      this.leaveCallHooks.add(registerEventHandlers(this, this.dispatcher));\n      this.registerEffects();\n      this.registerReconnectHandlers();\n\n      if (this.state.callingState === CallingState.LEFT) {\n        this.state.setCallingState(CallingState.IDLE);\n      }\n\n      this.initialized = true;\n    });\n  }\n\n  private registerEffects() {\n    this.leaveCallHooks.add(\n      // handles updating the permissions context when the settings change.\n      createSubscription(this.state.settings$, (settings) => {\n        if (!settings) return;\n        this.permissionsContext.setCallSettings(settings);\n      }),\n    );\n\n    this.leaveCallHooks.add(\n      // handle the case when the user permissions are modified.\n      createSafeAsyncSubscription(\n        this.state.ownCapabilities$,\n        this.handleOwnCapabilitiesUpdated,\n      ),\n    );\n\n    this.leaveCallHooks.add(\n      // handles the case when the user is blocked by the call owner.\n      createSubscription(this.state.blockedUserIds$, async (blockedUserIds) => {\n        if (!blockedUserIds || blockedUserIds.length === 0) return;\n        const currentUserId = this.currentUserId;\n        if (currentUserId && blockedUserIds.includes(currentUserId)) {\n          this.logger('info', 'Leaving call because of being blocked');\n          await this.leave({ reason: 'user blocked' }).catch((err) => {\n            this.logger('error', 'Error leaving call after being blocked', err);\n          });\n        }\n      }),\n    );\n\n    this.leaveCallHooks.add(\n      // watch for auto drop cancellation\n      createSubscription(this.state.callingState$, (callingState) => {\n        if (!this.ringing) return;\n        if (\n          callingState === CallingState.JOINED ||\n          callingState === CallingState.JOINING ||\n          callingState === CallingState.LEFT\n        ) {\n          clearTimeout(this.dropTimeout);\n          this.dropTimeout = undefined;\n        }\n      }),\n    );\n\n    this.leaveCallHooks.add(\n      // \"ringing\" mode effects and event handlers\n      createSubscription(this.ringingSubject, (isRinging) => {\n        if (!isRinging) return;\n        const callSession = this.state.session;\n        const receiver_id = this.clientStore.connectedUser?.id;\n        const ended_at = callSession?.ended_at;\n        const created_by_id = this.state.createdBy?.id;\n        const rejected_by = callSession?.rejected_by;\n        const accepted_by = callSession?.accepted_by;\n        let leaveCallIdle = false;\n        if (ended_at) {\n          // call was ended before it was accepted or rejected so we should leave it to idle\n          leaveCallIdle = true;\n        } else if (created_by_id && rejected_by) {\n          if (rejected_by[created_by_id]) {\n            // call was cancelled by the caller\n            leaveCallIdle = true;\n          }\n        } else if (receiver_id && rejected_by) {\n          if (rejected_by[receiver_id]) {\n            // call was rejected by the receiver in some other device\n            leaveCallIdle = true;\n          }\n        } else if (receiver_id && accepted_by) {\n          if (accepted_by[receiver_id]) {\n            // call was accepted by the receiver in some other device\n            leaveCallIdle = true;\n          }\n        }\n        if (leaveCallIdle) {\n          if (this.state.callingState !== CallingState.IDLE) {\n            this.state.setCallingState(CallingState.IDLE);\n          }\n        } else {\n          if (this.state.callingState === CallingState.IDLE) {\n            this.state.setCallingState(CallingState.RINGING);\n          }\n          this.scheduleAutoDrop();\n          this.leaveCallHooks.add(registerRingingCallEventHandlers(this));\n        }\n      }),\n    );\n  }\n\n  private handleOwnCapabilitiesUpdated = async (\n    ownCapabilities: OwnCapability[],\n  ) => {\n    // update the permission context.\n    this.permissionsContext.setPermissions(ownCapabilities);\n\n    if (!this.publisher) return;\n\n    // check if the user still has publishing permissions and stop publishing if not.\n    const permissionToTrackType = {\n      [OwnCapability.SEND_AUDIO]: TrackType.AUDIO,\n      [OwnCapability.SEND_VIDEO]: TrackType.VIDEO,\n      [OwnCapability.SCREENSHARE]: TrackType.SCREEN_SHARE,\n    };\n    for (const [permission, trackType] of Object.entries(\n      permissionToTrackType,\n    )) {\n      const hasPermission = this.permissionsContext.hasPermission(\n        permission as OwnCapability,\n      );\n      if (hasPermission) continue;\n      try {\n        switch (trackType) {\n          case TrackType.AUDIO:\n            if (this.microphone.enabled) await this.microphone.disable();\n            break;\n          case TrackType.VIDEO:\n            if (this.camera.enabled) await this.camera.disable();\n            break;\n          case TrackType.SCREEN_SHARE:\n            if (this.screenShare.enabled) await this.screenShare.disable();\n            break;\n        }\n      } catch (err) {\n        this.logger(\n          'error',\n          `Can't disable mic/camera/screenshare after revoked permissions`,\n          err,\n        );\n      }\n    }\n  };\n\n  /**\n   * You can subscribe to WebSocket events provided by the API. To remove a subscription, call the `off` method.\n   * Please note that subscribing to WebSocket events is an advanced use-case.\n   * For most use-cases, it should be enough to watch for state changes.\n   *\n   * @param eventName the event name.\n   * @param fn the event handler.\n   */\n  on = <E extends keyof AllCallEvents>(\n    eventName: E,\n    fn: CallEventListener<E>,\n  ) => {\n    if (isSfuEvent(eventName)) {\n      return this.dispatcher.on(eventName, fn);\n    }\n\n    const offHandler = this.streamClient.on(eventName, (e) => {\n      const event = e as StreamCallEvent;\n      if (event.call_cid && event.call_cid === this.cid) {\n        fn(event as AllCallEvents[E]);\n      }\n    });\n\n    // keep the 'off' reference returned by the stream client\n    this.streamClientEventHandlers.set(fn, offHandler);\n    return () => {\n      this.off(eventName, fn);\n    };\n  };\n\n  /**\n   * Remove subscription for WebSocket events that were created by the `on` method.\n   *\n   * @param eventName the event name.\n   * @param fn the event handler.\n   */\n  off = <E extends keyof AllCallEvents>(\n    eventName: E,\n    fn: CallEventListener<E>,\n  ) => {\n    if (isSfuEvent(eventName)) {\n      return this.dispatcher.off(eventName, fn);\n    }\n\n    // unsubscribe from the stream client event by using the 'off' reference\n    const registeredOffHandler = this.streamClientEventHandlers.get(fn);\n    if (registeredOffHandler) {\n      registeredOffHandler();\n    }\n  };\n\n  /**\n   * Leave the call and stop the media streams that were published by the call.\n   */\n  leave = async ({\n    reject = false,\n    reason = 'user is leaving the call',\n  }: CallLeaveOptions = {}) => {\n    await withoutConcurrency(this.joinLeaveConcurrencyTag, async () => {\n      const callingState = this.state.callingState;\n      if (callingState === CallingState.LEFT) {\n        throw new Error('Cannot leave call that has already been left.');\n      }\n\n      if (callingState === CallingState.JOINING) {\n        const waitUntilCallJoined = () => {\n          return new Promise<void>((resolve) => {\n            this.state.callingState$\n              .pipe(takeWhile((state) => state !== CallingState.JOINED, true))\n              .subscribe(() => resolve());\n          });\n        };\n        await waitUntilCallJoined();\n      }\n\n      if (reject && this.ringing) {\n        // I'm the one who started the call, so I should cancel it.\n        const hasOtherParticipants = this.state.remoteParticipants.length > 0;\n        if (\n          this.isCreatedByMe &&\n          !hasOtherParticipants &&\n          callingState === CallingState.RINGING\n        ) {\n          // Signals other users that I have cancelled my call to them\n          // before they accepted it.\n          await this.reject();\n        } else if (callingState === CallingState.RINGING) {\n          // Signals other users that I have rejected the incoming call.\n          await this.reject();\n        }\n      }\n\n      this.statsReporter?.stop();\n      this.statsReporter = undefined;\n\n      this.sfuStatsReporter?.stop();\n      this.sfuStatsReporter = undefined;\n\n      this.subscriber?.close();\n      this.subscriber = undefined;\n\n      this.publisher?.close({ stopTracks: true });\n      this.publisher = undefined;\n\n      await this.sfuClient?.leaveAndClose(reason);\n      this.sfuClient = undefined;\n      this.dynascaleManager.setSfuClient(undefined);\n\n      this.state.setCallingState(CallingState.LEFT);\n\n      // Call all leave call hooks, e.g. to clean up global event handlers\n      this.leaveCallHooks.forEach((hook) => hook());\n      this.initialized = false;\n      this.hasJoinedOnce = false;\n      this.clientStore.unregisterCall(this);\n\n      this.camera.dispose();\n      this.microphone.dispose();\n      this.screenShare.dispose();\n      this.speaker.dispose();\n\n      const stopOnLeavePromises: Promise<void>[] = [];\n      if (this.camera.stopOnLeave) {\n        stopOnLeavePromises.push(this.camera.disable(true));\n      }\n      if (this.microphone.stopOnLeave) {\n        stopOnLeavePromises.push(this.microphone.disable(true));\n      }\n      if (this.screenShare.stopOnLeave) {\n        stopOnLeavePromises.push(this.screenShare.disable(true));\n      }\n      await Promise.all(stopOnLeavePromises);\n    });\n  };\n\n  /**\n   * A flag indicating whether the call is \"ringing\" type of call.\n   */\n  get ringing() {\n    return getCurrentValue(this.ringingSubject);\n  }\n\n  /**\n   * Retrieves the current user ID.\n   */\n  get currentUserId() {\n    return this.clientStore.connectedUser?.id;\n  }\n\n  /**\n   * A flag indicating whether the call was created by the current user.\n   */\n  get isCreatedByMe() {\n    return this.state.createdBy?.id === this.currentUserId;\n  }\n\n  /**\n   * Loads the information about the call.\n   *\n   * @param params.ring if set to true, a `call.ring` event will be sent to the call members.\n   * @param params.notify if set to true, a `call.notification` event will be sent to the call members.\n   * @param params.members_limit the total number of members to return as part of the response.\n   */\n  get = async (params?: {\n    ring?: boolean;\n    notify?: boolean;\n    members_limit?: number;\n  }) => {\n    await this.setup();\n    const response = await this.streamClient.get<GetCallResponse>(\n      this.streamClientBasePath,\n      params,\n    );\n\n    this.state.updateFromCallResponse(response.call);\n    this.state.setMembers(response.members);\n    this.state.setOwnCapabilities(response.own_capabilities);\n\n    if (params?.ring || this.ringing) {\n      // the call response can indicate where the call is still ringing or not\n      this.ringingSubject.next(true);\n    }\n\n    if (this.streamClient._hasConnectionID()) {\n      this.watching = true;\n      this.clientStore.registerCall(this);\n    }\n\n    await this.applyDeviceConfig(false);\n\n    return response;\n  };\n\n  /**\n   * Loads the information about the call and creates it if it doesn't exist.\n   *\n   * @param data the data to create the call with.\n   */\n  getOrCreate = async (data?: GetOrCreateCallRequest) => {\n    await this.setup();\n    const response = await this.streamClient.post<\n      GetOrCreateCallResponse,\n      GetOrCreateCallRequest\n    >(this.streamClientBasePath, data);\n\n    this.state.updateFromCallResponse(response.call);\n    this.state.setMembers(response.members);\n    this.state.setOwnCapabilities(response.own_capabilities);\n\n    if (data?.ring || this.ringing) {\n      // the call response can indicate where the call is still ringing or not\n      this.ringingSubject.next(true);\n    }\n\n    if (this.streamClient._hasConnectionID()) {\n      this.watching = true;\n      this.clientStore.registerCall(this);\n    }\n\n    await this.applyDeviceConfig(false);\n\n    return response;\n  };\n\n  /**\n   * Creates a call\n   *\n   * @param data the data to create the call with.\n   */\n  create = async (data?: GetOrCreateCallRequest) => {\n    return this.getOrCreate(data);\n  };\n\n  /**\n   * A shortcut for {@link Call.get} with `ring` parameter set to `true`.\n   * Will send a `call.ring` event to the call members.\n   */\n  ring = async (): Promise<GetCallResponse> => {\n    return await this.get({ ring: true });\n  };\n\n  /**\n   * A shortcut for {@link Call.get} with `notify` parameter set to `true`.\n   * Will send a `call.notification` event to the call members.\n   */\n  notify = async (): Promise<GetCallResponse> => {\n    return await this.get({ notify: true });\n  };\n\n  /**\n   * Marks the incoming call as accepted.\n   *\n   * This method should be used only for \"ringing\" call flows.\n   * {@link Call.join} invokes this method automatically for you when joining a call.\n   * Unless you are implementing a custom \"ringing\" flow, you should not use this method.\n   */\n  accept = async () => {\n    return this.streamClient.post<AcceptCallResponse>(\n      `${this.streamClientBasePath}/accept`,\n    );\n  };\n\n  /**\n   * Marks the incoming call as rejected.\n   *\n   * This method should be used only for \"ringing\" call flows.\n   * {@link Call.leave} invokes this method automatically for you when you leave or reject this call.\n   * Unless you are implementing a custom \"ringing\" flow, you should not use this method.\n   *\n   * @param reason the reason for rejecting the call.\n   */\n  reject = async (reason?: RejectReason): Promise<RejectCallResponse> => {\n    return this.streamClient.post<RejectCallResponse, RejectCallRequest>(\n      `${this.streamClientBasePath}/reject`,\n      { reason: reason },\n    );\n  };\n\n  /**\n   * Will start to watch for call related WebSocket events and initiate a call session with the server.\n   *\n   * @returns a promise which resolves once the call join-flow has finished.\n   */\n  join = async (data?: JoinCallData): Promise<void> => {\n    await this.setup();\n    const callingState = this.state.callingState;\n    if ([CallingState.JOINED, CallingState.JOINING].includes(callingState)) {\n      throw new Error(`Illegal State: call.join() shall be called only once`);\n    }\n\n    this.joinCallData = data;\n\n    this.logger('debug', 'Starting join flow');\n    this.state.setCallingState(CallingState.JOINING);\n\n    const performingMigration =\n      this.reconnectStrategy === WebsocketReconnectStrategy.MIGRATE;\n    const performingRejoin =\n      this.reconnectStrategy === WebsocketReconnectStrategy.REJOIN;\n    const performingFastReconnect =\n      this.reconnectStrategy === WebsocketReconnectStrategy.FAST;\n\n    let statsOptions = this.sfuStatsReporter?.options;\n    if (\n      !this.credentials ||\n      !statsOptions ||\n      performingRejoin ||\n      performingMigration\n    ) {\n      try {\n        const joinResponse = await this.doJoinRequest(data);\n        this.credentials = joinResponse.credentials;\n        statsOptions = joinResponse.stats_options;\n      } catch (error) {\n        // restore the previous call state if the join-flow fails\n        this.state.setCallingState(callingState);\n        throw error;\n      }\n    }\n\n    const previousSfuClient = this.sfuClient;\n    const previousSessionId = previousSfuClient?.sessionId;\n    const isWsHealthy = !!previousSfuClient?.isHealthy;\n    const sfuClient =\n      performingRejoin || performingMigration || !isWsHealthy\n        ? new StreamSfuClient({\n            logTag: String(this.sfuClientTag++),\n            dispatcher: this.dispatcher,\n            credentials: this.credentials,\n            streamClient: this.streamClient,\n            // a new session_id is necessary for the REJOIN strategy.\n            // we use the previous session_id if available\n            sessionId: performingRejoin ? undefined : previousSessionId,\n            onSignalClose: () => this.handleSfuSignalClose(sfuClient),\n          })\n        : previousSfuClient;\n    this.sfuClient = sfuClient;\n    this.dynascaleManager.setSfuClient(sfuClient);\n\n    const clientDetails = getClientDetails();\n    // we don't need to send JoinRequest if we are re-using an existing healthy SFU client\n    if (previousSfuClient !== sfuClient) {\n      // prepare a generic SDP and send it to the SFU.\n      // this is a throw-away SDP that the SFU will use to determine\n      // the capabilities of the client (codec support, etc.)\n      const receivingCapabilitiesSdp = await getGenericSdp('recvonly');\n      const reconnectDetails =\n        this.reconnectStrategy !== WebsocketReconnectStrategy.UNSPECIFIED\n          ? this.getReconnectDetails(data?.migrating_from, previousSessionId)\n          : undefined;\n      const { callState, fastReconnectDeadlineSeconds } = await sfuClient.join({\n        subscriberSdp: receivingCapabilitiesSdp,\n        clientDetails,\n        fastReconnect: performingFastReconnect,\n        reconnectDetails,\n      });\n\n      this.fastReconnectDeadlineSeconds = fastReconnectDeadlineSeconds;\n      if (callState) {\n        this.state.updateFromSfuCallState(\n          callState,\n          sfuClient.sessionId,\n          reconnectDetails,\n        );\n      }\n    }\n\n    if (!performingMigration) {\n      // in MIGRATION, `JOINED` state is set in `this.reconnectMigrate()`\n      this.state.setCallingState(CallingState.JOINED);\n    }\n    this.hasJoinedOnce = true;\n\n    // when performing fast reconnect, or when we reuse the same SFU client,\n    // (ws remained healthy), we just need to restore the ICE connection\n    if (performingFastReconnect) {\n      // the SFU automatically issues an ICE restart on the subscriber\n      // we don't have to do it ourselves\n      await this.restoreICE(sfuClient, { includeSubscriber: false });\n    } else {\n      const connectionConfig = toRtcConfiguration(this.credentials.ice_servers);\n      this.initPublisherAndSubscriber({\n        sfuClient,\n        connectionConfig,\n        clientDetails,\n        statsOptions,\n        closePreviousInstances: !performingMigration,\n      });\n    }\n\n    if (performingRejoin) {\n      const strategy = WebsocketReconnectStrategy[this.reconnectStrategy];\n      await previousSfuClient?.leaveAndClose(\n        `Closing previous WS after reconnect with strategy: ${strategy}`,\n      );\n    } else if (!isWsHealthy) {\n      previousSfuClient?.close(\n        StreamSfuClient.DISPOSE_OLD_SOCKET,\n        'Closing unhealthy WS after reconnect',\n      );\n    }\n\n    // device settings should be applied only once, we don't have to\n    // re-apply them on later reconnections or server-side data fetches\n    if (!this.deviceSettingsAppliedOnce) {\n      await this.applyDeviceConfig(true);\n      this.deviceSettingsAppliedOnce = true;\n    }\n\n    // We shouldn't persist the `ring` and `notify` state after joining the call\n    // as it's a one-time event and clashes with the potential reconnection attempts.\n    // When reconnecting, if provided with `ring: true` or `notify: true`,\n    // we will spam the other participants with push notifications and `call.ring` events.\n    delete this.joinCallData?.ring;\n    delete this.joinCallData?.notify;\n\n    this.logger('info', `Joined call ${this.cid}`);\n  };\n\n  /**\n   * Prepares Reconnect Details object.\n   * @internal\n   */\n  private getReconnectDetails = (\n    migratingFromSfuId: string | undefined,\n    previousSessionId: string | undefined,\n  ): ReconnectDetails => {\n    const strategy = this.reconnectStrategy;\n    const performingRejoin = strategy === WebsocketReconnectStrategy.REJOIN;\n    const announcedTracks = this.publisher?.getAnnouncedTracks() || [];\n    return {\n      strategy,\n      announcedTracks,\n      subscriptions: this.dynascaleManager.trackSubscriptions,\n      reconnectAttempt: this.reconnectAttempts,\n      fromSfuId: migratingFromSfuId || '',\n      previousSessionId: performingRejoin ? previousSessionId || '' : '',\n    };\n  };\n\n  /**\n   * Performs an ICE restart on both the Publisher and Subscriber Peer Connections.\n   * Uses the provided SFU client to restore the ICE connection.\n   *\n   * This method can throw an error if the ICE restart fails.\n   * This error should be handled by the reconnect loop,\n   * and a new reconnection shall be attempted.\n   *\n   * @internal\n   */\n  private restoreICE = async (\n    nextSfuClient: StreamSfuClient,\n    opts: { includeSubscriber?: boolean; includePublisher?: boolean } = {},\n  ) => {\n    const { includeSubscriber = true, includePublisher = true } = opts;\n    if (this.subscriber) {\n      this.subscriber.setSfuClient(nextSfuClient);\n      if (includeSubscriber) {\n        await this.subscriber.restartIce();\n      }\n    }\n    if (this.publisher) {\n      this.publisher.setSfuClient(nextSfuClient);\n      if (includePublisher) {\n        await this.publisher.restartIce();\n      }\n    }\n  };\n\n  /**\n   * Initializes the Publisher and Subscriber Peer Connections.\n   * @internal\n   */\n  private initPublisherAndSubscriber = (opts: {\n    sfuClient: StreamSfuClient;\n    connectionConfig: RTCConfiguration;\n    statsOptions: StatsOptions;\n    clientDetails: ClientDetails;\n    closePreviousInstances: boolean;\n  }) => {\n    const {\n      sfuClient,\n      connectionConfig,\n      clientDetails,\n      statsOptions,\n      closePreviousInstances,\n    } = opts;\n    if (closePreviousInstances && this.subscriber) {\n      this.subscriber.close();\n    }\n    this.subscriber = new Subscriber({\n      sfuClient,\n      dispatcher: this.dispatcher,\n      state: this.state,\n      connectionConfig,\n      logTag: String(this.sfuClientTag),\n      onUnrecoverableError: () => {\n        this.reconnect(WebsocketReconnectStrategy.REJOIN).catch((err) => {\n          this.logger(\n            'warn',\n            '[Reconnect] Error reconnecting after a subscriber error',\n            err,\n          );\n        });\n      },\n    });\n\n    // anonymous users can't publish anything hence, there is no need\n    // to create Publisher Peer Connection for them\n    const isAnonymous = this.streamClient.user?.type === 'anonymous';\n    if (!isAnonymous) {\n      if (closePreviousInstances && this.publisher) {\n        this.publisher.close({ stopTracks: false });\n      }\n      const audioSettings = this.state.settings?.audio;\n      const isDtxEnabled = !!audioSettings?.opus_dtx_enabled;\n      const isRedEnabled = !!audioSettings?.redundant_coding_enabled;\n      this.publisher = new Publisher({\n        sfuClient,\n        dispatcher: this.dispatcher,\n        state: this.state,\n        connectionConfig,\n        isDtxEnabled,\n        isRedEnabled,\n        logTag: String(this.sfuClientTag),\n        onUnrecoverableError: () => {\n          this.reconnect(WebsocketReconnectStrategy.REJOIN).catch((err) => {\n            this.logger(\n              'warn',\n              '[Reconnect] Error reconnecting after a publisher error',\n              err,\n            );\n          });\n        },\n      });\n    }\n\n    this.statsReporter?.stop();\n    this.statsReporter = createStatsReporter({\n      subscriber: this.subscriber,\n      publisher: this.publisher,\n      state: this.state,\n      datacenter: sfuClient.edgeName,\n    });\n\n    this.sfuStatsReporter?.stop();\n    if (statsOptions?.reporting_interval_ms > 0) {\n      this.sfuStatsReporter = new SfuStatsReporter(sfuClient, {\n        clientDetails,\n        options: statsOptions,\n        subscriber: this.subscriber,\n        publisher: this.publisher,\n        microphone: this.microphone,\n        camera: this.camera,\n        state: this.state,\n      });\n      this.sfuStatsReporter.start();\n    }\n  };\n\n  /**\n   * Retrieves credentials for joining the call.\n   *\n   * @internal\n   *\n   * @param data the join call data.\n   */\n  doJoinRequest = async (data?: JoinCallData): Promise<JoinCallResponse> => {\n    const location = await this.streamClient.getLocationHint();\n    const request: JoinCallRequest = { ...data, location };\n    const joinResponse = await this.streamClient.post<\n      JoinCallResponse,\n      JoinCallRequest\n    >(`${this.streamClientBasePath}/join`, request);\n    this.state.updateFromCallResponse(joinResponse.call);\n    this.state.setMembers(joinResponse.members);\n    this.state.setOwnCapabilities(joinResponse.own_capabilities);\n\n    if (data?.ring && !this.ringing) {\n      this.ringingSubject.next(true);\n    }\n\n    if (this.ringing && !this.isCreatedByMe) {\n      // signals other users that I have accepted the incoming call.\n      await this.accept();\n    }\n\n    if (this.streamClient._hasConnectionID()) {\n      this.watching = true;\n      this.clientStore.registerCall(this);\n    }\n\n    return joinResponse;\n  };\n\n  /**\n   * Handles the closing of the SFU signal connection.\n   *\n   * @internal\n   * @param sfuClient the SFU client instance that was closed.\n   */\n  private handleSfuSignalClose = (sfuClient: StreamSfuClient) => {\n    this.logger('debug', '[Reconnect] SFU signal connection closed');\n    // normal close, no need to reconnect\n    if (sfuClient.isLeaving) return;\n    this.reconnect(WebsocketReconnectStrategy.REJOIN).catch((err) => {\n      this.logger('warn', '[Reconnect] Error reconnecting', err);\n    });\n  };\n\n  /**\n   * Handles the reconnection flow.\n   *\n   * @internal\n   *\n   * @param strategy the reconnection strategy to use.\n   */\n  private reconnect = async (\n    strategy: WebsocketReconnectStrategy,\n  ): Promise<void> => {\n    return withoutConcurrency(this.reconnectConcurrencyTag, async () => {\n      this.logger(\n        'info',\n        `[Reconnect] Reconnecting with strategy ${WebsocketReconnectStrategy[strategy]}`,\n      );\n\n      this.reconnectStrategy = strategy;\n      do {\n        // we don't increment reconnect attempts for the FAST strategy.\n        if (this.reconnectStrategy !== WebsocketReconnectStrategy.FAST) {\n          this.reconnectAttempts++;\n        }\n        const current = WebsocketReconnectStrategy[this.reconnectStrategy];\n        try {\n          // wait until the network is available\n          await this.networkAvailableTask?.promise;\n          switch (this.reconnectStrategy) {\n            case WebsocketReconnectStrategy.UNSPECIFIED:\n            case WebsocketReconnectStrategy.DISCONNECT:\n              this.logger('debug', `[Reconnect] No-op strategy ${current}`);\n              break;\n            case WebsocketReconnectStrategy.FAST:\n              await this.reconnectFast();\n              break;\n            case WebsocketReconnectStrategy.REJOIN:\n              await this.reconnectRejoin();\n              break;\n            case WebsocketReconnectStrategy.MIGRATE:\n              await this.reconnectMigrate();\n              break;\n            default:\n              ensureExhausted(\n                this.reconnectStrategy,\n                'Unknown reconnection strategy',\n              );\n              break;\n          }\n          break; // do-while loop, reconnection worked, exit the loop\n        } catch (error) {\n          if (error instanceof ErrorFromResponse && error.unrecoverable) {\n            this.logger(\n              'warn',\n              `[Reconnect] Can't reconnect due to coordinator unrecoverable error`,\n              error,\n            );\n            this.state.setCallingState(CallingState.RECONNECTING_FAILED);\n            return;\n          }\n          this.logger(\n            'warn',\n            `[Reconnect] ${current} (${this.reconnectAttempts}) failed. Attempting with REJOIN`,\n            error,\n          );\n          await sleep(500);\n          this.reconnectStrategy = WebsocketReconnectStrategy.REJOIN;\n        }\n      } while (\n        this.state.callingState !== CallingState.JOINED &&\n        this.state.callingState !== CallingState.RECONNECTING_FAILED &&\n        this.state.callingState !== CallingState.LEFT\n      );\n    });\n  };\n\n  /**\n   * Initiates the reconnection flow with the \"fast\" strategy.\n   * @internal\n   */\n  private reconnectFast = async () => {\n    this.reconnectStrategy = WebsocketReconnectStrategy.FAST;\n    this.state.setCallingState(CallingState.RECONNECTING);\n    return this.join(this.joinCallData);\n  };\n\n  /**\n   * Initiates the reconnection flow with the \"rejoin\" strategy.\n   * @internal\n   */\n  private reconnectRejoin = async () => {\n    this.reconnectStrategy = WebsocketReconnectStrategy.REJOIN;\n    this.state.setCallingState(CallingState.RECONNECTING);\n    await this.join(this.joinCallData);\n    await this.restorePublishedTracks();\n    this.restoreSubscribedTracks();\n  };\n\n  /**\n   * Initiates the reconnection flow with the \"migrate\" strategy.\n   * @internal\n   */\n  private reconnectMigrate = async () => {\n    const currentSfuClient = this.sfuClient;\n    if (!currentSfuClient) {\n      throw new Error('Cannot migrate without an active SFU client');\n    }\n\n    this.reconnectStrategy = WebsocketReconnectStrategy.MIGRATE;\n    this.state.setCallingState(CallingState.MIGRATING);\n    const currentSubscriber = this.subscriber;\n    const currentPublisher = this.publisher;\n\n    currentSubscriber?.detachEventHandlers();\n    currentPublisher?.detachEventHandlers();\n\n    const migrationTask = currentSfuClient.enterMigration();\n\n    try {\n      const currentSfu = currentSfuClient.edgeName;\n      await this.join({ ...this.joinCallData, migrating_from: currentSfu });\n    } finally {\n      // cleanup the migration_from field after the migration is complete or failed\n      // as we don't want to keep dirty data in the join call data\n      delete this.joinCallData?.migrating_from;\n    }\n\n    await this.restorePublishedTracks();\n    this.restoreSubscribedTracks();\n\n    try {\n      // Wait for the migration to complete, then close the previous SFU client\n      // and the peer connection instances. In case of failure, the migration\n      // task would throw an error and REJOIN would be attempted.\n      await migrationTask;\n\n      // in MIGRATE, we can consider the call as joined only after\n      // `participantMigrationComplete` event is received, signaled by\n      // the `migrationTask`\n      this.state.setCallingState(CallingState.JOINED);\n    } finally {\n      currentSubscriber?.close();\n      currentPublisher?.close({ stopTracks: false });\n\n      // and close the previous SFU client, without specifying close code\n      currentSfuClient.close();\n    }\n  };\n\n  /**\n   * Registers the various event handlers for reconnection.\n   *\n   * @internal\n   */\n  private registerReconnectHandlers = () => {\n    // handles the legacy \"goAway\" event\n    const unregisterGoAway = this.on('goAway', () => {\n      this.reconnect(WebsocketReconnectStrategy.MIGRATE).catch((err) => {\n        this.logger('warn', '[Reconnect] Error reconnecting', err);\n      });\n    });\n\n    // handles the \"error\" event, through which the SFU can request a reconnect\n    const unregisterOnError = this.on('error', (e) => {\n      const { reconnectStrategy: strategy } = e;\n      if (strategy === WebsocketReconnectStrategy.UNSPECIFIED) return;\n      if (strategy === WebsocketReconnectStrategy.DISCONNECT) {\n        this.leave({ reason: 'SFU instructed to disconnect' }).catch((err) => {\n          this.logger('warn', `Can't leave call after disconnect request`, err);\n        });\n      } else {\n        this.reconnect(strategy).catch((err) => {\n          this.logger('warn', '[Reconnect] Error reconnecting', err);\n        });\n      }\n    });\n\n    const unregisterNetworkChanged = this.streamClient.on(\n      'network.changed',\n      (e) => {\n        if (!e.online) {\n          this.logger('debug', '[Reconnect] Going offline');\n          if (!this.hasJoinedOnce) return;\n          this.lastOfflineTimestamp = Date.now();\n          // create a new task that would resolve when the network is available\n          const networkAvailableTask = promiseWithResolvers();\n          networkAvailableTask.promise.then(() => {\n            let strategy = WebsocketReconnectStrategy.FAST;\n            if (this.lastOfflineTimestamp) {\n              const offline = (Date.now() - this.lastOfflineTimestamp) / 1000;\n              if (offline > this.fastReconnectDeadlineSeconds) {\n                // We shouldn't attempt FAST if we have exceeded the deadline.\n                // The SFU would have already wiped out the session.\n                strategy = WebsocketReconnectStrategy.REJOIN;\n              }\n            }\n\n            this.reconnect(strategy).catch((err) => {\n              this.logger(\n                'warn',\n                '[Reconnect] Error reconnecting after going online',\n                err,\n              );\n            });\n          });\n          this.networkAvailableTask = networkAvailableTask;\n          this.sfuStatsReporter?.stop();\n          this.state.setCallingState(CallingState.OFFLINE);\n        } else {\n          this.logger('debug', '[Reconnect] Going online');\n          this.sfuClient?.close(\n            StreamSfuClient.DISPOSE_OLD_SOCKET,\n            'Closing WS to reconnect after going online',\n          );\n          // we went online, release the previous waiters and reset the state\n          this.networkAvailableTask?.resolve();\n          this.networkAvailableTask = undefined;\n          this.sfuStatsReporter?.start();\n        }\n      },\n    );\n\n    this.leaveCallHooks.add(unregisterGoAway);\n    this.leaveCallHooks.add(unregisterOnError);\n    this.leaveCallHooks.add(unregisterNetworkChanged);\n  };\n\n  /**\n   * Restores the published tracks after a reconnection.\n   * @internal\n   */\n  private restorePublishedTracks = async () => {\n    // the tracks need to be restored in their original order of publishing\n    // otherwise, we might get `m-lines order mismatch` errors\n    for (const trackType of this.trackPublishOrder) {\n      switch (trackType) {\n        case TrackType.AUDIO:\n          const audioStream = this.microphone.state.mediaStream;\n          if (audioStream) {\n            await this.publishAudioStream(audioStream);\n          }\n          break;\n        case TrackType.VIDEO:\n          const videoStream = this.camera.state.mediaStream;\n          if (videoStream) await this.publishVideoStream(videoStream);\n          break;\n        case TrackType.SCREEN_SHARE:\n          const screenShareStream = this.screenShare.state.mediaStream;\n          if (screenShareStream) {\n            await this.publishScreenShareStream(screenShareStream);\n          }\n          break;\n        // screen share audio can't exist without a screen share, so we handle it there\n        case TrackType.SCREEN_SHARE_AUDIO:\n        case TrackType.UNSPECIFIED:\n          break;\n        default:\n          ensureExhausted(trackType, 'Unknown track type');\n          break;\n      }\n    }\n  };\n\n  /**\n   * Restores the subscribed tracks after a reconnection.\n   * @internal\n   */\n  private restoreSubscribedTracks = () => {\n    const { remoteParticipants } = this.state;\n    if (remoteParticipants.length <= 0) return;\n    this.dynascaleManager.applyTrackSubscriptions(undefined);\n  };\n\n  /**\n   * Starts publishing the given video stream to the call.\n   * The stream will be stopped if the user changes an input device, or if the user leaves the call.\n   *\n   * Consecutive calls to this method will replace the previously published stream.\n   * The previous video stream will be stopped.\n   *\n   * @param videoStream the video stream to publish.\n   */\n  publishVideoStream = async (videoStream: MediaStream) => {\n    if (!this.sfuClient) throw new Error(`Call not joined yet.`);\n    // joining is in progress, and we should wait until the client is ready\n    await this.sfuClient.joinTask;\n\n    if (!this.permissionsContext.hasPermission(OwnCapability.SEND_VIDEO)) {\n      throw new Error('No permission to publish video');\n    }\n\n    if (!this.publisher) throw new Error('Publisher is not initialized');\n\n    const [videoTrack] = videoStream.getVideoTracks();\n    if (!videoTrack) throw new Error('There is no video track in the stream');\n\n    if (!this.trackPublishOrder.includes(TrackType.VIDEO)) {\n      this.trackPublishOrder.push(TrackType.VIDEO);\n    }\n\n    await this.publisher.publishStream(\n      videoStream,\n      videoTrack,\n      TrackType.VIDEO,\n      this.publishOptions,\n    );\n  };\n\n  /**\n   * Starts publishing the given audio stream to the call.\n   * The stream will be stopped if the user changes an input device, or if the user leaves the call.\n   *\n   * Consecutive calls to this method will replace the audio stream that is currently being published.\n   * The previous audio stream will be stopped.\n   *\n   * @param audioStream the audio stream to publish.\n   */\n  publishAudioStream = async (audioStream: MediaStream) => {\n    if (!this.sfuClient) throw new Error(`Call not joined yet.`);\n    // joining is in progress, and we should wait until the client is ready\n    await this.sfuClient.joinTask;\n\n    if (!this.permissionsContext.hasPermission(OwnCapability.SEND_AUDIO)) {\n      throw new Error('No permission to publish audio');\n    }\n\n    if (!this.publisher) throw new Error('Publisher is not initialized');\n\n    const [audioTrack] = audioStream.getAudioTracks();\n    if (!audioTrack) throw new Error('There is no audio track in the stream');\n\n    if (!this.trackPublishOrder.includes(TrackType.AUDIO)) {\n      this.trackPublishOrder.push(TrackType.AUDIO);\n    }\n    await this.publisher.publishStream(\n      audioStream,\n      audioTrack,\n      TrackType.AUDIO,\n    );\n  };\n\n  /**\n   * Starts publishing the given screen-share stream to the call.\n   *\n   * Consecutive calls to this method will replace the previous screen-share stream.\n   * The previous screen-share stream will be stopped.\n   *\n   * @param screenShareStream the screen-share stream to publish.\n   */\n  publishScreenShareStream = async (screenShareStream: MediaStream) => {\n    if (!this.sfuClient) throw new Error(`Call not joined yet.`);\n    // joining is in progress, and we should wait until the client is ready\n    await this.sfuClient.joinTask;\n\n    if (!this.permissionsContext.hasPermission(OwnCapability.SCREENSHARE)) {\n      throw new Error('No permission to publish screen share');\n    }\n\n    if (!this.publisher) throw new Error('Publisher is not initialized');\n\n    const [screenShareTrack] = screenShareStream.getVideoTracks();\n    if (!screenShareTrack) {\n      throw new Error('There is no screen share track in the stream');\n    }\n\n    if (!this.trackPublishOrder.includes(TrackType.SCREEN_SHARE)) {\n      this.trackPublishOrder.push(TrackType.SCREEN_SHARE);\n    }\n    const opts: PublishOptions = {\n      screenShareSettings: this.screenShare.getSettings(),\n    };\n    await this.publisher.publishStream(\n      screenShareStream,\n      screenShareTrack,\n      TrackType.SCREEN_SHARE,\n      opts,\n    );\n\n    const [screenShareAudioTrack] = screenShareStream.getAudioTracks();\n    if (screenShareAudioTrack) {\n      if (!this.trackPublishOrder.includes(TrackType.SCREEN_SHARE_AUDIO)) {\n        this.trackPublishOrder.push(TrackType.SCREEN_SHARE_AUDIO);\n      }\n      await this.publisher.publishStream(\n        screenShareStream,\n        screenShareAudioTrack,\n        TrackType.SCREEN_SHARE_AUDIO,\n        opts,\n      );\n    }\n  };\n\n  /**\n   * Stops publishing the given track type to the call, if it is currently being published.\n   * Underlying track will be stopped and removed from the publisher.\n   *\n   * @param trackType the track type to stop publishing.\n   * @param stopTrack if `true` the track will be stopped, else it will be just disabled\n   */\n  stopPublish = async (trackType: TrackType, stopTrack: boolean = true) => {\n    this.logger(\n      'info',\n      `stopPublish ${TrackType[trackType]}, stop tracks: ${stopTrack}`,\n    );\n    await this.publisher?.unpublishStream(trackType, stopTrack);\n  };\n\n  /**\n   * Updates the preferred publishing options\n   *\n   * @internal\n   * @param options the options to use.\n   */\n  updatePublishOptions(options: PublishOptions) {\n    this.publishOptions = { ...this.publishOptions, ...options };\n  }\n\n  /**\n   * Notifies the SFU that a noise cancellation process has started.\n   *\n   * @internal\n   */\n  notifyNoiseCancellationStarting = async () => {\n    return this.sfuClient?.startNoiseCancellation().catch((err) => {\n      this.logger('warn', 'Failed to notify start of noise cancellation', err);\n    });\n  };\n\n  /**\n   * Notifies the SFU that a noise cancellation process has stopped.\n   *\n   * @internal\n   */\n  notifyNoiseCancellationStopped = async () => {\n    return this.sfuClient?.stopNoiseCancellation().catch((err) => {\n      this.logger('warn', 'Failed to notify stop of noise cancellation', err);\n    });\n  };\n\n  /**\n   * Will enhance the reported stats with additional participant-specific information (`callStatsReport$` state [store variable](./StreamVideoClient.md/#readonlystatestore)).\n   * This is usually helpful when detailed stats for a specific participant are needed.\n   *\n   * @param sessionId the sessionId to start reporting for.\n   */\n  startReportingStatsFor = (sessionId: string) => {\n    return this.statsReporter?.startReportingStatsFor(sessionId);\n  };\n\n  /**\n   * Opposite of `startReportingStatsFor`.\n   * Will turn off stats reporting for a specific participant.\n   *\n   * @param sessionId the sessionId to stop reporting for.\n   */\n  stopReportingStatsFor = (sessionId: string) => {\n    return this.statsReporter?.stopReportingStatsFor(sessionId);\n  };\n\n  /**\n   * Resets the last sent reaction for the user holding the given `sessionId`. This is a local action, it won't reset the reaction on the backend.\n   *\n   * @param sessionId the session id.\n   */\n  resetReaction = (sessionId: string) => {\n    this.state.updateParticipant(sessionId, {\n      reaction: undefined,\n    });\n  };\n\n  /**\n   * Sets the list of criteria to sort the participants by.\n   *\n   * @param criteria the list of criteria to sort the participants by.\n   */\n  setSortParticipantsBy: CallState['setSortParticipantsBy'] = (criteria) => {\n    return this.state.setSortParticipantsBy(criteria);\n  };\n\n  /**\n   * Sends a reaction to the other call participants.\n   *\n   * @param reaction the reaction to send.\n   */\n  sendReaction = async (\n    reaction: SendReactionRequest,\n  ): Promise<SendReactionResponse> => {\n    return this.streamClient.post<SendReactionResponse, SendReactionRequest>(\n      `${this.streamClientBasePath}/reaction`,\n      reaction,\n    );\n  };\n\n  /**\n   * Blocks the user with the given `userId`.\n   *\n   * @param userId the id of the user to block.\n   */\n  blockUser = async (userId: string) => {\n    return this.streamClient.post<BlockUserResponse, BlockUserRequest>(\n      `${this.streamClientBasePath}/block`,\n      {\n        user_id: userId,\n      },\n    );\n  };\n\n  /**\n   * Unblocks the user with the given `userId`.\n   *\n   * @param userId the id of the user to unblock.\n   */\n  unblockUser = async (userId: string) => {\n    return this.streamClient.post<UnblockUserResponse, UnblockUserRequest>(\n      `${this.streamClientBasePath}/unblock`,\n      {\n        user_id: userId,\n      },\n    );\n  };\n\n  /**\n   * Mutes the current user.\n   *\n   * @param type the type of the mute operation.\n   */\n  muteSelf = (type: TrackMuteType) => {\n    const myUserId = this.currentUserId;\n    if (myUserId) {\n      return this.muteUser(myUserId, type);\n    }\n  };\n\n  /**\n   * Mutes all the other participants.\n   *\n   * @param type the type of the mute operation.\n   */\n  muteOthers = (type: TrackMuteType) => {\n    const trackType = muteTypeToTrackType(type);\n    if (!trackType) return;\n    const userIdsToMute: string[] = [];\n    for (const participant of this.state.remoteParticipants) {\n      if (participant.publishedTracks.includes(trackType)) {\n        userIdsToMute.push(participant.userId);\n      }\n    }\n\n    if (userIdsToMute.length > 0) {\n      return this.muteUser(userIdsToMute, type);\n    }\n  };\n\n  /**\n   * Mutes the user with the given `userId`.\n   *\n   * @param userId the id of the user to mute.\n   * @param type the type of the mute operation.\n   */\n  muteUser = (userId: string | string[], type: TrackMuteType) => {\n    return this.streamClient.post<MuteUsersResponse, MuteUsersRequest>(\n      `${this.streamClientBasePath}/mute_users`,\n      {\n        user_ids: Array.isArray(userId) ? userId : [userId],\n        [type]: true,\n      },\n    );\n  };\n\n  /**\n   * Will mute all users in the call.\n   *\n   * @param type the type of the mute operation.\n   */\n  muteAllUsers = (type: TrackMuteType) => {\n    return this.streamClient.post<MuteUsersResponse, MuteUsersRequest>(\n      `${this.streamClientBasePath}/mute_users`,\n      {\n        mute_all_users: true,\n        [type]: true,\n      },\n    );\n  };\n\n  /**\n   * Starts recording the call\n   */\n  startRecording = async (request?: StartRecordingRequest) => {\n    return this.streamClient.post<\n      StartRecordingResponse,\n      StartRecordingRequest\n    >(`${this.streamClientBasePath}/start_recording`, request ? request : {});\n  };\n\n  /**\n   * Stops recording the call\n   */\n  stopRecording = async () => {\n    return this.streamClient.post<StopRecordingResponse>(\n      `${this.streamClientBasePath}/stop_recording`,\n      {},\n    );\n  };\n\n  /**\n   * Starts the transcription of the call.\n   *\n   * @param request the request data.\n   */\n  startTranscription = async (\n    request?: StartTranscriptionRequest,\n  ): Promise<StartTranscriptionResponse> => {\n    return this.streamClient.post<\n      StartTranscriptionResponse,\n      StartTranscriptionRequest\n    >(`${this.streamClientBasePath}/start_transcription`, request);\n  };\n\n  /**\n   * Stops the transcription of the call.\n   */\n  stopTranscription = async (): Promise<StopTranscriptionResponse> => {\n    return this.streamClient.post<StopTranscriptionResponse>(\n      `${this.streamClientBasePath}/stop_transcription`,\n    );\n  };\n\n  /**\n   * Sends a `call.permission_request` event to all users connected to the call. The call settings object contains infomration about which permissions can be requested during a call (for example a user might be allowed to request permission to publish audio, but not video).\n   */\n  requestPermissions = async (\n    data: RequestPermissionRequest,\n  ): Promise<RequestPermissionResponse> => {\n    const { permissions } = data;\n    const canRequestPermissions = permissions.every((permission) =>\n      this.permissionsContext.canRequest(permission as OwnCapability),\n    );\n    if (!canRequestPermissions) {\n      throw new Error(\n        `You are not allowed to request permissions: ${permissions.join(', ')}`,\n      );\n    }\n    return this.streamClient.post<\n      RequestPermissionResponse,\n      RequestPermissionRequest\n    >(`${this.streamClientBasePath}/request_permission`, data);\n  };\n\n  /**\n   * Allows you to grant certain permissions to a user in a call.\n   * The permissions are specific to the call experience and do not survive the call itself.\n   *\n   * Supported permissions that can be granted are:\n   * - `send-audio`\n   * - `send-video`\n   * - `screenshare`\n   *\n   * @param userId the id of the user to grant permissions to.\n   * @param permissions the permissions to grant.\n   */\n  grantPermissions = async (userId: string, permissions: string[]) => {\n    return this.updateUserPermissions({\n      user_id: userId,\n      grant_permissions: permissions,\n    });\n  };\n\n  /**\n   * Allows you to revoke certain permissions from a user in a call.\n   * The permissions are specific to the call experience and do not survive the call itself.\n   *\n   * Supported permissions that can be revoked are:\n   * - `send-audio`\n   * - `send-video`\n   * - `screenshare`\n   *\n   * @param userId the id of the user to revoke permissions from.\n   * @param permissions the permissions to revoke.\n   */\n  revokePermissions = async (userId: string, permissions: string[]) => {\n    return this.updateUserPermissions({\n      user_id: userId,\n      revoke_permissions: permissions,\n    });\n  };\n\n  /**\n   * Allows you to grant or revoke a specific permission to a user in a call. The permissions are specific to the call experience and do not survive the call itself.\n   *\n   * When revoking a permission, this endpoint will also mute the relevant track from the user. This is similar to muting a user with the difference that the user will not be able to unmute afterwards.\n   *\n   * Supported permissions that can be granted or revoked: `send-audio`, `send-video` and `screenshare`.\n   *\n   * `call.permissions_updated` event is sent to all members of the call.\n   *\n   */\n  updateUserPermissions = async (data: UpdateUserPermissionsRequest) => {\n    return this.streamClient.post<\n      UpdateUserPermissionsResponse,\n      UpdateUserPermissionsRequest\n    >(`${this.streamClientBasePath}/user_permissions`, data);\n  };\n\n  /**\n   * Starts the livestreaming of the call.\n   *\n   * @param data the request data.\n   * @param params the request params.\n   */\n  goLive = async (data: GoLiveRequest = {}, params?: { notify?: boolean }) => {\n    return this.streamClient.post<GoLiveResponse, GoLiveRequest>(\n      `${this.streamClientBasePath}/go_live`,\n      data,\n      params,\n    );\n  };\n\n  /**\n   * Stops the livestreaming of the call.\n   */\n  stopLive = async () => {\n    return this.streamClient.post<StopLiveResponse>(\n      `${this.streamClientBasePath}/stop_live`,\n      {},\n    );\n  };\n\n  /**\n   * Starts the broadcasting of the call.\n   */\n  startHLS = async () => {\n    return this.streamClient.post<StartHLSBroadcastingResponse>(\n      `${this.streamClientBasePath}/start_broadcasting`,\n      {},\n    );\n  };\n\n  /**\n   * Stops the broadcasting of the call.\n   */\n  stopHLS = async () => {\n    return this.streamClient.post<StopHLSBroadcastingResponse>(\n      `${this.streamClientBasePath}/stop_broadcasting`,\n      {},\n    );\n  };\n\n  /**\n   * Updates the call settings or custom data.\n   *\n   * @param updates the updates to apply to the call.\n   */\n  update = async (updates: UpdateCallRequest) => {\n    const response = await this.streamClient.patch<\n      UpdateCallResponse,\n      UpdateCallRequest\n    >(`${this.streamClientBasePath}`, updates);\n\n    const { call, members, own_capabilities } = response;\n    this.state.updateFromCallResponse(call);\n    this.state.setMembers(members);\n    this.state.setOwnCapabilities(own_capabilities);\n\n    return response;\n  };\n\n  /**\n   * Ends the call. Once the call is ended, it cannot be re-joined.\n   */\n  endCall = async () => {\n    return this.streamClient.post<EndCallResponse>(\n      `${this.streamClientBasePath}/mark_ended`,\n    );\n  };\n\n  /**\n   * Pins the given session to the top of the participants list.\n   *\n   * @param sessionId the sessionId to pin.\n   */\n  pin = (sessionId: string) => {\n    this.state.updateParticipant(sessionId, {\n      pin: {\n        isLocalPin: true,\n        pinnedAt: Date.now(),\n      },\n    });\n  };\n\n  /**\n   * Unpins the given session from the top of the participants list.\n   *\n   * @param sessionId the sessionId to unpin.\n   */\n  unpin = (sessionId: string) => {\n    this.state.updateParticipant(sessionId, {\n      pin: undefined,\n    });\n  };\n\n  /**\n   * Pins the given session to the top of the participants list for everyone\n   * in the call.\n   * You can execute this method only if you have the `pin-for-everyone` capability.\n   *\n   * @param request the request object.\n   */\n  pinForEveryone = async (request: PinRequest) => {\n    return this.streamClient.post<PinResponse, PinRequest>(\n      `${this.streamClientBasePath}/pin`,\n      request,\n    );\n  };\n\n  /**\n   * Unpins the given session from the top of the participants list for everyone\n   * in the call.\n   * You can execute this method only if you have the `pin-for-everyone` capability.\n   *\n   * @param request the request object.\n   */\n  unpinForEveryone = async (request: UnpinRequest) => {\n    return this.streamClient.post<UnpinResponse, UnpinRequest>(\n      `${this.streamClientBasePath}/unpin`,\n      request,\n    );\n  };\n\n  /**\n   * Query call members with filter query. The result won't be stored in call state.\n   * @param request\n   * @returns\n   */\n  queryMembers = (request?: Omit<QueryCallMembersRequest, 'type' | 'id'>) => {\n    return this.streamClient.post<\n      QueryCallMembersResponse,\n      QueryCallMembersRequest\n    >('/call/members', {\n      ...(request || {}),\n      id: this.id,\n      type: this.type,\n    });\n  };\n\n  /**\n   * Will update the call members.\n   *\n   * @param data the request data.\n   */\n  updateCallMembers = async (\n    data: UpdateCallMembersRequest,\n  ): Promise<UpdateCallMembersResponse> => {\n    return this.streamClient.post<\n      UpdateCallMembersResponse,\n      UpdateCallMembersRequest\n    >(`${this.streamClientBasePath}/members`, data);\n  };\n\n  /**\n   * Schedules an auto-drop timeout based on the call settings.\n   * Applicable only for ringing calls.\n   */\n  private scheduleAutoDrop = () => {\n    clearTimeout(this.dropTimeout);\n    this.leaveCallHooks.add(\n      createSubscription(this.state.settings$, (settings) => {\n        if (!settings) return;\n        // ignore if the call is not ringing\n        if (this.state.callingState !== CallingState.RINGING) return;\n\n        const timeoutInMs = settings.ring.auto_cancel_timeout_ms;\n        // 0 means no auto-drop\n        if (timeoutInMs <= 0) return;\n\n        clearTimeout(this.dropTimeout);\n        this.dropTimeout = setTimeout(() => {\n          this.leave({ reason: 'ring: timeout' }).catch((err) => {\n            this.logger('error', 'Failed to drop call', err);\n          });\n        }, timeoutInMs);\n      }),\n    );\n  };\n\n  /**\n   * Retrieves the list of recordings for the current call or call session.\n   *\n   * If `callSessionId` is provided, it will return the recordings for that call session.\n   * Otherwise, all recordings for the current call will be returned.\n   *\n   * @param callSessionId the call session id to retrieve recordings for.\n   */\n  queryRecordings = async (\n    callSessionId?: string,\n  ): Promise<ListRecordingsResponse> => {\n    let endpoint = this.streamClientBasePath;\n    if (callSessionId) {\n      endpoint = `${endpoint}/${callSessionId}`;\n    }\n    return this.streamClient.get<ListRecordingsResponse>(\n      `${endpoint}/recordings`,\n    );\n  };\n\n  /**\n   * Retrieves the list of transcriptions for the current call.\n   *\n   * @returns the list of transcriptions.\n   */\n  queryTranscriptions = async (): Promise<ListTranscriptionsResponse> => {\n    return this.streamClient.get<ListTranscriptionsResponse>(\n      `${this.streamClientBasePath}/transcriptions`,\n    );\n  };\n\n  /**\n   * Retrieve call statistics for a particular call session (historical).\n   * Here `callSessionID` is mandatory.\n   *\n   * @param callSessionID the call session ID to retrieve statistics for.\n   * @returns The call stats.\n   */\n  getCallStats = async (callSessionID: string) => {\n    const endpoint = `${this.streamClientBasePath}/stats/${callSessionID}`;\n    return this.streamClient.get<GetCallStatsResponse>(endpoint);\n  };\n\n  /**\n   * Submit user feedback for the call\n   *\n   * @param rating Rating between 1 and 5 denoting the experience of the user in the call\n   * @param reason The reason/description for the rating\n   * @param custom Custom data\n   * @returns\n   */\n  submitFeedback = async (\n    rating: number,\n    {\n      reason,\n      custom,\n    }: {\n      reason?: string;\n      custom?: Record<string, any>;\n    } = {},\n  ) => {\n    if (rating < 1 || rating > 5) {\n      throw new Error('Rating must be between 1 and 5');\n    }\n    const callSessionId = this.state.session?.id;\n    if (!callSessionId) {\n      throw new Error(\n        'Feedback can be submitted only in the context of a call session',\n      );\n    }\n\n    const { sdkName, sdkVersion, ...platform } =\n      getSdkSignature(getClientDetails());\n\n    // user sessionId is not available once the call has been left\n    // until we relax the backend validation, we'll send N/A\n    const userSessionId = this.sfuClient?.sessionId ?? 'N/A';\n    const endpoint = `${this.streamClientBasePath}/feedback/${callSessionId}`;\n    return this.streamClient.post<\n      CollectUserFeedbackResponse,\n      CollectUserFeedbackRequest\n    >(endpoint, {\n      rating,\n      reason,\n      user_session_id: userSessionId,\n      sdk: sdkName,\n      sdk_version: sdkVersion,\n      custom: {\n        ...custom,\n        'x-stream-platform-data': platform,\n      },\n    });\n  };\n\n  /**\n   * Sends a custom event to all call participants.\n   *\n   * @param payload the payload to send.\n   */\n  sendCustomEvent = async (payload: { [key: string]: any }) => {\n    return this.streamClient.post<SendCallEventResponse, SendCallEventRequest>(\n      `${this.streamClientBasePath}/event`,\n      { custom: payload },\n    );\n  };\n\n  /**\n   * Applies the device configuration from the backend.\n   *\n   * @internal\n   */\n  applyDeviceConfig = async (status: boolean) => {\n    await this.initCamera({ setStatus: status }).catch((err) => {\n      this.logger('warn', 'Camera init failed', err);\n    });\n    await this.initMic({ setStatus: status }).catch((err) => {\n      this.logger('warn', 'Mic init failed', err);\n    });\n  };\n\n  private initCamera = async (options: { setStatus: boolean }) => {\n    // Wait for any in progress camera operation\n    await this.camera.statusChangeSettled();\n\n    if (\n      this.state.localParticipant?.videoStream ||\n      !this.permissionsContext.hasPermission('send-video')\n    ) {\n      return;\n    }\n\n    // Set camera direction if it's not yet set\n    if (!this.camera.state.direction && !this.camera.state.selectedDevice) {\n      let defaultDirection: CameraDirection = 'front';\n      const backendSetting = this.state.settings?.video.camera_facing;\n      if (backendSetting) {\n        defaultDirection = backendSetting === 'front' ? 'front' : 'back';\n      }\n      this.camera.state.setDirection(defaultDirection);\n    }\n\n    // Set target resolution\n    const targetResolution = this.state.settings?.video.target_resolution;\n    if (targetResolution) {\n      await this.camera.selectTargetResolution(targetResolution);\n    }\n\n    if (options.setStatus) {\n      // Publish already that was set before we joined\n      if (\n        this.camera.enabled &&\n        this.camera.state.mediaStream &&\n        !this.publisher?.isPublishing(TrackType.VIDEO)\n      ) {\n        await this.publishVideoStream(this.camera.state.mediaStream);\n      }\n\n      // Start camera if backend config specifies, and there is no local setting\n      if (\n        this.camera.state.status === undefined &&\n        this.state.settings?.video.camera_default_on\n      ) {\n        await this.camera.enable();\n      }\n    }\n  };\n\n  private initMic = async (options: { setStatus: boolean }) => {\n    // Wait for any in progress mic operation\n    await this.microphone.statusChangeSettled();\n\n    if (\n      this.state.localParticipant?.audioStream ||\n      !this.permissionsContext.hasPermission('send-audio')\n    ) {\n      return;\n    }\n\n    if (options.setStatus) {\n      // Publish media stream that was set before we joined\n      if (\n        this.microphone.enabled &&\n        this.microphone.state.mediaStream &&\n        !this.publisher?.isPublishing(TrackType.AUDIO)\n      ) {\n        await this.publishAudioStream(this.microphone.state.mediaStream);\n      }\n\n      // Start mic if backend config specifies, and there is no local setting\n      if (\n        this.microphone.state.status === undefined &&\n        this.state.settings?.audio.mic_default_on\n      ) {\n        await this.microphone.enable();\n      }\n    }\n  };\n\n  /**\n   * Will begin tracking the given element for visibility changes within the\n   * configured viewport element (`call.setViewport`).\n   *\n   * @param element the element to track.\n   * @param sessionId the session id.\n   * @param trackType the video mode.\n   */\n  trackElementVisibility = <T extends HTMLElement>(\n    element: T,\n    sessionId: string,\n    trackType: VideoTrackType,\n  ) => {\n    return this.dynascaleManager.trackElementVisibility(\n      element,\n      sessionId,\n      trackType,\n    );\n  };\n\n  /**\n   * Sets the viewport element to track bound video elements for visibility.\n   *\n   * @param element the viewport element.\n   */\n  setViewport = <T extends HTMLElement>(element: T) => {\n    return this.dynascaleManager.setViewport(element);\n  };\n\n  /**\n   * Binds a DOM <video> element to the given session id.\n   * This method will make sure that the video element will play\n   * the correct video stream for the given session id.\n   *\n   * Under the hood, it would also keep track of the video element dimensions\n   * and update the subscription accordingly in order to optimize the bandwidth.\n   *\n   * If a \"viewport\" is configured, the video element will be automatically\n   * tracked for visibility and the subscription will be updated accordingly.\n   *\n   * @param videoElement the video element to bind to.\n   * @param sessionId the session id.\n   * @param trackType the kind of video.\n   */\n  bindVideoElement = (\n    videoElement: HTMLVideoElement,\n    sessionId: string,\n    trackType: VideoTrackType,\n  ) => {\n    const unbind = this.dynascaleManager.bindVideoElement(\n      videoElement,\n      sessionId,\n      trackType,\n    );\n\n    if (!unbind) return;\n    this.leaveCallHooks.add(unbind);\n    return () => {\n      this.leaveCallHooks.delete(unbind);\n      unbind();\n    };\n  };\n\n  /**\n   * Binds a DOM <audio> element to the given session id.\n   *\n   * This method will make sure that the audio element will\n   * play the correct audio stream for the given session id.\n   *\n   * @param audioElement the audio element to bind to.\n   * @param sessionId the session id.\n   * @param trackType the kind of audio.\n   */\n  bindAudioElement = (\n    audioElement: HTMLAudioElement,\n    sessionId: string,\n    trackType: AudioTrackType = 'audioTrack',\n  ) => {\n    const unbind = this.dynascaleManager.bindAudioElement(\n      audioElement,\n      sessionId,\n      trackType,\n    );\n\n    if (!unbind) return;\n    this.leaveCallHooks.add(unbind);\n    return () => {\n      this.leaveCallHooks.delete(unbind);\n      unbind();\n    };\n  };\n\n  /**\n   * Binds a DOM <img> element to this call's thumbnail (if enabled in settings).\n   *\n   * @param imageElement the image element to bind to.\n   * @param opts options for the binding.\n   */\n  bindCallThumbnailElement = (\n    imageElement: HTMLImageElement,\n    opts: {\n      fallbackImageSource?: string;\n    } = {},\n  ) => {\n    const handleError = () => {\n      imageElement.src =\n        opts.fallbackImageSource ||\n        'https://getstream.io/random_svg/?name=x&id=x';\n    };\n\n    const unsubscribe = createSubscription(\n      this.state.thumbnails$,\n      (thumbnails) => {\n        if (!thumbnails) return;\n        imageElement.addEventListener('error', handleError);\n\n        const thumbnailUrl = new URL(thumbnails.image_url);\n        thumbnailUrl.searchParams.set('w', String(imageElement.clientWidth));\n        thumbnailUrl.searchParams.set('h', String(imageElement.clientHeight));\n\n        imageElement.src = thumbnailUrl.toString();\n      },\n    );\n\n    return () => {\n      unsubscribe();\n      imageElement.removeEventListener('error', handleError);\n    };\n  };\n\n  /**\n   * Specify preference for incoming video resolution. The preference will\n   * be matched as close as possible, but actual resolution will depend\n   * on the video source quality and client network conditions. Will enable\n   * incoming video, if previously disabled.\n   *\n   * @param resolution preferred resolution, or `undefined` to clear preference\n   * @param sessionIds optionally specify session ids of the participants this\n   * preference has effect on. Affects all participants by default.\n   */\n  setPreferredIncomingVideoResolution = (\n    resolution: VideoResolution | undefined,\n    sessionIds?: string[],\n  ) => {\n    this.dynascaleManager.setVideoTrackSubscriptionOverrides(\n      resolution\n        ? {\n            enabled: true,\n            dimension: resolution,\n          }\n        : undefined,\n      sessionIds,\n    );\n    this.dynascaleManager.applyTrackSubscriptions();\n  };\n\n  /**\n   * Enables or disables incoming video from all remote call participants,\n   * and removes any preference for preferred resolution.\n   */\n  setIncomingVideoEnabled = (enabled: boolean) => {\n    this.dynascaleManager.setVideoTrackSubscriptionOverrides(\n      enabled ? undefined : { enabled: false },\n    );\n    this.dynascaleManager.applyTrackSubscriptions();\n  };\n}\n", "export default null;", "import axios from 'axios';\nimport { StableWSConnection } from './connection';\nimport { randomId, sleep } from './utils';\n\nexport type InsightTypes =\n  | 'ws_fatal'\n  | 'ws_success_after_failure'\n  | 'http_hi_failed';\nexport class InsightMetrics {\n  connectionStartTimestamp: number | null;\n  wsConsecutiveFailures: number;\n  wsTotalFailures: number;\n  instanceClientId: string;\n\n  constructor() {\n    this.connectionStartTimestamp = null;\n    this.wsTotalFailures = 0;\n    this.wsConsecutiveFailures = 0;\n    this.instanceClientId = randomId();\n  }\n}\n\n/**\n * postInsights is not supposed to be used by end users directly within chat application, and thus is kept isolated\n * from all the client/connection code/logic.\n *\n * @param insightType\n * @param insights\n */\nexport const postInsights = async (\n  insightType: InsightTypes,\n  insights: Record<string, unknown>,\n) => {\n  const maxAttempts = 3;\n  for (let i = 0; i < maxAttempts; i++) {\n    try {\n      await axios.post(\n        `https://chat-insights.getstream.io/insights/${insightType}`,\n        insights,\n      );\n    } catch (e) {\n      await sleep((i + 1) * 3000);\n      continue;\n    }\n    break;\n  }\n};\n\nexport function buildWsFatalInsight(\n  connection: StableWSConnection,\n  event: Record<string, unknown>,\n) {\n  return {\n    ...event,\n    ...buildWsBaseInsight(connection),\n  };\n}\n\nfunction buildWsBaseInsight(connection: StableWSConnection) {\n  const { client } = connection;\n  return {\n    ready_state: connection.ws?.readyState,\n    url: connection._buildUrl(),\n    api_key: client.key,\n    start_ts: client.insightMetrics.connectionStartTimestamp,\n    end_ts: new Date().getTime(),\n    auth_type: client.getAuthType(),\n    token: client.tokenManager.token,\n    user_id: client.userID,\n    user_details: client._user,\n    // device: client.options.device,\n    device: 'browser',\n    client_id: connection.connectionID,\n    ws_details: connection.ws,\n    ws_consecutive_failures: client.insightMetrics.wsConsecutiveFailures,\n    ws_total_failures: client.insightMetrics.wsTotalFailures,\n    request_id: connection.requestID,\n    online: typeof navigator !== 'undefined' ? navigator?.onLine : null,\n    user_agent: typeof navigator !== 'undefined' ? navigator?.userAgent : null,\n    instance_client_id: client.insightMetrics.instanceClientId,\n  };\n}\n\nexport function buildWsSuccessAfterFailureInsight(\n  connection: StableWSConnection,\n) {\n  return buildWsBaseInsight(connection);\n}\n", "import WebSocket from 'isomorphic-ws';\nimport { StreamClient } from './client';\nimport {\n  buildWsFatalInsight,\n  buildWsSuccessAfterFailureInsight,\n  postInsights,\n} from './insights';\nimport {\n  addConnectionEventListeners,\n  convertErrorToJson,\n  isPromisePending,\n  KnownCodes,\n  randomId,\n  removeConnectionEventListeners,\n  retryInterval,\n  sleep,\n} from './utils';\nimport type {\n  ConnectAPIResponse,\n  LogLevel,\n  StreamVideoEvent,\n  UR,\n} from './types';\nimport type { ConnectedEvent, WSAuthMessage } from '../../gen/coordinator';\n\n// Type guards to check WebSocket error type\nconst isCloseEvent = (\n  res: WebSocket.CloseEvent | WebSocket.Data | WebSocket.ErrorEvent,\n): res is WebSocket.CloseEvent =>\n  (res as WebSocket.CloseEvent).code !== undefined;\n\nconst isErrorEvent = (\n  res: WebSocket.CloseEvent | WebSocket.Data | WebSocket.ErrorEvent,\n): res is WebSocket.ErrorEvent =>\n  (res as WebSocket.ErrorEvent).error !== undefined;\n\n/**\n * StableWSConnection - A WS connection that reconnects upon failure.\n * - the browser will sometimes report that you're online or offline\n * - the WS connection can break and fail (there is a 30s health check)\n * - sometimes your WS connection will seem to work while the user is in fact offline\n * - to speed up online/offline detection you can use the window.addEventListener('offline');\n *\n * There are 4 ways in which a connection can become unhealthy:\n * - websocket.onerror is called\n * - websocket.onclose is called\n * - the health check fails and no event is received for ~40 seconds\n * - the browser indicates the connection is now offline\n *\n * There are 2 assumptions we make about the server:\n * - state can be recovered by querying the channel again\n * - if the servers fails to publish a message to the client, the WS connection is destroyed\n */\nexport class StableWSConnection {\n  // local vars\n  connectionID?: string;\n  connectionOpen?: ConnectAPIResponse;\n  authenticationSent: boolean;\n  consecutiveFailures: number;\n  pingInterval: number;\n  healthCheckTimeoutRef?: NodeJS.Timeout;\n  isConnecting: boolean;\n  isDisconnected: boolean;\n  isHealthy: boolean;\n  isResolved?: boolean;\n  lastEvent: Date | null;\n  connectionCheckTimeout: number;\n  connectionCheckTimeoutRef?: NodeJS.Timeout;\n  rejectPromise?: (\n    reason?: Error & {\n      code?: string | number;\n      isWSFailure?: boolean;\n      StatusCode?: string | number;\n    },\n  ) => void;\n  requestID: string | undefined;\n  resolvePromise?: (value: ConnectedEvent) => void;\n  totalFailures: number;\n  ws?: WebSocket;\n  wsID: number;\n\n  client: StreamClient;\n\n  constructor(client: StreamClient) {\n    this.client = client;\n    /** consecutive failures influence the duration of the timeout */\n    this.consecutiveFailures = 0;\n    /** keep track of the total number of failures */\n    this.totalFailures = 0;\n    /** We only make 1 attempt to reconnect at the same time.. */\n    this.isConnecting = false;\n    /** True after the auth payload is sent to the server */\n    this.authenticationSent = false;\n    /** To avoid reconnect if client is disconnected */\n    this.isDisconnected = false;\n    /** Boolean that indicates if the connection promise is resolved */\n    this.isResolved = false;\n    /** Boolean that indicates if we have a working connection to the server */\n    this.isHealthy = false;\n    /** Incremented when a new WS connection is made */\n    this.wsID = 1;\n    /** Store the last event time for health checks */\n    this.lastEvent = null;\n    /** Send a health check message every 25 seconds */\n    this.pingInterval = 25 * 1000;\n    this.connectionCheckTimeout = this.pingInterval + 10 * 1000;\n\n    addConnectionEventListeners(this.onlineStatusChanged);\n  }\n\n  _log = (msg: string, extra: UR = {}, level: LogLevel = 'info') => {\n    this.client.logger(level, 'connection:' + msg, {\n      ...extra,\n    });\n  };\n\n  setClient = (client: StreamClient) => {\n    this.client = client;\n  };\n\n  /**\n   * connect - Connect to the WS URL\n   * the default 15s timeout allows between 2~3 tries\n   * @return {ConnectAPIResponse<ConnectedEvent>} Promise that completes once the first health check message is received\n   */\n  async connect(timeout = 15000) {\n    if (this.isConnecting) {\n      throw Error(\n        `You've called connect twice, can only attempt 1 connection at the time`,\n      );\n    }\n\n    this.isDisconnected = false;\n\n    try {\n      const healthCheck = await this._connect();\n      this.consecutiveFailures = 0;\n\n      this._log(\n        `connect() - Established ws connection with healthcheck: ${healthCheck}`,\n      );\n    } catch (error) {\n      this.isHealthy = false;\n      this.consecutiveFailures += 1;\n\n      if (\n        // @ts-ignore\n        error.code === KnownCodes.TOKEN_EXPIRED &&\n        !this.client.tokenManager.isStatic()\n      ) {\n        this._log(\n          'connect() - WS failure due to expired token, so going to try to reload token and reconnect',\n        );\n        this._reconnect({ refreshToken: true });\n      } else {\n        // @ts-ignore\n        if (!error.isWSFailure) {\n          // API rejected the connection and we should not retry\n          throw new Error(\n            JSON.stringify({\n              // @ts-ignore\n              code: error.code,\n              // @ts-ignore\n              StatusCode: error.StatusCode,\n              // @ts-ignore\n              message: error.message,\n              // @ts-ignore\n              isWSFailure: error.isWSFailure,\n            }),\n          );\n        }\n      }\n    }\n\n    return await this._waitForHealthy(timeout);\n  }\n\n  /**\n   * _waitForHealthy polls the promise connection to see if its resolved until it times out\n   * the default 15s timeout allows between 2~3 tries\n   * @param timeout duration(ms)\n   */\n  async _waitForHealthy(timeout = 15000) {\n    return Promise.race([\n      (async () => {\n        const interval = 50; // ms\n        for (let i = 0; i <= timeout; i += interval) {\n          try {\n            return await this.connectionOpen;\n          } catch (error: any) {\n            if (i === timeout) {\n              throw new Error(\n                JSON.stringify({\n                  code: error.code,\n                  StatusCode: error.StatusCode,\n                  message: error.message,\n                  isWSFailure: error.isWSFailure,\n                }),\n              );\n            }\n            await sleep(interval);\n          }\n        }\n      })(),\n      (async () => {\n        await sleep(timeout);\n        this.isConnecting = false;\n        throw new Error(\n          JSON.stringify({\n            code: '',\n            StatusCode: '',\n            message: 'initial WS connection could not be established',\n            isWSFailure: true,\n          }),\n        );\n      })(),\n    ]);\n  }\n\n  /**\n   * Builds and returns the url for websocket.\n   * @private\n   * @returns url string\n   */\n  _buildUrl = () => {\n    const params = new URLSearchParams();\n    // const qs = encodeURIComponent(this.client._buildWSPayload(this.requestID));\n    // params.set('json', qs);\n    params.set('api_key', this.client.key);\n    params.set('stream-auth-type', this.client.getAuthType());\n    params.set('X-Stream-Client', this.client.getUserAgent());\n    // params.append('authorization', this.client._getToken()!);\n\n    return `${this.client.wsBaseURL}/connect?${params.toString()}`;\n  };\n\n  /**\n   * disconnect - Disconnect the connection and doesn't recover...\n   *\n   */\n  disconnect(timeout?: number) {\n    this._log(\n      `disconnect() - Closing the websocket connection for wsID ${this.wsID}`,\n    );\n\n    this.wsID += 1;\n    this.isConnecting = false;\n    this.isDisconnected = true;\n\n    // start by removing all the listeners\n    if (this.healthCheckTimeoutRef) {\n      clearInterval(this.healthCheckTimeoutRef);\n    }\n    if (this.connectionCheckTimeoutRef) {\n      clearInterval(this.connectionCheckTimeoutRef);\n    }\n\n    removeConnectionEventListeners(this.onlineStatusChanged);\n\n    this.isHealthy = false;\n\n    // remove ws handlers...\n    if (this.ws && this.ws.removeAllListeners) {\n      this.ws.removeAllListeners();\n    }\n\n    let isClosedPromise: Promise<void>;\n    // and finally close...\n    // Assigning to local here because we will remove it from this before the\n    // promise resolves.\n    const { ws } = this;\n    if (ws && ws.close && ws.readyState === ws.OPEN) {\n      isClosedPromise = new Promise((resolve) => {\n        const onclose = (event: WebSocket.CloseEvent) => {\n          this._log(\n            `disconnect() - resolving isClosedPromise ${\n              event ? 'with' : 'without'\n            } close frame`,\n            { event },\n          );\n          resolve();\n        };\n\n        ws.onclose = onclose;\n        // In case we don't receive close frame websocket server in time,\n        // lets not wait for more than 1 second.\n        setTimeout(onclose, timeout != null ? timeout : 1000);\n      });\n\n      this._log(\n        `disconnect() - Manually closed connection by calling client.disconnect()`,\n      );\n\n      ws.close(\n        KnownCodes.WS_CLOSED_SUCCESS,\n        'Manually closed connection by calling client.disconnect()',\n      );\n    } else {\n      this._log(\n        `disconnect() - ws connection doesn't exist or it is already closed.`,\n      );\n      isClosedPromise = Promise.resolve();\n    }\n\n    delete this.ws;\n\n    return isClosedPromise;\n  }\n\n  /**\n   * _connect - Connect to the WS endpoint\n   *\n   * @return {ConnectAPIResponse<ConnectedEvent>} Promise that completes once the first health check message is received\n   */\n  async _connect() {\n    if (\n      this.isConnecting ||\n      (this.isDisconnected && this.client.options.enableWSFallback)\n    )\n      return; // simply ignore _connect if it's currently trying to connect\n    this.isConnecting = true;\n    this.requestID = randomId();\n    this.client.insightMetrics.connectionStartTimestamp = new Date().getTime();\n    let isTokenReady = false;\n    try {\n      this._log(`_connect() - waiting for token`);\n      await this.client.tokenManager.tokenReady();\n      isTokenReady = true;\n    } catch (e) {\n      // token provider has failed before, so try again\n    }\n\n    try {\n      if (!isTokenReady) {\n        this._log(\n          `_connect() - tokenProvider failed before, so going to retry`,\n        );\n        await this.client.tokenManager.loadToken();\n      }\n\n      let mustSetupConnectionIdPromise = true;\n      if (this.client.connectionIdPromise) {\n        if (await isPromisePending(this.client.connectionIdPromise)) {\n          mustSetupConnectionIdPromise = false;\n        }\n      }\n      if (mustSetupConnectionIdPromise) {\n        this.client._setupConnectionIdPromise();\n      }\n      this._setupConnectionPromise();\n      const wsURL = this._buildUrl();\n      this._log(`_connect() - Connecting to ${wsURL}`, {\n        wsURL,\n        requestID: this.requestID,\n      });\n      this.ws = new WebSocket(wsURL);\n      this.ws.onopen = this.onopen.bind(this, this.wsID);\n      this.ws.onclose = this.onclose.bind(this, this.wsID);\n      this.ws.onerror = this.onerror.bind(this, this.wsID);\n      this.ws.onmessage = this.onmessage.bind(this, this.wsID);\n      const response = await this.connectionOpen;\n      this.isConnecting = false;\n\n      if (response) {\n        this.connectionID = response.connection_id;\n        this.client.resolveConnectionId?.(this.connectionID);\n        if (\n          this.client.insightMetrics.wsConsecutiveFailures > 0 &&\n          this.client.options.enableInsights\n        ) {\n          postInsights(\n            'ws_success_after_failure',\n            buildWsSuccessAfterFailureInsight(\n              this as unknown as StableWSConnection,\n            ),\n          );\n          this.client.insightMetrics.wsConsecutiveFailures = 0;\n        }\n        return response;\n      }\n    } catch (err) {\n      await this.client._setupConnectionIdPromise();\n      this.isConnecting = false;\n      // @ts-ignore\n      this._log(`_connect() - Error - `, err);\n      if (this.client.options.enableInsights) {\n        this.client.insightMetrics.wsConsecutiveFailures++;\n        this.client.insightMetrics.wsTotalFailures++;\n\n        const insights = buildWsFatalInsight(\n          this as unknown as StableWSConnection,\n          convertErrorToJson(err as Error),\n        );\n        postInsights?.('ws_fatal', insights);\n      }\n      this.client.rejectConnectionId?.(err);\n      throw err;\n    }\n  }\n\n  /**\n   * _reconnect - Retry the connection to WS endpoint\n   *\n   * @param {{ interval?: number; refreshToken?: boolean }} options Following options are available\n   *\n   * - `interval`\t{int}\t\t\tnumber of ms that function should wait before reconnecting\n   * - `refreshToken` {boolean}\treload/refresh user token be refreshed before attempting reconnection.\n   */\n  async _reconnect(\n    options: { interval?: number; refreshToken?: boolean } = {},\n  ): Promise<void> {\n    this._log('_reconnect() - Initiating the reconnect');\n\n    // only allow 1 connection at the time\n    if (this.isConnecting || this.isHealthy) {\n      this._log('_reconnect() - Abort (1) since already connecting or healthy');\n      return;\n    }\n\n    // reconnect in case of on error or on close\n    // also reconnect if the health check cycle fails\n    let interval = options.interval;\n    if (!interval) {\n      interval = retryInterval(this.consecutiveFailures);\n    }\n    // reconnect, or try again after a little while...\n    await sleep(interval);\n\n    // Check once again if by some other call to _reconnect is active or connection is\n    // already restored, then no need to proceed.\n    if (this.isConnecting || this.isHealthy) {\n      this._log('_reconnect() - Abort (2) since already connecting or healthy');\n      return;\n    }\n\n    if (this.isDisconnected && this.client.options.enableWSFallback) {\n      this._log('_reconnect() - Abort (3) since disconnect() is called');\n      return;\n    }\n\n    this._log('_reconnect() - Destroying current WS connection');\n\n    // cleanup the old connection\n    this._destroyCurrentWSConnection();\n\n    if (options.refreshToken) {\n      await this.client.tokenManager.loadToken();\n    }\n\n    try {\n      await this._connect();\n      this._log('_reconnect() - Waiting for recoverCallBack');\n      // await this.client.recoverState();\n      this._log('_reconnect() - Finished recoverCallBack');\n\n      this.consecutiveFailures = 0;\n    } catch (error: any) {\n      this.isHealthy = false;\n      this.consecutiveFailures += 1;\n      if (\n        error.code === KnownCodes.TOKEN_EXPIRED &&\n        !this.client.tokenManager.isStatic()\n      ) {\n        this._log(\n          '_reconnect() - WS failure due to expired token, so going to try to reload token and reconnect',\n        );\n\n        return this._reconnect({ refreshToken: true });\n      }\n\n      // reconnect on WS failures, don't reconnect if there is a code bug\n      if (error.isWSFailure) {\n        this._log('_reconnect() - WS failure, so going to try to reconnect');\n\n        this._reconnect();\n      }\n    }\n    this._log('_reconnect() - == END ==');\n  }\n\n  /**\n   * onlineStatusChanged - this function is called when the browser connects or disconnects from the internet.\n   *\n   * @param {Event} event Event with type online or offline\n   *\n   */\n  onlineStatusChanged = (event: Event) => {\n    if (event.type === 'offline') {\n      // mark the connection as down\n      this._log('onlineStatusChanged() - Status changing to offline');\n      // we know that the app is offline so dispatch the unhealthy connection event immediately\n      this._setHealth(false, true);\n    } else if (event.type === 'online') {\n      // retry right now...\n      // We check this.isHealthy, not sure if it's always\n      // smart to create a new WS connection if the old one is still up and running.\n      // it's possible we didn't miss any messages, so this process is just expensive and not needed.\n      this._log(\n        `onlineStatusChanged() - Status changing to online. isHealthy: ${this.isHealthy}`,\n      );\n      if (!this.isHealthy) {\n        this._reconnect({ interval: 10 });\n      }\n    }\n  };\n\n  onopen = (wsID: number) => {\n    if (this.wsID !== wsID) return;\n\n    const user = this.client.user;\n    if (!user) {\n      this.client.logger('error', `User not set, can't connect to WS`);\n      return;\n    }\n\n    const token = this.client._getToken();\n    if (!token) {\n      this.client.logger('error', `Token not set, can't connect authenticate`);\n      return;\n    }\n\n    const authMessage: WSAuthMessage = {\n      token,\n      user_details: {\n        id: user.id,\n        name: user.name,\n        image: user.image,\n        custom: user.custom,\n      },\n    };\n\n    this.authenticationSent = true;\n    this.ws?.send(JSON.stringify(authMessage));\n    this._log('onopen() - onopen callback', { wsID });\n  };\n\n  onmessage = (wsID: number, event: WebSocket.MessageEvent) => {\n    if (this.wsID !== wsID) return;\n\n    this._log('onmessage() - onmessage callback', { event, wsID });\n    const data =\n      typeof event.data === 'string'\n        ? (JSON.parse(event.data) as StreamVideoEvent)\n        : null;\n\n    // we wait till the first message before we consider the connection open.\n    // the reason for this is that auth errors and similar errors trigger a ws.onopen and immediately\n    // after that a ws.onclose.\n    if (!this.isResolved && data && data.type === 'connection.error') {\n      this.isResolved = true;\n      if (data.error) {\n        // @ts-expect-error - the types of _errorFromWSEvent are incorrect\n        this.rejectPromise?.(this._errorFromWSEvent(data, false));\n        return;\n      }\n    }\n\n    // trigger the event..\n    this.lastEvent = new Date();\n\n    if (\n      data &&\n      (data.type === 'health.check' || data.type === 'connection.ok')\n    ) {\n      // the initial health-check should come from the client\n      this.scheduleNextPing();\n    }\n\n    if (data && data.type === 'connection.ok') {\n      this.resolvePromise?.(data);\n      this._setHealth(true);\n    }\n\n    if (data && data.type === 'connection.error' && data.error) {\n      const { code } = data.error;\n      this.isHealthy = false;\n      this.isConnecting = false;\n      this.consecutiveFailures += 1;\n      if (\n        code === KnownCodes.TOKEN_EXPIRED &&\n        !this.client.tokenManager.isStatic()\n      ) {\n        clearTimeout(this.connectionCheckTimeoutRef);\n        this._log(\n          'connect() - WS failure due to expired token, so going to try to reload token and reconnect',\n        );\n        this._reconnect({ refreshToken: true });\n      }\n    }\n\n    if (data) {\n      data.received_at = new Date();\n      this.client.dispatchEvent(data);\n    }\n    this.scheduleConnectionCheck();\n  };\n\n  onclose = (wsID: number, event: WebSocket.CloseEvent) => {\n    if (this.wsID !== wsID) return;\n\n    this._log('onclose() - onclose callback - ' + event.code, { event, wsID });\n\n    if (event.code === KnownCodes.WS_CLOSED_SUCCESS) {\n      // this is a permanent error raised by stream..\n      // usually caused by invalid auth details\n      const error = new Error(\n        `WS connection reject with error ${event.reason}`,\n      ) as Error & WebSocket.CloseEvent;\n\n      error.reason = event.reason;\n      error.code = event.code;\n      error.wasClean = event.wasClean;\n      error.target = event.target;\n\n      this.rejectPromise?.(error);\n      this._log(`onclose() - WS connection reject with error ${event.reason}`, {\n        event,\n      });\n    } else {\n      this.consecutiveFailures += 1;\n      this.totalFailures += 1;\n      this._setHealth(false);\n      this.isConnecting = false;\n\n      this.rejectPromise?.(this._errorFromWSEvent(event));\n\n      this._log(`onclose() - WS connection closed. Calling reconnect ...`, {\n        event,\n      });\n\n      // reconnect if its an abnormal failure\n      this._reconnect();\n    }\n  };\n\n  onerror = (wsID: number, event: WebSocket.ErrorEvent) => {\n    if (this.wsID !== wsID) return;\n\n    this.consecutiveFailures += 1;\n    this.totalFailures += 1;\n    this._setHealth(false);\n    this.isConnecting = false;\n    this.rejectPromise?.(this._errorFromWSEvent(event));\n    this._log(`onerror() - WS connection resulted into error`, { event });\n\n    this._reconnect();\n  };\n\n  /**\n   * _setHealth - Sets the connection to healthy or unhealthy.\n   * Broadcasts an event in case the connection status changed.\n   *\n   * @param {boolean} healthy boolean indicating if the connection is healthy or not\n   * @param {boolean} dispatchImmediately boolean indicating to dispatch event immediately even if the connection is unhealthy\n   *\n   */\n  _setHealth = (healthy: boolean, dispatchImmediately = false) => {\n    if (healthy === this.isHealthy) return;\n\n    this.isHealthy = healthy;\n\n    if (this.isHealthy || dispatchImmediately) {\n      this.client.dispatchEvent({\n        type: 'connection.changed',\n        online: this.isHealthy,\n      });\n      return;\n    }\n\n    // we're offline, wait few seconds and fire and event if still offline\n    setTimeout(() => {\n      if (this.isHealthy) return;\n      this.client.dispatchEvent({\n        type: 'connection.changed',\n        online: this.isHealthy,\n      });\n    }, 5000);\n  };\n\n  /**\n   * _errorFromWSEvent - Creates an error object for the WS event\n   *\n   */\n  _errorFromWSEvent = (\n    event: WebSocket.CloseEvent | WebSocket.Data | WebSocket.ErrorEvent,\n    isWSFailure = true,\n  ) => {\n    let code;\n    let statusCode;\n    let message;\n    if (isCloseEvent(event)) {\n      code = event.code;\n      statusCode = 'unknown';\n      message = event.reason;\n    }\n\n    if (isErrorEvent(event)) {\n      code = event.error.code;\n      statusCode = event.error.StatusCode;\n      message = event.error.message;\n    }\n\n    // Keeping this `warn` level log, to avoid cluttering of error logs from ws failures.\n    this._log(\n      `_errorFromWSEvent() - WS failed with code ${code}`,\n      { event },\n      'warn',\n    );\n\n    const error = new Error(\n      `WS failed with code ${code} and reason - ${message}`,\n    ) as Error & {\n      code?: string | number;\n      isWSFailure?: boolean;\n      StatusCode?: string | number;\n    };\n    error.code = code;\n    /**\n     * StatusCode does not exist on any event types but has been left\n     * as is to preserve JS functionality during the TS implementation\n     */\n    error.StatusCode = statusCode;\n    error.isWSFailure = isWSFailure;\n    return error;\n  };\n\n  /**\n   * _destroyCurrentWSConnection - Removes the current WS connection\n   *\n   */\n  _destroyCurrentWSConnection() {\n    // increment the ID, meaning we will ignore all messages from the old\n    // ws connection from now on.\n    this.wsID += 1;\n\n    try {\n      this?.ws?.removeAllListeners();\n      this?.ws?.close();\n    } catch (e) {\n      // we don't care\n    }\n  }\n\n  /**\n   * _setupPromise - sets up the this.connectOpen promise\n   */\n  _setupConnectionPromise = () => {\n    this.isResolved = false;\n    /** a promise that is resolved once ws.open is called */\n    this.connectionOpen = new Promise<ConnectedEvent>((resolve, reject) => {\n      this.resolvePromise = resolve;\n      this.rejectPromise = reject;\n    });\n  };\n\n  /**\n   * Schedules a next health check ping for websocket.\n   */\n  scheduleNextPing = () => {\n    if (this.healthCheckTimeoutRef) {\n      clearTimeout(this.healthCheckTimeoutRef);\n    }\n\n    // 30 seconds is the recommended interval (messenger uses this)\n    this.healthCheckTimeoutRef = setTimeout(() => {\n      // send the healthcheck..., server replies with a health check event\n      const data = [{ type: 'health.check', client_id: this.client.clientID }];\n      // try to send on the connection\n      try {\n        this.ws?.send(JSON.stringify(data));\n      } catch (e) {\n        // error will already be detected elsewhere\n      }\n    }, this.pingInterval);\n  };\n\n  /**\n   * scheduleConnectionCheck - schedules a check for time difference between last received event and now.\n   * If the difference is more than 35 seconds, it means our health check logic has failed and websocket needs\n   * to be reconnected.\n   */\n  scheduleConnectionCheck = () => {\n    if (this.connectionCheckTimeoutRef) {\n      clearTimeout(this.connectionCheckTimeoutRef);\n    }\n\n    this.connectionCheckTimeoutRef = setTimeout(() => {\n      const now = new Date();\n      if (\n        this.lastEvent &&\n        now.getTime() - this.lastEvent.getTime() > this.connectionCheckTimeout\n      ) {\n        this._log('scheduleConnectionCheck - going to reconnect');\n        this._setHealth(false);\n        this._reconnect();\n      }\n    }, this.connectionCheckTimeout);\n  };\n}\n", "import { fromByteArray } from 'base64-js';\n\nfunction isString<T>(arrayOrString: string | T[]): arrayOrString is string {\n  return typeof (arrayOrString as string) === 'string';\n}\n\ntype MapGenericCallback<T, U> = (value: T, index: number, array: T[]) => U;\ntype MapStringCallback<U> = (value: string, index: number, string: string) => U;\n\nfunction isMapStringCallback<T, U>(\n  arrayOrString: string | T[],\n  callback: MapGenericCallback<T, U> | MapStringCallback<U>,\n): callback is MapStringCallback<U> {\n  return !!callback && isString(arrayOrString);\n}\n\n// source - https://github.com/beatgammit/base64-js/blob/master/test/convert.js#L72\nfunction map<T, U>(array: T[], callback: MapGenericCallback<T, U>): U[];\nfunction map<U>(string: string, callback: MapStringCallback<U>): U[];\nfunction map<T, U>(\n  arrayOrString: string | T[],\n  callback: MapGenericCallback<T, U> | MapStringCallback<U>,\n): U[] {\n  const res = [];\n\n  if (isString(arrayOrString) && isMapStringCallback(arrayOrString, callback)) {\n    for (let k = 0, len = arrayOrString.length; k < len; k++) {\n      if (arrayOrString.charAt(k)) {\n        const kValue = arrayOrString.charAt(k);\n        const mappedValue = callback(kValue, k, arrayOrString);\n        res[k] = mappedValue;\n      }\n    }\n  } else if (\n    !isString(arrayOrString) &&\n    !isMapStringCallback(arrayOrString, callback)\n  ) {\n    for (let k = 0, len = arrayOrString.length; k < len; k++) {\n      if (k in arrayOrString) {\n        const kValue = arrayOrString[k];\n        const mappedValue = callback(kValue, k, arrayOrString);\n        res[k] = mappedValue;\n      }\n    }\n  }\n\n  return res;\n}\n\nexport const encodeBase64 = (data: string): string =>\n  fromByteArray(new Uint8Array(map(data, (char) => char.charCodeAt(0))));\n\n// base-64 decoder throws exception if encoded string is not padded by '=' to make string length\n// in multiples of 4. So gonna use our own method for this purpose to keep backwards compatibility\n// https://github.com/beatgammit/base64-js/blob/master/index.js#L26\nexport const decodeBase64 = (s: string): string => {\n  const e = {} as { [key: string]: number },\n    w = String.fromCharCode,\n    L = s.length;\n  let i,\n    b = 0,\n    c,\n    x,\n    l = 0,\n    a,\n    r = '';\n  const A = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  for (i = 0; i < 64; i++) {\n    e[A.charAt(i)] = i;\n  }\n  for (x = 0; x < L; x++) {\n    c = e[s.charAt(x)];\n    b = (b << 6) + c;\n    l += 6;\n    while (l >= 8) {\n      ((a = (b >>> (l -= 8)) & 0xff) || x < L - 2) && (r += w(a));\n    }\n  }\n  return r;\n};\n", "import { decodeBase64, encodeBase64 } from './base64';\n\n/**\n *\n * @param {string} userId the id of the user\n * @return {string}\n */\nexport function DevToken(userId: string) {\n  return [\n    'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9', //{\"alg\": \"HS256\", \"typ\": \"JWT\"}\n    encodeBase64(JSON.stringify({ user_id: userId })),\n    'devtoken', // hardcoded signature\n  ].join('.');\n}\n\nexport function UserFromToken(token: string) {\n  const fragments = token.split('.');\n  if (fragments.length !== 3) {\n    return '';\n  }\n  const b64Payload = fragments[1];\n  const payload = decodeBase64(b64Payload);\n  const data = JSON.parse(payload);\n  return data.user_id as string;\n}\n", "import { UserFromToken } from './signing';\nimport { isFunction } from './utils';\nimport type { TokenOrProvider, UserWithId } from './types';\n\n/**\n * TokenManager\n *\n * Handles all the operations around user token.\n */\nexport class TokenManager {\n  loadTokenPromise: Promise<string> | null;\n  type: 'static' | 'provider';\n  secret?: string;\n  token?: string;\n  tokenProvider?: TokenOrProvider;\n  user?: UserWithId;\n  /**\n   * Constructor\n   *\n   * @param {Secret} secret\n   */\n  constructor(secret?: string) {\n    this.loadTokenPromise = null;\n    if (secret) {\n      this.secret = secret;\n    }\n\n    this.type = 'static';\n  }\n\n  /**\n   * Set the static string token or token provider.\n   * Token provider should return a token string or a promise which resolves to string token.\n   *\n   * @param {TokenOrProvider} tokenOrProvider - the token or token provider.\n   * @param {UserResponse} user - the user object.\n   * @param {boolean} isAnonymous - whether the user is anonymous or not.\n   */\n  setTokenOrProvider = async (\n    tokenOrProvider: TokenOrProvider,\n    user: UserWithId,\n    isAnonymous: boolean,\n  ) => {\n    this.validateToken(tokenOrProvider, user, isAnonymous);\n    this.user = user;\n\n    if (isFunction(tokenOrProvider)) {\n      this.tokenProvider = tokenOrProvider;\n      this.type = 'provider';\n    }\n\n    if (typeof tokenOrProvider === 'string') {\n      this.token = tokenOrProvider;\n      this.type = 'static';\n    }\n\n    await this.loadToken();\n  };\n\n  /**\n   * Resets the token manager.\n   * Useful for client disconnection or switching user.\n   */\n  reset = () => {\n    this.token = undefined;\n    this.user = undefined;\n    this.loadTokenPromise = null;\n  };\n\n  // Validates the user token.\n  validateToken = (\n    tokenOrProvider: TokenOrProvider,\n    user: UserWithId,\n    isAnonymous: boolean,\n  ) => {\n    // allow empty token for anon user\n    if (user && isAnonymous && !tokenOrProvider) return;\n\n    // Don't allow empty token for non-server side client.\n    if (!this.secret && !tokenOrProvider) {\n      throw new Error('UserWithId token can not be empty');\n    }\n\n    if (\n      tokenOrProvider &&\n      typeof tokenOrProvider !== 'string' &&\n      !isFunction(tokenOrProvider)\n    ) {\n      throw new Error('user token should either be a string or a function');\n    }\n\n    if (typeof tokenOrProvider === 'string') {\n      // Allow empty token for anonymous users\n      if (isAnonymous && tokenOrProvider === '') return;\n\n      const tokenUserId = UserFromToken(tokenOrProvider);\n      if (\n        tokenOrProvider != null &&\n        (tokenUserId == null ||\n          tokenUserId === '' ||\n          (!isAnonymous && tokenUserId !== user.id))\n      ) {\n        throw new Error(\n          'userToken does not have a user_id or is not matching with user.id',\n        );\n      }\n    }\n  };\n\n  // Resolves when token is ready. This function is simply to check if loadToken is in progress, in which\n  // case a function should wait.\n  tokenReady = () => this.loadTokenPromise;\n\n  // Fetches a token from tokenProvider function and sets in tokenManager.\n  // In case of static token, it will simply resolve to static token.\n  loadToken = () => {\n    // eslint-disable-next-line no-async-promise-executor\n    this.loadTokenPromise = new Promise(async (resolve, reject) => {\n      if (this.type === 'static') {\n        return resolve(this.token as string);\n      }\n\n      if (this.tokenProvider && typeof this.tokenProvider !== 'string') {\n        try {\n          this.token = await this.tokenProvider();\n        } catch (e) {\n          return reject(\n            new Error(`Call to tokenProvider failed with message: ${e}`),\n          );\n        }\n        resolve(this.token);\n      }\n    });\n\n    return this.loadTokenPromise;\n  };\n\n  // Returns a current token\n  getToken = () => {\n    if (this.token) {\n      return this.token;\n    }\n\n    if (this.user && !this.token) {\n      return this.token;\n    }\n\n    throw new Error(\n      `User token is not set. Either client.connectUser wasn't called or client.disconnect was called`,\n    );\n  };\n\n  isStatic = () => this.type === 'static';\n}\n", "import { AxiosResponse } from 'axios';\nimport { APIErrorResponse } from './types';\n\nexport const APIErrorCodes: Record<\n  string,\n  { name: string; retryable: boolean }\n> = {\n  '-1': { name: 'InternalSystemError', retryable: true },\n  '2': { name: 'AccessKeyError', retryable: false },\n  '3': { name: 'AuthenticationFailedError', retryable: true },\n  '4': { name: 'InputError', retryable: false },\n  '6': { name: 'DuplicateUsernameError', retryable: false },\n  '9': { name: 'RateLimitError', retryable: true },\n  '16': { name: 'DoesNotExistError', retryable: false },\n  '17': { name: 'NotAllowedError', retryable: false },\n  '18': { name: 'EventNotSupportedError', retryable: false },\n  '19': { name: 'ChannelFeatureNotSupportedError', retryable: false },\n  '20': { name: 'MessageTooLongError', retryable: false },\n  '21': { name: 'MultipleNestingLevelError', retryable: false },\n  '22': { name: 'PayloadTooBigError', retryable: false },\n  '23': { name: 'RequestTimeoutError', retryable: true },\n  '24': { name: 'MaxHeaderSizeExceededError', retryable: false },\n  '40': { name: 'AuthErrorTokenExpired', retryable: false },\n  '41': { name: 'AuthErrorTokenNotValidYet', retryable: false },\n  '42': { name: 'AuthErrorTokenUsedBeforeIssuedAt', retryable: false },\n  '43': { name: 'AuthErrorTokenSignatureInvalid', retryable: false },\n  '44': { name: 'CustomCommandEndpointMissingError', retryable: false },\n  '45': { name: 'CustomCommandEndpointCallError', retryable: true },\n  '46': { name: 'ConnectionIDNotFoundError', retryable: false },\n  '60': { name: 'CoolDownError', retryable: true },\n  '69': { name: 'ErrWrongRegion', retryable: false },\n  '70': { name: 'ErrQueryChannelPermissions', retryable: false },\n  '71': { name: 'ErrTooManyConnections', retryable: true },\n  '99': { name: 'AppSuspendedError', retryable: false },\n};\n\n// todo: this is not a correct error declaration. /recordings endpoint returns error objects as follows:\n// {\n//     \"code\": 16,\n//     \"message\": \"ListRecordings failed with error: \\\"Can't find call with id default:bbbb\\\"\",\n//     \"StatusCode\": 404,\n//     \"duration\": \"0.00ms\",\n//     \"more_info\": \"https://getstream.io/chat/docs/api_errors_response\",\n//     \"details\": []\n// }\n\ntype APIError = Error & { code: number; isWSFailure?: boolean };\n\nexport function isAPIError(error: Error): error is APIError {\n  return (error as APIError).code !== undefined;\n}\n\nexport function isErrorRetryable(error: APIError) {\n  if (!error.code) return false;\n  const err = APIErrorCodes[`${error.code}`];\n  if (!err) return false;\n  return err.retryable;\n}\n\nexport function isConnectionIDError(error: APIError) {\n  return error.code === 46; // ConnectionIDNotFoundError\n}\n\nexport function isWSFailure(err: APIError): boolean {\n  if (typeof err.isWSFailure === 'boolean') {\n    return err.isWSFailure;\n  }\n\n  try {\n    return JSON.parse(err.message).isWSFailure;\n  } catch (_) {\n    return false;\n  }\n}\n\nexport function isErrorResponse(\n  res: AxiosResponse<unknown>,\n): res is AxiosResponse<APIErrorResponse> {\n  return !res.status || res.status < 200 || 300 <= res.status;\n}\n", "import axios, { AxiosRequestConfig, CancelTokenSource } from 'axios';\nimport { StreamClient } from './client';\nimport {\n  addConnectionEventListeners,\n  removeConnectionEventListeners,\n  retryInterval,\n  sleep,\n} from './utils';\nimport { isAPIError, isConnectionIDError, isErrorRetryable } from './errors';\nimport { LogLevel, StreamVideoEvent, UR } from './types';\nimport { ConnectedEvent } from '../../gen/coordinator';\n\nexport enum ConnectionState {\n  Closed = 'CLOSED',\n  Connected = 'CONNECTED',\n  Connecting = 'CONNECTING',\n  Disconnected = 'DISCONNECTED',\n  Init = 'INIT',\n}\n\nexport class WSConnectionFallback {\n  client: StreamClient;\n  state: ConnectionState;\n  consecutiveFailures: number;\n  connectionID?: string;\n  cancelToken?: CancelTokenSource;\n\n  constructor(client: StreamClient) {\n    this.client = client;\n    this.state = ConnectionState.Init;\n    this.consecutiveFailures = 0;\n\n    addConnectionEventListeners(this._onlineStatusChanged);\n  }\n\n  _log(msg: string, extra: UR = {}, level: LogLevel = 'info') {\n    this.client.logger(level, 'WSConnectionFallback:' + msg, {\n      ...extra,\n    });\n  }\n\n  _setState(state: ConnectionState) {\n    this._log(`_setState() - ${state}`);\n\n    // transition from connecting => connected\n    if (\n      this.state === ConnectionState.Connecting &&\n      state === ConnectionState.Connected\n    ) {\n      this.client.dispatchEvent({ type: 'connection.changed', online: true });\n    }\n\n    if (\n      state === ConnectionState.Closed ||\n      state === ConnectionState.Disconnected\n    ) {\n      this.client.dispatchEvent({ type: 'connection.changed', online: false });\n    }\n\n    this.state = state;\n  }\n\n  /** @private */\n  _onlineStatusChanged = (event: { type: string }) => {\n    this._log(`_onlineStatusChanged() - ${event.type}`);\n\n    if (event.type === 'offline') {\n      this._setState(ConnectionState.Closed);\n      this.cancelToken?.cancel('disconnect() is called');\n      this.cancelToken = undefined;\n      return;\n    }\n\n    if (event.type === 'online' && this.state === ConnectionState.Closed) {\n      this.connect(true);\n    }\n  };\n\n  /** @private */\n  _req = async <T = UR>(\n    params: UR,\n    config: AxiosRequestConfig,\n    retry: boolean,\n  ): Promise<T> => {\n    if (!this.cancelToken && !params.close) {\n      this.cancelToken = axios.CancelToken.source();\n    }\n\n    try {\n      const res = await this.client.doAxiosRequest<T>(\n        'get',\n        (this.client.baseURL as string).replace(':3030', ':8900') + '/longpoll', // replace port if present for testing with local API\n        undefined,\n        {\n          config: { ...config, cancelToken: this.cancelToken?.token },\n          params,\n          publicEndpoint: true,\n        },\n      );\n\n      this.consecutiveFailures = 0; // always reset in case of no error\n      return res;\n    } catch (err) {\n      this.consecutiveFailures += 1;\n\n      // @ts-ignore\n      if (retry && isErrorRetryable(err)) {\n        this._log(`_req() - Retryable error, retrying request`);\n        await sleep(retryInterval(this.consecutiveFailures));\n        return this._req<T>(params, config, retry);\n      }\n\n      throw err;\n    }\n  };\n\n  /** @private */\n  _poll = async () => {\n    while (this.state === ConnectionState.Connected) {\n      try {\n        const data = await this._req<{\n          events: StreamVideoEvent[];\n        }>(\n          {},\n          {\n            timeout: 30000,\n          },\n          true,\n        ); // 30s => API responds in 20s if there is no event\n\n        if (data.events?.length) {\n          for (let i = 0; i < data.events.length; i++) {\n            this.client.dispatchEvent(data.events[i]);\n          }\n        }\n      } catch (err) {\n        if (axios.isCancel(err)) {\n          this._log(`_poll() - axios canceled request`);\n          return;\n        }\n\n        /** client.doAxiosRequest will take care of TOKEN_EXPIRED error */\n\n        // @ts-ignore\n        if (isConnectionIDError(err)) {\n          this._log(`_poll() - ConnectionID error, connecting without ID...`);\n          this._setState(ConnectionState.Disconnected);\n          this.connect(true);\n          return;\n        }\n\n        // @ts-ignore\n        if (isAPIError(err) && !isErrorRetryable(err)) {\n          this._setState(ConnectionState.Closed);\n          return;\n        }\n\n        await sleep(retryInterval(this.consecutiveFailures));\n      }\n    }\n  };\n\n  /**\n   * connect try to open a longpoll request\n   * @param reconnect should be false for first call and true for subsequent calls to keep the connection alive and call recoverState\n   */\n  connect = async (reconnect = false) => {\n    if (this.state === ConnectionState.Connecting) {\n      this._log(\n        'connect() - connecting already in progress',\n        { reconnect },\n        'warn',\n      );\n      return;\n    }\n    if (this.state === ConnectionState.Connected) {\n      this._log(\n        'connect() - already connected and polling',\n        { reconnect },\n        'warn',\n      );\n      return;\n    }\n\n    this._setState(ConnectionState.Connecting);\n    this.connectionID = undefined; // connect should be sent with empty connection_id so API creates one\n    try {\n      const { event } = await this._req<{\n        event: ConnectedEvent;\n      }>(\n        { json: this.client._buildWSPayload() },\n        {\n          timeout: 8000, // 8s\n        },\n        reconnect,\n      );\n\n      this._setState(ConnectionState.Connected);\n      this.connectionID = event.connection_id;\n      this.client.resolveConnectionId?.();\n      // @ts-expect-error\n      this.client.dispatchEvent(event);\n      this._poll();\n      return event;\n    } catch (err) {\n      this._setState(ConnectionState.Closed);\n      this.client.rejectConnectionId?.();\n      throw err;\n    }\n  };\n\n  /**\n   * isHealthy checks if there is a connectionID and connection is in Connected state\n   */\n  isHealthy = () => {\n    return !!this.connectionID && this.state === ConnectionState.Connected;\n  };\n\n  disconnect = async (timeout = 2000) => {\n    removeConnectionEventListeners(this._onlineStatusChanged);\n\n    this._setState(ConnectionState.Disconnected);\n    this.cancelToken?.cancel('disconnect() is called');\n    this.cancelToken = undefined;\n\n    const connection_id = this.connectionID;\n    this.connectionID = undefined;\n\n    try {\n      await this._req(\n        { close: true, connection_id },\n        {\n          timeout,\n        },\n        false,\n      );\n      this._log(`disconnect() - Closed connectionID`);\n    } catch (err) {\n      this._log(`disconnect() - Failed`, { err }, 'error');\n    }\n  };\n}\n", "import { getLogger } from '../../logger';\n\nexport const getLocationHint = async (\n  hintUrl = `https://hint.stream-io-video.com/`,\n  timeout = 2000,\n  maxAttempts = 3,\n): Promise<string> => {\n  const logger = getLogger(['location-hint']);\n\n  let attempt = 0;\n  let locationHint = 'ERR';\n  do {\n    const abortController = new AbortController();\n    const timeoutId = setTimeout(() => abortController.abort(), timeout);\n    try {\n      const response = await fetch(hintUrl, {\n        method: 'HEAD',\n        signal: abortController.signal,\n      });\n      const awsPop = response.headers.get('x-amz-cf-pop') || 'ERR';\n      logger('debug', `Location header: ${awsPop}`);\n      locationHint = awsPop.substring(0, 3); // AMS1-P2 -> AMS\n    } catch (e) {\n      logger('warn', `Failed to get location hint from ${hintUrl}`, e);\n      locationHint = 'ERR';\n    } finally {\n      clearTimeout(timeoutId);\n    }\n  } while (locationHint === 'ERR' && ++attempt < maxAttempts);\n\n  return locationHint;\n};\n", "import axios, {\n  AxiosError,\n  AxiosHeaders,\n  AxiosInstance,\n  AxiosRequestConfig,\n  AxiosResponse,\n} from 'axios';\nimport https from 'https';\nimport { StableWSConnection } from './connection';\nimport { DevToken } from './signing';\nimport { TokenManager } from './token_manager';\nimport { WSConnectionFallback } from './connection_fallback';\nimport { isErrorResponse, isWSFailure } from './errors';\nimport {\n  addConnectionEventListeners,\n  isFunction,\n  isOnline,\n  KnownCodes,\n  randomId,\n  removeConnectionEventListeners,\n  retryInterval,\n  sleep,\n} from './utils';\n\nimport {\n  AllClientEvents,\n  AllClientEventTypes,\n  APIErrorResponse,\n  ClientEventListener,\n  ConnectAPIResponse,\n  ErrorFromResponse,\n  Logger,\n  StreamClientOptions,\n  StreamVideoEvent,\n  TokenOrProvider,\n  User,\n  UserWithId,\n} from './types';\nimport { InsightMetrics, postInsights } from './insights';\nimport { getLocationHint } from './location';\nimport { CreateGuestRequest, CreateGuestResponse } from '../../gen/coordinator';\n\nexport class StreamClient {\n  _user?: UserWithId;\n  anonymous: boolean;\n  persistUserOnConnectionFailure?: boolean;\n  axiosInstance: AxiosInstance;\n  baseURL?: string;\n  browser: boolean;\n  clientID?: string;\n  key: string;\n  listeners: Partial<\n    Record<AllClientEventTypes, ClientEventListener<any>[] | undefined>\n  > = {};\n  logger: Logger;\n\n  private locationHint: Promise<string> | undefined;\n\n  node: boolean;\n  options: StreamClientOptions;\n  secret?: string;\n  setUserPromise: ConnectAPIResponse | null;\n  tokenManager: TokenManager;\n  user?: UserWithId;\n  userAgent?: string;\n  userID?: string;\n  wsBaseURL?: string;\n  wsConnection: StableWSConnection | null;\n  wsFallback?: WSConnectionFallback;\n  wsPromise: ConnectAPIResponse | null;\n  consecutiveFailures: number;\n  insightMetrics: InsightMetrics;\n  defaultWSTimeoutWithFallback: number;\n  defaultWSTimeout: number;\n  resolveConnectionId?: Function;\n  rejectConnectionId?: Function;\n  connectionIdPromise?: Promise<string | undefined>;\n  guestUserCreatePromise?: Promise<CreateGuestResponse>;\n\n  /**\n   * Initialize a client.\n   *\n   * @param {string} key - the api key\n   * @param {StreamClientOptions} [options] - additional options, here you can pass custom options to axios instance\n   * @param {string} [options.secret] - the api secret\n   * @param {boolean} [options.browser] - enforce the client to be in browser mode\n   * @param {boolean} [options.warmUp] - default to false, if true, client will open a connection as soon as possible to speed up following requests\n   * @param {Logger} [options.Logger] - custom logger\n   * @param {number} [options.timeout] - default to 3000\n   * @param {httpsAgent} [options.httpsAgent] - custom httpsAgent, in node it's default to https.agent()\n   */\n  constructor(key: string, options?: StreamClientOptions) {\n    // set the key\n    this.key = key;\n\n    // set the secret\n    this.secret = options?.secret;\n\n    // set the options... and figure out defaults...\n    const inputOptions = options\n      ? options\n      : ({\n          browser: typeof window !== 'undefined',\n        } as Partial<StreamClientOptions>);\n\n    this.browser = inputOptions.browser || typeof window !== 'undefined';\n    this.node = !this.browser;\n\n    if (this.browser) {\n      this.locationHint = getLocationHint(\n        options?.locationHintUrl,\n        options?.locationHintTimeout,\n        options?.locationHintMaxAttempts,\n      );\n    }\n\n    this.options = {\n      timeout: 5000,\n      withCredentials: false, // making sure cookies are not sent\n      warmUp: false,\n      ...inputOptions,\n    };\n\n    if (this.node && !this.options.httpsAgent) {\n      this.options.httpsAgent = new https.Agent({\n        keepAlive: true,\n        keepAliveMsecs: 3000,\n      });\n    }\n\n    this.setBaseURL(\n      this.options.baseURL || 'https://video.stream-io-api.com/video',\n    );\n\n    if (\n      typeof process !== 'undefined' &&\n      'env' in process &&\n      process.env.STREAM_LOCAL_TEST_RUN\n    ) {\n      this.setBaseURL('http://localhost:3030/video');\n    }\n\n    if (\n      typeof process !== 'undefined' &&\n      'env' in process &&\n      process.env.STREAM_LOCAL_TEST_HOST\n    ) {\n      this.setBaseURL(`http://${process.env.STREAM_LOCAL_TEST_HOST}/video`);\n    }\n\n    this.axiosInstance = axios.create({\n      ...this.options,\n      baseURL: this.baseURL,\n    });\n\n    // WS connection is initialized when setUser is called\n    this.wsConnection = null;\n    this.wsPromise = null;\n    this.setUserPromise = null;\n\n    // mapping between channel groups and configs\n    this.anonymous = false;\n    this.persistUserOnConnectionFailure =\n      this.options?.persistUserOnConnectionFailure;\n\n    // If it is a server-side client, then lets initialize the tokenManager, since token will be\n    // generated from secret.\n    this.tokenManager = new TokenManager(this.secret);\n    this.consecutiveFailures = 0;\n    this.insightMetrics = new InsightMetrics();\n\n    this.defaultWSTimeoutWithFallback = 6000;\n    this.defaultWSTimeout = 15000;\n\n    this.logger = isFunction(inputOptions.logger)\n      ? inputOptions.logger\n      : () => null;\n  }\n\n  devToken = (userID: string) => {\n    return DevToken(userID);\n  };\n\n  getAuthType = () => {\n    return this.anonymous ? 'anonymous' : 'jwt';\n  };\n\n  setBaseURL = (baseURL: string) => {\n    this.baseURL = baseURL;\n    this.wsBaseURL = this.baseURL\n      .replace('http', 'ws')\n      .replace(':3030', ':8800');\n  };\n\n  getLocationHint = async (\n    hintUrl?: string,\n    timeout?: number,\n  ): Promise<string> => {\n    const hint = await this.locationHint;\n    if (!hint || hint === 'ERR') {\n      this.locationHint = getLocationHint(\n        hintUrl ?? this.options.locationHintUrl,\n        timeout ?? this.options.locationHintTimeout,\n      );\n      return this.locationHint;\n    }\n    return hint;\n  };\n\n  _getConnectionID = () =>\n    this.wsConnection?.connectionID || this.wsFallback?.connectionID;\n\n  _hasConnectionID = () => Boolean(this._getConnectionID());\n\n  /**\n   * connectUser - Set the current user and open a WebSocket connection\n   *\n   * @param user Data about this user. IE {name: \"john\"}\n   * @param {TokenOrProvider} userTokenOrProvider Token or provider\n   *\n   * @return {ConnectAPIResponse} Returns a promise that resolves when the connection is setup\n   */\n  connectUser = async (\n    user: UserWithId,\n    userTokenOrProvider: TokenOrProvider,\n  ) => {\n    if (!user.id) {\n      throw new Error('The \"id\" field on the user is missing');\n    }\n\n    /**\n     * Calling connectUser multiple times is potentially the result of a  bad integration, however,\n     * If the user id remains the same we don't throw error\n     */\n    if (this.userID === user.id && this.setUserPromise) {\n      this.logger(\n        'warn',\n        'Consecutive calls to connectUser is detected, ideally you should only call this function once in your app.',\n      );\n      return this.setUserPromise;\n    }\n\n    if (this.userID) {\n      throw new Error(\n        'Use client.disconnect() before trying to connect as a different user. connectUser was called twice.',\n      );\n    }\n\n    if (\n      (this._isUsingServerAuth() || this.node) &&\n      !this.options.allowServerSideConnect\n    ) {\n      this.logger(\n        'warn',\n        'Please do not use connectUser server side. Use our @stream-io/node-sdk instead: https://getstream.io/video/docs/api/',\n      );\n    }\n\n    // we generate the client id client side\n    this.userID = user.id;\n    this.anonymous = false;\n\n    const setTokenPromise = this._setToken(\n      user,\n      userTokenOrProvider,\n      this.anonymous,\n    );\n    this._setUser(user);\n\n    const wsPromise = this.openConnection();\n\n    this.setUserPromise = Promise.all([setTokenPromise, wsPromise]).then(\n      (result) => result[1], // We only return connection promise;\n    );\n\n    try {\n      addConnectionEventListeners(this.updateNetworkConnectionStatus);\n      return await this.setUserPromise;\n    } catch (err) {\n      if (this.persistUserOnConnectionFailure) {\n        // cleanup client to allow the user to retry connectUser again\n        this.closeConnection();\n      } else {\n        this.disconnectUser();\n      }\n      throw err;\n    }\n  };\n\n  _setToken = (\n    user: UserWithId,\n    userTokenOrProvider: TokenOrProvider,\n    isAnonymous: boolean,\n  ) =>\n    this.tokenManager.setTokenOrProvider(\n      userTokenOrProvider,\n      user,\n      isAnonymous,\n    );\n\n  _setUser = (user: UserWithId) => {\n    /**\n     * This one is used by the frontend. This is a copy of the current user object stored on backend.\n     * It contains reserved properties and own user properties which are not present in `this._user`.\n     */\n    this.user = user;\n    this.userID = user.id;\n    // this one is actually used for requests. This is a copy of current user provided to `connectUser` function.\n    this._user = { ...user };\n  };\n\n  /**\n   * Disconnects the websocket connection, without removing the user set on client.\n   * client.closeConnection will not trigger default auto-retry mechanism for reconnection. You need\n   * to call client.openConnection to reconnect to websocket.\n   *\n   * This is mainly useful on mobile side. You can only receive push notifications\n   * if you don't have active websocket connection.\n   * So when your app goes to background, you can call `client.closeConnection`.\n   * And when app comes back to foreground, call `client.openConnection`.\n   *\n   * @param timeout Max number of ms, to wait for close event of websocket, before forcefully assuming succesful disconnection.\n   *                https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent\n   */\n  closeConnection = async (timeout?: number) => {\n    await Promise.all([\n      this.wsConnection?.disconnect(timeout),\n      this.wsFallback?.disconnect(timeout),\n    ]);\n    return Promise.resolve();\n  };\n\n  /**\n   * Creates a new WebSocket connection with the current user. Returns empty promise, if there is an active connection\n   */\n  openConnection = async () => {\n    if (!this.userID) {\n      throw Error(\n        'UserWithId is not set on client, use client.connectUser or client.connectAnonymousUser instead',\n      );\n    }\n\n    if (this.wsConnection?.isConnecting && this.wsPromise) {\n      this.logger(\n        'info',\n        'client:openConnection() - connection already in progress',\n      );\n      return this.wsPromise;\n    }\n\n    if (\n      (this.wsConnection?.isHealthy || this.wsFallback?.isHealthy()) &&\n      this._hasConnectionID()\n    ) {\n      this.logger(\n        'info',\n        'client:openConnection() - openConnection called twice, healthy connection already exists',\n      );\n\n      return Promise.resolve();\n    }\n\n    this._setupConnectionIdPromise();\n\n    this.clientID = `${this.userID}--${randomId()}`;\n    this.wsPromise = this.connect();\n    return this.wsPromise;\n  };\n\n  /**\n   * Disconnects the websocket and removes the user from client.\n   *\n   * @param timeout Max number of ms, to wait for close event of websocket, before forcefully assuming successful disconnection.\n   *                https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent\n   */\n  disconnectUser = async (timeout?: number) => {\n    this.logger('info', 'client:disconnect() - Disconnecting the client');\n\n    // remove the user specific fields\n    delete this.user;\n    delete this._user;\n    delete this.userID;\n\n    this.anonymous = false;\n\n    await this.closeConnection(timeout);\n    removeConnectionEventListeners(this.updateNetworkConnectionStatus);\n\n    this.tokenManager.reset();\n\n    this.connectionIdPromise = undefined;\n    this.rejectConnectionId = undefined;\n    this.resolveConnectionId = undefined;\n  };\n\n  connectGuestUser = async (user: User & { type: 'guest' }) => {\n    this.guestUserCreatePromise = this.doAxiosRequest<\n      CreateGuestResponse,\n      CreateGuestRequest\n    >(\n      'post',\n      '/guest',\n      {\n        user: {\n          ...user,\n        },\n      },\n      { publicEndpoint: true },\n    );\n\n    const response = await this.guestUserCreatePromise;\n    this.guestUserCreatePromise.finally(\n      () => (this.guestUserCreatePromise = undefined),\n    );\n\n    return this.connectUser(response.user, response.access_token);\n  };\n\n  /**\n   * connectAnonymousUser - Set an anonymous user and open a WebSocket connection\n   */\n  connectAnonymousUser = async (\n    user: UserWithId,\n    tokenOrProvider: TokenOrProvider,\n  ) => {\n    addConnectionEventListeners(this.updateNetworkConnectionStatus);\n    this._setupConnectionIdPromise();\n\n    this.anonymous = true;\n    await this._setToken(user, tokenOrProvider, this.anonymous);\n\n    this._setUser(user);\n    // some endpoints require a connection_id to be resolved.\n    // as anonymous users aren't allowed to open WS connections, we just\n    // resolve the connection_id here.\n    this.resolveConnectionId?.();\n  };\n\n  /**\n   * on - Listen to events on all channels and users your watching\n   *\n   * client.on('message.new', event => {console.log(\"my new message\", event, channel.state.messages)})\n   *\n   * @param eventName The event type to listen for (optional)\n   * @param callback The callback to call\n   *\n   * @return  Returns a function which, when called, unsubscribes the event handler.\n   */\n  on = <E extends keyof AllClientEvents>(\n    eventName: E,\n    callback: ClientEventListener<E>,\n  ) => {\n    if (!this.listeners[eventName]) {\n      this.listeners[eventName] = [];\n    }\n\n    this.logger('debug', `Adding listener for ${eventName} event`);\n    this.listeners[eventName]?.push(callback as ClientEventListener<any>);\n    return () => {\n      this.off(eventName, callback);\n    };\n  };\n\n  /**\n   * off - Remove the event handler\n   */\n  off = <E extends keyof AllClientEvents>(\n    eventName: E,\n    callback: ClientEventListener<E>,\n  ) => {\n    if (!this.listeners[eventName]) {\n      this.listeners[eventName] = [];\n    }\n\n    this.logger('debug', `Removing listener for ${eventName} event`);\n    this.listeners[eventName] = this.listeners[eventName]?.filter(\n      (value) => value !== callback,\n    );\n  };\n\n  /**\n   * sets up the this.connectionIdPromise\n   */\n  _setupConnectionIdPromise = async () => {\n    /** a promise that is resolved once connection id is set */\n    this.connectionIdPromise = new Promise<string | undefined>(\n      (resolve, reject) => {\n        this.resolveConnectionId = resolve;\n        this.rejectConnectionId = reject;\n      },\n    );\n  };\n\n  _logApiRequest = (\n    type: string,\n    url: string,\n    data: unknown,\n    config: AxiosRequestConfig & {\n      config?: AxiosRequestConfig & { maxBodyLength?: number };\n    },\n  ) => {\n    this.logger('trace', `client: ${type} - Request - ${url}`, {\n      payload: data,\n      config,\n    });\n  };\n\n  _logApiResponse = <T>(\n    type: string,\n    url: string,\n    response: AxiosResponse<T>,\n  ) => {\n    this.logger(\n      'trace',\n      `client:${type} - Response - url: ${url} > status ${response.status}`,\n      {\n        response,\n      },\n    );\n  };\n\n  _logApiError = (type: string, url: string, error: unknown) => {\n    this.logger('error', `client:${type} - Error - url: ${url}`, {\n      url,\n      error,\n    });\n  };\n\n  doAxiosRequest = async <T, D = unknown>(\n    type: string,\n    url: string,\n    data?: D,\n    options: AxiosRequestConfig & {\n      config?: AxiosRequestConfig & { maxBodyLength?: number };\n    } & { publicEndpoint?: boolean } = {},\n  ): Promise<T> => {\n    if (!options.publicEndpoint) {\n      await Promise.all([\n        this.tokenManager.tokenReady(),\n        this.guestUserCreatePromise,\n      ]);\n      // we need to wait for presence of connection id before making requests\n      try {\n        await this.connectionIdPromise;\n      } catch (e) {\n        // in case connection id was rejected\n        // reconnection maybe in progress\n        // we can wait for healthy connection to resolve, which rejects when 15s timeout is reached\n        await this.wsConnection?._waitForHealthy();\n        await this.connectionIdPromise;\n      }\n    }\n    const requestConfig = this._enrichAxiosOptions(options);\n    try {\n      let response: AxiosResponse<T>;\n      this._logApiRequest(type, url, data, requestConfig);\n      switch (type) {\n        case 'get':\n          response = await this.axiosInstance.get(url, requestConfig);\n          break;\n        case 'delete':\n          response = await this.axiosInstance.delete(url, requestConfig);\n          break;\n        case 'post':\n          response = await this.axiosInstance.post(url, data, requestConfig);\n          break;\n        case 'put':\n          response = await this.axiosInstance.put(url, data, requestConfig);\n          break;\n        case 'patch':\n          response = await this.axiosInstance.patch(url, data, requestConfig);\n          break;\n        case 'options':\n          response = await this.axiosInstance.options(url, requestConfig);\n          break;\n        default:\n          throw new Error('Invalid request type');\n      }\n      this._logApiResponse<T>(type, url, response);\n      this.consecutiveFailures = 0;\n      return this.handleResponse(response);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } catch (e: any /**TODO: generalize error types  */) {\n      e.client_request_id = requestConfig.headers?.['x-client-request-id'];\n      this.consecutiveFailures += 1;\n      if (e.response) {\n        this._logApiError(type, url, e.response);\n        /** connection_fallback depends on this token expiration logic */\n        if (\n          e.response.data.code === KnownCodes.TOKEN_EXPIRED &&\n          !this.tokenManager.isStatic()\n        ) {\n          if (this.consecutiveFailures > 1) {\n            await sleep(retryInterval(this.consecutiveFailures));\n          }\n          await this.tokenManager.loadToken();\n          return await this.doAxiosRequest<T, D>(type, url, data, options);\n        }\n        return this.handleResponse(e.response);\n      } else {\n        this._logApiError(type, url, e);\n        // eslint-disable-next-line no-throw-literal\n        throw e as AxiosError<APIErrorResponse>;\n      }\n    }\n  };\n\n  get = <T>(url: string, params?: AxiosRequestConfig['params']) => {\n    return this.doAxiosRequest<T, unknown>('get', url, null, {\n      params,\n    });\n  };\n\n  put = <T, D = unknown>(\n    url: string,\n    data?: D,\n    params?: AxiosRequestConfig['params'],\n  ) => {\n    return this.doAxiosRequest<T, D>('put', url, data, { params });\n  };\n\n  post = <T, D = unknown>(\n    url: string,\n    data?: D,\n    params?: AxiosRequestConfig['params'],\n  ) => {\n    return this.doAxiosRequest<T, D>('post', url, data, { params });\n  };\n\n  patch = <T, D = unknown>(\n    url: string,\n    data?: D,\n    params?: AxiosRequestConfig['params'],\n  ) => {\n    return this.doAxiosRequest<T, D>('patch', url, data, { params });\n  };\n\n  delete = <T>(url: string, params?: AxiosRequestConfig['params']) => {\n    return this.doAxiosRequest<T, unknown>('delete', url, null, {\n      params,\n    });\n  };\n\n  errorFromResponse = (\n    response: AxiosResponse<APIErrorResponse>,\n  ): ErrorFromResponse<APIErrorResponse> => {\n    const { data, status } = response;\n    const err = new ErrorFromResponse<APIErrorResponse>();\n    err.message = `Stream error code ${data.code}: ${data.message}`;\n    err.code = data.code;\n    err.unrecoverable = data.unrecoverable;\n    err.response = response;\n    err.status = status;\n    return err;\n  };\n\n  handleResponse = <T>(response: AxiosResponse<T>) => {\n    const data = response.data;\n    if (isErrorResponse(response)) {\n      throw this.errorFromResponse(response);\n    }\n    return data;\n  };\n\n  dispatchEvent = (event: StreamVideoEvent) => {\n    this.logger('debug', `Dispatching event: ${event.type}`, event);\n    if (!this.listeners) return;\n\n    // call generic listeners\n    for (const listener of this.listeners.all || []) {\n      listener(event);\n    }\n\n    // call type specific listeners\n    for (const listener of this.listeners[event.type] || []) {\n      listener(event);\n    }\n  };\n\n  /**\n   * @private\n   */\n  connect = async () => {\n    if (!this.userID || !this._user) {\n      throw Error(\n        'Call connectUser or connectAnonymousUser before starting the connection',\n      );\n    }\n    if (!this.wsBaseURL) {\n      throw Error('Websocket base url not set');\n    }\n    if (!this.clientID) {\n      throw Error('clientID is not set');\n    }\n\n    if (\n      !this.wsConnection &&\n      (this.options.warmUp || this.options.enableInsights)\n    ) {\n      this._sayHi();\n    }\n    // The StableWSConnection handles all the reconnection logic.\n    if (this.options.wsConnection && this.node) {\n      // Intentionally avoiding adding ts generics on wsConnection in options since its only useful for unit test purpose.\n      (this.options.wsConnection as unknown as StableWSConnection).setClient(\n        this,\n      );\n      this.wsConnection = this.options\n        .wsConnection as unknown as StableWSConnection;\n    } else {\n      this.wsConnection = new StableWSConnection(this);\n    }\n\n    try {\n      // if fallback is used before, continue using it instead of waiting for WS to fail\n      if (this.wsFallback) {\n        return await this.wsFallback.connect();\n      }\n      this.logger('info', 'StreamClient.connect: this.wsConnection.connect()');\n      // if WSFallback is enabled, ws connect should timeout faster so fallback can try\n      return await this.wsConnection.connect(\n        this.options.enableWSFallback\n          ? this.defaultWSTimeoutWithFallback\n          : this.defaultWSTimeout,\n      );\n    } catch (err) {\n      // run fallback only if it's WS/Network error and not a normal API error\n      // make sure browser is online before even trying the longpoll\n      if (\n        this.options.enableWSFallback &&\n        // @ts-ignore\n        isWSFailure(err) &&\n        isOnline(this.logger)\n      ) {\n        this.logger(\n          'warn',\n          'client:connect() - WS failed, fallback to longpoll',\n        );\n        this.dispatchEvent({ type: 'transport.changed', mode: 'longpoll' });\n\n        this.wsConnection._destroyCurrentWSConnection();\n        this.wsConnection.disconnect().then(); // close WS so no retry\n        this.wsFallback = new WSConnectionFallback(this);\n        return await this.wsFallback.connect();\n      }\n\n      throw err;\n    }\n  };\n\n  /**\n   * Check the connectivity with server for warmup purpose.\n   *\n   * @private\n   */\n  _sayHi = () => {\n    const client_request_id = randomId();\n    const opts = {\n      headers: AxiosHeaders.from({\n        'x-client-request-id': client_request_id,\n      }),\n    };\n    this.doAxiosRequest('get', this.baseURL + '/hi', null, opts).catch((e) => {\n      if (this.options.enableInsights) {\n        postInsights('http_hi_failed', {\n          api_key: this.key,\n          err: e,\n          client_request_id,\n        });\n      }\n    });\n  };\n\n  getUserAgent = () => {\n    const version = process.env.PKG_VERSION || '0.0.0-development';\n    return (\n      this.userAgent ||\n      `stream-video-javascript-client-${\n        this.node ? 'node' : 'browser'\n      }-${version}`\n    );\n  };\n\n  setUserAgent = (userAgent: string) => {\n    this.userAgent = userAgent;\n  };\n\n  /**\n   * _isUsingServerAuth - Returns true if we're using server side auth\n   */\n  _isUsingServerAuth = () => !!this.secret;\n\n  _enrichAxiosOptions = (\n    options: AxiosRequestConfig & { config?: AxiosRequestConfig } & {\n      publicEndpoint?: boolean;\n    } = {\n      params: {},\n      headers: {},\n      config: {},\n    },\n  ): AxiosRequestConfig => {\n    const token =\n      options.publicEndpoint && !this.user ? undefined : this._getToken();\n    const authorization = token ? { Authorization: token } : undefined;\n\n    if (!options.headers?.['x-client-request-id']) {\n      options.headers = {\n        ...options.headers,\n        'x-client-request-id': randomId(),\n      };\n    }\n\n    return {\n      params: {\n        user_id: this.userID,\n        connection_id: this._getConnectionID(),\n        api_key: this.key,\n        ...options.params,\n      },\n      headers: {\n        ...authorization,\n        'stream-auth-type':\n          options.publicEndpoint && !this.user\n            ? 'anonymous'\n            : this.getAuthType(),\n        'X-Stream-Client': this.getUserAgent(),\n        ...options.headers,\n      },\n      ...options.config,\n      ...this.options.axiosRequestConfig,\n    };\n  };\n\n  _getToken = () => {\n    if (!this.tokenManager) return null;\n\n    return this.tokenManager.getToken();\n  };\n\n  /**\n   * encode ws url payload\n   * @private\n   * @returns json string\n   */\n  _buildWSPayload = (client_request_id?: string) => {\n    return JSON.stringify({\n      user_id: this.userID,\n      user_details: this._user,\n      client_request_id,\n    });\n  };\n\n  updateNetworkConnectionStatus = (\n    event: { type: 'online' | 'offline' } | Event,\n  ) => {\n    if (event.type === 'offline') {\n      this.logger('debug', 'device went offline');\n      this.dispatchEvent({ type: 'network.changed', online: false });\n    } else if (event.type === 'online') {\n      this.logger('debug', 'device went online');\n      this.dispatchEvent({ type: 'network.changed', online: true });\n    }\n  };\n}\n", "import { Call } from './Call';\nimport { StreamClient } from './coordinator/connection/client';\nimport {\n  StreamVideoReadOnlyStateStore,\n  StreamVideoWriteableStateStore,\n} from './store';\nimport type {\n  ConnectedEvent,\n  CreateDeviceRequest,\n  CreateGuestRequest,\n  CreateGuestResponse,\n  GetEdgesResponse,\n  ListDevicesResponse,\n  QueryCallsRequest,\n  QueryCallsResponse,\n  QueryCallStatsRequest,\n  QueryCallStatsResponse,\n} from './gen/coordinator';\nimport {\n  AllClientEvents,\n  ClientEventListener,\n  Logger,\n  LogLevel,\n  StreamClientOptions,\n  TokenOrProvider,\n  TokenProvider,\n  User,\n  UserWithId,\n} from './coordinator/connection/types';\nimport { getLogger, logToConsole, setLogger } from './logger';\nimport { getSdkInfo } from './client-details';\nimport { SdkType } from './gen/video/sfu/models/models';\n\n/**\n * A `StreamVideoClient` instance lets you communicate with our API, and authenticate users.\n */\nexport class StreamVideoClient {\n  /**\n   * A reactive store that exposes all the state variables reactively.\n   * You can subscribe to changes of the different state variables.\n   * Our library is built in a way that all state changes are exposed in this store,\n   * o all UI changes in your application should be handled by subscribing to these variables.\n   *\n   * @deprecated use the `client.state` getter.\n   */\n  readonly readOnlyStateStore: StreamVideoReadOnlyStateStore;\n  readonly logLevel: LogLevel = 'warn';\n  readonly logger: Logger;\n\n  protected readonly writeableStateStore: StreamVideoWriteableStateStore;\n  streamClient: StreamClient;\n\n  protected eventHandlersToUnregister: Array<() => void> = [];\n  protected connectionPromise: Promise<void | ConnectedEvent> | undefined;\n  protected disconnectionPromise: Promise<void> | undefined;\n\n  private static _instanceMap: Map<string, StreamVideoClient> = new Map();\n\n  /**\n   * You should create only one instance of `StreamVideoClient`.\n   */\n  constructor(apiKey: string, opts?: StreamClientOptions);\n  constructor(args: {\n    apiKey: string;\n    options?: StreamClientOptions;\n    user?: User;\n    token?: string;\n    tokenProvider?: TokenProvider;\n  });\n  constructor(\n    apiKeyOrArgs:\n      | string\n      | {\n          apiKey: string;\n          options?: StreamClientOptions;\n          user?: User;\n          token?: string;\n          tokenProvider?: TokenProvider;\n        },\n    opts?: StreamClientOptions,\n  ) {\n    let logger: Logger = logToConsole;\n    let logLevel: LogLevel = 'warn';\n    if (typeof apiKeyOrArgs === 'string') {\n      logLevel = opts?.logLevel || logLevel;\n      logger = opts?.logger || logger;\n    } else {\n      logLevel = apiKeyOrArgs.options?.logLevel || logLevel;\n      logger = apiKeyOrArgs.options?.logger || logger;\n    }\n\n    setLogger(logger, logLevel);\n    this.logger = getLogger(['client']);\n    const coordinatorLogger = getLogger(['coordinator']);\n\n    if (typeof apiKeyOrArgs === 'string') {\n      this.streamClient = new StreamClient(apiKeyOrArgs, {\n        persistUserOnConnectionFailure: true,\n        ...opts,\n        logLevel,\n        logger: coordinatorLogger,\n      });\n    } else {\n      this.streamClient = new StreamClient(apiKeyOrArgs.apiKey, {\n        persistUserOnConnectionFailure: true,\n        ...apiKeyOrArgs.options,\n        logLevel,\n        logger: coordinatorLogger,\n      });\n\n      const sdkInfo = getSdkInfo();\n      if (sdkInfo) {\n        const sdkName = SdkType[sdkInfo.type].toLowerCase();\n        const sdkVersion = `${sdkInfo.major}.${sdkInfo.minor}.${sdkInfo.patch}`;\n        const userAgent = this.streamClient.getUserAgent();\n        this.streamClient.setUserAgent(\n          `${userAgent}-video-${sdkName}-sdk-${sdkVersion}`,\n        );\n      }\n    }\n\n    this.writeableStateStore = new StreamVideoWriteableStateStore();\n    this.readOnlyStateStore = new StreamVideoReadOnlyStateStore(\n      this.writeableStateStore,\n    );\n\n    if (typeof apiKeyOrArgs !== 'string') {\n      const user = apiKeyOrArgs.user;\n      const token = apiKeyOrArgs.token || apiKeyOrArgs.tokenProvider;\n      if (user) {\n        let id = user.id;\n        if (user.type === 'anonymous') {\n          id = '!anon';\n        }\n        if (id) {\n          if (StreamVideoClient._instanceMap.has(apiKeyOrArgs.apiKey + id)) {\n            this.logger(\n              'warn',\n              `A StreamVideoClient already exists for ${user.type === 'anonymous' ? 'an anonymous user' : id}; Prefer using getOrCreateInstance method`,\n            );\n          }\n          user.id = id;\n          StreamVideoClient._instanceMap.set(apiKeyOrArgs.apiKey + id, this);\n        }\n        this.connectUser(user, token).catch((err) => {\n          this.logger('error', 'Failed to connect', err);\n        });\n      }\n    }\n  }\n\n  public static getOrCreateInstance(args: {\n    apiKey: string;\n    user: User;\n    token?: string;\n    tokenProvider?: TokenProvider;\n    options?: StreamClientOptions;\n  }): StreamVideoClient {\n    const user = args.user;\n    if (!user.id) {\n      if (args.user.type === 'anonymous') {\n        user.id = '!anon';\n      } else {\n        throw new Error('User ID is required for a non-anonymous user');\n      }\n    }\n    if (!args.token && !args.tokenProvider) {\n      if (args.user.type !== 'anonymous' && args.user.type !== 'guest') {\n        throw new Error(\n          'TokenProvider or token is required for a user that is not a guest or anonymous',\n        );\n      }\n    }\n    let instance = StreamVideoClient._instanceMap.get(args.apiKey + user.id);\n    if (!instance) {\n      instance = new StreamVideoClient({ ...args, user });\n    }\n    return instance;\n  }\n\n  /**\n   * Return the reactive state store, use this if you want to be notified about changes to the client state\n   */\n  get state() {\n    return this.readOnlyStateStore;\n  }\n\n  /**\n   * Connects the given user to the client.\n   * Only one user can connect at a time, if you want to change users, call `disconnectUser` before connecting a new user.\n   * If the connection is successful, the connected user [state variable](#readonlystatestore) will be updated accordingly.\n   *\n   * @param user the user to connect.\n   * @param token a token or a function that returns a token.\n   */\n  connectUser = async (\n    user: User,\n    token?: TokenOrProvider,\n  ): Promise<void | ConnectedEvent> => {\n    if (user.type === 'anonymous') {\n      user.id = '!anon';\n      return this.connectAnonymousUser(user as UserWithId, token);\n    }\n    let connectUser = () => {\n      return this.streamClient.connectUser(user, token);\n    };\n    if (user.type === 'guest') {\n      connectUser = async () => {\n        return this.streamClient.connectGuestUser(user);\n      };\n    }\n    this.connectionPromise = this.disconnectionPromise\n      ? this.disconnectionPromise.then(() => connectUser())\n      : connectUser();\n\n    this.connectionPromise?.finally(() => (this.connectionPromise = undefined));\n    const connectUserResponse = await this.connectionPromise;\n    // connectUserResponse will be void if connectUser called twice for the same user\n    if (connectUserResponse?.me) {\n      this.writeableStateStore.setConnectedUser(connectUserResponse.me);\n    }\n\n    this.eventHandlersToUnregister.push(\n      this.on('connection.changed', (event) => {\n        if (event.online) {\n          const callsToReWatch = this.writeableStateStore.calls\n            .filter((call) => call.watching)\n            .map((call) => call.cid);\n\n          this.logger(\n            'info',\n            `Rewatching calls after connection changed ${callsToReWatch.join(\n              ', ',\n            )}`,\n          );\n          if (callsToReWatch.length > 0) {\n            this.queryCalls({\n              watch: true,\n              filter_conditions: {\n                cid: { $in: callsToReWatch },\n              },\n              sort: [{ field: 'cid', direction: 1 }],\n            }).catch((err) => {\n              this.logger('error', 'Failed to re-watch calls', err);\n            });\n          }\n        }\n      }),\n    );\n\n    this.eventHandlersToUnregister.push(\n      this.on('call.created', (event) => {\n        const { call, members } = event;\n        if (user.id === call.created_by.id) {\n          this.logger(\n            'warn',\n            'Received `call.created` sent by the current user',\n          );\n          return;\n        }\n\n        this.logger('info', `New call created and registered: ${call.cid}`);\n        const newCall = new Call({\n          streamClient: this.streamClient,\n          type: call.type,\n          id: call.id,\n          members,\n          clientStore: this.writeableStateStore,\n        });\n        newCall.state.updateFromCallResponse(call);\n        this.writeableStateStore.registerCall(newCall);\n      }),\n    );\n\n    this.eventHandlersToUnregister.push(\n      this.on('call.ring', async (event) => {\n        const { call, members } = event;\n        if (user.id === call.created_by.id) {\n          this.logger(\n            'debug',\n            'Received `call.ring` sent by the current user so ignoring the event',\n          );\n          return;\n        }\n\n        // The call might already be tracked by the client,\n        // if `call.created` was received before `call.ring`.\n        // In that case, we cleanup the already tracked call.\n        const prevCall = this.writeableStateStore.findCall(call.type, call.id);\n        await prevCall?.leave({ reason: 'cleaning-up in call.ring' });\n        // we create a new call\n        const theCall = new Call({\n          streamClient: this.streamClient,\n          type: call.type,\n          id: call.id,\n          members,\n          clientStore: this.writeableStateStore,\n          ringing: true,\n        });\n        theCall.state.updateFromCallResponse(call);\n        // we fetch the latest metadata for the call from the server\n        await theCall.get();\n        this.writeableStateStore.registerCall(theCall);\n      }),\n    );\n\n    return connectUserResponse;\n  };\n\n  /**\n   * Disconnects the currently connected user from the client.\n   *\n   * If the connection is successfully disconnected, the connected user [state variable](#readonlystatestore) will be updated accordingly\n   *\n   * @param timeout Max number of ms, to wait for close event of websocket, before forcefully assuming successful disconnection.\n   *                https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent\n   */\n  disconnectUser = async (timeout?: number) => {\n    if (!this.streamClient.user && !this.connectionPromise) {\n      return;\n    }\n    const userId = this.streamClient.user?.id;\n    const apiKey = this.streamClient.key;\n    const disconnectUser = () => this.streamClient.disconnectUser(timeout);\n    this.disconnectionPromise = this.connectionPromise\n      ? this.connectionPromise.then(() => disconnectUser())\n      : disconnectUser();\n    this.disconnectionPromise.finally(\n      () => (this.disconnectionPromise = undefined),\n    );\n    await this.disconnectionPromise;\n    if (userId) {\n      StreamVideoClient._instanceMap.delete(apiKey + userId);\n    }\n    this.eventHandlersToUnregister.forEach((unregister) => unregister());\n    this.eventHandlersToUnregister = [];\n    this.writeableStateStore.setConnectedUser(undefined);\n  };\n\n  /**\n   * You can subscribe to WebSocket events provided by the API.\n   * To remove a subscription, call the `off` method or, execute the returned unsubscribe function.\n   * Please note that subscribing to WebSocket events is an advanced use-case, for most use-cases it should be enough to watch for changes in the reactive [state store](#readonlystatestore).\n   *\n   * @param eventName the event name or 'all'.\n   * @param callback the callback which will be called when the event is emitted.\n   * @returns an unsubscribe function.\n   */\n  on = <E extends keyof AllClientEvents>(\n    eventName: E,\n    callback: ClientEventListener<E>,\n  ) => {\n    return this.streamClient.on(eventName, callback);\n  };\n\n  /**\n   * Remove subscription for WebSocket events that were created by the `on` method.\n   *\n   * @param eventName the event name.\n   * @param callback the callback which was passed to the `on` method.\n   */\n  off = <E extends keyof AllClientEvents>(\n    eventName: E,\n    callback: ClientEventListener<E>,\n  ) => {\n    return this.streamClient.off(eventName, callback);\n  };\n\n  /**\n   * Creates a new call.\n   *\n   * @param type the type of the call.\n   * @param id the id of the call.\n   */\n  call = (type: string, id: string) => {\n    return new Call({\n      streamClient: this.streamClient,\n      id: id,\n      type: type,\n      clientStore: this.writeableStateStore,\n    });\n  };\n\n  /**\n   * Creates a new guest user with the given data.\n   *\n   * @param data the data for the guest user.\n   */\n  createGuestUser = async (data: CreateGuestRequest) => {\n    return this.streamClient.doAxiosRequest<\n      CreateGuestResponse,\n      CreateGuestRequest\n    >('post', '/guest', data, { publicEndpoint: true });\n  };\n\n  /**\n   * Will query the API for calls matching the given filters.\n   *\n   * @param data the query data.\n   */\n  queryCalls = async (data: QueryCallsRequest = {}) => {\n    const response = await this.streamClient.post<\n      QueryCallsResponse,\n      QueryCallsRequest\n    >('/calls', data);\n    const calls = [];\n    for (const c of response.calls) {\n      const call = new Call({\n        streamClient: this.streamClient,\n        id: c.call.id,\n        type: c.call.type,\n        members: c.members,\n        ownCapabilities: c.own_capabilities,\n        watching: data.watch,\n        clientStore: this.writeableStateStore,\n      });\n      call.state.updateFromCallResponse(c.call);\n      await call.applyDeviceConfig(false);\n      if (data.watch) {\n        this.writeableStateStore.registerCall(call);\n      }\n      calls.push(call);\n    }\n    return {\n      ...response,\n      calls: calls,\n    };\n  };\n\n  /**\n   * Retrieve the list of available call statistics reports matching a particular condition.\n   *\n   * @param data Filter and sort conditions for retrieving available call report summaries.\n   * @returns List with summary of available call reports matching the condition.\n   */\n  queryCallStats = async (data: QueryCallStatsRequest = {}) => {\n    return this.streamClient.post<\n      QueryCallStatsResponse,\n      QueryCallStatsRequest\n    >(`/call/stats`, data);\n  };\n\n  /**\n   * Returns a list of available data centers available for hosting calls.\n   */\n  edges = async () => {\n    return this.streamClient.get<GetEdgesResponse>(`/edges`);\n  };\n\n  /**\n   * addDevice - Adds a push device for a user.\n   *\n   * @param {string} id the device id\n   * @param {string} push_provider the push provider name (eg. apn, firebase)\n   * @param {string} push_provider_name user provided push provider name\n   * @param {string} [userID] the user id (defaults to current user)\n   * @param {boolean} [voip_token] enables use of VoIP token for push notifications on iOS platform\n   */\n  addDevice = async (\n    id: string,\n    push_provider: string,\n    push_provider_name?: string,\n    userID?: string,\n    voip_token?: boolean,\n  ) => {\n    return await this.streamClient.post<CreateDeviceRequest>('/devices', {\n      id,\n      push_provider,\n      voip_token,\n      ...(userID != null ? { user_id: userID } : {}),\n      ...(push_provider_name != null ? { push_provider_name } : {}),\n    });\n  };\n\n  /**\n   * addDevice - Adds a push device for a user.\n   *\n   * @param {string} id the device id\n   * @param {string} push_provider the push provider name (eg. apn, firebase)\n   * @param {string} push_provider_name user provided push provider name\n   * @param {string} [userID] the user id (defaults to current user)\n   */\n  addVoipDevice = async (\n    id: string,\n    push_provider: string,\n    push_provider_name: string,\n    userID?: string,\n  ) => {\n    return await this.addDevice(\n      id,\n      push_provider,\n      push_provider_name,\n      userID,\n      true,\n    );\n  };\n\n  /**\n   * getDevices - Returns the devices associated with a current user\n   * @param {string} [userID] User ID. Only works on serverside\n   */\n  getDevices = async (userID?: string) => {\n    return await this.streamClient.get<ListDevicesResponse>(\n      '/devices',\n      userID ? { user_id: userID } : {},\n    );\n  };\n\n  /**\n   * removeDevice - Removes the device with the given id.\n   *\n   * @param {string} id The device id\n   * @param {string} [userID] The user id. Only specify this for serverside requests\n   */\n  removeDevice = async (id: string, userID?: string) => {\n    return await this.streamClient.delete('/devices', {\n      id,\n      ...(userID ? { user_id: userID } : {}),\n    });\n  };\n\n  /**\n   * A callback that can be used to create ringing calls from push notifications. If the call already exists, it will do nothing.\n   * @param call_cid\n   * @returns\n   */\n  onRingingCall = async (call_cid: string) => {\n    // if we find the call and is already ringing, we don't need to create a new call\n    // as client would have received the call.ring state because the app had WS alive when receiving push notifications\n    let call = this.state.calls.find((c) => c.cid === call_cid && c.ringing);\n    if (!call) {\n      // if not it means that WS is not alive when receiving the push notifications and we need to fetch the call\n      const [callType, callId] = call_cid.split(':');\n      call = new Call({\n        streamClient: this.streamClient,\n        type: callType,\n        id: callId,\n        clientStore: this.writeableStateStore,\n        ringing: true,\n      });\n      await call.get();\n    }\n\n    return call;\n  };\n\n  /**\n   * Connects the given anonymous user to the client.\n   *\n   * @param user the user to connect.\n   * @param tokenOrProvider a token or a function that returns a token.\n   */\n  protected connectAnonymousUser = async (\n    user: UserWithId,\n    tokenOrProvider: TokenOrProvider,\n  ) => {\n    const connectAnonymousUser = () =>\n      this.streamClient.connectAnonymousUser(user, tokenOrProvider);\n    this.connectionPromise = this.disconnectionPromise\n      ? this.disconnectionPromise.then(() => connectAnonymousUser())\n      : connectAnonymousUser();\n    this.connectionPromise.finally(() => (this.connectionPromise = undefined));\n    return this.connectionPromise;\n  };\n}\n", "const isString = obj => typeof obj === 'string';\nconst defer = () => {\n  let res;\n  let rej;\n  const promise = new Promise((resolve, reject) => {\n    res = resolve;\n    rej = reject;\n  });\n  promise.resolve = res;\n  promise.reject = rej;\n  return promise;\n};\nconst makeString = object => {\n  if (object == null) return '';\n  return '' + object;\n};\nconst copy = (a, s, t) => {\n  a.forEach(m => {\n    if (s[m]) t[m] = s[m];\n  });\n};\nconst lastOfPathSeparatorRegExp = /###/g;\nconst cleanKey = key => key && key.indexOf('###') > -1 ? key.replace(lastOfPathSeparatorRegExp, '.') : key;\nconst canNotTraverseDeeper = object => !object || isString(object);\nconst getLastOfPath = (object, path, Empty) => {\n  const stack = !isString(path) ? path : path.split('.');\n  let stackIndex = 0;\n  while (stackIndex < stack.length - 1) {\n    if (canNotTraverseDeeper(object)) return {};\n    const key = cleanKey(stack[stackIndex]);\n    if (!object[key] && Empty) object[key] = new Empty();\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      object = object[key];\n    } else {\n      object = {};\n    }\n    ++stackIndex;\n  }\n  if (canNotTraverseDeeper(object)) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack[stackIndex])\n  };\n};\nconst setPath = (object, path, newValue) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  if (obj !== undefined || path.length === 1) {\n    obj[k] = newValue;\n    return;\n  }\n  let e = path[path.length - 1];\n  let p = path.slice(0, path.length - 1);\n  let last = getLastOfPath(object, p, Object);\n  while (last.obj === undefined && p.length) {\n    e = `${p[p.length - 1]}.${e}`;\n    p = p.slice(0, p.length - 1);\n    last = getLastOfPath(object, p, Object);\n    if (last && last.obj && typeof last.obj[`${last.k}.${e}`] !== 'undefined') {\n      last.obj = undefined;\n    }\n  }\n  last.obj[`${last.k}.${e}`] = newValue;\n};\nconst pushPath = (object, path, newValue, concat) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  obj[k] = obj[k] || [];\n  obj[k].push(newValue);\n};\nconst getPath = (object, path) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path);\n  if (!obj) return undefined;\n  return obj[k];\n};\nconst getPathWithDefaults = (data, defaultData, key) => {\n  const value = getPath(data, key);\n  if (value !== undefined) {\n    return value;\n  }\n  return getPath(defaultData, key);\n};\nconst deepExtend = (target, source, overwrite) => {\n  for (const prop in source) {\n    if (prop !== '__proto__' && prop !== 'constructor') {\n      if (prop in target) {\n        if (isString(target[prop]) || target[prop] instanceof String || isString(source[prop]) || source[prop] instanceof String) {\n          if (overwrite) target[prop] = source[prop];\n        } else {\n          deepExtend(target[prop], source[prop], overwrite);\n        }\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n  }\n  return target;\n};\nconst regexEscape = str => str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\nconst escape = data => {\n  if (isString(data)) {\n    return data.replace(/[&<>\"'\\/]/g, s => _entityMap[s]);\n  }\n  return data;\n};\nclass RegExpCache {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.regExpMap = new Map();\n    this.regExpQueue = [];\n  }\n  getRegExp(pattern) {\n    const regExpFromCache = this.regExpMap.get(pattern);\n    if (regExpFromCache !== undefined) {\n      return regExpFromCache;\n    }\n    const regExpNew = new RegExp(pattern);\n    if (this.regExpQueue.length === this.capacity) {\n      this.regExpMap.delete(this.regExpQueue.shift());\n    }\n    this.regExpMap.set(pattern, regExpNew);\n    this.regExpQueue.push(pattern);\n    return regExpNew;\n  }\n}\nconst chars = [' ', ',', '?', '!', ';'];\nconst looksLikeObjectPathRegExpCache = new RegExpCache(20);\nconst looksLikeObjectPath = (key, nsSeparator, keySeparator) => {\n  nsSeparator = nsSeparator || '';\n  keySeparator = keySeparator || '';\n  const possibleChars = chars.filter(c => nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0);\n  if (possibleChars.length === 0) return true;\n  const r = looksLikeObjectPathRegExpCache.getRegExp(`(${possibleChars.map(c => c === '?' ? '\\\\?' : c).join('|')})`);\n  let matched = !r.test(key);\n  if (!matched) {\n    const ki = key.indexOf(keySeparator);\n    if (ki > 0 && !r.test(key.substring(0, ki))) {\n      matched = true;\n    }\n  }\n  return matched;\n};\nconst deepFind = function (obj, path) {\n  let keySeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '.';\n  if (!obj) return undefined;\n  if (obj[path]) return obj[path];\n  const tokens = path.split(keySeparator);\n  let current = obj;\n  for (let i = 0; i < tokens.length;) {\n    if (!current || typeof current !== 'object') {\n      return undefined;\n    }\n    let next;\n    let nextPath = '';\n    for (let j = i; j < tokens.length; ++j) {\n      if (j !== i) {\n        nextPath += keySeparator;\n      }\n      nextPath += tokens[j];\n      next = current[nextPath];\n      if (next !== undefined) {\n        if (['string', 'number', 'boolean'].indexOf(typeof next) > -1 && j < tokens.length - 1) {\n          continue;\n        }\n        i += j - i + 1;\n        break;\n      }\n    }\n    current = next;\n  }\n  return current;\n};\nconst getCleanedCode = code => code && code.replace('_', '-');\n\nconst consoleLogger = {\n  type: 'logger',\n  log(args) {\n    this.output('log', args);\n  },\n  warn(args) {\n    this.output('warn', args);\n  },\n  error(args) {\n    this.output('error', args);\n  },\n  output(type, args) {\n    if (console && console[type]) console[type].apply(console, args);\n  }\n};\nclass Logger {\n  constructor(concreteLogger) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.init(concreteLogger, options);\n  }\n  init(concreteLogger) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.prefix = options.prefix || 'i18next:';\n    this.logger = concreteLogger || consoleLogger;\n    this.options = options;\n    this.debug = options.debug;\n  }\n  log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return this.forward(args, 'log', '', true);\n  }\n  warn() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return this.forward(args, 'warn', '', true);\n  }\n  error() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    return this.forward(args, 'error', '');\n  }\n  deprecate() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n  }\n  forward(args, lvl, prefix, debugOnly) {\n    if (debugOnly && !this.debug) return null;\n    if (isString(args[0])) args[0] = `${prefix}${this.prefix} ${args[0]}`;\n    return this.logger[lvl](args);\n  }\n  create(moduleName) {\n    return new Logger(this.logger, {\n      ...{\n        prefix: `${this.prefix}:${moduleName}:`\n      },\n      ...this.options\n    });\n  }\n  clone(options) {\n    options = options || this.options;\n    options.prefix = options.prefix || this.prefix;\n    return new Logger(this.logger, options);\n  }\n}\nvar baseLogger = new Logger();\n\nclass EventEmitter {\n  constructor() {\n    this.observers = {};\n  }\n  on(events, listener) {\n    events.split(' ').forEach(event => {\n      if (!this.observers[event]) this.observers[event] = new Map();\n      const numListeners = this.observers[event].get(listener) || 0;\n      this.observers[event].set(listener, numListeners + 1);\n    });\n    return this;\n  }\n  off(event, listener) {\n    if (!this.observers[event]) return;\n    if (!listener) {\n      delete this.observers[event];\n      return;\n    }\n    this.observers[event].delete(listener);\n  }\n  emit(event) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    if (this.observers[event]) {\n      const cloned = Array.from(this.observers[event].entries());\n      cloned.forEach(_ref => {\n        let [observer, numTimesAdded] = _ref;\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer(...args);\n        }\n      });\n    }\n    if (this.observers['*']) {\n      const cloned = Array.from(this.observers['*'].entries());\n      cloned.forEach(_ref2 => {\n        let [observer, numTimesAdded] = _ref2;\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer.apply(observer, [event, ...args]);\n        }\n      });\n    }\n  }\n}\n\nclass ResourceStore extends EventEmitter {\n  constructor(data) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      ns: ['translation'],\n      defaultNS: 'translation'\n    };\n    super();\n    this.data = data || {};\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    if (this.options.ignoreJSONStructure === undefined) {\n      this.options.ignoreJSONStructure = true;\n    }\n  }\n  addNamespaces(ns) {\n    if (this.options.ns.indexOf(ns) < 0) {\n      this.options.ns.push(ns);\n    }\n  }\n  removeNamespaces(ns) {\n    const index = this.options.ns.indexOf(ns);\n    if (index > -1) {\n      this.options.ns.splice(index, 1);\n    }\n  }\n  getResource(lng, ns, key) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;\n    let path;\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n    } else {\n      path = [lng, ns];\n      if (key) {\n        if (Array.isArray(key)) {\n          path.push(...key);\n        } else if (isString(key) && keySeparator) {\n          path.push(...key.split(keySeparator));\n        } else {\n          path.push(key);\n        }\n      }\n    }\n    const result = getPath(this.data, path);\n    if (!result && !ns && !key && lng.indexOf('.') > -1) {\n      lng = path[0];\n      ns = path[1];\n      key = path.slice(2).join('.');\n    }\n    if (result || !ignoreJSONStructure || !isString(key)) return result;\n    return deepFind(this.data && this.data[lng] && this.data[lng][ns], key, keySeparator);\n  }\n  addResource(lng, ns, key, value) {\n    let options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n      silent: false\n    };\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let path = [lng, ns];\n    if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      value = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    setPath(this.data, path, value);\n    if (!options.silent) this.emit('added', lng, ns, key, value);\n  }\n  addResources(lng, ns, resources) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n      silent: false\n    };\n    for (const m in resources) {\n      if (isString(resources[m]) || Array.isArray(resources[m])) this.addResource(lng, ns, m, resources[m], {\n        silent: true\n      });\n    }\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  addResourceBundle(lng, ns, resources, deep, overwrite) {\n    let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {\n      silent: false,\n      skipCopy: false\n    };\n    let path = [lng, ns];\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      deep = resources;\n      resources = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    let pack = getPath(this.data, path) || {};\n    if (!options.skipCopy) resources = JSON.parse(JSON.stringify(resources));\n    if (deep) {\n      deepExtend(pack, resources, overwrite);\n    } else {\n      pack = {\n        ...pack,\n        ...resources\n      };\n    }\n    setPath(this.data, path, pack);\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  removeResourceBundle(lng, ns) {\n    if (this.hasResourceBundle(lng, ns)) {\n      delete this.data[lng][ns];\n    }\n    this.removeNamespaces(ns);\n    this.emit('removed', lng, ns);\n  }\n  hasResourceBundle(lng, ns) {\n    return this.getResource(lng, ns) !== undefined;\n  }\n  getResourceBundle(lng, ns) {\n    if (!ns) ns = this.options.defaultNS;\n    if (this.options.compatibilityAPI === 'v1') return {\n      ...{},\n      ...this.getResource(lng, ns)\n    };\n    return this.getResource(lng, ns);\n  }\n  getDataByLanguage(lng) {\n    return this.data[lng];\n  }\n  hasLanguageSomeTranslations(lng) {\n    const data = this.getDataByLanguage(lng);\n    const n = data && Object.keys(data) || [];\n    return !!n.find(v => data[v] && Object.keys(data[v]).length > 0);\n  }\n  toJSON() {\n    return this.data;\n  }\n}\n\nvar postProcessor = {\n  processors: {},\n  addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n  handle(processors, value, key, options, translator) {\n    processors.forEach(processor => {\n      if (this.processors[processor]) value = this.processors[processor].process(value, key, options, translator);\n    });\n    return value;\n  }\n};\n\nconst checkedLoadedFor = {};\nclass Translator extends EventEmitter {\n  constructor(services) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, this);\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    this.logger = baseLogger.create('translator');\n  }\n  changeLanguage(lng) {\n    if (lng) this.language = lng;\n  }\n  exists(key) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      interpolation: {}\n    };\n    if (key === undefined || key === null) {\n      return false;\n    }\n    const resolved = this.resolve(key, options);\n    return resolved && resolved.res !== undefined;\n  }\n  extractFromKey(key, options) {\n    let nsSeparator = options.nsSeparator !== undefined ? options.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let namespaces = options.ns || this.options.defaultNS || [];\n    const wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;\n    const seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !options.keySeparator && !this.options.userDefinedNsSeparator && !options.nsSeparator && !looksLikeObjectPath(key, nsSeparator, keySeparator);\n    if (wouldCheckForNsInKey && !seemsNaturalLanguage) {\n      const m = key.match(this.interpolator.nestingRegexp);\n      if (m && m.length > 0) {\n        return {\n          key,\n          namespaces: isString(namespaces) ? [namespaces] : namespaces\n        };\n      }\n      const parts = key.split(nsSeparator);\n      if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n      key = parts.join(keySeparator);\n    }\n    return {\n      key,\n      namespaces: isString(namespaces) ? [namespaces] : namespaces\n    };\n  }\n  translate(keys, options, lastKey) {\n    if (typeof options !== 'object' && this.options.overloadTranslationOptionHandler) {\n      options = this.options.overloadTranslationOptionHandler(arguments);\n    }\n    if (typeof options === 'object') options = {\n      ...options\n    };\n    if (!options) options = {};\n    if (keys === undefined || keys === null) return '';\n    if (!Array.isArray(keys)) keys = [String(keys)];\n    const returnDetails = options.returnDetails !== undefined ? options.returnDetails : this.options.returnDetails;\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const {\n      key,\n      namespaces\n    } = this.extractFromKey(keys[keys.length - 1], options);\n    const namespace = namespaces[namespaces.length - 1];\n    const lng = options.lng || this.language;\n    const appendNamespaceToCIMode = options.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n    if (lng && lng.toLowerCase() === 'cimode') {\n      if (appendNamespaceToCIMode) {\n        const nsSeparator = options.nsSeparator || this.options.nsSeparator;\n        if (returnDetails) {\n          return {\n            res: `${namespace}${nsSeparator}${key}`,\n            usedKey: key,\n            exactUsedKey: key,\n            usedLng: lng,\n            usedNS: namespace,\n            usedParams: this.getUsedParamsDetails(options)\n          };\n        }\n        return `${namespace}${nsSeparator}${key}`;\n      }\n      if (returnDetails) {\n        return {\n          res: key,\n          usedKey: key,\n          exactUsedKey: key,\n          usedLng: lng,\n          usedNS: namespace,\n          usedParams: this.getUsedParamsDetails(options)\n        };\n      }\n      return key;\n    }\n    const resolved = this.resolve(keys, options);\n    let res = resolved && resolved.res;\n    const resUsedKey = resolved && resolved.usedKey || key;\n    const resExactUsedKey = resolved && resolved.exactUsedKey || key;\n    const resType = Object.prototype.toString.apply(res);\n    const noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n    const joinArrays = options.joinArrays !== undefined ? options.joinArrays : this.options.joinArrays;\n    const handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n    const handleAsObject = !isString(res) && typeof res !== 'boolean' && typeof res !== 'number';\n    if (handleAsObjectInI18nFormat && res && handleAsObject && noObject.indexOf(resType) < 0 && !(isString(joinArrays) && Array.isArray(res))) {\n      if (!options.returnObjects && !this.options.returnObjects) {\n        if (!this.options.returnedObjectHandler) {\n          this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n        }\n        const r = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, res, {\n          ...options,\n          ns: namespaces\n        }) : `key '${key} (${this.language})' returned an object instead of string.`;\n        if (returnDetails) {\n          resolved.res = r;\n          resolved.usedParams = this.getUsedParamsDetails(options);\n          return resolved;\n        }\n        return r;\n      }\n      if (keySeparator) {\n        const resTypeIsArray = Array.isArray(res);\n        const copy = resTypeIsArray ? [] : {};\n        const newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n        for (const m in res) {\n          if (Object.prototype.hasOwnProperty.call(res, m)) {\n            const deepKey = `${newKeyToUse}${keySeparator}${m}`;\n            copy[m] = this.translate(deepKey, {\n              ...options,\n              ...{\n                joinArrays: false,\n                ns: namespaces\n              }\n            });\n            if (copy[m] === deepKey) copy[m] = res[m];\n          }\n        }\n        res = copy;\n      }\n    } else if (handleAsObjectInI18nFormat && isString(joinArrays) && Array.isArray(res)) {\n      res = res.join(joinArrays);\n      if (res) res = this.extendTranslation(res, keys, options, lastKey);\n    } else {\n      let usedDefault = false;\n      let usedKey = false;\n      const needsPluralHandling = options.count !== undefined && !isString(options.count);\n      const hasDefaultValue = Translator.hasDefaultValue(options);\n      const defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, options) : '';\n      const defaultValueSuffixOrdinalFallback = options.ordinal && needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, {\n        ordinal: false\n      }) : '';\n      const needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0 && this.pluralResolver.shouldUseIntlApi();\n      const defaultValue = needsZeroSuffixLookup && options[`defaultValue${this.options.pluralSeparator}zero`] || options[`defaultValue${defaultValueSuffix}`] || options[`defaultValue${defaultValueSuffixOrdinalFallback}`] || options.defaultValue;\n      if (!this.isValidLookup(res) && hasDefaultValue) {\n        usedDefault = true;\n        res = defaultValue;\n      }\n      if (!this.isValidLookup(res)) {\n        usedKey = true;\n        res = key;\n      }\n      const missingKeyNoValueFallbackToKey = options.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;\n      const resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;\n      const updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n      if (usedKey || usedDefault || updateMissing) {\n        this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);\n        if (keySeparator) {\n          const fk = this.resolve(key, {\n            ...options,\n            keySeparator: false\n          });\n          if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');\n        }\n        let lngs = [];\n        const fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, options.lng || this.language);\n        if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n          for (let i = 0; i < fallbackLngs.length; i++) {\n            lngs.push(fallbackLngs[i]);\n          }\n        } else if (this.options.saveMissingTo === 'all') {\n          lngs = this.languageUtils.toResolveHierarchy(options.lng || this.language);\n        } else {\n          lngs.push(options.lng || this.language);\n        }\n        const send = (l, k, specificDefaultValue) => {\n          const defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;\n          if (this.options.missingKeyHandler) {\n            this.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, options);\n          } else if (this.backendConnector && this.backendConnector.saveMissing) {\n            this.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, options);\n          }\n          this.emit('missingKey', l, namespace, k, res);\n        };\n        if (this.options.saveMissing) {\n          if (this.options.saveMissingPlurals && needsPluralHandling) {\n            lngs.forEach(language => {\n              const suffixes = this.pluralResolver.getSuffixes(language, options);\n              if (needsZeroSuffixLookup && options[`defaultValue${this.options.pluralSeparator}zero`] && suffixes.indexOf(`${this.options.pluralSeparator}zero`) < 0) {\n                suffixes.push(`${this.options.pluralSeparator}zero`);\n              }\n              suffixes.forEach(suffix => {\n                send([language], key + suffix, options[`defaultValue${suffix}`] || defaultValue);\n              });\n            });\n          } else {\n            send(lngs, key, defaultValue);\n          }\n        }\n      }\n      res = this.extendTranslation(res, keys, options, resolved, lastKey);\n      if (usedKey && res === key && this.options.appendNamespaceToMissingKey) res = `${namespace}:${key}`;\n      if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {\n        if (this.options.compatibilityAPI !== 'v1') {\n          res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? `${namespace}:${key}` : key, usedDefault ? res : undefined);\n        } else {\n          res = this.options.parseMissingKeyHandler(res);\n        }\n      }\n    }\n    if (returnDetails) {\n      resolved.res = res;\n      resolved.usedParams = this.getUsedParamsDetails(options);\n      return resolved;\n    }\n    return res;\n  }\n  extendTranslation(res, key, options, resolved, lastKey) {\n    var _this = this;\n    if (this.i18nFormat && this.i18nFormat.parse) {\n      res = this.i18nFormat.parse(res, {\n        ...this.options.interpolation.defaultVariables,\n        ...options\n      }, options.lng || this.language || resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n        resolved\n      });\n    } else if (!options.skipInterpolation) {\n      if (options.interpolation) this.interpolator.init({\n        ...options,\n        ...{\n          interpolation: {\n            ...this.options.interpolation,\n            ...options.interpolation\n          }\n        }\n      });\n      const skipOnVariables = isString(res) && (options && options.interpolation && options.interpolation.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);\n      let nestBef;\n      if (skipOnVariables) {\n        const nb = res.match(this.interpolator.nestingRegexp);\n        nestBef = nb && nb.length;\n      }\n      let data = options.replace && !isString(options.replace) ? options.replace : options;\n      if (this.options.interpolation.defaultVariables) data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n      res = this.interpolator.interpolate(res, data, options.lng || this.language || resolved.usedLng, options);\n      if (skipOnVariables) {\n        const na = res.match(this.interpolator.nestingRegexp);\n        const nestAft = na && na.length;\n        if (nestBef < nestAft) options.nest = false;\n      }\n      if (!options.lng && this.options.compatibilityAPI !== 'v1' && resolved && resolved.res) options.lng = this.language || resolved.usedLng;\n      if (options.nest !== false) res = this.interpolator.nest(res, function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        if (lastKey && lastKey[0] === args[0] && !options.context) {\n          _this.logger.warn(`It seems you are nesting recursively key: ${args[0]} in key: ${key[0]}`);\n          return null;\n        }\n        return _this.translate(...args, key);\n      }, options);\n      if (options.interpolation) this.interpolator.reset();\n    }\n    const postProcess = options.postProcess || this.options.postProcess;\n    const postProcessorNames = isString(postProcess) ? [postProcess] : postProcess;\n    if (res !== undefined && res !== null && postProcessorNames && postProcessorNames.length && options.applyPostProcessor !== false) {\n      res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? {\n        i18nResolved: {\n          ...resolved,\n          usedParams: this.getUsedParamsDetails(options)\n        },\n        ...options\n      } : options, this);\n    }\n    return res;\n  }\n  resolve(keys) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let found;\n    let usedKey;\n    let exactUsedKey;\n    let usedLng;\n    let usedNS;\n    if (isString(keys)) keys = [keys];\n    keys.forEach(k => {\n      if (this.isValidLookup(found)) return;\n      const extracted = this.extractFromKey(k, options);\n      const key = extracted.key;\n      usedKey = key;\n      let namespaces = extracted.namespaces;\n      if (this.options.fallbackNS) namespaces = namespaces.concat(this.options.fallbackNS);\n      const needsPluralHandling = options.count !== undefined && !isString(options.count);\n      const needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0 && this.pluralResolver.shouldUseIntlApi();\n      const needsContextHandling = options.context !== undefined && (isString(options.context) || typeof options.context === 'number') && options.context !== '';\n      const codes = options.lngs ? options.lngs : this.languageUtils.toResolveHierarchy(options.lng || this.language, options.fallbackLng);\n      namespaces.forEach(ns => {\n        if (this.isValidLookup(found)) return;\n        usedNS = ns;\n        if (!checkedLoadedFor[`${codes[0]}-${ns}`] && this.utils && this.utils.hasLoadedNamespace && !this.utils.hasLoadedNamespace(usedNS)) {\n          checkedLoadedFor[`${codes[0]}-${ns}`] = true;\n          this.logger.warn(`key \"${usedKey}\" for languages \"${codes.join(', ')}\" won't get resolved as namespace \"${usedNS}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        }\n        codes.forEach(code => {\n          if (this.isValidLookup(found)) return;\n          usedLng = code;\n          const finalKeys = [key];\n          if (this.i18nFormat && this.i18nFormat.addLookupKeys) {\n            this.i18nFormat.addLookupKeys(finalKeys, key, code, ns, options);\n          } else {\n            let pluralSuffix;\n            if (needsPluralHandling) pluralSuffix = this.pluralResolver.getSuffix(code, options.count, options);\n            const zeroSuffix = `${this.options.pluralSeparator}zero`;\n            const ordinalPrefix = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;\n            if (needsPluralHandling) {\n              finalKeys.push(key + pluralSuffix);\n              if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                finalKeys.push(key + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n              }\n              if (needsZeroSuffixLookup) {\n                finalKeys.push(key + zeroSuffix);\n              }\n            }\n            if (needsContextHandling) {\n              const contextKey = `${key}${this.options.contextSeparator}${options.context}`;\n              finalKeys.push(contextKey);\n              if (needsPluralHandling) {\n                finalKeys.push(contextKey + pluralSuffix);\n                if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                  finalKeys.push(contextKey + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n                }\n                if (needsZeroSuffixLookup) {\n                  finalKeys.push(contextKey + zeroSuffix);\n                }\n              }\n            }\n          }\n          let possibleKey;\n          while (possibleKey = finalKeys.pop()) {\n            if (!this.isValidLookup(found)) {\n              exactUsedKey = possibleKey;\n              found = this.getResource(code, ns, possibleKey, options);\n            }\n          }\n        });\n      });\n    });\n    return {\n      res: found,\n      usedKey,\n      exactUsedKey,\n      usedLng,\n      usedNS\n    };\n  }\n  isValidLookup(res) {\n    return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n  }\n  getResource(code, ns, key) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    if (this.i18nFormat && this.i18nFormat.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n    return this.resourceStore.getResource(code, ns, key, options);\n  }\n  getUsedParamsDetails() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const optionsKeys = ['defaultValue', 'ordinal', 'context', 'replace', 'lng', 'lngs', 'fallbackLng', 'ns', 'keySeparator', 'nsSeparator', 'returnObjects', 'returnDetails', 'joinArrays', 'postProcess', 'interpolation'];\n    const useOptionsReplaceForData = options.replace && !isString(options.replace);\n    let data = useOptionsReplaceForData ? options.replace : options;\n    if (useOptionsReplaceForData && typeof options.count !== 'undefined') {\n      data.count = options.count;\n    }\n    if (this.options.interpolation.defaultVariables) {\n      data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n    }\n    if (!useOptionsReplaceForData) {\n      data = {\n        ...data\n      };\n      for (const key of optionsKeys) {\n        delete data[key];\n      }\n    }\n    return data;\n  }\n  static hasDefaultValue(options) {\n    const prefix = 'defaultValue';\n    for (const option in options) {\n      if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nconst capitalize = string => string.charAt(0).toUpperCase() + string.slice(1);\nclass LanguageUtil {\n  constructor(options) {\n    this.options = options;\n    this.supportedLngs = this.options.supportedLngs || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n  getScriptPartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return null;\n    const p = code.split('-');\n    if (p.length === 2) return null;\n    p.pop();\n    if (p[p.length - 1].toLowerCase() === 'x') return null;\n    return this.formatLanguageCode(p.join('-'));\n  }\n  getLanguagePartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return code;\n    const p = code.split('-');\n    return this.formatLanguageCode(p[0]);\n  }\n  formatLanguageCode(code) {\n    if (isString(code) && code.indexOf('-') > -1) {\n      if (typeof Intl !== 'undefined' && typeof Intl.getCanonicalLocales !== 'undefined') {\n        try {\n          let formattedCode = Intl.getCanonicalLocales(code)[0];\n          if (formattedCode && this.options.lowerCaseLng) {\n            formattedCode = formattedCode.toLowerCase();\n          }\n          if (formattedCode) return formattedCode;\n        } catch (e) {}\n      }\n      const specialCases = ['hans', 'hant', 'latn', 'cyrl', 'cans', 'mong', 'arab'];\n      let p = code.split('-');\n      if (this.options.lowerCaseLng) {\n        p = p.map(part => part.toLowerCase());\n      } else if (p.length === 2) {\n        p[0] = p[0].toLowerCase();\n        p[1] = p[1].toUpperCase();\n        if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n      } else if (p.length === 3) {\n        p[0] = p[0].toLowerCase();\n        if (p[1].length === 2) p[1] = p[1].toUpperCase();\n        if (p[0] !== 'sgn' && p[2].length === 2) p[2] = p[2].toUpperCase();\n        if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n        if (specialCases.indexOf(p[2].toLowerCase()) > -1) p[2] = capitalize(p[2].toLowerCase());\n      }\n      return p.join('-');\n    }\n    return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n  }\n  isSupportedCode(code) {\n    if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n      code = this.getLanguagePartFromCode(code);\n    }\n    return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;\n  }\n  getBestMatchFromCodes(codes) {\n    if (!codes) return null;\n    let found;\n    codes.forEach(code => {\n      if (found) return;\n      const cleanedLng = this.formatLanguageCode(code);\n      if (!this.options.supportedLngs || this.isSupportedCode(cleanedLng)) found = cleanedLng;\n    });\n    if (!found && this.options.supportedLngs) {\n      codes.forEach(code => {\n        if (found) return;\n        const lngOnly = this.getLanguagePartFromCode(code);\n        if (this.isSupportedCode(lngOnly)) return found = lngOnly;\n        found = this.options.supportedLngs.find(supportedLng => {\n          if (supportedLng === lngOnly) return supportedLng;\n          if (supportedLng.indexOf('-') < 0 && lngOnly.indexOf('-') < 0) return;\n          if (supportedLng.indexOf('-') > 0 && lngOnly.indexOf('-') < 0 && supportedLng.substring(0, supportedLng.indexOf('-')) === lngOnly) return supportedLng;\n          if (supportedLng.indexOf(lngOnly) === 0 && lngOnly.length > 1) return supportedLng;\n        });\n      });\n    }\n    if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n    return found;\n  }\n  getFallbackCodes(fallbacks, code) {\n    if (!fallbacks) return [];\n    if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n    if (isString(fallbacks)) fallbacks = [fallbacks];\n    if (Array.isArray(fallbacks)) return fallbacks;\n    if (!code) return fallbacks.default || [];\n    let found = fallbacks[code];\n    if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n    if (!found) found = fallbacks[this.formatLanguageCode(code)];\n    if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n    if (!found) found = fallbacks.default;\n    return found || [];\n  }\n  toResolveHierarchy(code, fallbackCode) {\n    const fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);\n    const codes = [];\n    const addCode = c => {\n      if (!c) return;\n      if (this.isSupportedCode(c)) {\n        codes.push(c);\n      } else {\n        this.logger.warn(`rejecting language code not found in supportedLngs: ${c}`);\n      }\n    };\n    if (isString(code) && (code.indexOf('-') > -1 || code.indexOf('_') > -1)) {\n      if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n      if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n      if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n    } else if (isString(code)) {\n      addCode(this.formatLanguageCode(code));\n    }\n    fallbackCodes.forEach(fc => {\n      if (codes.indexOf(fc) < 0) addCode(this.formatLanguageCode(fc));\n    });\n    return codes;\n  }\n}\n\nlet sets = [{\n  lngs: ['ach', 'ak', 'am', 'arn', 'br', 'fil', 'gun', 'ln', 'mfe', 'mg', 'mi', 'oc', 'pt', 'pt-BR', 'tg', 'tl', 'ti', 'tr', 'uz', 'wa'],\n  nr: [1, 2],\n  fc: 1\n}, {\n  lngs: ['af', 'an', 'ast', 'az', 'bg', 'bn', 'ca', 'da', 'de', 'dev', 'el', 'en', 'eo', 'es', 'et', 'eu', 'fi', 'fo', 'fur', 'fy', 'gl', 'gu', 'ha', 'hi', 'hu', 'hy', 'ia', 'it', 'kk', 'kn', 'ku', 'lb', 'mai', 'ml', 'mn', 'mr', 'nah', 'nap', 'nb', 'ne', 'nl', 'nn', 'no', 'nso', 'pa', 'pap', 'pms', 'ps', 'pt-PT', 'rm', 'sco', 'se', 'si', 'so', 'son', 'sq', 'sv', 'sw', 'ta', 'te', 'tk', 'ur', 'yo'],\n  nr: [1, 2],\n  fc: 2\n}, {\n  lngs: ['ay', 'bo', 'cgg', 'fa', 'ht', 'id', 'ja', 'jbo', 'ka', 'km', 'ko', 'ky', 'lo', 'ms', 'sah', 'su', 'th', 'tt', 'ug', 'vi', 'wo', 'zh'],\n  nr: [1],\n  fc: 3\n}, {\n  lngs: ['be', 'bs', 'cnr', 'dz', 'hr', 'ru', 'sr', 'uk'],\n  nr: [1, 2, 5],\n  fc: 4\n}, {\n  lngs: ['ar'],\n  nr: [0, 1, 2, 3, 11, 100],\n  fc: 5\n}, {\n  lngs: ['cs', 'sk'],\n  nr: [1, 2, 5],\n  fc: 6\n}, {\n  lngs: ['csb', 'pl'],\n  nr: [1, 2, 5],\n  fc: 7\n}, {\n  lngs: ['cy'],\n  nr: [1, 2, 3, 8],\n  fc: 8\n}, {\n  lngs: ['fr'],\n  nr: [1, 2],\n  fc: 9\n}, {\n  lngs: ['ga'],\n  nr: [1, 2, 3, 7, 11],\n  fc: 10\n}, {\n  lngs: ['gd'],\n  nr: [1, 2, 3, 20],\n  fc: 11\n}, {\n  lngs: ['is'],\n  nr: [1, 2],\n  fc: 12\n}, {\n  lngs: ['jv'],\n  nr: [0, 1],\n  fc: 13\n}, {\n  lngs: ['kw'],\n  nr: [1, 2, 3, 4],\n  fc: 14\n}, {\n  lngs: ['lt'],\n  nr: [1, 2, 10],\n  fc: 15\n}, {\n  lngs: ['lv'],\n  nr: [1, 2, 0],\n  fc: 16\n}, {\n  lngs: ['mk'],\n  nr: [1, 2],\n  fc: 17\n}, {\n  lngs: ['mnk'],\n  nr: [0, 1, 2],\n  fc: 18\n}, {\n  lngs: ['mt'],\n  nr: [1, 2, 11, 20],\n  fc: 19\n}, {\n  lngs: ['or'],\n  nr: [2, 1],\n  fc: 2\n}, {\n  lngs: ['ro'],\n  nr: [1, 2, 20],\n  fc: 20\n}, {\n  lngs: ['sl'],\n  nr: [5, 1, 2, 3],\n  fc: 21\n}, {\n  lngs: ['he', 'iw'],\n  nr: [1, 2, 20, 21],\n  fc: 22\n}];\nlet _rulesPluralsTypes = {\n  1: n => Number(n > 1),\n  2: n => Number(n != 1),\n  3: n => 0,\n  4: n => Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2),\n  5: n => Number(n == 0 ? 0 : n == 1 ? 1 : n == 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5),\n  6: n => Number(n == 1 ? 0 : n >= 2 && n <= 4 ? 1 : 2),\n  7: n => Number(n == 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2),\n  8: n => Number(n == 1 ? 0 : n == 2 ? 1 : n != 8 && n != 11 ? 2 : 3),\n  9: n => Number(n >= 2),\n  10: n => Number(n == 1 ? 0 : n == 2 ? 1 : n < 7 ? 2 : n < 11 ? 3 : 4),\n  11: n => Number(n == 1 || n == 11 ? 0 : n == 2 || n == 12 ? 1 : n > 2 && n < 20 ? 2 : 3),\n  12: n => Number(n % 10 != 1 || n % 100 == 11),\n  13: n => Number(n !== 0),\n  14: n => Number(n == 1 ? 0 : n == 2 ? 1 : n == 3 ? 2 : 3),\n  15: n => Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2),\n  16: n => Number(n % 10 == 1 && n % 100 != 11 ? 0 : n !== 0 ? 1 : 2),\n  17: n => Number(n == 1 || n % 10 == 1 && n % 100 != 11 ? 0 : 1),\n  18: n => Number(n == 0 ? 0 : n == 1 ? 1 : 2),\n  19: n => Number(n == 1 ? 0 : n == 0 || n % 100 > 1 && n % 100 < 11 ? 1 : n % 100 > 10 && n % 100 < 20 ? 2 : 3),\n  20: n => Number(n == 1 ? 0 : n == 0 || n % 100 > 0 && n % 100 < 20 ? 1 : 2),\n  21: n => Number(n % 100 == 1 ? 1 : n % 100 == 2 ? 2 : n % 100 == 3 || n % 100 == 4 ? 3 : 0),\n  22: n => Number(n == 1 ? 0 : n == 2 ? 1 : (n < 0 || n > 10) && n % 10 == 0 ? 2 : 3)\n};\nconst nonIntlVersions = ['v1', 'v2', 'v3'];\nconst intlVersions = ['v4'];\nconst suffixesOrder = {\n  zero: 0,\n  one: 1,\n  two: 2,\n  few: 3,\n  many: 4,\n  other: 5\n};\nconst createRules = () => {\n  const rules = {};\n  sets.forEach(set => {\n    set.lngs.forEach(l => {\n      rules[l] = {\n        numbers: set.nr,\n        plurals: _rulesPluralsTypes[set.fc]\n      };\n    });\n  });\n  return rules;\n};\nclass PluralResolver {\n  constructor(languageUtils) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.languageUtils = languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('pluralResolver');\n    if ((!this.options.compatibilityJSON || intlVersions.includes(this.options.compatibilityJSON)) && (typeof Intl === 'undefined' || !Intl.PluralRules)) {\n      this.options.compatibilityJSON = 'v3';\n      this.logger.error('Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling.');\n    }\n    this.rules = createRules();\n    this.pluralRulesCache = {};\n  }\n  addRule(lng, obj) {\n    this.rules[lng] = obj;\n  }\n  clearCache() {\n    this.pluralRulesCache = {};\n  }\n  getRule(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (this.shouldUseIntlApi()) {\n      try {\n        const cleanedCode = getCleanedCode(code === 'dev' ? 'en' : code);\n        const type = options.ordinal ? 'ordinal' : 'cardinal';\n        const cacheKey = JSON.stringify({\n          cleanedCode,\n          type\n        });\n        if (cacheKey in this.pluralRulesCache) {\n          return this.pluralRulesCache[cacheKey];\n        }\n        const rule = new Intl.PluralRules(cleanedCode, {\n          type\n        });\n        this.pluralRulesCache[cacheKey] = rule;\n        return rule;\n      } catch (err) {\n        return;\n      }\n    }\n    return this.rules[code] || this.rules[this.languageUtils.getLanguagePartFromCode(code)];\n  }\n  needsPlural(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const rule = this.getRule(code, options);\n    if (this.shouldUseIntlApi()) {\n      return rule && rule.resolvedOptions().pluralCategories.length > 1;\n    }\n    return rule && rule.numbers.length > 1;\n  }\n  getPluralFormsOfKey(code, key) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return this.getSuffixes(code, options).map(suffix => `${key}${suffix}`);\n  }\n  getSuffixes(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const rule = this.getRule(code, options);\n    if (!rule) {\n      return [];\n    }\n    if (this.shouldUseIntlApi()) {\n      return rule.resolvedOptions().pluralCategories.sort((pluralCategory1, pluralCategory2) => suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2]).map(pluralCategory => `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${pluralCategory}`);\n    }\n    return rule.numbers.map(number => this.getSuffix(code, number, options));\n  }\n  getSuffix(code, count) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const rule = this.getRule(code, options);\n    if (rule) {\n      if (this.shouldUseIntlApi()) {\n        return `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${rule.select(count)}`;\n      }\n      return this.getSuffixRetroCompatible(rule, count);\n    }\n    this.logger.warn(`no plural rule found for: ${code}`);\n    return '';\n  }\n  getSuffixRetroCompatible(rule, count) {\n    const idx = rule.noAbs ? rule.plurals(count) : rule.plurals(Math.abs(count));\n    let suffix = rule.numbers[idx];\n    if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {\n      if (suffix === 2) {\n        suffix = 'plural';\n      } else if (suffix === 1) {\n        suffix = '';\n      }\n    }\n    const returnSuffix = () => this.options.prepend && suffix.toString() ? this.options.prepend + suffix.toString() : suffix.toString();\n    if (this.options.compatibilityJSON === 'v1') {\n      if (suffix === 1) return '';\n      if (typeof suffix === 'number') return `_plural_${suffix.toString()}`;\n      return returnSuffix();\n    } else if (this.options.compatibilityJSON === 'v2') {\n      return returnSuffix();\n    } else if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {\n      return returnSuffix();\n    }\n    return this.options.prepend && idx.toString() ? this.options.prepend + idx.toString() : idx.toString();\n  }\n  shouldUseIntlApi() {\n    return !nonIntlVersions.includes(this.options.compatibilityJSON);\n  }\n}\n\nconst deepFindWithDefaults = function (data, defaultData, key) {\n  let keySeparator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '.';\n  let ignoreJSONStructure = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n  let path = getPathWithDefaults(data, defaultData, key);\n  if (!path && ignoreJSONStructure && isString(key)) {\n    path = deepFind(data, key, keySeparator);\n    if (path === undefined) path = deepFind(defaultData, key, keySeparator);\n  }\n  return path;\n};\nconst regexSafe = val => val.replace(/\\$/g, '$$$$');\nclass Interpolator {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.logger = baseLogger.create('interpolator');\n    this.options = options;\n    this.format = options.interpolation && options.interpolation.format || (value => value);\n    this.init(options);\n  }\n  init() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!options.interpolation) options.interpolation = {\n      escapeValue: true\n    };\n    const {\n      escape: escape$1,\n      escapeValue,\n      useRawValueToEscape,\n      prefix,\n      prefixEscaped,\n      suffix,\n      suffixEscaped,\n      formatSeparator,\n      unescapeSuffix,\n      unescapePrefix,\n      nestingPrefix,\n      nestingPrefixEscaped,\n      nestingSuffix,\n      nestingSuffixEscaped,\n      nestingOptionsSeparator,\n      maxReplaces,\n      alwaysFormat\n    } = options.interpolation;\n    this.escape = escape$1 !== undefined ? escape$1 : escape;\n    this.escapeValue = escapeValue !== undefined ? escapeValue : true;\n    this.useRawValueToEscape = useRawValueToEscape !== undefined ? useRawValueToEscape : false;\n    this.prefix = prefix ? regexEscape(prefix) : prefixEscaped || '{{';\n    this.suffix = suffix ? regexEscape(suffix) : suffixEscaped || '}}';\n    this.formatSeparator = formatSeparator || ',';\n    this.unescapePrefix = unescapeSuffix ? '' : unescapePrefix || '-';\n    this.unescapeSuffix = this.unescapePrefix ? '' : unescapeSuffix || '';\n    this.nestingPrefix = nestingPrefix ? regexEscape(nestingPrefix) : nestingPrefixEscaped || regexEscape('$t(');\n    this.nestingSuffix = nestingSuffix ? regexEscape(nestingSuffix) : nestingSuffixEscaped || regexEscape(')');\n    this.nestingOptionsSeparator = nestingOptionsSeparator || ',';\n    this.maxReplaces = maxReplaces || 1000;\n    this.alwaysFormat = alwaysFormat !== undefined ? alwaysFormat : false;\n    this.resetRegExp();\n  }\n  reset() {\n    if (this.options) this.init(this.options);\n  }\n  resetRegExp() {\n    const getOrResetRegExp = (existingRegExp, pattern) => {\n      if (existingRegExp && existingRegExp.source === pattern) {\n        existingRegExp.lastIndex = 0;\n        return existingRegExp;\n      }\n      return new RegExp(pattern, 'g');\n    };\n    this.regexp = getOrResetRegExp(this.regexp, `${this.prefix}(.+?)${this.suffix}`);\n    this.regexpUnescape = getOrResetRegExp(this.regexpUnescape, `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`);\n    this.nestingRegexp = getOrResetRegExp(this.nestingRegexp, `${this.nestingPrefix}(.+?)${this.nestingSuffix}`);\n  }\n  interpolate(str, data, lng, options) {\n    let match;\n    let value;\n    let replaces;\n    const defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n    const handleFormat = key => {\n      if (key.indexOf(this.formatSeparator) < 0) {\n        const path = deepFindWithDefaults(data, defaultData, key, this.options.keySeparator, this.options.ignoreJSONStructure);\n        return this.alwaysFormat ? this.format(path, undefined, lng, {\n          ...options,\n          ...data,\n          interpolationkey: key\n        }) : path;\n      }\n      const p = key.split(this.formatSeparator);\n      const k = p.shift().trim();\n      const f = p.join(this.formatSeparator).trim();\n      return this.format(deepFindWithDefaults(data, defaultData, k, this.options.keySeparator, this.options.ignoreJSONStructure), f, lng, {\n        ...options,\n        ...data,\n        interpolationkey: k\n      });\n    };\n    this.resetRegExp();\n    const missingInterpolationHandler = options && options.missingInterpolationHandler || this.options.missingInterpolationHandler;\n    const skipOnVariables = options && options.interpolation && options.interpolation.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;\n    const todos = [{\n      regex: this.regexpUnescape,\n      safeValue: val => regexSafe(val)\n    }, {\n      regex: this.regexp,\n      safeValue: val => this.escapeValue ? regexSafe(this.escape(val)) : regexSafe(val)\n    }];\n    todos.forEach(todo => {\n      replaces = 0;\n      while (match = todo.regex.exec(str)) {\n        const matchedVar = match[1].trim();\n        value = handleFormat(matchedVar);\n        if (value === undefined) {\n          if (typeof missingInterpolationHandler === 'function') {\n            const temp = missingInterpolationHandler(str, match, options);\n            value = isString(temp) ? temp : '';\n          } else if (options && Object.prototype.hasOwnProperty.call(options, matchedVar)) {\n            value = '';\n          } else if (skipOnVariables) {\n            value = match[0];\n            continue;\n          } else {\n            this.logger.warn(`missed to pass in variable ${matchedVar} for interpolating ${str}`);\n            value = '';\n          }\n        } else if (!isString(value) && !this.useRawValueToEscape) {\n          value = makeString(value);\n        }\n        const safeValue = todo.safeValue(value);\n        str = str.replace(match[0], safeValue);\n        if (skipOnVariables) {\n          todo.regex.lastIndex += value.length;\n          todo.regex.lastIndex -= match[0].length;\n        } else {\n          todo.regex.lastIndex = 0;\n        }\n        replaces++;\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n    });\n    return str;\n  }\n  nest(str, fc) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let match;\n    let value;\n    let clonedOptions;\n    const handleHasOptions = (key, inheritedOptions) => {\n      const sep = this.nestingOptionsSeparator;\n      if (key.indexOf(sep) < 0) return key;\n      const c = key.split(new RegExp(`${sep}[ ]*{`));\n      let optionsString = `{${c[1]}`;\n      key = c[0];\n      optionsString = this.interpolate(optionsString, clonedOptions);\n      const matchedSingleQuotes = optionsString.match(/'/g);\n      const matchedDoubleQuotes = optionsString.match(/\"/g);\n      if (matchedSingleQuotes && matchedSingleQuotes.length % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) {\n        optionsString = optionsString.replace(/'/g, '\"');\n      }\n      try {\n        clonedOptions = JSON.parse(optionsString);\n        if (inheritedOptions) clonedOptions = {\n          ...inheritedOptions,\n          ...clonedOptions\n        };\n      } catch (e) {\n        this.logger.warn(`failed parsing options string in nesting for key ${key}`, e);\n        return `${key}${sep}${optionsString}`;\n      }\n      if (clonedOptions.defaultValue && clonedOptions.defaultValue.indexOf(this.prefix) > -1) delete clonedOptions.defaultValue;\n      return key;\n    };\n    while (match = this.nestingRegexp.exec(str)) {\n      let formatters = [];\n      clonedOptions = {\n        ...options\n      };\n      clonedOptions = clonedOptions.replace && !isString(clonedOptions.replace) ? clonedOptions.replace : clonedOptions;\n      clonedOptions.applyPostProcessor = false;\n      delete clonedOptions.defaultValue;\n      let doReduce = false;\n      if (match[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(match[1])) {\n        const r = match[1].split(this.formatSeparator).map(elem => elem.trim());\n        match[1] = r.shift();\n        formatters = r;\n        doReduce = true;\n      }\n      value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n      if (value && match[0] === str && !isString(value)) return value;\n      if (!isString(value)) value = makeString(value);\n      if (!value) {\n        this.logger.warn(`missed to resolve ${match[1]} for nesting ${str}`);\n        value = '';\n      }\n      if (doReduce) {\n        value = formatters.reduce((v, f) => this.format(v, f, options.lng, {\n          ...options,\n          interpolationkey: match[1].trim()\n        }), value.trim());\n      }\n      str = str.replace(match[0], value);\n      this.regexp.lastIndex = 0;\n    }\n    return str;\n  }\n}\n\nconst parseFormatStr = formatStr => {\n  let formatName = formatStr.toLowerCase().trim();\n  const formatOptions = {};\n  if (formatStr.indexOf('(') > -1) {\n    const p = formatStr.split('(');\n    formatName = p[0].toLowerCase().trim();\n    const optStr = p[1].substring(0, p[1].length - 1);\n    if (formatName === 'currency' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.currency) formatOptions.currency = optStr.trim();\n    } else if (formatName === 'relativetime' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.range) formatOptions.range = optStr.trim();\n    } else {\n      const opts = optStr.split(';');\n      opts.forEach(opt => {\n        if (opt) {\n          const [key, ...rest] = opt.split(':');\n          const val = rest.join(':').trim().replace(/^'+|'+$/g, '');\n          const trimmedKey = key.trim();\n          if (!formatOptions[trimmedKey]) formatOptions[trimmedKey] = val;\n          if (val === 'false') formatOptions[trimmedKey] = false;\n          if (val === 'true') formatOptions[trimmedKey] = true;\n          if (!isNaN(val)) formatOptions[trimmedKey] = parseInt(val, 10);\n        }\n      });\n    }\n  }\n  return {\n    formatName,\n    formatOptions\n  };\n};\nconst createCachedFormatter = fn => {\n  const cache = {};\n  return (val, lng, options) => {\n    let optForCache = options;\n    if (options && options.interpolationkey && options.formatParams && options.formatParams[options.interpolationkey] && options[options.interpolationkey]) {\n      optForCache = {\n        ...optForCache,\n        [options.interpolationkey]: undefined\n      };\n    }\n    const key = lng + JSON.stringify(optForCache);\n    let formatter = cache[key];\n    if (!formatter) {\n      formatter = fn(getCleanedCode(lng), options);\n      cache[key] = formatter;\n    }\n    return formatter(val);\n  };\n};\nclass Formatter {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.logger = baseLogger.create('formatter');\n    this.options = options;\n    this.formats = {\n      number: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      currency: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt,\n          style: 'currency'\n        });\n        return val => formatter.format(val);\n      }),\n      datetime: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.DateTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      relativetime: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.RelativeTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val, opt.range || 'day');\n      }),\n      list: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.ListFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      })\n    };\n    this.init(options);\n  }\n  init(services) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      interpolation: {}\n    };\n    this.formatSeparator = options.interpolation.formatSeparator || ',';\n  }\n  add(name, fc) {\n    this.formats[name.toLowerCase().trim()] = fc;\n  }\n  addCached(name, fc) {\n    this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc);\n  }\n  format(value, format, lng) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const formats = format.split(this.formatSeparator);\n    if (formats.length > 1 && formats[0].indexOf('(') > 1 && formats[0].indexOf(')') < 0 && formats.find(f => f.indexOf(')') > -1)) {\n      const lastIndex = formats.findIndex(f => f.indexOf(')') > -1);\n      formats[0] = [formats[0], ...formats.splice(1, lastIndex)].join(this.formatSeparator);\n    }\n    const result = formats.reduce((mem, f) => {\n      const {\n        formatName,\n        formatOptions\n      } = parseFormatStr(f);\n      if (this.formats[formatName]) {\n        let formatted = mem;\n        try {\n          const valOptions = options && options.formatParams && options.formatParams[options.interpolationkey] || {};\n          const l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;\n          formatted = this.formats[formatName](mem, l, {\n            ...formatOptions,\n            ...options,\n            ...valOptions\n          });\n        } catch (error) {\n          this.logger.warn(error);\n        }\n        return formatted;\n      } else {\n        this.logger.warn(`there was no format function for ${formatName}`);\n      }\n      return mem;\n    }, value);\n    return result;\n  }\n}\n\nconst removePending = (q, name) => {\n  if (q.pending[name] !== undefined) {\n    delete q.pending[name];\n    q.pendingCount--;\n  }\n};\nclass Connector extends EventEmitter {\n  constructor(backend, store, services) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    super();\n    this.backend = backend;\n    this.store = store;\n    this.services = services;\n    this.languageUtils = services.languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('backendConnector');\n    this.waitingReads = [];\n    this.maxParallelReads = options.maxParallelReads || 10;\n    this.readingCalls = 0;\n    this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;\n    this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;\n    this.state = {};\n    this.queue = [];\n    if (this.backend && this.backend.init) {\n      this.backend.init(services, options.backend, options);\n    }\n  }\n  queueLoad(languages, namespaces, options, callback) {\n    const toLoad = {};\n    const pending = {};\n    const toLoadLanguages = {};\n    const toLoadNamespaces = {};\n    languages.forEach(lng => {\n      let hasAllNamespaces = true;\n      namespaces.forEach(ns => {\n        const name = `${lng}|${ns}`;\n        if (!options.reload && this.store.hasResourceBundle(lng, ns)) {\n          this.state[name] = 2;\n        } else if (this.state[name] < 0) ; else if (this.state[name] === 1) {\n          if (pending[name] === undefined) pending[name] = true;\n        } else {\n          this.state[name] = 1;\n          hasAllNamespaces = false;\n          if (pending[name] === undefined) pending[name] = true;\n          if (toLoad[name] === undefined) toLoad[name] = true;\n          if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;\n        }\n      });\n      if (!hasAllNamespaces) toLoadLanguages[lng] = true;\n    });\n    if (Object.keys(toLoad).length || Object.keys(pending).length) {\n      this.queue.push({\n        pending,\n        pendingCount: Object.keys(pending).length,\n        loaded: {},\n        errors: [],\n        callback\n      });\n    }\n    return {\n      toLoad: Object.keys(toLoad),\n      pending: Object.keys(pending),\n      toLoadLanguages: Object.keys(toLoadLanguages),\n      toLoadNamespaces: Object.keys(toLoadNamespaces)\n    };\n  }\n  loaded(name, err, data) {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    if (err) this.emit('failedLoading', lng, ns, err);\n    if (!err && data) {\n      this.store.addResourceBundle(lng, ns, data, undefined, undefined, {\n        skipCopy: true\n      });\n    }\n    this.state[name] = err ? -1 : 2;\n    if (err && data) this.state[name] = 0;\n    const loaded = {};\n    this.queue.forEach(q => {\n      pushPath(q.loaded, [lng], ns);\n      removePending(q, name);\n      if (err) q.errors.push(err);\n      if (q.pendingCount === 0 && !q.done) {\n        Object.keys(q.loaded).forEach(l => {\n          if (!loaded[l]) loaded[l] = {};\n          const loadedKeys = q.loaded[l];\n          if (loadedKeys.length) {\n            loadedKeys.forEach(n => {\n              if (loaded[l][n] === undefined) loaded[l][n] = true;\n            });\n          }\n        });\n        q.done = true;\n        if (q.errors.length) {\n          q.callback(q.errors);\n        } else {\n          q.callback();\n        }\n      }\n    });\n    this.emit('loaded', loaded);\n    this.queue = this.queue.filter(q => !q.done);\n  }\n  read(lng, ns, fcName) {\n    let tried = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    let wait = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : this.retryTimeout;\n    let callback = arguments.length > 5 ? arguments[5] : undefined;\n    if (!lng.length) return callback(null, {});\n    if (this.readingCalls >= this.maxParallelReads) {\n      this.waitingReads.push({\n        lng,\n        ns,\n        fcName,\n        tried,\n        wait,\n        callback\n      });\n      return;\n    }\n    this.readingCalls++;\n    const resolver = (err, data) => {\n      this.readingCalls--;\n      if (this.waitingReads.length > 0) {\n        const next = this.waitingReads.shift();\n        this.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);\n      }\n      if (err && data && tried < this.maxRetries) {\n        setTimeout(() => {\n          this.read.call(this, lng, ns, fcName, tried + 1, wait * 2, callback);\n        }, wait);\n        return;\n      }\n      callback(err, data);\n    };\n    const fc = this.backend[fcName].bind(this.backend);\n    if (fc.length === 2) {\n      try {\n        const r = fc(lng, ns);\n        if (r && typeof r.then === 'function') {\n          r.then(data => resolver(null, data)).catch(resolver);\n        } else {\n          resolver(null, r);\n        }\n      } catch (err) {\n        resolver(err);\n      }\n      return;\n    }\n    return fc(lng, ns, resolver);\n  }\n  prepareLoading(languages, namespaces) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let callback = arguments.length > 3 ? arguments[3] : undefined;\n    if (!this.backend) {\n      this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n      return callback && callback();\n    }\n    if (isString(languages)) languages = this.languageUtils.toResolveHierarchy(languages);\n    if (isString(namespaces)) namespaces = [namespaces];\n    const toLoad = this.queueLoad(languages, namespaces, options, callback);\n    if (!toLoad.toLoad.length) {\n      if (!toLoad.pending.length) callback();\n      return null;\n    }\n    toLoad.toLoad.forEach(name => {\n      this.loadOne(name);\n    });\n  }\n  load(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {}, callback);\n  }\n  reload(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {\n      reload: true\n    }, callback);\n  }\n  loadOne(name) {\n    let prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    this.read(lng, ns, 'read', undefined, undefined, (err, data) => {\n      if (err) this.logger.warn(`${prefix}loading namespace ${ns} for language ${lng} failed`, err);\n      if (!err && data) this.logger.log(`${prefix}loaded namespace ${ns} for language ${lng}`, data);\n      this.loaded(name, err, data);\n    });\n  }\n  saveMissing(languages, namespace, key, fallbackValue, isUpdate) {\n    let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n    let clb = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : () => {};\n    if (this.services.utils && this.services.utils.hasLoadedNamespace && !this.services.utils.hasLoadedNamespace(namespace)) {\n      this.logger.warn(`did not save key \"${key}\" as the namespace \"${namespace}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n      return;\n    }\n    if (key === undefined || key === null || key === '') return;\n    if (this.backend && this.backend.create) {\n      const opts = {\n        ...options,\n        isUpdate\n      };\n      const fc = this.backend.create.bind(this.backend);\n      if (fc.length < 6) {\n        try {\n          let r;\n          if (fc.length === 5) {\n            r = fc(languages, namespace, key, fallbackValue, opts);\n          } else {\n            r = fc(languages, namespace, key, fallbackValue);\n          }\n          if (r && typeof r.then === 'function') {\n            r.then(data => clb(null, data)).catch(clb);\n          } else {\n            clb(null, r);\n          }\n        } catch (err) {\n          clb(err);\n        }\n      } else {\n        fc(languages, namespace, key, fallbackValue, clb, opts);\n      }\n    }\n    if (!languages || !languages[0]) return;\n    this.store.addResource(languages[0], namespace, key, fallbackValue);\n  }\n}\n\nconst get = () => ({\n  debug: false,\n  initImmediate: true,\n  ns: ['translation'],\n  defaultNS: ['translation'],\n  fallbackLng: ['dev'],\n  fallbackNS: false,\n  supportedLngs: false,\n  nonExplicitSupportedLngs: false,\n  load: 'all',\n  preload: false,\n  simplifyPluralSuffix: true,\n  keySeparator: '.',\n  nsSeparator: ':',\n  pluralSeparator: '_',\n  contextSeparator: '_',\n  partialBundledLanguages: false,\n  saveMissing: false,\n  updateMissing: false,\n  saveMissingTo: 'fallback',\n  saveMissingPlurals: true,\n  missingKeyHandler: false,\n  missingInterpolationHandler: false,\n  postProcess: false,\n  postProcessPassResolved: false,\n  returnNull: false,\n  returnEmptyString: true,\n  returnObjects: false,\n  joinArrays: false,\n  returnedObjectHandler: false,\n  parseMissingKeyHandler: false,\n  appendNamespaceToMissingKey: false,\n  appendNamespaceToCIMode: false,\n  overloadTranslationOptionHandler: args => {\n    let ret = {};\n    if (typeof args[1] === 'object') ret = args[1];\n    if (isString(args[1])) ret.defaultValue = args[1];\n    if (isString(args[2])) ret.tDescription = args[2];\n    if (typeof args[2] === 'object' || typeof args[3] === 'object') {\n      const options = args[3] || args[2];\n      Object.keys(options).forEach(key => {\n        ret[key] = options[key];\n      });\n    }\n    return ret;\n  },\n  interpolation: {\n    escapeValue: true,\n    format: value => value,\n    prefix: '{{',\n    suffix: '}}',\n    formatSeparator: ',',\n    unescapePrefix: '-',\n    nestingPrefix: '$t(',\n    nestingSuffix: ')',\n    nestingOptionsSeparator: ',',\n    maxReplaces: 1000,\n    skipOnVariables: true\n  }\n});\nconst transformOptions = options => {\n  if (isString(options.ns)) options.ns = [options.ns];\n  if (isString(options.fallbackLng)) options.fallbackLng = [options.fallbackLng];\n  if (isString(options.fallbackNS)) options.fallbackNS = [options.fallbackNS];\n  if (options.supportedLngs && options.supportedLngs.indexOf('cimode') < 0) {\n    options.supportedLngs = options.supportedLngs.concat(['cimode']);\n  }\n  return options;\n};\n\nconst noop = () => {};\nconst bindMemberFunctions = inst => {\n  const mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));\n  mems.forEach(mem => {\n    if (typeof inst[mem] === 'function') {\n      inst[mem] = inst[mem].bind(inst);\n    }\n  });\n};\nclass I18n extends EventEmitter {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    super();\n    this.options = transformOptions(options);\n    this.services = {};\n    this.logger = baseLogger;\n    this.modules = {\n      external: []\n    };\n    bindMemberFunctions(this);\n    if (callback && !this.isInitialized && !options.isClone) {\n      if (!this.options.initImmediate) {\n        this.init(options, callback);\n        return this;\n      }\n      setTimeout(() => {\n        this.init(options, callback);\n      }, 0);\n    }\n  }\n  init() {\n    var _this = this;\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    this.isInitializing = true;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (!options.defaultNS && options.defaultNS !== false && options.ns) {\n      if (isString(options.ns)) {\n        options.defaultNS = options.ns;\n      } else if (options.ns.indexOf('translation') < 0) {\n        options.defaultNS = options.ns[0];\n      }\n    }\n    const defOpts = get();\n    this.options = {\n      ...defOpts,\n      ...this.options,\n      ...transformOptions(options)\n    };\n    if (this.options.compatibilityAPI !== 'v1') {\n      this.options.interpolation = {\n        ...defOpts.interpolation,\n        ...this.options.interpolation\n      };\n    }\n    if (options.keySeparator !== undefined) {\n      this.options.userDefinedKeySeparator = options.keySeparator;\n    }\n    if (options.nsSeparator !== undefined) {\n      this.options.userDefinedNsSeparator = options.nsSeparator;\n    }\n    const createClassOnDemand = ClassOrObject => {\n      if (!ClassOrObject) return null;\n      if (typeof ClassOrObject === 'function') return new ClassOrObject();\n      return ClassOrObject;\n    };\n    if (!this.options.isClone) {\n      if (this.modules.logger) {\n        baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n      } else {\n        baseLogger.init(null, this.options);\n      }\n      let formatter;\n      if (this.modules.formatter) {\n        formatter = this.modules.formatter;\n      } else if (typeof Intl !== 'undefined') {\n        formatter = Formatter;\n      }\n      const lu = new LanguageUtil(this.options);\n      this.store = new ResourceStore(this.options.resources, this.options);\n      const s = this.services;\n      s.logger = baseLogger;\n      s.resourceStore = this.store;\n      s.languageUtils = lu;\n      s.pluralResolver = new PluralResolver(lu, {\n        prepend: this.options.pluralSeparator,\n        compatibilityJSON: this.options.compatibilityJSON,\n        simplifyPluralSuffix: this.options.simplifyPluralSuffix\n      });\n      if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {\n        s.formatter = createClassOnDemand(formatter);\n        s.formatter.init(s, this.options);\n        this.options.interpolation.format = s.formatter.format.bind(s.formatter);\n      }\n      s.interpolator = new Interpolator(this.options);\n      s.utils = {\n        hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n      };\n      s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n      s.backendConnector.on('*', function (event) {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        _this.emit(event, ...args);\n      });\n      if (this.modules.languageDetector) {\n        s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n        if (s.languageDetector.init) s.languageDetector.init(s, this.options.detection, this.options);\n      }\n      if (this.modules.i18nFormat) {\n        s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n        if (s.i18nFormat.init) s.i18nFormat.init(this);\n      }\n      this.translator = new Translator(this.services, this.options);\n      this.translator.on('*', function (event) {\n        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n        _this.emit(event, ...args);\n      });\n      this.modules.external.forEach(m => {\n        if (m.init) m.init(this);\n      });\n    }\n    this.format = this.options.interpolation.format;\n    if (!callback) callback = noop;\n    if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n      const codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n      if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];\n    }\n    if (!this.services.languageDetector && !this.options.lng) {\n      this.logger.warn('init: no languageDetector is used and no lng is defined');\n    }\n    const storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n    storeApi.forEach(fcName => {\n      this[fcName] = function () {\n        return _this.store[fcName](...arguments);\n      };\n    });\n    const storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];\n    storeApiChained.forEach(fcName => {\n      this[fcName] = function () {\n        _this.store[fcName](...arguments);\n        return _this;\n      };\n    });\n    const deferred = defer();\n    const load = () => {\n      const finish = (err, t) => {\n        this.isInitializing = false;\n        if (this.isInitialized && !this.initializedStoreOnce) this.logger.warn('init: i18next is already initialized. You should call init just once!');\n        this.isInitialized = true;\n        if (!this.options.isClone) this.logger.log('initialized', this.options);\n        this.emit('initialized', this.options);\n        deferred.resolve(t);\n        callback(err, t);\n      };\n      if (this.languages && this.options.compatibilityAPI !== 'v1' && !this.isInitialized) return finish(null, this.t.bind(this));\n      this.changeLanguage(this.options.lng, finish);\n    };\n    if (this.options.resources || !this.options.initImmediate) {\n      load();\n    } else {\n      setTimeout(load, 0);\n    }\n    return deferred;\n  }\n  loadResources(language) {\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n    let usedCallback = callback;\n    const usedLng = isString(language) ? language : this.language;\n    if (typeof language === 'function') usedCallback = language;\n    if (!this.options.resources || this.options.partialBundledLanguages) {\n      if (usedLng && usedLng.toLowerCase() === 'cimode' && (!this.options.preload || this.options.preload.length === 0)) return usedCallback();\n      const toLoad = [];\n      const append = lng => {\n        if (!lng) return;\n        if (lng === 'cimode') return;\n        const lngs = this.services.languageUtils.toResolveHierarchy(lng);\n        lngs.forEach(l => {\n          if (l === 'cimode') return;\n          if (toLoad.indexOf(l) < 0) toLoad.push(l);\n        });\n      };\n      if (!usedLng) {\n        const fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        fallbacks.forEach(l => append(l));\n      } else {\n        append(usedLng);\n      }\n      if (this.options.preload) {\n        this.options.preload.forEach(l => append(l));\n      }\n      this.services.backendConnector.load(toLoad, this.options.ns, e => {\n        if (!e && !this.resolvedLanguage && this.language) this.setResolvedLanguage(this.language);\n        usedCallback(e);\n      });\n    } else {\n      usedCallback(null);\n    }\n  }\n  reloadResources(lngs, ns, callback) {\n    const deferred = defer();\n    if (typeof lngs === 'function') {\n      callback = lngs;\n      lngs = undefined;\n    }\n    if (typeof ns === 'function') {\n      callback = ns;\n      ns = undefined;\n    }\n    if (!lngs) lngs = this.languages;\n    if (!ns) ns = this.options.ns;\n    if (!callback) callback = noop;\n    this.services.backendConnector.reload(lngs, ns, err => {\n      deferred.resolve();\n      callback(err);\n    });\n    return deferred;\n  }\n  use(module) {\n    if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n    if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n    if (module.type === 'backend') {\n      this.modules.backend = module;\n    }\n    if (module.type === 'logger' || module.log && module.warn && module.error) {\n      this.modules.logger = module;\n    }\n    if (module.type === 'languageDetector') {\n      this.modules.languageDetector = module;\n    }\n    if (module.type === 'i18nFormat') {\n      this.modules.i18nFormat = module;\n    }\n    if (module.type === 'postProcessor') {\n      postProcessor.addPostProcessor(module);\n    }\n    if (module.type === 'formatter') {\n      this.modules.formatter = module;\n    }\n    if (module.type === '3rdParty') {\n      this.modules.external.push(module);\n    }\n    return this;\n  }\n  setResolvedLanguage(l) {\n    if (!l || !this.languages) return;\n    if (['cimode', 'dev'].indexOf(l) > -1) return;\n    for (let li = 0; li < this.languages.length; li++) {\n      const lngInLngs = this.languages[li];\n      if (['cimode', 'dev'].indexOf(lngInLngs) > -1) continue;\n      if (this.store.hasLanguageSomeTranslations(lngInLngs)) {\n        this.resolvedLanguage = lngInLngs;\n        break;\n      }\n    }\n  }\n  changeLanguage(lng, callback) {\n    var _this2 = this;\n    this.isLanguageChangingTo = lng;\n    const deferred = defer();\n    this.emit('languageChanging', lng);\n    const setLngProps = l => {\n      this.language = l;\n      this.languages = this.services.languageUtils.toResolveHierarchy(l);\n      this.resolvedLanguage = undefined;\n      this.setResolvedLanguage(l);\n    };\n    const done = (err, l) => {\n      if (l) {\n        setLngProps(l);\n        this.translator.changeLanguage(l);\n        this.isLanguageChangingTo = undefined;\n        this.emit('languageChanged', l);\n        this.logger.log('languageChanged', l);\n      } else {\n        this.isLanguageChangingTo = undefined;\n      }\n      deferred.resolve(function () {\n        return _this2.t(...arguments);\n      });\n      if (callback) callback(err, function () {\n        return _this2.t(...arguments);\n      });\n    };\n    const setLng = lngs => {\n      if (!lng && !lngs && this.services.languageDetector) lngs = [];\n      const l = isString(lngs) ? lngs : this.services.languageUtils.getBestMatchFromCodes(lngs);\n      if (l) {\n        if (!this.language) {\n          setLngProps(l);\n        }\n        if (!this.translator.language) this.translator.changeLanguage(l);\n        if (this.services.languageDetector && this.services.languageDetector.cacheUserLanguage) this.services.languageDetector.cacheUserLanguage(l);\n      }\n      this.loadResources(l, err => {\n        done(err, l);\n      });\n    };\n    if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n      setLng(this.services.languageDetector.detect());\n    } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n      if (this.services.languageDetector.detect.length === 0) {\n        this.services.languageDetector.detect().then(setLng);\n      } else {\n        this.services.languageDetector.detect(setLng);\n      }\n    } else {\n      setLng(lng);\n    }\n    return deferred;\n  }\n  getFixedT(lng, ns, keyPrefix) {\n    var _this3 = this;\n    const fixedT = function (key, opts) {\n      let options;\n      if (typeof opts !== 'object') {\n        for (var _len3 = arguments.length, rest = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n          rest[_key3 - 2] = arguments[_key3];\n        }\n        options = _this3.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n      } else {\n        options = {\n          ...opts\n        };\n      }\n      options.lng = options.lng || fixedT.lng;\n      options.lngs = options.lngs || fixedT.lngs;\n      options.ns = options.ns || fixedT.ns;\n      if (options.keyPrefix !== '') options.keyPrefix = options.keyPrefix || keyPrefix || fixedT.keyPrefix;\n      const keySeparator = _this3.options.keySeparator || '.';\n      let resultKey;\n      if (options.keyPrefix && Array.isArray(key)) {\n        resultKey = key.map(k => `${options.keyPrefix}${keySeparator}${k}`);\n      } else {\n        resultKey = options.keyPrefix ? `${options.keyPrefix}${keySeparator}${key}` : key;\n      }\n      return _this3.t(resultKey, options);\n    };\n    if (isString(lng)) {\n      fixedT.lng = lng;\n    } else {\n      fixedT.lngs = lng;\n    }\n    fixedT.ns = ns;\n    fixedT.keyPrefix = keyPrefix;\n    return fixedT;\n  }\n  t() {\n    return this.translator && this.translator.translate(...arguments);\n  }\n  exists() {\n    return this.translator && this.translator.exists(...arguments);\n  }\n  setDefaultNamespace(ns) {\n    this.options.defaultNS = ns;\n  }\n  hasLoadedNamespace(ns) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!this.isInitialized) {\n      this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n      return false;\n    }\n    if (!this.languages || !this.languages.length) {\n      this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n      return false;\n    }\n    const lng = options.lng || this.resolvedLanguage || this.languages[0];\n    const fallbackLng = this.options ? this.options.fallbackLng : false;\n    const lastLng = this.languages[this.languages.length - 1];\n    if (lng.toLowerCase() === 'cimode') return true;\n    const loadNotPending = (l, n) => {\n      const loadState = this.services.backendConnector.state[`${l}|${n}`];\n      return loadState === -1 || loadState === 0 || loadState === 2;\n    };\n    if (options.precheck) {\n      const preResult = options.precheck(this, loadNotPending);\n      if (preResult !== undefined) return preResult;\n    }\n    if (this.hasResourceBundle(lng, ns)) return true;\n    if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages) return true;\n    if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n    return false;\n  }\n  loadNamespaces(ns, callback) {\n    const deferred = defer();\n    if (!this.options.ns) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    if (isString(ns)) ns = [ns];\n    ns.forEach(n => {\n      if (this.options.ns.indexOf(n) < 0) this.options.ns.push(n);\n    });\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  loadLanguages(lngs, callback) {\n    const deferred = defer();\n    if (isString(lngs)) lngs = [lngs];\n    const preloaded = this.options.preload || [];\n    const newLngs = lngs.filter(lng => preloaded.indexOf(lng) < 0 && this.services.languageUtils.isSupportedCode(lng));\n    if (!newLngs.length) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    this.options.preload = preloaded.concat(newLngs);\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  dir(lng) {\n    if (!lng) lng = this.resolvedLanguage || (this.languages && this.languages.length > 0 ? this.languages[0] : this.language);\n    if (!lng) return 'rtl';\n    const rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam', 'ckb'];\n    const languageUtils = this.services && this.services.languageUtils || new LanguageUtil(get());\n    return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf('-arab') > 1 ? 'rtl' : 'ltr';\n  }\n  static createInstance() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    return new I18n(options, callback);\n  }\n  cloneInstance() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n    const forkResourceStore = options.forkResourceStore;\n    if (forkResourceStore) delete options.forkResourceStore;\n    const mergedOptions = {\n      ...this.options,\n      ...options,\n      ...{\n        isClone: true\n      }\n    };\n    const clone = new I18n(mergedOptions);\n    if (options.debug !== undefined || options.prefix !== undefined) {\n      clone.logger = clone.logger.clone(options);\n    }\n    const membersToCopy = ['store', 'services', 'language'];\n    membersToCopy.forEach(m => {\n      clone[m] = this[m];\n    });\n    clone.services = {\n      ...this.services\n    };\n    clone.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    if (forkResourceStore) {\n      clone.store = new ResourceStore(this.store.data, mergedOptions);\n      clone.services.resourceStore = clone.store;\n    }\n    clone.translator = new Translator(clone.services, mergedOptions);\n    clone.translator.on('*', function (event) {\n      for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n        args[_key4 - 1] = arguments[_key4];\n      }\n      clone.emit(event, ...args);\n    });\n    clone.init(mergedOptions, callback);\n    clone.translator.options = mergedOptions;\n    clone.translator.backendConnector.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    return clone;\n  }\n  toJSON() {\n    return {\n      options: this.options,\n      store: this.store,\n      language: this.language,\n      languages: this.languages,\n      resolvedLanguage: this.resolvedLanguage\n    };\n  }\n}\nconst instance = I18n.createInstance();\ninstance.createInstance = I18n.createInstance;\n\nconst createInstance = instance.createInstance;\nconst dir = instance.dir;\nconst init = instance.init;\nconst loadResources = instance.loadResources;\nconst reloadResources = instance.reloadResources;\nconst use = instance.use;\nconst changeLanguage = instance.changeLanguage;\nconst getFixedT = instance.getFixedT;\nconst t = instance.t;\nconst exists = instance.exists;\nconst setDefaultNamespace = instance.setDefaultNamespace;\nconst hasLoadedNamespace = instance.hasLoadedNamespace;\nconst loadNamespaces = instance.loadNamespaces;\nconst loadLanguages = instance.loadLanguages;\n\nexport { changeLanguage, createInstance, instance as default, dir, exists, getFixedT, hasLoadedNamespace, init, loadLanguages, loadNamespaces, loadResources, reloadResources, setDefaultNamespace, t, use };\n", "import { createContext, PropsWithChildren, useContext } from 'react';\nimport { Call } from '@stream-io/video-client';\n\nconst StreamCallContext = createContext<Call | undefined>(undefined);\n\n/**\n * The props for the StreamCallProvider component.\n */\nexport interface StreamCallProviderProps {\n  call?: Call;\n}\n\n/**\n * A provider for the call object.\n */\nexport const StreamCallProvider = (\n  props: PropsWithChildren<StreamCallProviderProps>,\n) => {\n  const { call, children } = props;\n  return (\n    <StreamCallContext.Provider value={call}>\n      {children}\n    </StreamCallContext.Provider>\n  );\n};\n\n/**\n * A hook to get the call object from the closest provider.\n */\nexport const useCall = () => {\n  return useContext(StreamCallContext);\n};\n", "import { TranslationsMap, TranslationsRegistry } from './types';\n\nexport const mapToRegistry = (\n  translationsMap: TranslationsMap,\n  namespace: string,\n) =>\n  Object.entries(translationsMap).reduce((acc, [lng, translations]) => {\n    acc[lng] = { [namespace]: translations };\n    return acc;\n  }, {} as TranslationsRegistry);\n", "import i18next from 'i18next';\nimport { mapToRegistry } from './utils';\nimport {\n  TranslationLanguage,\n  TranslationSheet,\n  TranslationsMap,\n  TranslatorFunction,\n} from './types';\n\nexport const DEFAULT_LANGUAGE = 'en';\nexport const DEFAULT_NAMESPACE = 'stream-video';\nconst DEFAULT_CONFIG = {\n  debug: false,\n  currentLanguage: DEFAULT_LANGUAGE,\n  fallbackLanguage: false,\n} as const;\n\nconst DEFAULT_TRANSLATIONS_REGISTRY = mapToRegistry({}, DEFAULT_NAMESPACE);\n\nexport const defaultTranslationFunction = (key: string) => key;\n\nexport type StreamI18nConstructor = {\n  /** Language into which the provided strings are translated */\n  currentLanguage?: TranslationLanguage;\n  /** Fallback language which will be used if no translation is found for current language */\n  fallbackLanguage?: TranslationLanguage;\n  /** Logs info level to console output. Helps find issues with loading not working. */\n  debug?: boolean;\n  /** Custom translations that will be merged with the defaults provided by the library. */\n  translationsOverrides?: TranslationsMap;\n};\n\nexport class StreamI18n {\n  /** Exposed i18n instance from the i18next library */\n  i18nInstance;\n  /** Translator function that converts the provided string into its equivalent in the current language. */\n  t: TranslatorFunction = defaultTranslationFunction;\n  /** Simple logger function */\n  constructor(options: StreamI18nConstructor = {}) {\n    const {\n      debug = DEFAULT_CONFIG.debug,\n      currentLanguage = DEFAULT_CONFIG.currentLanguage,\n      fallbackLanguage = DEFAULT_CONFIG.fallbackLanguage,\n      translationsOverrides,\n    } = options;\n\n    this.i18nInstance = i18next.createInstance({\n      debug,\n      defaultNS: DEFAULT_NAMESPACE,\n      fallbackLng: fallbackLanguage,\n      interpolation: { escapeValue: false },\n      keySeparator: false,\n      lng: currentLanguage,\n      nsSeparator: false,\n      parseMissingKeyHandler: (key) => {\n        return key;\n      },\n      resources: DEFAULT_TRANSLATIONS_REGISTRY,\n    });\n\n    if (translationsOverrides) {\n      this.i18nInstance.on('initialized', () => {\n        Object.entries(translationsOverrides).forEach(([lng, translations]) => {\n          this.registerTranslationsForLanguage({ lng, translations });\n        });\n      });\n    }\n  }\n\n  get currentLanguage() {\n    this._checkIsInitialized();\n    return this.i18nInstance.language;\n  }\n\n  get isInitialized() {\n    return this.i18nInstance.isInitialized;\n  }\n\n  init = async () => {\n    try {\n      this.t = await this.i18nInstance.init();\n    } catch (e) {\n      console.error(`Failed to initialize translations: ${JSON.stringify(e)}`);\n    }\n    return this;\n  };\n\n  changeLanguage = async (\n    language?: TranslationLanguage,\n    onChange?: (language: TranslationLanguage) => void,\n  ) => {\n    if (!this._checkIsInitialized()) return;\n    // i18next detects the language, if none provided, but it is better\n    // to show this detection here explicitly\n    const browserLanguage =\n      typeof window !== 'undefined' && window.navigator\n        ? window.navigator.language\n        : undefined;\n    await this.i18nInstance.changeLanguage(language || browserLanguage);\n    onChange?.(this.currentLanguage);\n  };\n\n  registerTranslationsForLanguage = ({\n    lng,\n    translations,\n  }: {\n    lng: TranslationLanguage;\n    translations: TranslationSheet;\n  }) => {\n    if (!this._checkIsInitialized()) return;\n    this.i18nInstance.addResourceBundle(\n      lng,\n      DEFAULT_NAMESPACE,\n      translations,\n      true,\n      true,\n    );\n  };\n\n  private _checkIsInitialized = () => {\n    if (!this.i18nInstance.isInitialized) {\n      console.warn(\n        'I18n instance is not initialized. Call yourStreamI18nInstance.init().',\n      );\n    }\n    return this.i18nInstance.isInitialized;\n  };\n}\n", "import {\n  createContext,\n  PropsWithChildren,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport {\n  defaultTranslationFunction,\n  StreamI18n,\n  TranslationsMap,\n} from '../i18n';\n\ntype StreamI18nContextValue = {\n  t: StreamI18n['t'];\n  i18n?: StreamI18n;\n};\n\nconst StreamI18nContext = createContext<StreamI18nContextValue>({\n  t: defaultTranslationFunction,\n});\n\ntype CreateI18nParams = {\n  i18nInstance?: StreamI18n;\n  language?: string;\n  fallbackLanguage?: string;\n  translationsOverrides?: TranslationsMap;\n};\n\nexport type StreamI18nProviderProps = CreateI18nParams;\n\nexport const StreamI18nProvider = ({\n  children,\n  ...createI18nParams\n}: PropsWithChildren<StreamI18nProviderProps>) => {\n  const { i18n, t } = useCreateI18n(createI18nParams);\n\n  return (\n    <StreamI18nContext.Provider value={{ t, i18n }}>\n      {children}\n    </StreamI18nContext.Provider>\n  );\n};\n\nexport const useCreateI18n = ({\n  i18nInstance,\n  language,\n  fallbackLanguage,\n  translationsOverrides,\n}: CreateI18nParams) => {\n  const [i18n] = useState(\n    () =>\n      i18nInstance ||\n      new StreamI18n({\n        currentLanguage: language,\n        fallbackLanguage,\n        translationsOverrides,\n      }),\n  );\n  const [t, setTranslationFn] = useState<StreamI18n['t']>(\n    () => defaultTranslationFunction,\n  );\n\n  useEffect(() => {\n    const { isInitialized } = i18n;\n    if (!isInitialized) {\n      i18n.init().then((_i18n) => setTranslationFn(() => _i18n.i18nInstance.t));\n      return;\n    }\n    if (language && i18n?.currentLanguage !== language) {\n      i18n.changeLanguage(language).catch((err) => {\n        console.log('Error while changing language', err);\n      });\n    }\n  }, [i18n, i18nInstance, language, translationsOverrides]);\n\n  return { i18n, t };\n};\n\nexport const useI18n = () => useContext(StreamI18nContext);\n", "import { createContext, PropsWithChildren, useContext } from 'react';\nimport { StreamVideoClient } from '@stream-io/video-client';\nimport {\n  StreamI18nProvider,\n  StreamI18nProviderProps,\n} from './StreamI18nContext';\n\nconst StreamVideoContext = createContext<StreamVideoClient | undefined>(\n  undefined,\n);\n\n/**\n * Exclude types from documentation site, but we should still add doc comments\n * @internal\n */\nexport type StreamVideoProps = StreamI18nProviderProps & {\n  client: StreamVideoClient;\n};\n\n/**\n * StreamVideo is a provider component which should be used to wrap the entire application.\n * It provides the client object to all children components and initializes the i18n instance.\n *  @param PropsWithChildren<StreamVideoProps>\n *  @category Client State\n */\nexport const StreamVideoProvider = ({\n  children,\n  client,\n  i18nInstance,\n  language,\n  translationsOverrides,\n}: PropsWithChildren<StreamVideoProps>) => {\n  return (\n    <StreamVideoContext.Provider value={client}>\n      <StreamI18nProvider\n        i18nInstance={i18nInstance}\n        language={language}\n        translationsOverrides={translationsOverrides}\n      >\n        {children}\n      </StreamI18nProvider>\n    </StreamVideoContext.Provider>\n  );\n};\n\n/**\n *\n * @returns\n *\n * @category Client State\n */\nexport const useStreamVideoClient = () => {\n  return useContext(StreamVideoContext);\n};\n", "import type { Observable } from 'rxjs';\nimport { useEffect, useState } from 'react';\nimport { RxUtils } from '@stream-io/video-client';\n\n/**\n * Utility hook which provides the current value of the given observable.\n * @internal\n *\n * @param observable$ the observable to read data from.\n * @param defaultValue a default value. Used when the observable data can't be read or emits an error.\n */\nexport const useObservableValue = <T>(\n  observable$: Observable<T>,\n  defaultValue?: T,\n) => {\n  const [value, setValue] = useState<T>(() => {\n    try {\n      return RxUtils.getCurrentValue(observable$);\n    } catch (err) {\n      if (typeof defaultValue === 'undefined') throw err;\n      return defaultValue;\n    }\n  });\n\n  useEffect(() => {\n    const subscription = observable$.subscribe({\n      next: setValue,\n      error: (err) => {\n        console.log('An error occurred while reading an observable', err);\n        if (defaultValue) setValue(defaultValue);\n      },\n    });\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [defaultValue, observable$]);\n\n  return value;\n};\n", "/**\n * Checks whether we are using React Native\n */\nexport const isReactNative = () => {\n  if (typeof navigator === 'undefined') return false;\n  return navigator.product?.toLowerCase() === 'reactnative';\n};\n", "import { useMemo } from 'react';\nimport {\n  Call,\n  CallIngressResponse,\n  CallSessionResponse,\n  CallSettingsResponse,\n  CallState,\n  CallStatsReport,\n  Comparator,\n  EgressResponse,\n  MemberResponse,\n  OwnCapability,\n  StreamVideoParticipant,\n  UserResponse,\n} from '@stream-io/video-client';\nimport { useCall } from '../contexts';\nimport { useObservableValue } from './useObservableValue';\nimport { isReactNative } from '../helpers/platforms';\n\n// kind-of memoized, used as a default value\nconst EMPTY_DEVICES_ARRAY = Object.freeze([]) as unknown as MediaDeviceInfo[];\n\n/**\n * Utility hook, which provides the current call's state.\n *\n * @category Call State\n */\nexport const useCallState = () => {\n  const call = useCall();\n  // return an empty and unlinked CallState object if there is no call in the provider\n  // this ensures that the hooks always return a value and many null checks can be avoided\n  if (!call) {\n    const message =\n      'You are using useCallState() outside a Call context. ' +\n      'Please wrap your component in <StreamCall /> and provide a \"call\" instance.';\n    console.warn(message);\n    return new CallState();\n  }\n  return call.state;\n};\n\n/**\n * Utility hook which provides information whether the current call is being recorded. It will return `true` if the call is being recorded.\n *\n * @category Call State\n */\nexport const useIsCallRecordingInProgress = (): boolean => {\n  const { recording$ } = useCallState();\n  return useObservableValue(recording$);\n};\n\n/**\n * Utility hook which provides information whether the current call is broadcasting.\n *\n * @category Call State\n */\nexport const useIsCallHLSBroadcastingInProgress = (): boolean => {\n  const { egress$ } = useCallState();\n  const egress = useObservableValue(egress$);\n  if (!egress) return false;\n  return egress.broadcasting;\n};\n\n/**\n * Utility hook which provides information whether the current call is live.\n *\n * @category Call State\n */\nexport const useIsCallLive = (): boolean => {\n  const { backstage$ } = useCallState();\n  const isBackstageOn = useObservableValue(backstage$);\n  return !isBackstageOn;\n};\n\n/**\n * Returns the list of blocked users in the current call.\n */\nexport const useCallBlockedUserIds = (): string[] => {\n  const { blockedUserIds$ } = useCallState();\n  return useObservableValue(blockedUserIds$);\n};\n\n/**\n * Returns the timestamp when this call was created.\n */\nexport const useCallCreatedAt = (): Date | undefined => {\n  const { createdAt$ } = useCallState();\n  return useObservableValue(createdAt$);\n};\n\n/**\n * Returns the timestamp when this call was ended.\n */\nexport const useCallEndedAt = (): Date | undefined => {\n  const { endedAt$ } = useCallState();\n  return useObservableValue(endedAt$);\n};\n\n/**\n * Returns the timestamp telling when the call is scheduled to start.\n */\nexport const useCallStartsAt = (): Date | undefined => {\n  const { startsAt$ } = useCallState();\n  return useObservableValue(startsAt$);\n};\n\n/**\n * Returns the timestamp when this call was updated.\n */\nexport const useCallUpdatedAt = (): Date | undefined => {\n  const { updatedAt$ } = useCallState();\n  return useObservableValue(updatedAt$);\n};\n\n/**\n * Returns the information about the call's creator.\n */\nexport const useCallCreatedBy = (): UserResponse | undefined => {\n  const { createdBy$ } = useCallState();\n  return useObservableValue(createdBy$);\n};\n\n/**\n * Returns the call's custom data.\n */\nexport const useCallCustomData = (): Record<string, any> => {\n  const { custom$ } = useCallState();\n  return useObservableValue(custom$);\n};\n\n/**\n * Returns the call's Egress information.\n */\nexport const useCallEgress = (): EgressResponse | undefined => {\n  const { egress$ } = useCallState();\n  return useObservableValue(egress$);\n};\n\n/**\n * Returns the call's Ingress information.\n */\nexport const useCallIngress = (): CallIngressResponse | undefined => {\n  const { ingress$ } = useCallState();\n  return useObservableValue(ingress$);\n};\n\n/**\n * Returns the data for the current call session.\n */\nexport const useCallSession = (): CallSessionResponse | undefined => {\n  const { session$ } = useCallState();\n  return useObservableValue(session$);\n};\n\n/**\n * Returns the call's settings.\n */\nexport const useCallSettings = (): CallSettingsResponse | undefined => {\n  const { settings$ } = useCallState();\n  return useObservableValue(settings$);\n};\n\n/**\n * Returns whether the call has transcribing enabled.\n */\nexport const useIsCallTranscribingInProgress = (): boolean => {\n  const { transcribing$ } = useCallState();\n  return useObservableValue(transcribing$);\n};\n\n/**\n * Returns information about the user who has marked this call as ended.\n */\nexport const useCallEndedBy = (): UserResponse | undefined => {\n  const { endedBy$ } = useCallState();\n  return useObservableValue(endedBy$);\n};\n\n/**\n * Utility hook which provides a boolean indicating whether there is\n * a participant in the current call which shares their screen.\n *\n * @category Call State\n */\nexport const useHasOngoingScreenShare = (): boolean => {\n  const { hasOngoingScreenShare$ } = useCallState();\n  return useObservableValue(hasOngoingScreenShare$);\n};\n\n/**\n * Utility hook which provides the latest stats report of the current call.\n *\n * The latest stats report of the current call.\n * When stats gathering is enabled, this observable will emit a new value\n * at a regular (configurable) interval.\n *\n * Consumers of this observable can implement their own batching logic\n * in case they want to show historical stats data.\n *\n * @category Call State\n */\nexport const useCallStatsReport = (): CallStatsReport | undefined => {\n  const { callStatsReport$ } = useCallState();\n  return useObservableValue(callStatsReport$);\n};\n\n/**\n * Utility hook which provides the dominant speaker of the current call.\n *\n * @category Call State\n */\nexport const useDominantSpeaker = (): StreamVideoParticipant | undefined => {\n  const { dominantSpeaker$ } = useCallState();\n  return useObservableValue(dominantSpeaker$);\n};\n\n/**\n * Utility hook which provides a list of call members.\n *\n * @category Call State\n */\nexport const useCallMembers = (): MemberResponse[] => {\n  const { members$ } = useCallState();\n  return useObservableValue(members$);\n};\n\n/**\n * Utility hook providing the current calling state of the call. For example, `RINGING` or `JOINED`.\n *\n * @category Call State\n */\nexport const useCallCallingState = () => {\n  const { callingState$ } = useCallState();\n  return useObservableValue(callingState$);\n};\n\n/**\n * Utility hook providing the actual start time of the current session.\n * Useful for calculating the call duration.\n *\n * @category Call State\n */\nexport const useCallStartedAt = () => {\n  const { startedAt$ } = useCallState();\n  return useObservableValue(startedAt$);\n};\n\n/**\n * A hook which provides a list of all participants that have joined an active call.\n *\n * @category Call State\n *\n * @param options.sortBy - A comparator function to sort the participants by.\n * Make sure to memoize output of the `combineComparators` function\n * (or keep it out of component's scope if possible) before passing it down to this property.\n */\nexport const useParticipants = ({\n  sortBy,\n}: {\n  /**\n   * Make sure to memoize output of the `combineComparators` function\n   * (or keep it out of component's scope if possible) before passing it down to this property.\n   */\n  sortBy?: Comparator<StreamVideoParticipant>;\n} = {}) => {\n  const { participants$ } = useCallState();\n  const participants = useObservableValue(participants$);\n\n  return useMemo(() => {\n    if (sortBy) {\n      return [...participants].sort(sortBy);\n    }\n    return participants;\n  }, [participants, sortBy]);\n};\n\n/**\n * A hook which provides a StreamVideoLocalParticipant object.\n * It signals that I have joined a call.\n *\n * @category Call State\n */\nexport const useLocalParticipant = () => {\n  const { localParticipant$ } = useCallState();\n  return useObservableValue(localParticipant$);\n};\n\n/**\n * A hook which provides a list of all other participants than me that have joined an active call.\n *\n * @category Call State\n */\nexport const useRemoteParticipants = () => {\n  const { remoteParticipants$ } = useCallState();\n  return useObservableValue(remoteParticipants$);\n};\n\n/**\n * Returns the approximate participant count of the active call.\n * This includes the anonymous users as well, and it is computed on the server.\n *\n * @category Call State\n */\nexport const useParticipantCount = () => {\n  const { participantCount$ } = useCallState();\n  return useObservableValue(participantCount$);\n};\n\n/**\n * Returns the approximate anonymous participant count of the active call.\n * The regular participants are not included in this count. It is computed on the server.\n *\n * @category Call State\n */\nexport const useAnonymousParticipantCount = () => {\n  const { anonymousParticipantCount$ } = useCallState();\n  return useObservableValue(anonymousParticipantCount$);\n};\n\n/**\n * Returns the generated thumbnail of the current call, if enabled in settings.\n */\nexport const useCallThumbnail = () => {\n  const { thumbnails$ } = useCallState();\n  return useObservableValue(thumbnails$);\n};\n\n/**\n * A hook which returns the local participant's own capabilities.\n */\nexport const useOwnCapabilities = (): OwnCapability[] | undefined => {\n  const { ownCapabilities$ } = useCallState();\n  return useObservableValue(ownCapabilities$);\n};\n\n/**\n * Hook that returns true if the local participant has all the given permissions.\n *\n * @param permissions the permissions to check.\n */\nexport const useHasPermissions = (...permissions: OwnCapability[]): boolean => {\n  const capabilities = useOwnCapabilities();\n  return permissions.every((permission) => capabilities?.includes(permission));\n};\n\n/**\n * Returns the camera state of the current call.\n *\n * @category Camera Manager State\n *\n */\nexport const useCameraState = () => {\n  const call = useCall();\n  const { camera } = call as Call;\n\n  const devices$ = useMemo(() => camera.listDevices(), [camera]);\n\n  const { state } = camera;\n  const status = useObservableValue(state.status$);\n  const optimisticStatus = useObservableValue(state.optimisticStatus$);\n  const direction = useObservableValue(state.direction$);\n  const mediaStream = useObservableValue(state.mediaStream$);\n  const selectedDevice = useObservableValue(state.selectedDevice$);\n  const devices = useObservableValue(devices$, EMPTY_DEVICES_ARRAY);\n  const hasBrowserPermission = useObservableValue(state.hasBrowserPermission$);\n  const isMute = status !== 'enabled';\n  const optimisticIsMute = optimisticStatus !== 'enabled';\n\n  return {\n    camera,\n    status,\n    optimisticStatus,\n    isEnabled: status === 'enabled',\n    direction,\n    mediaStream,\n    devices,\n    hasBrowserPermission,\n    selectedDevice,\n    isMute,\n    optimisticIsMute,\n  };\n};\n\n/**\n * Returns the microphone state of the current call.\n *\n * @category Microphone Manager State\n */\nexport const useMicrophoneState = () => {\n  const call = useCall();\n  const { microphone } = call as Call;\n\n  const devices$ = useMemo(() => microphone.listDevices(), [microphone]);\n\n  const { state } = microphone;\n  const status = useObservableValue(state.status$);\n  const optimisticStatus = useObservableValue(state.optimisticStatus$);\n  const mediaStream = useObservableValue(state.mediaStream$);\n  const selectedDevice = useObservableValue(state.selectedDevice$);\n  const devices = useObservableValue(devices$, EMPTY_DEVICES_ARRAY);\n  const hasBrowserPermission = useObservableValue(state.hasBrowserPermission$);\n  const isSpeakingWhileMuted = useObservableValue(state.speakingWhileMuted$);\n  const isMute = status !== 'enabled';\n  const optimisticIsMute = optimisticStatus !== 'enabled';\n\n  return {\n    microphone,\n    status,\n    optimisticStatus,\n    isEnabled: status === 'enabled',\n    mediaStream,\n    devices,\n    selectedDevice,\n    hasBrowserPermission,\n    isSpeakingWhileMuted,\n    isMute,\n    optimisticIsMute,\n  };\n};\n\n/**\n * Returns the speaker state of the current call.\n *\n * Note: This hook is not supported in React Native\n */\nexport const useSpeakerState = () => {\n  if (isReactNative()) {\n    throw new Error(\n      'This feature is not supported in React Native. Please visit https://getstream.io/video/docs/reactnative/core/camera-and-microphone/#speaker-management for more details',\n    );\n  }\n  const call = useCall();\n  const { speaker } = call as Call;\n\n  const devices$ = useMemo(() => speaker.listDevices(), [speaker]);\n  const devices = useObservableValue(devices$, EMPTY_DEVICES_ARRAY);\n  const selectedDevice = useObservableValue(speaker.state.selectedDevice$);\n\n  return {\n    speaker,\n    devices,\n    selectedDevice,\n    isDeviceSelectionSupported: speaker.state.isDeviceSelectionSupported,\n  };\n};\n\n/**\n * Returns the Screen Share state of the current call.\n */\nexport const useScreenShareState = () => {\n  const call = useCall();\n  const { screenShare } = call as Call;\n\n  const status = useObservableValue(screenShare.state.status$);\n  const pendingStatus = useObservableValue(screenShare.state.optimisticStatus$);\n  const mediaStream = useObservableValue(screenShare.state.mediaStream$);\n  const isMute = status !== 'enabled';\n  const optimisticStatus = pendingStatus ?? status;\n  const optimisticIsMute = optimisticStatus !== 'enabled';\n\n  return {\n    screenShare,\n    mediaStream,\n    status,\n    optimisticStatus,\n    isMute,\n    optimisticIsMute,\n  };\n};\n\n/**\n * Returns incoming video settings for the current call, including\n * global and per-participant manual video quality overrides.\n */\nexport const useIncomingVideoSettings = () => {\n  const call = useCall() as Call;\n  const settings = useObservableValue(\n    call.dynascaleManager.incomingVideoSettings$,\n  );\n  return settings;\n};\n", "import { useStreamVideoClient } from '../contexts';\nimport { useObservableValue } from './useObservableValue';\n\n/**\n * Utility hook which provides access to client's state store.\n */\nexport const useStore = () => {\n  const client = useStreamVideoClient();\n  if (!client) {\n    throw new Error(\n      `StreamVideoClient isn't initialized or this hook is called outside of <StreamVideo> context.`,\n    );\n  }\n  return client.state;\n};\n\n/**\n * Utility hook which provides a list of all notifications about created calls.\n * In the ring call settings, these calls can be outgoing (I have called somebody)\n * or incoming (somebody has called me).\n *\n * @category Client State\n */\nexport const useCalls = () => {\n  const { calls$ } = useStore();\n  return useObservableValue(calls$);\n};\n\n/**\n * Returns the current connected user.\n *\n * @category Client State\n */\nexport const useConnectedUser = () => {\n  const { connectedUser$ } = useStore();\n  return useObservableValue(connectedUser$);\n};\n", "import { useCallback, useEffect, useState } from 'react';\nimport { useCall } from '../contexts';\nimport { useIsCallRecordingInProgress } from './callStateHooks';\n/**\n * Custom hook for toggling call recording in a video call.\n *\n * This hook provides functionality to start and stop call recording,\n * along with state management for tracking the recording status\n * and the loading indicator while awaiting a response.\n */\nexport const useToggleCallRecording = () => {\n  const call = useCall();\n  const isCallRecordingInProgress = useIsCallRecordingInProgress();\n  const [isAwaitingResponse, setIsAwaitingResponse] = useState(false);\n\n  // TODO: add permissions\n\n  useEffect(() => {\n    // we wait until call.recording_started/stopped event to flips the\n    // `isCallRecordingInProgress` state variable.\n    // Once the flip happens, we remove the loading indicator\n    setIsAwaitingResponse((isAwaiting) => {\n      if (isAwaiting) return false;\n      return isAwaiting;\n    });\n  }, [isCallRecordingInProgress]);\n\n  const toggleCallRecording = useCallback(async () => {\n    try {\n      setIsAwaitingResponse(true);\n      if (isCallRecordingInProgress) {\n        await call?.stopRecording();\n      } else {\n        await call?.startRecording();\n      }\n    } catch (e) {\n      console.error(`Failed start recording`, e);\n    }\n  }, [call, isCallRecordingInProgress]);\n\n  return { toggleCallRecording, isAwaitingResponse, isCallRecordingInProgress };\n};\n", "import * as CallStateHooks from './callStateHooks';\n\nexport * from './store';\nexport * from './callUtilHooks';\n\n/**\n * A hook-alike function that exposes all call state hooks.\n *\n * @category Call State\n */\nexport const useCallStateHooks = () => CallStateHooks;\n", "import { OwnCapability } from '@stream-io/video-client';\n\nimport { PropsWithChildren } from 'react';\nimport { useCall } from '../contexts';\nimport { useCallStateHooks } from '../hooks';\n\ntype RestrictedProps = PropsWithChildren<{\n  /**\n   * Required grants for the component to be able to render supplied children elements\n   */\n  requiredGrants: OwnCapability[];\n  /**\n   * Render children only if user can request capability, but does not have it\n   */\n  canRequestOnly?: boolean;\n  /**\n   * Render children only if user has capability\n   */\n  hasPermissionsOnly?: boolean;\n  /**\n   * Require all grants specified in `requiredGrants` to be available in the `availableGrants`,\n   * component by default requires only one grant to appear in both arrays to render its children\n   */\n  requireAll?: boolean;\n}>;\n\nexport const Restricted = ({\n  canRequestOnly,\n  hasPermissionsOnly,\n  requiredGrants,\n  requireAll = true,\n  children,\n}: RestrictedProps) => {\n  const call = useCall();\n  const { useCallSettings, useOwnCapabilities } = useCallStateHooks();\n  const ownCapabilities = useOwnCapabilities();\n  const settings = useCallSettings();\n  const hasPermissions = requiredGrants[requireAll ? 'every' : 'some'](\n    (capability) => ownCapabilities?.includes(capability),\n  );\n\n  if (hasPermissionsOnly) return hasPermissions ? <>{children}</> : null;\n\n  const canRequest = requiredGrants.some((capability) =>\n    call?.permissionsContext.canRequest(capability, settings),\n  );\n\n  if (canRequestOnly) return canRequest ? <>{children}</> : null;\n\n  if (hasPermissions || canRequest) return <>{children}</>;\n\n  return null;\n};\n", "import * as React from 'react';\nimport { useLayoutEffect, useEffect, useRef } from 'react';\nimport { stopEvent, getDocument, isMouseLikePointerType, contains, activeElement, isSafari, isTypeableCombobox, isVirtualClick, isVirtualPointerEvent, getTarget, getPlatform, isTypeableElement, isReactEvent, isRootElement, isEventTargetWithin, isMac, getUserAgent } from '@floating-ui/react/utils';\nimport { floor, evaluate, max, min, round } from '@floating-ui/utils';\nimport { getComputedStyle, isElement, getNodeName, isHTMLElement, getWindow, isLastTraversableNode, getParentNode, isWebKit } from '@floating-ui/utils/dom';\nimport { tabbable, isTabbable } from 'tabbable';\nimport * as ReactDOM from 'react-dom';\nimport { getOverflowAncestors, useFloating as useFloating$1, offset, detectOverflow } from '@floating-ui/react-dom';\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, getOverflowAncestors, hide, inline, limitShift, offset, platform, shift, size } from '@floating-ui/react-dom';\n\n/**\n * Merges an array of refs into a single memoized callback ref or `null`.\n * @see https://floating-ui.com/docs/react-utils#usemergerefs\n */\nfunction useMergeRefs(refs) {\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return value => {\n      refs.forEach(ref => {\n        if (typeof ref === 'function') {\n          ref(value);\n        } else if (ref != null) {\n          ref.current = value;\n        }\n      });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}\n\n// https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379\nconst SafeReact = {\n  ...React\n};\n\nconst useInsertionEffect = SafeReact.useInsertionEffect;\nconst useSafeInsertionEffect = useInsertionEffect || (fn => fn());\nfunction useEffectEvent(callback) {\n  const ref = React.useRef(() => {\n    if (process.env.NODE_ENV !== \"production\") {\n      throw new Error('Cannot call an event handler while rendering.');\n    }\n  });\n  useSafeInsertionEffect(() => {\n    ref.current = callback;\n  });\n  return React.useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return ref.current == null ? void 0 : ref.current(...args);\n  }, []);\n}\n\nconst ARROW_UP = 'ArrowUp';\nconst ARROW_DOWN = 'ArrowDown';\nconst ARROW_LEFT = 'ArrowLeft';\nconst ARROW_RIGHT = 'ArrowRight';\nfunction isDifferentRow(index, cols, prevRow) {\n  return Math.floor(index / cols) !== prevRow;\n}\nfunction isIndexOutOfBounds(listRef, index) {\n  return index < 0 || index >= listRef.current.length;\n}\nfunction getMinIndex(listRef, disabledIndices) {\n  return findNonDisabledIndex(listRef, {\n    disabledIndices\n  });\n}\nfunction getMaxIndex(listRef, disabledIndices) {\n  return findNonDisabledIndex(listRef, {\n    decrement: true,\n    startingIndex: listRef.current.length,\n    disabledIndices\n  });\n}\nfunction findNonDisabledIndex(listRef, _temp) {\n  let {\n    startingIndex = -1,\n    decrement = false,\n    disabledIndices,\n    amount = 1\n  } = _temp === void 0 ? {} : _temp;\n  const list = listRef.current;\n  let index = startingIndex;\n  do {\n    index += decrement ? -amount : amount;\n  } while (index >= 0 && index <= list.length - 1 && isDisabled(list, index, disabledIndices));\n  return index;\n}\nfunction getGridNavigatedIndex(elementsRef, _ref) {\n  let {\n    event,\n    orientation,\n    loop,\n    cols,\n    disabledIndices,\n    minIndex,\n    maxIndex,\n    prevIndex,\n    stopEvent: stop = false\n  } = _ref;\n  let nextIndex = prevIndex;\n  if (event.key === ARROW_UP) {\n    stop && stopEvent(event);\n    if (prevIndex === -1) {\n      nextIndex = maxIndex;\n    } else {\n      nextIndex = findNonDisabledIndex(elementsRef, {\n        startingIndex: nextIndex,\n        amount: cols,\n        decrement: true,\n        disabledIndices\n      });\n      if (loop && (prevIndex - cols < minIndex || nextIndex < 0)) {\n        const col = prevIndex % cols;\n        const maxCol = maxIndex % cols;\n        const offset = maxIndex - (maxCol - col);\n        if (maxCol === col) {\n          nextIndex = maxIndex;\n        } else {\n          nextIndex = maxCol > col ? offset : offset - cols;\n        }\n      }\n    }\n    if (isIndexOutOfBounds(elementsRef, nextIndex)) {\n      nextIndex = prevIndex;\n    }\n  }\n  if (event.key === ARROW_DOWN) {\n    stop && stopEvent(event);\n    if (prevIndex === -1) {\n      nextIndex = minIndex;\n    } else {\n      nextIndex = findNonDisabledIndex(elementsRef, {\n        startingIndex: prevIndex,\n        amount: cols,\n        disabledIndices\n      });\n      if (loop && prevIndex + cols > maxIndex) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex % cols - cols,\n          amount: cols,\n          disabledIndices\n        });\n      }\n    }\n    if (isIndexOutOfBounds(elementsRef, nextIndex)) {\n      nextIndex = prevIndex;\n    }\n  }\n\n  // Remains on the same row/column.\n  if (orientation === 'both') {\n    const prevRow = floor(prevIndex / cols);\n    if (event.key === ARROW_RIGHT) {\n      stop && stopEvent(event);\n      if (prevIndex % cols !== cols - 1) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex,\n          disabledIndices\n        });\n        if (loop && isDifferentRow(nextIndex, cols, prevRow)) {\n          nextIndex = findNonDisabledIndex(elementsRef, {\n            startingIndex: prevIndex - prevIndex % cols - 1,\n            disabledIndices\n          });\n        }\n      } else if (loop) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex - prevIndex % cols - 1,\n          disabledIndices\n        });\n      }\n      if (isDifferentRow(nextIndex, cols, prevRow)) {\n        nextIndex = prevIndex;\n      }\n    }\n    if (event.key === ARROW_LEFT) {\n      stop && stopEvent(event);\n      if (prevIndex % cols !== 0) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex,\n          decrement: true,\n          disabledIndices\n        });\n        if (loop && isDifferentRow(nextIndex, cols, prevRow)) {\n          nextIndex = findNonDisabledIndex(elementsRef, {\n            startingIndex: prevIndex + (cols - prevIndex % cols),\n            decrement: true,\n            disabledIndices\n          });\n        }\n      } else if (loop) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex + (cols - prevIndex % cols),\n          decrement: true,\n          disabledIndices\n        });\n      }\n      if (isDifferentRow(nextIndex, cols, prevRow)) {\n        nextIndex = prevIndex;\n      }\n    }\n    const lastRow = floor(maxIndex / cols) === prevRow;\n    if (isIndexOutOfBounds(elementsRef, nextIndex)) {\n      if (loop && lastRow) {\n        nextIndex = event.key === ARROW_LEFT ? maxIndex : findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex - prevIndex % cols - 1,\n          disabledIndices\n        });\n      } else {\n        nextIndex = prevIndex;\n      }\n    }\n  }\n  return nextIndex;\n}\n\n/** For each cell index, gets the item index that occupies that cell */\nfunction buildCellMap(sizes, cols, dense) {\n  const cellMap = [];\n  let startIndex = 0;\n  sizes.forEach((_ref2, index) => {\n    let {\n      width,\n      height\n    } = _ref2;\n    if (width > cols) {\n      if (process.env.NODE_ENV !== \"production\") {\n        throw new Error(\"[Floating UI]: Invalid grid - item width at index \" + index + \" is greater than grid columns\");\n      }\n    }\n    let itemPlaced = false;\n    if (dense) {\n      startIndex = 0;\n    }\n    while (!itemPlaced) {\n      const targetCells = [];\n      for (let i = 0; i < width; i++) {\n        for (let j = 0; j < height; j++) {\n          targetCells.push(startIndex + i + j * cols);\n        }\n      }\n      if (startIndex % cols + width <= cols && targetCells.every(cell => cellMap[cell] == null)) {\n        targetCells.forEach(cell => {\n          cellMap[cell] = index;\n        });\n        itemPlaced = true;\n      } else {\n        startIndex++;\n      }\n    }\n  });\n\n  // convert into a non-sparse array\n  return [...cellMap];\n}\n\n/** Gets cell index of an item's corner or -1 when index is -1. */\nfunction getCellIndexOfCorner(index, sizes, cellMap, cols, corner) {\n  if (index === -1) return -1;\n  const firstCellIndex = cellMap.indexOf(index);\n  const sizeItem = sizes[index];\n  switch (corner) {\n    case 'tl':\n      return firstCellIndex;\n    case 'tr':\n      if (!sizeItem) {\n        return firstCellIndex;\n      }\n      return firstCellIndex + sizeItem.width - 1;\n    case 'bl':\n      if (!sizeItem) {\n        return firstCellIndex;\n      }\n      return firstCellIndex + (sizeItem.height - 1) * cols;\n    case 'br':\n      return cellMap.lastIndexOf(index);\n  }\n}\n\n/** Gets all cell indices that correspond to the specified indices */\nfunction getCellIndices(indices, cellMap) {\n  return cellMap.flatMap((index, cellIndex) => indices.includes(index) ? [cellIndex] : []);\n}\nfunction isDisabled(list, index, disabledIndices) {\n  if (disabledIndices) {\n    return disabledIndices.includes(index);\n  }\n  const element = list[index];\n  return element == null || element.hasAttribute('disabled') || element.getAttribute('aria-disabled') === 'true';\n}\n\nlet rafId = 0;\nfunction enqueueFocus(el, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    preventScroll = false,\n    cancelPrevious = true,\n    sync = false\n  } = options;\n  cancelPrevious && cancelAnimationFrame(rafId);\n  const exec = () => el == null ? void 0 : el.focus({\n    preventScroll\n  });\n  if (sync) {\n    exec();\n  } else {\n    rafId = requestAnimationFrame(exec);\n  }\n}\n\nvar index = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\n\nfunction sortByDocumentPosition(a, b) {\n  const position = a.compareDocumentPosition(b);\n  if (position & Node.DOCUMENT_POSITION_FOLLOWING || position & Node.DOCUMENT_POSITION_CONTAINED_BY) {\n    return -1;\n  }\n  if (position & Node.DOCUMENT_POSITION_PRECEDING || position & Node.DOCUMENT_POSITION_CONTAINS) {\n    return 1;\n  }\n  return 0;\n}\nfunction areMapsEqual(map1, map2) {\n  if (map1.size !== map2.size) {\n    return false;\n  }\n  for (const [key, value] of map1.entries()) {\n    if (value !== map2.get(key)) {\n      return false;\n    }\n  }\n  return true;\n}\nconst FloatingListContext = /*#__PURE__*/React.createContext({\n  register: () => {},\n  unregister: () => {},\n  map: /*#__PURE__*/new Map(),\n  elementsRef: {\n    current: []\n  }\n});\n/**\n * Provides context for a list of items within the floating element.\n * @see https://floating-ui.com/docs/FloatingList\n */\nfunction FloatingList(props) {\n  const {\n    children,\n    elementsRef,\n    labelsRef\n  } = props;\n  const [map, setMap] = React.useState(() => new Map());\n  const register = React.useCallback(node => {\n    setMap(prevMap => new Map(prevMap).set(node, null));\n  }, []);\n  const unregister = React.useCallback(node => {\n    setMap(prevMap => {\n      const map = new Map(prevMap);\n      map.delete(node);\n      return map;\n    });\n  }, []);\n  index(() => {\n    const newMap = new Map(map);\n    const nodes = Array.from(newMap.keys()).sort(sortByDocumentPosition);\n    nodes.forEach((node, index) => {\n      newMap.set(node, index);\n    });\n    if (!areMapsEqual(map, newMap)) {\n      setMap(newMap);\n    }\n  }, [map]);\n  return /*#__PURE__*/React.createElement(FloatingListContext.Provider, {\n    value: React.useMemo(() => ({\n      register,\n      unregister,\n      map,\n      elementsRef,\n      labelsRef\n    }), [register, unregister, map, elementsRef, labelsRef])\n  }, children);\n}\n/**\n * Used to register a list item and its index (DOM position) in the\n * `FloatingList`.\n * @see https://floating-ui.com/docs/FloatingList#uselistitem\n */\nfunction useListItem(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    label\n  } = props;\n  const {\n    register,\n    unregister,\n    map,\n    elementsRef,\n    labelsRef\n  } = React.useContext(FloatingListContext);\n  const [index$1, setIndex] = React.useState(null);\n  const componentRef = React.useRef(null);\n  const ref = React.useCallback(node => {\n    componentRef.current = node;\n    if (index$1 !== null) {\n      elementsRef.current[index$1] = node;\n      if (labelsRef) {\n        var _node$textContent;\n        const isLabelDefined = label !== undefined;\n        labelsRef.current[index$1] = isLabelDefined ? label : (_node$textContent = node == null ? void 0 : node.textContent) != null ? _node$textContent : null;\n      }\n    }\n  }, [index$1, elementsRef, labelsRef, label]);\n  index(() => {\n    const node = componentRef.current;\n    if (node) {\n      register(node);\n      return () => {\n        unregister(node);\n      };\n    }\n  }, [register, unregister]);\n  index(() => {\n    const index = componentRef.current ? map.get(componentRef.current) : null;\n    if (index != null) {\n      setIndex(index);\n    }\n  }, [map]);\n  return React.useMemo(() => ({\n    ref,\n    index: index$1 == null ? -1 : index$1\n  }), [index$1, ref]);\n}\n\nfunction renderJsx(render, computedProps) {\n  if (typeof render === 'function') {\n    return render(computedProps);\n  }\n  if (render) {\n    return /*#__PURE__*/React.cloneElement(render, computedProps);\n  }\n  return /*#__PURE__*/React.createElement(\"div\", computedProps);\n}\nconst CompositeContext = /*#__PURE__*/React.createContext({\n  activeIndex: 0,\n  onNavigate: () => {}\n});\nconst horizontalKeys = [ARROW_LEFT, ARROW_RIGHT];\nconst verticalKeys = [ARROW_UP, ARROW_DOWN];\nconst allKeys = [...horizontalKeys, ...verticalKeys];\n\n/**\n * Creates a single tab stop whose items are navigated by arrow keys, which\n * provides list navigation outside of floating element contexts.\n *\n * This is useful to enable navigation of a list of items that aren’t part of a\n * floating element. A menubar is an example of a composite, with each reference\n * element being an item.\n * @see https://floating-ui.com/docs/Composite\n */\nconst Composite = /*#__PURE__*/React.forwardRef(function Composite(props, forwardedRef) {\n  const {\n    render,\n    orientation = 'both',\n    loop = true,\n    cols = 1,\n    disabledIndices,\n    activeIndex: externalActiveIndex,\n    onNavigate: externalSetActiveIndex,\n    itemSizes,\n    dense = false,\n    ...domProps\n  } = props;\n  const [internalActiveIndex, internalSetActiveIndex] = React.useState(0);\n  const activeIndex = externalActiveIndex != null ? externalActiveIndex : internalActiveIndex;\n  const onNavigate = useEffectEvent(externalSetActiveIndex != null ? externalSetActiveIndex : internalSetActiveIndex);\n  const elementsRef = React.useRef([]);\n  const renderElementProps = render && typeof render !== 'function' ? render.props : {};\n  const contextValue = React.useMemo(() => ({\n    activeIndex,\n    onNavigate\n  }), [activeIndex, onNavigate]);\n  const isGrid = cols > 1;\n  function handleKeyDown(event) {\n    if (!allKeys.includes(event.key)) return;\n    let nextIndex = activeIndex;\n    const minIndex = getMinIndex(elementsRef, disabledIndices);\n    const maxIndex = getMaxIndex(elementsRef, disabledIndices);\n    if (isGrid) {\n      const sizes = itemSizes || Array.from({\n        length: elementsRef.current.length\n      }, () => ({\n        width: 1,\n        height: 1\n      }));\n      // To calculate movements on the grid, we use hypothetical cell indices\n      // as if every item was 1x1, then convert back to real indices.\n      const cellMap = buildCellMap(sizes, cols, dense);\n      const minGridIndex = cellMap.findIndex(index => index != null && !isDisabled(elementsRef.current, index, disabledIndices));\n      // last enabled index\n      const maxGridIndex = cellMap.reduce((foundIndex, index, cellIndex) => index != null && !isDisabled(elementsRef.current, index, disabledIndices) ? cellIndex : foundIndex, -1);\n      const maybeNextIndex = cellMap[getGridNavigatedIndex({\n        current: cellMap.map(itemIndex => itemIndex ? elementsRef.current[itemIndex] : null)\n      }, {\n        event,\n        orientation,\n        loop,\n        cols,\n        // treat undefined (empty grid spaces) as disabled indices so we\n        // don't end up in them\n        disabledIndices: getCellIndices([...(disabledIndices || elementsRef.current.map((_, index) => isDisabled(elementsRef.current, index) ? index : undefined)), undefined], cellMap),\n        minIndex: minGridIndex,\n        maxIndex: maxGridIndex,\n        prevIndex: getCellIndexOfCorner(activeIndex > maxIndex ? minIndex : activeIndex, sizes, cellMap, cols,\n        // use a corner matching the edge closest to the direction we're\n        // moving in so we don't end up in the same item. Prefer\n        // top/left over bottom/right.\n        event.key === ARROW_DOWN ? 'bl' : event.key === ARROW_RIGHT ? 'tr' : 'tl')\n      })];\n      if (maybeNextIndex != null) {\n        nextIndex = maybeNextIndex;\n      }\n    }\n    const toEndKeys = {\n      horizontal: [ARROW_RIGHT],\n      vertical: [ARROW_DOWN],\n      both: [ARROW_RIGHT, ARROW_DOWN]\n    }[orientation];\n    const toStartKeys = {\n      horizontal: [ARROW_LEFT],\n      vertical: [ARROW_UP],\n      both: [ARROW_LEFT, ARROW_UP]\n    }[orientation];\n    const preventedKeys = isGrid ? allKeys : {\n      horizontal: horizontalKeys,\n      vertical: verticalKeys,\n      both: allKeys\n    }[orientation];\n    if (nextIndex === activeIndex && [...toEndKeys, ...toStartKeys].includes(event.key)) {\n      if (loop && nextIndex === maxIndex && toEndKeys.includes(event.key)) {\n        nextIndex = minIndex;\n      } else if (loop && nextIndex === minIndex && toStartKeys.includes(event.key)) {\n        nextIndex = maxIndex;\n      } else {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: nextIndex,\n          decrement: toStartKeys.includes(event.key),\n          disabledIndices\n        });\n      }\n    }\n    if (nextIndex !== activeIndex && !isIndexOutOfBounds(elementsRef, nextIndex)) {\n      event.stopPropagation();\n      if (preventedKeys.includes(event.key)) {\n        event.preventDefault();\n      }\n      onNavigate(nextIndex);\n\n      // Wait for FocusManager `returnFocus` to execute.\n      queueMicrotask(() => {\n        enqueueFocus(elementsRef.current[nextIndex]);\n      });\n    }\n  }\n  const computedProps = {\n    ...domProps,\n    ...renderElementProps,\n    ref: forwardedRef,\n    'aria-orientation': orientation === 'both' ? undefined : orientation,\n    onKeyDown(e) {\n      domProps.onKeyDown == null || domProps.onKeyDown(e);\n      renderElementProps.onKeyDown == null || renderElementProps.onKeyDown(e);\n      handleKeyDown(e);\n    }\n  };\n  return /*#__PURE__*/React.createElement(CompositeContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(FloatingList, {\n    elementsRef: elementsRef\n  }, renderJsx(render, computedProps)));\n});\n/**\n * @see https://floating-ui.com/docs/Composite\n */\nconst CompositeItem = /*#__PURE__*/React.forwardRef(function CompositeItem(props, forwardedRef) {\n  const {\n    render,\n    ...domProps\n  } = props;\n  const renderElementProps = render && typeof render !== 'function' ? render.props : {};\n  const {\n    activeIndex,\n    onNavigate\n  } = React.useContext(CompositeContext);\n  const {\n    ref,\n    index\n  } = useListItem();\n  const mergedRef = useMergeRefs([ref, forwardedRef, renderElementProps.ref]);\n  const isActive = activeIndex === index;\n  const computedProps = {\n    ...domProps,\n    ...renderElementProps,\n    ref: mergedRef,\n    tabIndex: isActive ? 0 : -1,\n    'data-active': isActive ? '' : undefined,\n    onFocus(e) {\n      domProps.onFocus == null || domProps.onFocus(e);\n      renderElementProps.onFocus == null || renderElementProps.onFocus(e);\n      onNavigate(index);\n    }\n  };\n  return renderJsx(render, computedProps);\n});\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nlet serverHandoffComplete = false;\nlet count = 0;\nconst genId = () => // Ensure the id is unique with multiple independent versions of Floating UI\n// on <React 18\n\"floating-ui-\" + Math.random().toString(36).slice(2, 6) + count++;\nfunction useFloatingId() {\n  const [id, setId] = React.useState(() => serverHandoffComplete ? genId() : undefined);\n  index(() => {\n    if (id == null) {\n      setId(genId());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  React.useEffect(() => {\n    serverHandoffComplete = true;\n  }, []);\n  return id;\n}\nconst useReactId = SafeReact.useId;\n\n/**\n * Uses React 18's built-in `useId()` when available, or falls back to a\n * slightly less performant (requiring a double render) implementation for\n * earlier React versions.\n * @see https://floating-ui.com/docs/react-utils#useid\n */\nconst useId = useReactId || useFloatingId;\n\nlet devMessageSet;\nif (process.env.NODE_ENV !== \"production\") {\n  devMessageSet = /*#__PURE__*/new Set();\n}\nfunction warn() {\n  var _devMessageSet;\n  for (var _len = arguments.length, messages = new Array(_len), _key = 0; _key < _len; _key++) {\n    messages[_key] = arguments[_key];\n  }\n  const message = \"Floating UI: \" + messages.join(' ');\n  if (!((_devMessageSet = devMessageSet) != null && _devMessageSet.has(message))) {\n    var _devMessageSet2;\n    (_devMessageSet2 = devMessageSet) == null || _devMessageSet2.add(message);\n    console.warn(message);\n  }\n}\nfunction error() {\n  var _devMessageSet3;\n  for (var _len2 = arguments.length, messages = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    messages[_key2] = arguments[_key2];\n  }\n  const message = \"Floating UI: \" + messages.join(' ');\n  if (!((_devMessageSet3 = devMessageSet) != null && _devMessageSet3.has(message))) {\n    var _devMessageSet4;\n    (_devMessageSet4 = devMessageSet) == null || _devMessageSet4.add(message);\n    console.error(message);\n  }\n}\n\n/**\n * Renders a pointing arrow triangle.\n * @see https://floating-ui.com/docs/FloatingArrow\n */\nconst FloatingArrow = /*#__PURE__*/React.forwardRef(function FloatingArrow(props, ref) {\n  const {\n    context: {\n      placement,\n      elements: {\n        floating\n      },\n      middlewareData: {\n        arrow,\n        shift\n      }\n    },\n    width = 14,\n    height = 7,\n    tipRadius = 0,\n    strokeWidth = 0,\n    staticOffset,\n    stroke,\n    d,\n    style: {\n      transform,\n      ...restStyle\n    } = {},\n    ...rest\n  } = props;\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!ref) {\n      warn('The `ref` prop is required for `FloatingArrow`.');\n    }\n  }\n  const clipPathId = useId();\n  const [isRTL, setIsRTL] = React.useState(false);\n\n  // https://github.com/floating-ui/floating-ui/issues/2932\n  index(() => {\n    if (!floating) return;\n    const isRTL = getComputedStyle(floating).direction === 'rtl';\n    if (isRTL) {\n      setIsRTL(true);\n    }\n  }, [floating]);\n  if (!floating) {\n    return null;\n  }\n  const [side, alignment] = placement.split('-');\n  const isVerticalSide = side === 'top' || side === 'bottom';\n  let computedStaticOffset = staticOffset;\n  if (isVerticalSide && shift != null && shift.x || !isVerticalSide && shift != null && shift.y) {\n    computedStaticOffset = null;\n  }\n\n  // Strokes must be double the border width, this ensures the stroke's width\n  // works as you'd expect.\n  const computedStrokeWidth = strokeWidth * 2;\n  const halfStrokeWidth = computedStrokeWidth / 2;\n  const svgX = width / 2 * (tipRadius / -8 + 1);\n  const svgY = height / 2 * tipRadius / 4;\n  const isCustomShape = !!d;\n  const yOffsetProp = computedStaticOffset && alignment === 'end' ? 'bottom' : 'top';\n  let xOffsetProp = computedStaticOffset && alignment === 'end' ? 'right' : 'left';\n  if (computedStaticOffset && isRTL) {\n    xOffsetProp = alignment === 'end' ? 'left' : 'right';\n  }\n  const arrowX = (arrow == null ? void 0 : arrow.x) != null ? computedStaticOffset || arrow.x : '';\n  const arrowY = (arrow == null ? void 0 : arrow.y) != null ? computedStaticOffset || arrow.y : '';\n  const dValue = d || 'M0,0' + (\" H\" + width) + (\" L\" + (width - svgX) + \",\" + (height - svgY)) + (\" Q\" + width / 2 + \",\" + height + \" \" + svgX + \",\" + (height - svgY)) + ' Z';\n  const rotation = {\n    top: isCustomShape ? 'rotate(180deg)' : '',\n    left: isCustomShape ? 'rotate(90deg)' : 'rotate(-90deg)',\n    bottom: isCustomShape ? '' : 'rotate(180deg)',\n    right: isCustomShape ? 'rotate(-90deg)' : 'rotate(90deg)'\n  }[side];\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({}, rest, {\n    \"aria-hidden\": true,\n    ref: ref,\n    width: isCustomShape ? width : width + computedStrokeWidth,\n    height: width,\n    viewBox: \"0 0 \" + width + \" \" + (height > width ? height : width),\n    style: {\n      position: 'absolute',\n      pointerEvents: 'none',\n      [xOffsetProp]: arrowX,\n      [yOffsetProp]: arrowY,\n      [side]: isVerticalSide || isCustomShape ? '100%' : \"calc(100% - \" + computedStrokeWidth / 2 + \"px)\",\n      transform: [rotation, transform].filter(t => !!t).join(' '),\n      ...restStyle\n    }\n  }), computedStrokeWidth > 0 && /*#__PURE__*/React.createElement(\"path\", {\n    clipPath: \"url(#\" + clipPathId + \")\",\n    fill: \"none\",\n    stroke: stroke\n    // Account for the stroke on the fill path rendered below.\n    ,\n    strokeWidth: computedStrokeWidth + (d ? 0 : 1),\n    d: dValue\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: computedStrokeWidth && !d ? rest.fill : 'none',\n    d: dValue\n  }), /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: clipPathId\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: -halfStrokeWidth,\n    y: halfStrokeWidth * (isCustomShape ? -1 : 1),\n    width: width + computedStrokeWidth,\n    height: width\n  })));\n});\n\nfunction createPubSub() {\n  const map = new Map();\n  return {\n    emit(event, data) {\n      var _map$get;\n      (_map$get = map.get(event)) == null || _map$get.forEach(handler => handler(data));\n    },\n    on(event, listener) {\n      map.set(event, [...(map.get(event) || []), listener]);\n    },\n    off(event, listener) {\n      var _map$get2;\n      map.set(event, ((_map$get2 = map.get(event)) == null ? void 0 : _map$get2.filter(l => l !== listener)) || []);\n    }\n  };\n}\n\nconst FloatingNodeContext = /*#__PURE__*/React.createContext(null);\nconst FloatingTreeContext = /*#__PURE__*/React.createContext(null);\n\n/**\n * Returns the parent node id for nested floating elements, if available.\n * Returns `null` for top-level floating elements.\n */\nconst useFloatingParentNodeId = () => {\n  var _React$useContext;\n  return ((_React$useContext = React.useContext(FloatingNodeContext)) == null ? void 0 : _React$useContext.id) || null;\n};\n\n/**\n * Returns the nearest floating tree context, if available.\n */\nconst useFloatingTree = () => React.useContext(FloatingTreeContext);\n\n/**\n * Registers a node into the `FloatingTree`, returning its id.\n * @see https://floating-ui.com/docs/FloatingTree\n */\nfunction useFloatingNodeId(customParentId) {\n  const id = useId();\n  const tree = useFloatingTree();\n  const reactParentId = useFloatingParentNodeId();\n  const parentId = customParentId || reactParentId;\n  index(() => {\n    const node = {\n      id,\n      parentId\n    };\n    tree == null || tree.addNode(node);\n    return () => {\n      tree == null || tree.removeNode(node);\n    };\n  }, [tree, id, parentId]);\n  return id;\n}\n/**\n * Provides parent node context for nested floating elements.\n * @see https://floating-ui.com/docs/FloatingTree\n */\nfunction FloatingNode(props) {\n  const {\n    children,\n    id\n  } = props;\n  const parentId = useFloatingParentNodeId();\n  return /*#__PURE__*/React.createElement(FloatingNodeContext.Provider, {\n    value: React.useMemo(() => ({\n      id,\n      parentId\n    }), [id, parentId])\n  }, children);\n}\n/**\n * Provides context for nested floating elements when they are not children of\n * each other on the DOM.\n * This is not necessary in all cases, except when there must be explicit communication between parent and child floating elements. It is necessary for:\n * - The `bubbles` option in the `useDismiss()` Hook\n * - Nested virtual list navigation\n * - Nested floating elements that each open on hover\n * - Custom communication between parent and child floating elements\n * @see https://floating-ui.com/docs/FloatingTree\n */\nfunction FloatingTree(props) {\n  const {\n    children\n  } = props;\n  const nodesRef = React.useRef([]);\n  const addNode = React.useCallback(node => {\n    nodesRef.current = [...nodesRef.current, node];\n  }, []);\n  const removeNode = React.useCallback(node => {\n    nodesRef.current = nodesRef.current.filter(n => n !== node);\n  }, []);\n  const events = React.useState(() => createPubSub())[0];\n  return /*#__PURE__*/React.createElement(FloatingTreeContext.Provider, {\n    value: React.useMemo(() => ({\n      nodesRef,\n      addNode,\n      removeNode,\n      events\n    }), [addNode, removeNode, events])\n  }, children);\n}\n\nfunction createAttribute(name) {\n  return \"data-floating-ui-\" + name;\n}\n\nfunction useLatestRef(value) {\n  const ref = useRef(value);\n  index(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n\nconst safePolygonIdentifier = /*#__PURE__*/createAttribute('safe-polygon');\nfunction getDelay(value, prop, pointerType) {\n  if (pointerType && !isMouseLikePointerType(pointerType)) {\n    return 0;\n  }\n  if (typeof value === 'number') {\n    return value;\n  }\n  return value == null ? void 0 : value[prop];\n}\n/**\n * Opens the floating element while hovering over the reference element, like\n * CSS `:hover`.\n * @see https://floating-ui.com/docs/useHover\n */\nfunction useHover(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    dataRef,\n    events,\n    elements\n  } = context;\n  const {\n    enabled = true,\n    delay = 0,\n    handleClose = null,\n    mouseOnly = false,\n    restMs = 0,\n    move = true\n  } = props;\n  const tree = useFloatingTree();\n  const parentId = useFloatingParentNodeId();\n  const handleCloseRef = useLatestRef(handleClose);\n  const delayRef = useLatestRef(delay);\n  const openRef = useLatestRef(open);\n  const pointerTypeRef = React.useRef();\n  const timeoutRef = React.useRef(-1);\n  const handlerRef = React.useRef();\n  const restTimeoutRef = React.useRef(-1);\n  const blockMouseMoveRef = React.useRef(true);\n  const performedPointerEventsMutationRef = React.useRef(false);\n  const unbindMouseMoveRef = React.useRef(() => {});\n  const restTimeoutPendingRef = React.useRef(false);\n  const isHoverOpen = React.useCallback(() => {\n    var _dataRef$current$open;\n    const type = (_dataRef$current$open = dataRef.current.openEvent) == null ? void 0 : _dataRef$current$open.type;\n    return (type == null ? void 0 : type.includes('mouse')) && type !== 'mousedown';\n  }, [dataRef]);\n\n  // When closing before opening, clear the delay timeouts to cancel it\n  // from showing.\n  React.useEffect(() => {\n    if (!enabled) return;\n    function onOpenChange(_ref) {\n      let {\n        open\n      } = _ref;\n      if (!open) {\n        clearTimeout(timeoutRef.current);\n        clearTimeout(restTimeoutRef.current);\n        blockMouseMoveRef.current = true;\n        restTimeoutPendingRef.current = false;\n      }\n    }\n    events.on('openchange', onOpenChange);\n    return () => {\n      events.off('openchange', onOpenChange);\n    };\n  }, [enabled, events]);\n  React.useEffect(() => {\n    if (!enabled) return;\n    if (!handleCloseRef.current) return;\n    if (!open) return;\n    function onLeave(event) {\n      if (isHoverOpen()) {\n        onOpenChange(false, event, 'hover');\n      }\n    }\n    const html = getDocument(elements.floating).documentElement;\n    html.addEventListener('mouseleave', onLeave);\n    return () => {\n      html.removeEventListener('mouseleave', onLeave);\n    };\n  }, [elements.floating, open, onOpenChange, enabled, handleCloseRef, isHoverOpen]);\n  const closeWithDelay = React.useCallback(function (event, runElseBranch, reason) {\n    if (runElseBranch === void 0) {\n      runElseBranch = true;\n    }\n    if (reason === void 0) {\n      reason = 'hover';\n    }\n    const closeDelay = getDelay(delayRef.current, 'close', pointerTypeRef.current);\n    if (closeDelay && !handlerRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = window.setTimeout(() => onOpenChange(false, event, reason), closeDelay);\n    } else if (runElseBranch) {\n      clearTimeout(timeoutRef.current);\n      onOpenChange(false, event, reason);\n    }\n  }, [delayRef, onOpenChange]);\n  const cleanupMouseMoveHandler = useEffectEvent(() => {\n    unbindMouseMoveRef.current();\n    handlerRef.current = undefined;\n  });\n  const clearPointerEvents = useEffectEvent(() => {\n    if (performedPointerEventsMutationRef.current) {\n      const body = getDocument(elements.floating).body;\n      body.style.pointerEvents = '';\n      body.removeAttribute(safePolygonIdentifier);\n      performedPointerEventsMutationRef.current = false;\n    }\n  });\n\n  // Registering the mouse events on the reference directly to bypass React's\n  // delegation system. If the cursor was on a disabled element and then entered\n  // the reference (no gap), `mouseenter` doesn't fire in the delegation system.\n  React.useEffect(() => {\n    if (!enabled) return;\n    function isClickLikeOpenEvent() {\n      return dataRef.current.openEvent ? ['click', 'mousedown'].includes(dataRef.current.openEvent.type) : false;\n    }\n    function onMouseEnter(event) {\n      clearTimeout(timeoutRef.current);\n      blockMouseMoveRef.current = false;\n      if (mouseOnly && !isMouseLikePointerType(pointerTypeRef.current) || restMs > 0 && !getDelay(delayRef.current, 'open')) {\n        return;\n      }\n      const openDelay = getDelay(delayRef.current, 'open', pointerTypeRef.current);\n      if (openDelay) {\n        timeoutRef.current = window.setTimeout(() => {\n          if (!openRef.current) {\n            onOpenChange(true, event, 'hover');\n          }\n        }, openDelay);\n      } else {\n        onOpenChange(true, event, 'hover');\n      }\n    }\n    function onMouseLeave(event) {\n      if (isClickLikeOpenEvent()) return;\n      unbindMouseMoveRef.current();\n      const doc = getDocument(elements.floating);\n      clearTimeout(restTimeoutRef.current);\n      restTimeoutPendingRef.current = false;\n      if (handleCloseRef.current && dataRef.current.floatingContext) {\n        // Prevent clearing `onScrollMouseLeave` timeout.\n        if (!open) {\n          clearTimeout(timeoutRef.current);\n        }\n        handlerRef.current = handleCloseRef.current({\n          ...dataRef.current.floatingContext,\n          tree,\n          x: event.clientX,\n          y: event.clientY,\n          onClose() {\n            clearPointerEvents();\n            cleanupMouseMoveHandler();\n            closeWithDelay(event, true, 'safe-polygon');\n          }\n        });\n        const handler = handlerRef.current;\n        doc.addEventListener('mousemove', handler);\n        unbindMouseMoveRef.current = () => {\n          doc.removeEventListener('mousemove', handler);\n        };\n        return;\n      }\n\n      // Allow interactivity without `safePolygon` on touch devices. With a\n      // pointer, a short close delay is an alternative, so it should work\n      // consistently.\n      const shouldClose = pointerTypeRef.current === 'touch' ? !contains(elements.floating, event.relatedTarget) : true;\n      if (shouldClose) {\n        closeWithDelay(event);\n      }\n    }\n\n    // Ensure the floating element closes after scrolling even if the pointer\n    // did not move.\n    // https://github.com/floating-ui/floating-ui/discussions/1692\n    function onScrollMouseLeave(event) {\n      if (isClickLikeOpenEvent()) return;\n      if (!dataRef.current.floatingContext) return;\n      handleCloseRef.current == null || handleCloseRef.current({\n        ...dataRef.current.floatingContext,\n        tree,\n        x: event.clientX,\n        y: event.clientY,\n        onClose() {\n          clearPointerEvents();\n          cleanupMouseMoveHandler();\n          closeWithDelay(event);\n        }\n      })(event);\n    }\n    if (isElement(elements.domReference)) {\n      var _elements$floating;\n      const ref = elements.domReference;\n      open && ref.addEventListener('mouseleave', onScrollMouseLeave);\n      (_elements$floating = elements.floating) == null || _elements$floating.addEventListener('mouseleave', onScrollMouseLeave);\n      move && ref.addEventListener('mousemove', onMouseEnter, {\n        once: true\n      });\n      ref.addEventListener('mouseenter', onMouseEnter);\n      ref.addEventListener('mouseleave', onMouseLeave);\n      return () => {\n        var _elements$floating2;\n        open && ref.removeEventListener('mouseleave', onScrollMouseLeave);\n        (_elements$floating2 = elements.floating) == null || _elements$floating2.removeEventListener('mouseleave', onScrollMouseLeave);\n        move && ref.removeEventListener('mousemove', onMouseEnter);\n        ref.removeEventListener('mouseenter', onMouseEnter);\n        ref.removeEventListener('mouseleave', onMouseLeave);\n      };\n    }\n  }, [elements, enabled, context, mouseOnly, restMs, move, closeWithDelay, cleanupMouseMoveHandler, clearPointerEvents, onOpenChange, open, openRef, tree, delayRef, handleCloseRef, dataRef]);\n\n  // Block pointer-events of every element other than the reference and floating\n  // while the floating element is open and has a `handleClose` handler. Also\n  // handles nested floating elements.\n  // https://github.com/floating-ui/floating-ui/issues/1722\n  index(() => {\n    var _handleCloseRef$curre;\n    if (!enabled) return;\n    if (open && (_handleCloseRef$curre = handleCloseRef.current) != null && _handleCloseRef$curre.__options.blockPointerEvents && isHoverOpen()) {\n      performedPointerEventsMutationRef.current = true;\n      const floatingEl = elements.floating;\n      if (isElement(elements.domReference) && floatingEl) {\n        var _tree$nodesRef$curren;\n        const body = getDocument(elements.floating).body;\n        body.setAttribute(safePolygonIdentifier, '');\n        const ref = elements.domReference;\n        const parentFloating = tree == null || (_tree$nodesRef$curren = tree.nodesRef.current.find(node => node.id === parentId)) == null || (_tree$nodesRef$curren = _tree$nodesRef$curren.context) == null ? void 0 : _tree$nodesRef$curren.elements.floating;\n        if (parentFloating) {\n          parentFloating.style.pointerEvents = '';\n        }\n        body.style.pointerEvents = 'none';\n        ref.style.pointerEvents = 'auto';\n        floatingEl.style.pointerEvents = 'auto';\n        return () => {\n          body.style.pointerEvents = '';\n          ref.style.pointerEvents = '';\n          floatingEl.style.pointerEvents = '';\n        };\n      }\n    }\n  }, [enabled, open, parentId, elements, tree, handleCloseRef, isHoverOpen]);\n  index(() => {\n    if (!open) {\n      pointerTypeRef.current = undefined;\n      restTimeoutPendingRef.current = false;\n      cleanupMouseMoveHandler();\n      clearPointerEvents();\n    }\n  }, [open, cleanupMouseMoveHandler, clearPointerEvents]);\n  React.useEffect(() => {\n    return () => {\n      cleanupMouseMoveHandler();\n      clearTimeout(timeoutRef.current);\n      clearTimeout(restTimeoutRef.current);\n      clearPointerEvents();\n    };\n  }, [enabled, elements.domReference, cleanupMouseMoveHandler, clearPointerEvents]);\n  const reference = React.useMemo(() => {\n    function setPointerRef(event) {\n      pointerTypeRef.current = event.pointerType;\n    }\n    return {\n      onPointerDown: setPointerRef,\n      onPointerEnter: setPointerRef,\n      onMouseMove(event) {\n        const {\n          nativeEvent\n        } = event;\n        function handleMouseMove() {\n          if (!blockMouseMoveRef.current && !openRef.current) {\n            onOpenChange(true, nativeEvent, 'hover');\n          }\n        }\n        if (mouseOnly && !isMouseLikePointerType(pointerTypeRef.current)) {\n          return;\n        }\n        if (open || restMs === 0) {\n          return;\n        }\n\n        // Ignore insignificant movements to account for tremors.\n        if (restTimeoutPendingRef.current && event.movementX ** 2 + event.movementY ** 2 < 2) {\n          return;\n        }\n        clearTimeout(restTimeoutRef.current);\n        if (pointerTypeRef.current === 'touch') {\n          handleMouseMove();\n        } else {\n          restTimeoutPendingRef.current = true;\n          restTimeoutRef.current = window.setTimeout(handleMouseMove, restMs);\n        }\n      }\n    };\n  }, [mouseOnly, onOpenChange, open, openRef, restMs]);\n  const floating = React.useMemo(() => ({\n    onMouseEnter() {\n      clearTimeout(timeoutRef.current);\n    },\n    onMouseLeave(event) {\n      closeWithDelay(event.nativeEvent, false);\n    }\n  }), [closeWithDelay]);\n  return React.useMemo(() => enabled ? {\n    reference,\n    floating\n  } : {}, [enabled, reference, floating]);\n}\n\nconst NOOP = () => {};\nconst FloatingDelayGroupContext = /*#__PURE__*/React.createContext({\n  delay: 0,\n  initialDelay: 0,\n  timeoutMs: 0,\n  currentId: null,\n  setCurrentId: NOOP,\n  setState: NOOP,\n  isInstantPhase: false\n});\n\n/**\n * @deprecated\n * Use the return value of `useDelayGroup()` instead.\n */\nconst useDelayGroupContext = () => React.useContext(FloatingDelayGroupContext);\n/**\n * Provides context for a group of floating elements that should share a\n * `delay`.\n * @see https://floating-ui.com/docs/FloatingDelayGroup\n */\nfunction FloatingDelayGroup(props) {\n  const {\n    children,\n    delay,\n    timeoutMs = 0\n  } = props;\n  const [state, setState] = React.useReducer((prev, next) => ({\n    ...prev,\n    ...next\n  }), {\n    delay,\n    timeoutMs,\n    initialDelay: delay,\n    currentId: null,\n    isInstantPhase: false\n  });\n  const initialCurrentIdRef = React.useRef(null);\n  const setCurrentId = React.useCallback(currentId => {\n    setState({\n      currentId\n    });\n  }, []);\n  index(() => {\n    if (state.currentId) {\n      if (initialCurrentIdRef.current === null) {\n        initialCurrentIdRef.current = state.currentId;\n      } else if (!state.isInstantPhase) {\n        setState({\n          isInstantPhase: true\n        });\n      }\n    } else {\n      if (state.isInstantPhase) {\n        setState({\n          isInstantPhase: false\n        });\n      }\n      initialCurrentIdRef.current = null;\n    }\n  }, [state.currentId, state.isInstantPhase]);\n  return /*#__PURE__*/React.createElement(FloatingDelayGroupContext.Provider, {\n    value: React.useMemo(() => ({\n      ...state,\n      setState,\n      setCurrentId\n    }), [state, setCurrentId])\n  }, children);\n}\n/**\n * Enables grouping when called inside a component that's a child of a\n * `FloatingDelayGroup`.\n * @see https://floating-ui.com/docs/FloatingDelayGroup\n */\nfunction useDelayGroup(context, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    floatingId\n  } = context;\n  const {\n    id: optionId,\n    enabled = true\n  } = options;\n  const id = optionId != null ? optionId : floatingId;\n  const groupContext = useDelayGroupContext();\n  const {\n    currentId,\n    setCurrentId,\n    initialDelay,\n    setState,\n    timeoutMs\n  } = groupContext;\n  index(() => {\n    if (!enabled) return;\n    if (!currentId) return;\n    setState({\n      delay: {\n        open: 1,\n        close: getDelay(initialDelay, 'close')\n      }\n    });\n    if (currentId !== id) {\n      onOpenChange(false);\n    }\n  }, [enabled, id, onOpenChange, setState, currentId, initialDelay]);\n  index(() => {\n    function unset() {\n      onOpenChange(false);\n      setState({\n        delay: initialDelay,\n        currentId: null\n      });\n    }\n    if (!enabled) return;\n    if (!currentId) return;\n    if (!open && currentId === id) {\n      if (timeoutMs) {\n        const timeout = window.setTimeout(unset, timeoutMs);\n        return () => {\n          clearTimeout(timeout);\n        };\n      }\n      unset();\n    }\n  }, [enabled, open, setState, currentId, id, onOpenChange, initialDelay, timeoutMs]);\n  index(() => {\n    if (!enabled) return;\n    if (setCurrentId === NOOP || !open) return;\n    setCurrentId(id);\n  }, [enabled, open, setCurrentId, id]);\n  return groupContext;\n}\n\nfunction getAncestors(nodes, id) {\n  var _nodes$find;\n  let allAncestors = [];\n  let currentParentId = (_nodes$find = nodes.find(node => node.id === id)) == null ? void 0 : _nodes$find.parentId;\n  while (currentParentId) {\n    const currentNode = nodes.find(node => node.id === currentParentId);\n    currentParentId = currentNode == null ? void 0 : currentNode.parentId;\n    if (currentNode) {\n      allAncestors = allAncestors.concat(currentNode);\n    }\n  }\n  return allAncestors;\n}\n\nfunction getChildren(nodes, id) {\n  let allChildren = nodes.filter(node => {\n    var _node$context;\n    return node.parentId === id && ((_node$context = node.context) == null ? void 0 : _node$context.open);\n  });\n  let currentChildren = allChildren;\n  while (currentChildren.length) {\n    currentChildren = nodes.filter(node => {\n      var _currentChildren;\n      return (_currentChildren = currentChildren) == null ? void 0 : _currentChildren.some(n => {\n        var _node$context2;\n        return node.parentId === n.id && ((_node$context2 = node.context) == null ? void 0 : _node$context2.open);\n      });\n    });\n    allChildren = allChildren.concat(currentChildren);\n  }\n  return allChildren;\n}\nfunction getDeepestNode(nodes, id) {\n  let deepestNodeId;\n  let maxDepth = -1;\n  function findDeepest(nodeId, depth) {\n    if (depth > maxDepth) {\n      deepestNodeId = nodeId;\n      maxDepth = depth;\n    }\n    const children = getChildren(nodes, nodeId);\n    children.forEach(child => {\n      findDeepest(child.id, depth + 1);\n    });\n  }\n  findDeepest(id, 0);\n  return nodes.find(node => node.id === deepestNodeId);\n}\n\n// Modified to add conditional `aria-hidden` support:\n// https://github.com/theKashey/aria-hidden/blob/9220c8f4a4fd35f63bee5510a9f41a37264382d4/src/index.ts\nlet counterMap = /*#__PURE__*/new WeakMap();\nlet uncontrolledElementsSet = /*#__PURE__*/new WeakSet();\nlet markerMap = {};\nlet lockCount$1 = 0;\nconst supportsInert = () => typeof HTMLElement !== 'undefined' && 'inert' in HTMLElement.prototype;\nconst unwrapHost = node => node && (node.host || unwrapHost(node.parentNode));\nconst correctElements = (parent, targets) => targets.map(target => {\n  if (parent.contains(target)) {\n    return target;\n  }\n  const correctedTarget = unwrapHost(target);\n  if (parent.contains(correctedTarget)) {\n    return correctedTarget;\n  }\n  return null;\n}).filter(x => x != null);\nfunction applyAttributeToOthers(uncorrectedAvoidElements, body, ariaHidden, inert) {\n  const markerName = 'data-floating-ui-inert';\n  const controlAttribute = inert ? 'inert' : ariaHidden ? 'aria-hidden' : null;\n  const avoidElements = correctElements(body, uncorrectedAvoidElements);\n  const elementsToKeep = new Set();\n  const elementsToStop = new Set(avoidElements);\n  const hiddenElements = [];\n  if (!markerMap[markerName]) {\n    markerMap[markerName] = new WeakMap();\n  }\n  const markerCounter = markerMap[markerName];\n  avoidElements.forEach(keep);\n  deep(body);\n  elementsToKeep.clear();\n  function keep(el) {\n    if (!el || elementsToKeep.has(el)) {\n      return;\n    }\n    elementsToKeep.add(el);\n    el.parentNode && keep(el.parentNode);\n  }\n  function deep(parent) {\n    if (!parent || elementsToStop.has(parent)) {\n      return;\n    }\n    [].forEach.call(parent.children, node => {\n      if (getNodeName(node) === 'script') return;\n      if (elementsToKeep.has(node)) {\n        deep(node);\n      } else {\n        const attr = controlAttribute ? node.getAttribute(controlAttribute) : null;\n        const alreadyHidden = attr !== null && attr !== 'false';\n        const counterValue = (counterMap.get(node) || 0) + 1;\n        const markerValue = (markerCounter.get(node) || 0) + 1;\n        counterMap.set(node, counterValue);\n        markerCounter.set(node, markerValue);\n        hiddenElements.push(node);\n        if (counterValue === 1 && alreadyHidden) {\n          uncontrolledElementsSet.add(node);\n        }\n        if (markerValue === 1) {\n          node.setAttribute(markerName, '');\n        }\n        if (!alreadyHidden && controlAttribute) {\n          node.setAttribute(controlAttribute, 'true');\n        }\n      }\n    });\n  }\n  lockCount$1++;\n  return () => {\n    hiddenElements.forEach(element => {\n      const counterValue = (counterMap.get(element) || 0) - 1;\n      const markerValue = (markerCounter.get(element) || 0) - 1;\n      counterMap.set(element, counterValue);\n      markerCounter.set(element, markerValue);\n      if (!counterValue) {\n        if (!uncontrolledElementsSet.has(element) && controlAttribute) {\n          element.removeAttribute(controlAttribute);\n        }\n        uncontrolledElementsSet.delete(element);\n      }\n      if (!markerValue) {\n        element.removeAttribute(markerName);\n      }\n    });\n    lockCount$1--;\n    if (!lockCount$1) {\n      counterMap = new WeakMap();\n      counterMap = new WeakMap();\n      uncontrolledElementsSet = new WeakSet();\n      markerMap = {};\n    }\n  };\n}\nfunction markOthers(avoidElements, ariaHidden, inert) {\n  if (ariaHidden === void 0) {\n    ariaHidden = false;\n  }\n  if (inert === void 0) {\n    inert = false;\n  }\n  const body = getDocument(avoidElements[0]).body;\n  return applyAttributeToOthers(avoidElements.concat(Array.from(body.querySelectorAll('[aria-live]'))), body, ariaHidden, inert);\n}\n\nconst getTabbableOptions = () => ({\n  getShadowRoot: true,\n  displayCheck:\n  // JSDOM does not support the `tabbable` library. To solve this we can\n  // check if `ResizeObserver` is a real function (not polyfilled), which\n  // determines if the current environment is JSDOM-like.\n  typeof ResizeObserver === 'function' && ResizeObserver.toString().includes('[native code]') ? 'full' : 'none'\n});\nfunction getTabbableIn(container, direction) {\n  const allTabbable = tabbable(container, getTabbableOptions());\n  if (direction === 'prev') {\n    allTabbable.reverse();\n  }\n  const activeIndex = allTabbable.indexOf(activeElement(getDocument(container)));\n  const nextTabbableElements = allTabbable.slice(activeIndex + 1);\n  return nextTabbableElements[0];\n}\nfunction getNextTabbable() {\n  return getTabbableIn(document.body, 'next');\n}\nfunction getPreviousTabbable() {\n  return getTabbableIn(document.body, 'prev');\n}\nfunction isOutsideEvent(event, container) {\n  const containerElement = container || event.currentTarget;\n  const relatedTarget = event.relatedTarget;\n  return !relatedTarget || !contains(containerElement, relatedTarget);\n}\nfunction disableFocusInside(container) {\n  const tabbableElements = tabbable(container, getTabbableOptions());\n  tabbableElements.forEach(element => {\n    element.dataset.tabindex = element.getAttribute('tabindex') || '';\n    element.setAttribute('tabindex', '-1');\n  });\n}\nfunction enableFocusInside(container) {\n  const elements = container.querySelectorAll('[data-tabindex]');\n  elements.forEach(element => {\n    const tabindex = element.dataset.tabindex;\n    delete element.dataset.tabindex;\n    if (tabindex) {\n      element.setAttribute('tabindex', tabindex);\n    } else {\n      element.removeAttribute('tabindex');\n    }\n  });\n}\n\n// See Diego Haz's Sandbox for making this logic work well on Safari/iOS:\n// https://codesandbox.io/s/tabbable-portal-f4tng?file=/src/FocusTrap.tsx\n\nconst HIDDEN_STYLES = {\n  border: 0,\n  clip: 'rect(0 0 0 0)',\n  height: '1px',\n  margin: '-1px',\n  overflow: 'hidden',\n  padding: 0,\n  position: 'fixed',\n  whiteSpace: 'nowrap',\n  width: '1px',\n  top: 0,\n  left: 0\n};\nlet timeoutId;\nfunction setActiveElementOnTab(event) {\n  if (event.key === 'Tab') {\n    event.target;\n    clearTimeout(timeoutId);\n  }\n}\nconst FocusGuard = /*#__PURE__*/React.forwardRef(function FocusGuard(props, ref) {\n  const [role, setRole] = React.useState();\n  index(() => {\n    if (isSafari()) {\n      // Unlike other screen readers such as NVDA and JAWS, the virtual cursor\n      // on VoiceOver does trigger the onFocus event, so we can use the focus\n      // trap element. On Safari, only buttons trigger the onFocus event.\n      // NB: \"group\" role in the Sandbox no longer appears to work, must be a\n      // button role.\n      setRole('button');\n    }\n    document.addEventListener('keydown', setActiveElementOnTab);\n    return () => {\n      document.removeEventListener('keydown', setActiveElementOnTab);\n    };\n  }, []);\n  const restProps = {\n    ref,\n    tabIndex: 0,\n    // Role is only for VoiceOver\n    role,\n    'aria-hidden': role ? undefined : true,\n    [createAttribute('focus-guard')]: '',\n    style: HIDDEN_STYLES\n  };\n  return /*#__PURE__*/React.createElement(\"span\", _extends({}, props, restProps));\n});\n\nconst PortalContext = /*#__PURE__*/React.createContext(null);\nconst attr = /*#__PURE__*/createAttribute('portal');\n/**\n * @see https://floating-ui.com/docs/FloatingPortal#usefloatingportalnode\n */\nfunction useFloatingPortalNode(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    id,\n    root\n  } = props;\n  const uniqueId = useId();\n  const portalContext = usePortalContext();\n  const [portalNode, setPortalNode] = React.useState(null);\n  const portalNodeRef = React.useRef(null);\n  index(() => {\n    return () => {\n      portalNode == null || portalNode.remove();\n      // Allow the subsequent layout effects to create a new node on updates.\n      // The portal node will still be cleaned up on unmount.\n      // https://github.com/floating-ui/floating-ui/issues/2454\n      queueMicrotask(() => {\n        portalNodeRef.current = null;\n      });\n    };\n  }, [portalNode]);\n  index(() => {\n    // Wait for the uniqueId to be generated before creating the portal node in\n    // React <18 (using `useFloatingId` instead of the native `useId`).\n    // https://github.com/floating-ui/floating-ui/issues/2778\n    if (!uniqueId) return;\n    if (portalNodeRef.current) return;\n    const existingIdRoot = id ? document.getElementById(id) : null;\n    if (!existingIdRoot) return;\n    const subRoot = document.createElement('div');\n    subRoot.id = uniqueId;\n    subRoot.setAttribute(attr, '');\n    existingIdRoot.appendChild(subRoot);\n    portalNodeRef.current = subRoot;\n    setPortalNode(subRoot);\n  }, [id, uniqueId]);\n  index(() => {\n    // Wait for the root to exist before creating the portal node. The root must\n    // be stored in state, not a ref, for this to work reactively.\n    if (root === null) return;\n    if (!uniqueId) return;\n    if (portalNodeRef.current) return;\n    let container = root || (portalContext == null ? void 0 : portalContext.portalNode);\n    if (container && !isElement(container)) container = container.current;\n    container = container || document.body;\n    let idWrapper = null;\n    if (id) {\n      idWrapper = document.createElement('div');\n      idWrapper.id = id;\n      container.appendChild(idWrapper);\n    }\n    const subRoot = document.createElement('div');\n    subRoot.id = uniqueId;\n    subRoot.setAttribute(attr, '');\n    container = idWrapper || container;\n    container.appendChild(subRoot);\n    portalNodeRef.current = subRoot;\n    setPortalNode(subRoot);\n  }, [id, root, uniqueId, portalContext]);\n  return portalNode;\n}\n/**\n * Portals the floating element into a given container element — by default,\n * outside of the app root and into the body.\n * This is necessary to ensure the floating element can appear outside any\n * potential parent containers that cause clipping (such as `overflow: hidden`),\n * while retaining its location in the React tree.\n * @see https://floating-ui.com/docs/FloatingPortal\n */\nfunction FloatingPortal(props) {\n  const {\n    children,\n    id,\n    root,\n    preserveTabOrder = true\n  } = props;\n  const portalNode = useFloatingPortalNode({\n    id,\n    root\n  });\n  const [focusManagerState, setFocusManagerState] = React.useState(null);\n  const beforeOutsideRef = React.useRef(null);\n  const afterOutsideRef = React.useRef(null);\n  const beforeInsideRef = React.useRef(null);\n  const afterInsideRef = React.useRef(null);\n  const modal = focusManagerState == null ? void 0 : focusManagerState.modal;\n  const open = focusManagerState == null ? void 0 : focusManagerState.open;\n  const shouldRenderGuards =\n  // The FocusManager and therefore floating element are currently open/\n  // rendered.\n  !!focusManagerState &&\n  // Guards are only for non-modal focus management.\n  !focusManagerState.modal &&\n  // Don't render if unmount is transitioning.\n  focusManagerState.open && preserveTabOrder && !!(root || portalNode);\n\n  // https://codesandbox.io/s/tabbable-portal-f4tng?file=/src/TabbablePortal.tsx\n  React.useEffect(() => {\n    if (!portalNode || !preserveTabOrder || modal) {\n      return;\n    }\n\n    // Make sure elements inside the portal element are tabbable only when the\n    // portal has already been focused, either by tabbing into a focus trap\n    // element outside or using the mouse.\n    function onFocus(event) {\n      if (portalNode && isOutsideEvent(event)) {\n        const focusing = event.type === 'focusin';\n        const manageFocus = focusing ? enableFocusInside : disableFocusInside;\n        manageFocus(portalNode);\n      }\n    }\n    // Listen to the event on the capture phase so they run before the focus\n    // trap elements onFocus prop is called.\n    portalNode.addEventListener('focusin', onFocus, true);\n    portalNode.addEventListener('focusout', onFocus, true);\n    return () => {\n      portalNode.removeEventListener('focusin', onFocus, true);\n      portalNode.removeEventListener('focusout', onFocus, true);\n    };\n  }, [portalNode, preserveTabOrder, modal]);\n  React.useEffect(() => {\n    if (!portalNode) return;\n    if (open) return;\n    enableFocusInside(portalNode);\n  }, [open, portalNode]);\n  return /*#__PURE__*/React.createElement(PortalContext.Provider, {\n    value: React.useMemo(() => ({\n      preserveTabOrder,\n      beforeOutsideRef,\n      afterOutsideRef,\n      beforeInsideRef,\n      afterInsideRef,\n      portalNode,\n      setFocusManagerState\n    }), [preserveTabOrder, portalNode])\n  }, shouldRenderGuards && portalNode && /*#__PURE__*/React.createElement(FocusGuard, {\n    \"data-type\": \"outside\",\n    ref: beforeOutsideRef,\n    onFocus: event => {\n      if (isOutsideEvent(event, portalNode)) {\n        var _beforeInsideRef$curr;\n        (_beforeInsideRef$curr = beforeInsideRef.current) == null || _beforeInsideRef$curr.focus();\n      } else {\n        const prevTabbable = getPreviousTabbable() || (focusManagerState == null ? void 0 : focusManagerState.refs.domReference.current);\n        prevTabbable == null || prevTabbable.focus();\n      }\n    }\n  }), shouldRenderGuards && portalNode && /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-owns\": portalNode.id,\n    style: HIDDEN_STYLES\n  }), portalNode && /*#__PURE__*/ReactDOM.createPortal(children, portalNode), shouldRenderGuards && portalNode && /*#__PURE__*/React.createElement(FocusGuard, {\n    \"data-type\": \"outside\",\n    ref: afterOutsideRef,\n    onFocus: event => {\n      if (isOutsideEvent(event, portalNode)) {\n        var _afterInsideRef$curre;\n        (_afterInsideRef$curre = afterInsideRef.current) == null || _afterInsideRef$curre.focus();\n      } else {\n        const nextTabbable = getNextTabbable() || (focusManagerState == null ? void 0 : focusManagerState.refs.domReference.current);\n        nextTabbable == null || nextTabbable.focus();\n        (focusManagerState == null ? void 0 : focusManagerState.closeOnFocusOut) && (focusManagerState == null ? void 0 : focusManagerState.onOpenChange(false, event.nativeEvent, 'focus-out'));\n      }\n    }\n  }));\n}\nconst usePortalContext = () => React.useContext(PortalContext);\n\nconst FOCUSABLE_ATTRIBUTE = 'data-floating-ui-focusable';\nfunction getFloatingFocusElement(floatingElement) {\n  if (!floatingElement) {\n    return null;\n  }\n  // Try to find the element that has `{...getFloatingProps()}` spread on it.\n  // This indicates the floating element is acting as a positioning wrapper, and\n  // so focus should be managed on the child element with the event handlers and\n  // aria props.\n  return floatingElement.hasAttribute(FOCUSABLE_ATTRIBUTE) ? floatingElement : floatingElement.querySelector(\"[\" + FOCUSABLE_ATTRIBUTE + \"]\") || floatingElement;\n}\n\nconst LIST_LIMIT = 20;\nlet previouslyFocusedElements = [];\nfunction addPreviouslyFocusedElement(element) {\n  previouslyFocusedElements = previouslyFocusedElements.filter(el => el.isConnected);\n  let tabbableEl = element;\n  if (!tabbableEl || getNodeName(tabbableEl) === 'body') return;\n  if (!isTabbable(tabbableEl, getTabbableOptions())) {\n    const tabbableChild = tabbable(tabbableEl, getTabbableOptions())[0];\n    if (tabbableChild) {\n      tabbableEl = tabbableChild;\n    }\n  }\n  previouslyFocusedElements.push(tabbableEl);\n  if (previouslyFocusedElements.length > LIST_LIMIT) {\n    previouslyFocusedElements = previouslyFocusedElements.slice(-LIST_LIMIT);\n  }\n}\nfunction getPreviouslyFocusedElement() {\n  return previouslyFocusedElements.slice().reverse().find(el => el.isConnected);\n}\nconst VisuallyHiddenDismiss = /*#__PURE__*/React.forwardRef(function VisuallyHiddenDismiss(props, ref) {\n  return /*#__PURE__*/React.createElement(\"button\", _extends({}, props, {\n    type: \"button\",\n    ref: ref,\n    tabIndex: -1,\n    style: HIDDEN_STYLES\n  }));\n});\n/**\n * Provides focus management for the floating element.\n * @see https://floating-ui.com/docs/FloatingFocusManager\n */\nfunction FloatingFocusManager(props) {\n  const {\n    context,\n    children,\n    disabled = false,\n    order = ['content'],\n    guards: _guards = true,\n    initialFocus = 0,\n    returnFocus = true,\n    restoreFocus = false,\n    modal = true,\n    visuallyHiddenDismiss = false,\n    closeOnFocusOut = true\n  } = props;\n  const {\n    open,\n    refs,\n    nodeId,\n    onOpenChange,\n    events,\n    dataRef,\n    floatingId,\n    elements: {\n      domReference,\n      floating\n    }\n  } = context;\n  const ignoreInitialFocus = typeof initialFocus === 'number' && initialFocus < 0;\n  // If the reference is a combobox and is typeable (e.g. input/textarea),\n  // there are different focus semantics. The guards should not be rendered, but\n  // aria-hidden should be applied to all nodes still. Further, the visually\n  // hidden dismiss button should only appear at the end of the list, not the\n  // start.\n  const isUntrappedTypeableCombobox = isTypeableCombobox(domReference) && ignoreInitialFocus;\n\n  // Force the guards to be rendered if the `inert` attribute is not supported.\n  const guards = supportsInert() ? _guards : true;\n  const orderRef = useLatestRef(order);\n  const initialFocusRef = useLatestRef(initialFocus);\n  const returnFocusRef = useLatestRef(returnFocus);\n  const tree = useFloatingTree();\n  const portalContext = usePortalContext();\n  const startDismissButtonRef = React.useRef(null);\n  const endDismissButtonRef = React.useRef(null);\n  const preventReturnFocusRef = React.useRef(false);\n  const isPointerDownRef = React.useRef(false);\n  const tabbableIndexRef = React.useRef(-1);\n  const isInsidePortal = portalContext != null;\n  const floatingFocusElement = getFloatingFocusElement(floating);\n  const getTabbableContent = useEffectEvent(function (container) {\n    if (container === void 0) {\n      container = floatingFocusElement;\n    }\n    return container ? tabbable(container, getTabbableOptions()) : [];\n  });\n  const getTabbableElements = useEffectEvent(container => {\n    const content = getTabbableContent(container);\n    return orderRef.current.map(type => {\n      if (domReference && type === 'reference') {\n        return domReference;\n      }\n      if (floatingFocusElement && type === 'floating') {\n        return floatingFocusElement;\n      }\n      return content;\n    }).filter(Boolean).flat();\n  });\n  React.useEffect(() => {\n    preventReturnFocusRef.current = false;\n  }, [disabled]);\n  React.useEffect(() => {\n    if (disabled) return;\n    if (!modal) return;\n    function onKeyDown(event) {\n      if (event.key === 'Tab') {\n        // The focus guards have nothing to focus, so we need to stop the event.\n        if (contains(floatingFocusElement, activeElement(getDocument(floatingFocusElement))) && getTabbableContent().length === 0 && !isUntrappedTypeableCombobox) {\n          stopEvent(event);\n        }\n        const els = getTabbableElements();\n        const target = getTarget(event);\n        if (orderRef.current[0] === 'reference' && target === domReference) {\n          stopEvent(event);\n          if (event.shiftKey) {\n            enqueueFocus(els[els.length - 1]);\n          } else {\n            enqueueFocus(els[1]);\n          }\n        }\n        if (orderRef.current[1] === 'floating' && target === floatingFocusElement && event.shiftKey) {\n          stopEvent(event);\n          enqueueFocus(els[0]);\n        }\n      }\n    }\n    const doc = getDocument(floatingFocusElement);\n    doc.addEventListener('keydown', onKeyDown);\n    return () => {\n      doc.removeEventListener('keydown', onKeyDown);\n    };\n  }, [disabled, domReference, floatingFocusElement, modal, orderRef, isUntrappedTypeableCombobox, getTabbableContent, getTabbableElements]);\n  React.useEffect(() => {\n    if (disabled) return;\n    if (!floating) return;\n    function handleFocusIn(event) {\n      const target = getTarget(event);\n      const tabbableContent = getTabbableContent();\n      const tabbableIndex = tabbableContent.indexOf(target);\n      if (tabbableIndex !== -1) {\n        tabbableIndexRef.current = tabbableIndex;\n      }\n    }\n    floating.addEventListener('focusin', handleFocusIn);\n    return () => {\n      floating.removeEventListener('focusin', handleFocusIn);\n    };\n  }, [disabled, floating, getTabbableContent]);\n  React.useEffect(() => {\n    if (disabled) return;\n    if (!closeOnFocusOut) return;\n\n    // In Safari, buttons lose focus when pressing them.\n    function handlePointerDown() {\n      isPointerDownRef.current = true;\n      setTimeout(() => {\n        isPointerDownRef.current = false;\n      });\n    }\n    function handleFocusOutside(event) {\n      const relatedTarget = event.relatedTarget;\n      queueMicrotask(() => {\n        const movedToUnrelatedNode = !(contains(domReference, relatedTarget) || contains(floating, relatedTarget) || contains(relatedTarget, floating) || contains(portalContext == null ? void 0 : portalContext.portalNode, relatedTarget) || relatedTarget != null && relatedTarget.hasAttribute(createAttribute('focus-guard')) || tree && (getChildren(tree.nodesRef.current, nodeId).find(node => {\n          var _node$context, _node$context2;\n          return contains((_node$context = node.context) == null ? void 0 : _node$context.elements.floating, relatedTarget) || contains((_node$context2 = node.context) == null ? void 0 : _node$context2.elements.domReference, relatedTarget);\n        }) || getAncestors(tree.nodesRef.current, nodeId).find(node => {\n          var _node$context3, _node$context4;\n          return ((_node$context3 = node.context) == null ? void 0 : _node$context3.elements.floating) === relatedTarget || ((_node$context4 = node.context) == null ? void 0 : _node$context4.elements.domReference) === relatedTarget;\n        })));\n\n        // Restore focus to the previous tabbable element index to prevent\n        // focus from being lost outside the floating tree.\n        if (restoreFocus && movedToUnrelatedNode && activeElement(getDocument(floatingFocusElement)) === getDocument(floatingFocusElement).body) {\n          // Let `FloatingPortal` effect knows that focus is still inside the\n          // floating tree.\n          if (isHTMLElement(floatingFocusElement)) {\n            floatingFocusElement.focus();\n          }\n          const prevTabbableIndex = tabbableIndexRef.current;\n          const tabbableContent = getTabbableContent();\n          const nodeToFocus = tabbableContent[prevTabbableIndex] || tabbableContent[tabbableContent.length - 1] || floatingFocusElement;\n          if (isHTMLElement(nodeToFocus)) {\n            nodeToFocus.focus();\n          }\n        }\n\n        // Focus did not move inside the floating tree, and there are no tabbable\n        // portal guards to handle closing.\n        if ((isUntrappedTypeableCombobox ? true : !modal) && relatedTarget && movedToUnrelatedNode && !isPointerDownRef.current &&\n        // Fix React 18 Strict Mode returnFocus due to double rendering.\n        relatedTarget !== getPreviouslyFocusedElement()) {\n          preventReturnFocusRef.current = true;\n          onOpenChange(false, event, 'focus-out');\n        }\n      });\n    }\n    if (floating && isHTMLElement(domReference)) {\n      domReference.addEventListener('focusout', handleFocusOutside);\n      domReference.addEventListener('pointerdown', handlePointerDown);\n      floating.addEventListener('focusout', handleFocusOutside);\n      return () => {\n        domReference.removeEventListener('focusout', handleFocusOutside);\n        domReference.removeEventListener('pointerdown', handlePointerDown);\n        floating.removeEventListener('focusout', handleFocusOutside);\n      };\n    }\n  }, [disabled, domReference, floating, floatingFocusElement, modal, nodeId, tree, portalContext, onOpenChange, closeOnFocusOut, restoreFocus, getTabbableContent, isUntrappedTypeableCombobox]);\n  React.useEffect(() => {\n    var _portalContext$portal;\n    if (disabled) return;\n\n    // Don't hide portals nested within the parent portal.\n    const portalNodes = Array.from((portalContext == null || (_portalContext$portal = portalContext.portalNode) == null ? void 0 : _portalContext$portal.querySelectorAll(\"[\" + createAttribute('portal') + \"]\")) || []);\n    if (floating) {\n      const insideElements = [floating, ...portalNodes, startDismissButtonRef.current, endDismissButtonRef.current, orderRef.current.includes('reference') || isUntrappedTypeableCombobox ? domReference : null].filter(x => x != null);\n      const cleanup = modal || isUntrappedTypeableCombobox ? markOthers(insideElements, guards, !guards) : markOthers(insideElements);\n      return () => {\n        cleanup();\n      };\n    }\n  }, [disabled, domReference, floating, modal, orderRef, portalContext, isUntrappedTypeableCombobox, guards]);\n  index(() => {\n    if (disabled || !isHTMLElement(floatingFocusElement)) return;\n    const doc = getDocument(floatingFocusElement);\n    const previouslyFocusedElement = activeElement(doc);\n\n    // Wait for any layout effect state setters to execute to set `tabIndex`.\n    queueMicrotask(() => {\n      const focusableElements = getTabbableElements(floatingFocusElement);\n      const initialFocusValue = initialFocusRef.current;\n      const elToFocus = (typeof initialFocusValue === 'number' ? focusableElements[initialFocusValue] : initialFocusValue.current) || floatingFocusElement;\n      const focusAlreadyInsideFloatingEl = contains(floatingFocusElement, previouslyFocusedElement);\n      if (!ignoreInitialFocus && !focusAlreadyInsideFloatingEl && open) {\n        enqueueFocus(elToFocus, {\n          preventScroll: elToFocus === floatingFocusElement\n        });\n      }\n    });\n  }, [disabled, open, floatingFocusElement, ignoreInitialFocus, getTabbableElements, initialFocusRef]);\n  index(() => {\n    if (disabled || !floatingFocusElement) return;\n    let preventReturnFocusScroll = false;\n    const doc = getDocument(floatingFocusElement);\n    const previouslyFocusedElement = activeElement(doc);\n    const contextData = dataRef.current;\n    let openEvent = contextData.openEvent;\n    addPreviouslyFocusedElement(previouslyFocusedElement);\n\n    // Dismissing via outside press should always ignore `returnFocus` to\n    // prevent unwanted scrolling.\n    function onOpenChange(_ref) {\n      let {\n        open,\n        reason,\n        event,\n        nested\n      } = _ref;\n      if (open) {\n        openEvent = event;\n      }\n      if (reason === 'escape-key' && refs.domReference.current) {\n        addPreviouslyFocusedElement(refs.domReference.current);\n      }\n      if (reason === 'hover' && event.type === 'mouseleave') {\n        preventReturnFocusRef.current = true;\n      }\n      if (reason !== 'outside-press') return;\n      if (nested) {\n        preventReturnFocusRef.current = false;\n        preventReturnFocusScroll = true;\n      } else {\n        preventReturnFocusRef.current = !(isVirtualClick(event) || isVirtualPointerEvent(event));\n      }\n    }\n    events.on('openchange', onOpenChange);\n    const fallbackEl = doc.createElement('span');\n    fallbackEl.setAttribute('tabindex', '-1');\n    fallbackEl.setAttribute('aria-hidden', 'true');\n    Object.assign(fallbackEl.style, HIDDEN_STYLES);\n    if (isInsidePortal && domReference) {\n      domReference.insertAdjacentElement('afterend', fallbackEl);\n    }\n    function getReturnElement() {\n      if (typeof returnFocusRef.current === 'boolean') {\n        return getPreviouslyFocusedElement() || fallbackEl;\n      }\n      return returnFocusRef.current.current || fallbackEl;\n    }\n    return () => {\n      events.off('openchange', onOpenChange);\n      const activeEl = activeElement(doc);\n      const isFocusInsideFloatingTree = contains(floating, activeEl) || tree && getChildren(tree.nodesRef.current, nodeId).some(node => {\n        var _node$context5;\n        return contains((_node$context5 = node.context) == null ? void 0 : _node$context5.elements.floating, activeEl);\n      });\n      const shouldFocusReference = isFocusInsideFloatingTree || openEvent && ['click', 'mousedown'].includes(openEvent.type);\n      if (shouldFocusReference && refs.domReference.current) {\n        addPreviouslyFocusedElement(refs.domReference.current);\n      }\n      const returnElement = getReturnElement();\n      queueMicrotask(() => {\n        if (\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        returnFocusRef.current && !preventReturnFocusRef.current && isHTMLElement(returnElement) && (\n        // If the focus moved somewhere else after mount, avoid returning focus\n        // since it likely entered a different element which should be\n        // respected: https://github.com/floating-ui/floating-ui/issues/2607\n        returnElement !== activeEl && activeEl !== doc.body ? isFocusInsideFloatingTree : true)) {\n          returnElement.focus({\n            preventScroll: preventReturnFocusScroll\n          });\n        }\n        fallbackEl.remove();\n      });\n    };\n  }, [disabled, floating, floatingFocusElement, returnFocusRef, dataRef, refs, events, tree, nodeId, isInsidePortal, domReference]);\n\n  // Synchronize the `context` & `modal` value to the FloatingPortal context.\n  // It will decide whether or not it needs to render its own guards.\n  index(() => {\n    if (disabled) return;\n    if (!portalContext) return;\n    portalContext.setFocusManagerState({\n      modal,\n      closeOnFocusOut,\n      open,\n      onOpenChange,\n      refs\n    });\n    return () => {\n      portalContext.setFocusManagerState(null);\n    };\n  }, [disabled, portalContext, modal, open, onOpenChange, refs, closeOnFocusOut]);\n  index(() => {\n    if (disabled) return;\n    if (!floatingFocusElement) return;\n    if (typeof MutationObserver !== 'function') return;\n    if (ignoreInitialFocus) return;\n    const handleMutation = () => {\n      const tabIndex = floatingFocusElement.getAttribute('tabindex');\n      const tabbableContent = getTabbableContent();\n      const activeEl = activeElement(getDocument(floating));\n      const tabbableIndex = tabbableContent.indexOf(activeEl);\n      if (tabbableIndex !== -1) {\n        tabbableIndexRef.current = tabbableIndex;\n      }\n      if (orderRef.current.includes('floating') || activeEl !== refs.domReference.current && tabbableContent.length === 0) {\n        if (tabIndex !== '0') {\n          floatingFocusElement.setAttribute('tabindex', '0');\n        }\n      } else if (tabIndex !== '-1') {\n        floatingFocusElement.setAttribute('tabindex', '-1');\n      }\n    };\n    handleMutation();\n    const observer = new MutationObserver(handleMutation);\n    observer.observe(floatingFocusElement, {\n      childList: true,\n      subtree: true,\n      attributes: true\n    });\n    return () => {\n      observer.disconnect();\n    };\n  }, [disabled, floating, floatingFocusElement, refs, orderRef, getTabbableContent, ignoreInitialFocus]);\n  function renderDismissButton(location) {\n    if (disabled || !visuallyHiddenDismiss || !modal) {\n      return null;\n    }\n    return /*#__PURE__*/React.createElement(VisuallyHiddenDismiss, {\n      ref: location === 'start' ? startDismissButtonRef : endDismissButtonRef,\n      onClick: event => onOpenChange(false, event.nativeEvent)\n    }, typeof visuallyHiddenDismiss === 'string' ? visuallyHiddenDismiss : 'Dismiss');\n  }\n  const shouldRenderGuards = !disabled && guards && (modal ? !isUntrappedTypeableCombobox : true) && (isInsidePortal || modal);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, shouldRenderGuards && /*#__PURE__*/React.createElement(FocusGuard, {\n    \"data-type\": \"inside\",\n    ref: portalContext == null ? void 0 : portalContext.beforeInsideRef,\n    onFocus: event => {\n      if (modal) {\n        const els = getTabbableElements();\n        enqueueFocus(order[0] === 'reference' ? els[0] : els[els.length - 1]);\n      } else if (portalContext != null && portalContext.preserveTabOrder && portalContext.portalNode) {\n        preventReturnFocusRef.current = false;\n        if (isOutsideEvent(event, portalContext.portalNode)) {\n          const nextTabbable = getNextTabbable() || domReference;\n          nextTabbable == null || nextTabbable.focus();\n        } else {\n          var _portalContext$before;\n          (_portalContext$before = portalContext.beforeOutsideRef.current) == null || _portalContext$before.focus();\n        }\n      }\n    }\n  }), !isUntrappedTypeableCombobox && renderDismissButton('start'), children, renderDismissButton('end'), shouldRenderGuards && /*#__PURE__*/React.createElement(FocusGuard, {\n    \"data-type\": \"inside\",\n    ref: portalContext == null ? void 0 : portalContext.afterInsideRef,\n    onFocus: event => {\n      if (modal) {\n        enqueueFocus(getTabbableElements()[0]);\n      } else if (portalContext != null && portalContext.preserveTabOrder && portalContext.portalNode) {\n        if (closeOnFocusOut) {\n          preventReturnFocusRef.current = true;\n        }\n        if (isOutsideEvent(event, portalContext.portalNode)) {\n          const prevTabbable = getPreviousTabbable() || domReference;\n          prevTabbable == null || prevTabbable.focus();\n        } else {\n          var _portalContext$afterO;\n          (_portalContext$afterO = portalContext.afterOutsideRef.current) == null || _portalContext$afterO.focus();\n        }\n      }\n    }\n  }));\n}\n\nlet lockCount = 0;\nfunction enableScrollLock() {\n  const isIOS = /iP(hone|ad|od)|iOS/.test(getPlatform());\n  const bodyStyle = document.body.style;\n  // RTL <body> scrollbar\n  const scrollbarX = Math.round(document.documentElement.getBoundingClientRect().left) + document.documentElement.scrollLeft;\n  const paddingProp = scrollbarX ? 'paddingLeft' : 'paddingRight';\n  const scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;\n  const scrollX = bodyStyle.left ? parseFloat(bodyStyle.left) : window.scrollX;\n  const scrollY = bodyStyle.top ? parseFloat(bodyStyle.top) : window.scrollY;\n  bodyStyle.overflow = 'hidden';\n  if (scrollbarWidth) {\n    bodyStyle[paddingProp] = scrollbarWidth + \"px\";\n  }\n\n  // Only iOS doesn't respect `overflow: hidden` on document.body, and this\n  // technique has fewer side effects.\n  if (isIOS) {\n    var _window$visualViewpor, _window$visualViewpor2;\n    // iOS 12 does not support `visualViewport`.\n    const offsetLeft = ((_window$visualViewpor = window.visualViewport) == null ? void 0 : _window$visualViewpor.offsetLeft) || 0;\n    const offsetTop = ((_window$visualViewpor2 = window.visualViewport) == null ? void 0 : _window$visualViewpor2.offsetTop) || 0;\n    Object.assign(bodyStyle, {\n      position: 'fixed',\n      top: -(scrollY - Math.floor(offsetTop)) + \"px\",\n      left: -(scrollX - Math.floor(offsetLeft)) + \"px\",\n      right: '0'\n    });\n  }\n  return () => {\n    Object.assign(bodyStyle, {\n      overflow: '',\n      [paddingProp]: ''\n    });\n    if (isIOS) {\n      Object.assign(bodyStyle, {\n        position: '',\n        top: '',\n        left: '',\n        right: ''\n      });\n      window.scrollTo(scrollX, scrollY);\n    }\n  };\n}\nlet cleanup = () => {};\n\n/**\n * Provides base styling for a fixed overlay element to dim content or block\n * pointer events behind a floating element.\n * It's a regular `<div>`, so it can be styled via any CSS solution you prefer.\n * @see https://floating-ui.com/docs/FloatingOverlay\n */\nconst FloatingOverlay = /*#__PURE__*/React.forwardRef(function FloatingOverlay(props, ref) {\n  const {\n    lockScroll = false,\n    ...rest\n  } = props;\n  index(() => {\n    if (!lockScroll) return;\n    lockCount++;\n    if (lockCount === 1) {\n      cleanup = enableScrollLock();\n    }\n    return () => {\n      lockCount--;\n      if (lockCount === 0) {\n        cleanup();\n      }\n    };\n  }, [lockScroll]);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, rest, {\n    style: {\n      position: 'fixed',\n      overflow: 'auto',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      ...rest.style\n    }\n  }));\n});\n\nfunction isButtonTarget(event) {\n  return isHTMLElement(event.target) && event.target.tagName === 'BUTTON';\n}\nfunction isSpaceIgnored(element) {\n  return isTypeableElement(element);\n}\n/**\n * Opens or closes the floating element when clicking the reference element.\n * @see https://floating-ui.com/docs/useClick\n */\nfunction useClick(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    dataRef,\n    elements: {\n      domReference\n    }\n  } = context;\n  const {\n    enabled = true,\n    event: eventOption = 'click',\n    toggle = true,\n    ignoreMouse = false,\n    keyboardHandlers = true\n  } = props;\n  const pointerTypeRef = React.useRef();\n  const didKeyDownRef = React.useRef(false);\n  const reference = React.useMemo(() => ({\n    onPointerDown(event) {\n      pointerTypeRef.current = event.pointerType;\n    },\n    onMouseDown(event) {\n      const pointerType = pointerTypeRef.current;\n\n      // Ignore all buttons except for the \"main\" button.\n      // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n      if (event.button !== 0) return;\n      if (eventOption === 'click') return;\n      if (isMouseLikePointerType(pointerType, true) && ignoreMouse) return;\n      if (open && toggle && (dataRef.current.openEvent ? dataRef.current.openEvent.type === 'mousedown' : true)) {\n        onOpenChange(false, event.nativeEvent, 'click');\n      } else {\n        // Prevent stealing focus from the floating element\n        event.preventDefault();\n        onOpenChange(true, event.nativeEvent, 'click');\n      }\n    },\n    onClick(event) {\n      const pointerType = pointerTypeRef.current;\n      if (eventOption === 'mousedown' && pointerTypeRef.current) {\n        pointerTypeRef.current = undefined;\n        return;\n      }\n      if (isMouseLikePointerType(pointerType, true) && ignoreMouse) return;\n      if (open && toggle && (dataRef.current.openEvent ? dataRef.current.openEvent.type === 'click' : true)) {\n        onOpenChange(false, event.nativeEvent, 'click');\n      } else {\n        onOpenChange(true, event.nativeEvent, 'click');\n      }\n    },\n    onKeyDown(event) {\n      pointerTypeRef.current = undefined;\n      if (event.defaultPrevented || !keyboardHandlers || isButtonTarget(event)) {\n        return;\n      }\n      if (event.key === ' ' && !isSpaceIgnored(domReference)) {\n        // Prevent scrolling\n        event.preventDefault();\n        didKeyDownRef.current = true;\n      }\n      if (event.key === 'Enter') {\n        if (open && toggle) {\n          onOpenChange(false, event.nativeEvent, 'click');\n        } else {\n          onOpenChange(true, event.nativeEvent, 'click');\n        }\n      }\n    },\n    onKeyUp(event) {\n      if (event.defaultPrevented || !keyboardHandlers || isButtonTarget(event) || isSpaceIgnored(domReference)) {\n        return;\n      }\n      if (event.key === ' ' && didKeyDownRef.current) {\n        didKeyDownRef.current = false;\n        if (open && toggle) {\n          onOpenChange(false, event.nativeEvent, 'click');\n        } else {\n          onOpenChange(true, event.nativeEvent, 'click');\n        }\n      }\n    }\n  }), [dataRef, domReference, eventOption, ignoreMouse, keyboardHandlers, onOpenChange, open, toggle]);\n  return React.useMemo(() => enabled ? {\n    reference\n  } : {}, [enabled, reference]);\n}\n\nfunction createVirtualElement(domElement, data) {\n  let offsetX = null;\n  let offsetY = null;\n  let isAutoUpdateEvent = false;\n  return {\n    contextElement: domElement || undefined,\n    getBoundingClientRect() {\n      var _data$dataRef$current;\n      const domRect = (domElement == null ? void 0 : domElement.getBoundingClientRect()) || {\n        width: 0,\n        height: 0,\n        x: 0,\n        y: 0\n      };\n      const isXAxis = data.axis === 'x' || data.axis === 'both';\n      const isYAxis = data.axis === 'y' || data.axis === 'both';\n      const canTrackCursorOnAutoUpdate = ['mouseenter', 'mousemove'].includes(((_data$dataRef$current = data.dataRef.current.openEvent) == null ? void 0 : _data$dataRef$current.type) || '') && data.pointerType !== 'touch';\n      let width = domRect.width;\n      let height = domRect.height;\n      let x = domRect.x;\n      let y = domRect.y;\n      if (offsetX == null && data.x && isXAxis) {\n        offsetX = domRect.x - data.x;\n      }\n      if (offsetY == null && data.y && isYAxis) {\n        offsetY = domRect.y - data.y;\n      }\n      x -= offsetX || 0;\n      y -= offsetY || 0;\n      width = 0;\n      height = 0;\n      if (!isAutoUpdateEvent || canTrackCursorOnAutoUpdate) {\n        width = data.axis === 'y' ? domRect.width : 0;\n        height = data.axis === 'x' ? domRect.height : 0;\n        x = isXAxis && data.x != null ? data.x : x;\n        y = isYAxis && data.y != null ? data.y : y;\n      } else if (isAutoUpdateEvent && !canTrackCursorOnAutoUpdate) {\n        height = data.axis === 'x' ? domRect.height : height;\n        width = data.axis === 'y' ? domRect.width : width;\n      }\n      isAutoUpdateEvent = true;\n      return {\n        width,\n        height,\n        x,\n        y,\n        top: y,\n        right: x + width,\n        bottom: y + height,\n        left: x\n      };\n    }\n  };\n}\nfunction isMouseBasedEvent(event) {\n  return event != null && event.clientX != null;\n}\n/**\n * Positions the floating element relative to a client point (in the viewport),\n * such as the mouse position. By default, it follows the mouse cursor.\n * @see https://floating-ui.com/docs/useClientPoint\n */\nfunction useClientPoint(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    dataRef,\n    elements: {\n      floating,\n      domReference\n    },\n    refs\n  } = context;\n  const {\n    enabled = true,\n    axis = 'both',\n    x = null,\n    y = null\n  } = props;\n  const initialRef = React.useRef(false);\n  const cleanupListenerRef = React.useRef(null);\n  const [pointerType, setPointerType] = React.useState();\n  const [reactive, setReactive] = React.useState([]);\n  const setReference = useEffectEvent((x, y) => {\n    if (initialRef.current) return;\n\n    // Prevent setting if the open event was not a mouse-like one\n    // (e.g. focus to open, then hover over the reference element).\n    // Only apply if the event exists.\n    if (dataRef.current.openEvent && !isMouseBasedEvent(dataRef.current.openEvent)) {\n      return;\n    }\n    refs.setPositionReference(createVirtualElement(domReference, {\n      x,\n      y,\n      axis,\n      dataRef,\n      pointerType\n    }));\n  });\n  const handleReferenceEnterOrMove = useEffectEvent(event => {\n    if (x != null || y != null) return;\n    if (!open) {\n      setReference(event.clientX, event.clientY);\n    } else if (!cleanupListenerRef.current) {\n      // If there's no cleanup, there's no listener, but we want to ensure\n      // we add the listener if the cursor landed on the floating element and\n      // then back on the reference (i.e. it's interactive).\n      setReactive([]);\n    }\n  });\n\n  // If the pointer is a mouse-like pointer, we want to continue following the\n  // mouse even if the floating element is transitioning out. On touch\n  // devices, this is undesirable because the floating element will move to\n  // the dismissal touch point.\n  const openCheck = isMouseLikePointerType(pointerType) ? floating : open;\n  const addListener = React.useCallback(() => {\n    // Explicitly specified `x`/`y` coordinates shouldn't add a listener.\n    if (!openCheck || !enabled || x != null || y != null) return;\n    const win = getWindow(floating);\n    function handleMouseMove(event) {\n      const target = getTarget(event);\n      if (!contains(floating, target)) {\n        setReference(event.clientX, event.clientY);\n      } else {\n        win.removeEventListener('mousemove', handleMouseMove);\n        cleanupListenerRef.current = null;\n      }\n    }\n    if (!dataRef.current.openEvent || isMouseBasedEvent(dataRef.current.openEvent)) {\n      win.addEventListener('mousemove', handleMouseMove);\n      const cleanup = () => {\n        win.removeEventListener('mousemove', handleMouseMove);\n        cleanupListenerRef.current = null;\n      };\n      cleanupListenerRef.current = cleanup;\n      return cleanup;\n    }\n    refs.setPositionReference(domReference);\n  }, [openCheck, enabled, x, y, floating, dataRef, refs, domReference, setReference]);\n  React.useEffect(() => {\n    return addListener();\n  }, [addListener, reactive]);\n  React.useEffect(() => {\n    if (enabled && !floating) {\n      initialRef.current = false;\n    }\n  }, [enabled, floating]);\n  React.useEffect(() => {\n    if (!enabled && open) {\n      initialRef.current = true;\n    }\n  }, [enabled, open]);\n  index(() => {\n    if (enabled && (x != null || y != null)) {\n      initialRef.current = false;\n      setReference(x, y);\n    }\n  }, [enabled, x, y, setReference]);\n  const reference = React.useMemo(() => {\n    function setPointerTypeRef(_ref) {\n      let {\n        pointerType\n      } = _ref;\n      setPointerType(pointerType);\n    }\n    return {\n      onPointerDown: setPointerTypeRef,\n      onPointerEnter: setPointerTypeRef,\n      onMouseMove: handleReferenceEnterOrMove,\n      onMouseEnter: handleReferenceEnterOrMove\n    };\n  }, [handleReferenceEnterOrMove]);\n  return React.useMemo(() => enabled ? {\n    reference\n  } : {}, [enabled, reference]);\n}\n\nconst bubbleHandlerKeys = {\n  pointerdown: 'onPointerDown',\n  mousedown: 'onMouseDown',\n  click: 'onClick'\n};\nconst captureHandlerKeys = {\n  pointerdown: 'onPointerDownCapture',\n  mousedown: 'onMouseDownCapture',\n  click: 'onClickCapture'\n};\nconst normalizeProp = normalizable => {\n  var _normalizable$escapeK, _normalizable$outside;\n  return {\n    escapeKey: typeof normalizable === 'boolean' ? normalizable : (_normalizable$escapeK = normalizable == null ? void 0 : normalizable.escapeKey) != null ? _normalizable$escapeK : false,\n    outsidePress: typeof normalizable === 'boolean' ? normalizable : (_normalizable$outside = normalizable == null ? void 0 : normalizable.outsidePress) != null ? _normalizable$outside : true\n  };\n};\n/**\n * Closes the floating element when a dismissal is requested — by default, when\n * the user presses the `escape` key or outside of the floating element.\n * @see https://floating-ui.com/docs/useDismiss\n */\nfunction useDismiss(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    elements,\n    dataRef\n  } = context;\n  const {\n    enabled = true,\n    escapeKey = true,\n    outsidePress: unstable_outsidePress = true,\n    outsidePressEvent = 'pointerdown',\n    referencePress = false,\n    referencePressEvent = 'pointerdown',\n    ancestorScroll = false,\n    bubbles,\n    capture\n  } = props;\n  const tree = useFloatingTree();\n  const outsidePressFn = useEffectEvent(typeof unstable_outsidePress === 'function' ? unstable_outsidePress : () => false);\n  const outsidePress = typeof unstable_outsidePress === 'function' ? outsidePressFn : unstable_outsidePress;\n  const insideReactTreeRef = React.useRef(false);\n  const endedOrStartedInsideRef = React.useRef(false);\n  const {\n    escapeKey: escapeKeyBubbles,\n    outsidePress: outsidePressBubbles\n  } = normalizeProp(bubbles);\n  const {\n    escapeKey: escapeKeyCapture,\n    outsidePress: outsidePressCapture\n  } = normalizeProp(capture);\n  const isComposingRef = React.useRef(false);\n  const closeOnEscapeKeyDown = useEffectEvent(event => {\n    var _dataRef$current$floa;\n    if (!open || !enabled || !escapeKey || event.key !== 'Escape') {\n      return;\n    }\n\n    // Wait until IME is settled. Pressing `Escape` while composing should\n    // close the compose menu, but not the floating element.\n    if (isComposingRef.current) {\n      return;\n    }\n    const nodeId = (_dataRef$current$floa = dataRef.current.floatingContext) == null ? void 0 : _dataRef$current$floa.nodeId;\n    const children = tree ? getChildren(tree.nodesRef.current, nodeId) : [];\n    if (!escapeKeyBubbles) {\n      event.stopPropagation();\n      if (children.length > 0) {\n        let shouldDismiss = true;\n        children.forEach(child => {\n          var _child$context;\n          if ((_child$context = child.context) != null && _child$context.open && !child.context.dataRef.current.__escapeKeyBubbles) {\n            shouldDismiss = false;\n            return;\n          }\n        });\n        if (!shouldDismiss) {\n          return;\n        }\n      }\n    }\n    onOpenChange(false, isReactEvent(event) ? event.nativeEvent : event, 'escape-key');\n  });\n  const closeOnEscapeKeyDownCapture = useEffectEvent(event => {\n    var _getTarget2;\n    const callback = () => {\n      var _getTarget;\n      closeOnEscapeKeyDown(event);\n      (_getTarget = getTarget(event)) == null || _getTarget.removeEventListener('keydown', callback);\n    };\n    (_getTarget2 = getTarget(event)) == null || _getTarget2.addEventListener('keydown', callback);\n  });\n  const closeOnPressOutside = useEffectEvent(event => {\n    var _dataRef$current$floa2;\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    const insideReactTree = insideReactTreeRef.current;\n    insideReactTreeRef.current = false;\n\n    // When click outside is lazy (`click` event), handle dragging.\n    // Don't close if:\n    // - The click started inside the floating element.\n    // - The click ended inside the floating element.\n    const endedOrStartedInside = endedOrStartedInsideRef.current;\n    endedOrStartedInsideRef.current = false;\n    if (outsidePressEvent === 'click' && endedOrStartedInside) {\n      return;\n    }\n    if (insideReactTree) {\n      return;\n    }\n    if (typeof outsidePress === 'function' && !outsidePress(event)) {\n      return;\n    }\n    const target = getTarget(event);\n    const inertSelector = \"[\" + createAttribute('inert') + \"]\";\n    const markers = getDocument(elements.floating).querySelectorAll(inertSelector);\n    let targetRootAncestor = isElement(target) ? target : null;\n    while (targetRootAncestor && !isLastTraversableNode(targetRootAncestor)) {\n      const nextParent = getParentNode(targetRootAncestor);\n      if (isLastTraversableNode(nextParent) || !isElement(nextParent)) {\n        break;\n      }\n      targetRootAncestor = nextParent;\n    }\n\n    // Check if the click occurred on a third-party element injected after the\n    // floating element rendered.\n    if (markers.length && isElement(target) && !isRootElement(target) &&\n    // Clicked on a direct ancestor (e.g. FloatingOverlay).\n    !contains(target, elements.floating) &&\n    // If the target root element contains none of the markers, then the\n    // element was injected after the floating element rendered.\n    Array.from(markers).every(marker => !contains(targetRootAncestor, marker))) {\n      return;\n    }\n\n    // Check if the click occurred on the scrollbar\n    if (isHTMLElement(target) && floating) {\n      // In Firefox, `target.scrollWidth > target.clientWidth` for inline\n      // elements.\n      const canScrollX = target.clientWidth > 0 && target.scrollWidth > target.clientWidth;\n      const canScrollY = target.clientHeight > 0 && target.scrollHeight > target.clientHeight;\n      let xCond = canScrollY && event.offsetX > target.clientWidth;\n\n      // In some browsers it is possible to change the <body> (or window)\n      // scrollbar to the left side, but is very rare and is difficult to\n      // check for. Plus, for modal dialogs with backdrops, it is more\n      // important that the backdrop is checked but not so much the window.\n      if (canScrollY) {\n        const isRTL = getComputedStyle(target).direction === 'rtl';\n        if (isRTL) {\n          xCond = event.offsetX <= target.offsetWidth - target.clientWidth;\n        }\n      }\n      if (xCond || canScrollX && event.offsetY > target.clientHeight) {\n        return;\n      }\n    }\n    const nodeId = (_dataRef$current$floa2 = dataRef.current.floatingContext) == null ? void 0 : _dataRef$current$floa2.nodeId;\n    const targetIsInsideChildren = tree && getChildren(tree.nodesRef.current, nodeId).some(node => {\n      var _node$context;\n      return isEventTargetWithin(event, (_node$context = node.context) == null ? void 0 : _node$context.elements.floating);\n    });\n    if (isEventTargetWithin(event, elements.floating) || isEventTargetWithin(event, elements.domReference) || targetIsInsideChildren) {\n      return;\n    }\n    const children = tree ? getChildren(tree.nodesRef.current, nodeId) : [];\n    if (children.length > 0) {\n      let shouldDismiss = true;\n      children.forEach(child => {\n        var _child$context2;\n        if ((_child$context2 = child.context) != null && _child$context2.open && !child.context.dataRef.current.__outsidePressBubbles) {\n          shouldDismiss = false;\n          return;\n        }\n      });\n      if (!shouldDismiss) {\n        return;\n      }\n    }\n    onOpenChange(false, event, 'outside-press');\n  });\n  const closeOnPressOutsideCapture = useEffectEvent(event => {\n    var _getTarget4;\n    const callback = () => {\n      var _getTarget3;\n      closeOnPressOutside(event);\n      (_getTarget3 = getTarget(event)) == null || _getTarget3.removeEventListener(outsidePressEvent, callback);\n    };\n    (_getTarget4 = getTarget(event)) == null || _getTarget4.addEventListener(outsidePressEvent, callback);\n  });\n  React.useEffect(() => {\n    if (!open || !enabled) {\n      return;\n    }\n    dataRef.current.__escapeKeyBubbles = escapeKeyBubbles;\n    dataRef.current.__outsidePressBubbles = outsidePressBubbles;\n    let compositionTimeout = -1;\n    function onScroll(event) {\n      onOpenChange(false, event, 'ancestor-scroll');\n    }\n    function handleCompositionStart() {\n      window.clearTimeout(compositionTimeout);\n      isComposingRef.current = true;\n    }\n    function handleCompositionEnd() {\n      // Safari fires `compositionend` before `keydown`, so we need to wait\n      // until the next tick to set `isComposing` to `false`.\n      // https://bugs.webkit.org/show_bug.cgi?id=165004\n      compositionTimeout = window.setTimeout(() => {\n        isComposingRef.current = false;\n      },\n      // 0ms or 1ms don't work in Safari. 5ms appears to consistently work.\n      // Only apply to WebKit for the test to remain 0ms.\n      isWebKit() ? 5 : 0);\n    }\n    const doc = getDocument(elements.floating);\n    if (escapeKey) {\n      doc.addEventListener('keydown', escapeKeyCapture ? closeOnEscapeKeyDownCapture : closeOnEscapeKeyDown, escapeKeyCapture);\n      doc.addEventListener('compositionstart', handleCompositionStart);\n      doc.addEventListener('compositionend', handleCompositionEnd);\n    }\n    outsidePress && doc.addEventListener(outsidePressEvent, outsidePressCapture ? closeOnPressOutsideCapture : closeOnPressOutside, outsidePressCapture);\n    let ancestors = [];\n    if (ancestorScroll) {\n      if (isElement(elements.domReference)) {\n        ancestors = getOverflowAncestors(elements.domReference);\n      }\n      if (isElement(elements.floating)) {\n        ancestors = ancestors.concat(getOverflowAncestors(elements.floating));\n      }\n      if (!isElement(elements.reference) && elements.reference && elements.reference.contextElement) {\n        ancestors = ancestors.concat(getOverflowAncestors(elements.reference.contextElement));\n      }\n    }\n\n    // Ignore the visual viewport for scrolling dismissal (allow pinch-zoom)\n    ancestors = ancestors.filter(ancestor => {\n      var _doc$defaultView;\n      return ancestor !== ((_doc$defaultView = doc.defaultView) == null ? void 0 : _doc$defaultView.visualViewport);\n    });\n    ancestors.forEach(ancestor => {\n      ancestor.addEventListener('scroll', onScroll, {\n        passive: true\n      });\n    });\n    return () => {\n      if (escapeKey) {\n        doc.removeEventListener('keydown', escapeKeyCapture ? closeOnEscapeKeyDownCapture : closeOnEscapeKeyDown, escapeKeyCapture);\n        doc.removeEventListener('compositionstart', handleCompositionStart);\n        doc.removeEventListener('compositionend', handleCompositionEnd);\n      }\n      outsidePress && doc.removeEventListener(outsidePressEvent, outsidePressCapture ? closeOnPressOutsideCapture : closeOnPressOutside, outsidePressCapture);\n      ancestors.forEach(ancestor => {\n        ancestor.removeEventListener('scroll', onScroll);\n      });\n      window.clearTimeout(compositionTimeout);\n    };\n  }, [dataRef, elements, escapeKey, outsidePress, outsidePressEvent, open, onOpenChange, ancestorScroll, enabled, escapeKeyBubbles, outsidePressBubbles, closeOnEscapeKeyDown, escapeKeyCapture, closeOnEscapeKeyDownCapture, closeOnPressOutside, outsidePressCapture, closeOnPressOutsideCapture]);\n  React.useEffect(() => {\n    insideReactTreeRef.current = false;\n  }, [outsidePress, outsidePressEvent]);\n  const reference = React.useMemo(() => ({\n    onKeyDown: closeOnEscapeKeyDown,\n    [bubbleHandlerKeys[referencePressEvent]]: event => {\n      if (referencePress) {\n        onOpenChange(false, event.nativeEvent, 'reference-press');\n      }\n    }\n  }), [closeOnEscapeKeyDown, onOpenChange, referencePress, referencePressEvent]);\n  const floating = React.useMemo(() => ({\n    onKeyDown: closeOnEscapeKeyDown,\n    onMouseDown() {\n      endedOrStartedInsideRef.current = true;\n    },\n    onMouseUp() {\n      endedOrStartedInsideRef.current = true;\n    },\n    [captureHandlerKeys[outsidePressEvent]]: () => {\n      insideReactTreeRef.current = true;\n    }\n  }), [closeOnEscapeKeyDown, outsidePressEvent]);\n  return React.useMemo(() => enabled ? {\n    reference,\n    floating\n  } : {}, [enabled, reference, floating]);\n}\n\nfunction useFloatingRootContext(options) {\n  const {\n    open = false,\n    onOpenChange: onOpenChangeProp,\n    elements: elementsProp\n  } = options;\n  const floatingId = useId();\n  const dataRef = React.useRef({});\n  const [events] = React.useState(() => createPubSub());\n  const nested = useFloatingParentNodeId() != null;\n  if (process.env.NODE_ENV !== \"production\") {\n    const optionDomReference = elementsProp.reference;\n    if (optionDomReference && !isElement(optionDomReference)) {\n      error('Cannot pass a virtual element to the `elements.reference` option,', 'as it must be a real DOM element. Use `refs.setPositionReference()`', 'instead.');\n    }\n  }\n  const [positionReference, setPositionReference] = React.useState(elementsProp.reference);\n  const onOpenChange = useEffectEvent((open, event, reason) => {\n    dataRef.current.openEvent = open ? event : undefined;\n    events.emit('openchange', {\n      open,\n      event,\n      reason,\n      nested\n    });\n    onOpenChangeProp == null || onOpenChangeProp(open, event, reason);\n  });\n  const refs = React.useMemo(() => ({\n    setPositionReference\n  }), []);\n  const elements = React.useMemo(() => ({\n    reference: positionReference || elementsProp.reference || null,\n    floating: elementsProp.floating || null,\n    domReference: elementsProp.reference\n  }), [positionReference, elementsProp.reference, elementsProp.floating]);\n  return React.useMemo(() => ({\n    dataRef,\n    open,\n    onOpenChange,\n    elements,\n    events,\n    floatingId,\n    refs\n  }), [open, onOpenChange, elements, events, floatingId, refs]);\n}\n\n/**\n * Provides data to position a floating element and context to add interactions.\n * @see https://floating-ui.com/docs/useFloating\n */\nfunction useFloating(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    nodeId\n  } = options;\n  const internalRootContext = useFloatingRootContext({\n    ...options,\n    elements: {\n      reference: null,\n      floating: null,\n      ...options.elements\n    }\n  });\n  const rootContext = options.rootContext || internalRootContext;\n  const computedElements = rootContext.elements;\n  const [_domReference, setDomReference] = React.useState(null);\n  const [positionReference, _setPositionReference] = React.useState(null);\n  const optionDomReference = computedElements == null ? void 0 : computedElements.domReference;\n  const domReference = optionDomReference || _domReference;\n  const domReferenceRef = React.useRef(null);\n  const tree = useFloatingTree();\n  index(() => {\n    if (domReference) {\n      domReferenceRef.current = domReference;\n    }\n  }, [domReference]);\n  const position = useFloating$1({\n    ...options,\n    elements: {\n      ...computedElements,\n      ...(positionReference && {\n        reference: positionReference\n      })\n    }\n  });\n  const setPositionReference = React.useCallback(node => {\n    const computedPositionReference = isElement(node) ? {\n      getBoundingClientRect: () => node.getBoundingClientRect(),\n      contextElement: node\n    } : node;\n    // Store the positionReference in state if the DOM reference is specified externally via the\n    // `elements.reference` option. This ensures that it won't be overridden on future renders.\n    _setPositionReference(computedPositionReference);\n    position.refs.setReference(computedPositionReference);\n  }, [position.refs]);\n  const setReference = React.useCallback(node => {\n    if (isElement(node) || node === null) {\n      domReferenceRef.current = node;\n      setDomReference(node);\n    }\n\n    // Backwards-compatibility for passing a virtual element to `reference`\n    // after it has set the DOM reference.\n    if (isElement(position.refs.reference.current) || position.refs.reference.current === null ||\n    // Don't allow setting virtual elements using the old technique back to\n    // `null` to support `positionReference` + an unstable `reference`\n    // callback ref.\n    node !== null && !isElement(node)) {\n      position.refs.setReference(node);\n    }\n  }, [position.refs]);\n  const refs = React.useMemo(() => ({\n    ...position.refs,\n    setReference,\n    setPositionReference,\n    domReference: domReferenceRef\n  }), [position.refs, setReference, setPositionReference]);\n  const elements = React.useMemo(() => ({\n    ...position.elements,\n    domReference: domReference\n  }), [position.elements, domReference]);\n  const context = React.useMemo(() => ({\n    ...position,\n    ...rootContext,\n    refs,\n    elements,\n    nodeId\n  }), [position, refs, elements, nodeId, rootContext]);\n  index(() => {\n    rootContext.dataRef.current.floatingContext = context;\n    const node = tree == null ? void 0 : tree.nodesRef.current.find(node => node.id === nodeId);\n    if (node) {\n      node.context = context;\n    }\n  });\n  return React.useMemo(() => ({\n    ...position,\n    context,\n    refs,\n    elements\n  }), [position, refs, elements, context]);\n}\n\n/**\n * Opens the floating element while the reference element has focus, like CSS\n * `:focus`.\n * @see https://floating-ui.com/docs/useFocus\n */\nfunction useFocus(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    events,\n    dataRef,\n    elements\n  } = context;\n  const {\n    enabled = true,\n    visibleOnly = true\n  } = props;\n  const blockFocusRef = React.useRef(false);\n  const timeoutRef = React.useRef();\n  const keyboardModalityRef = React.useRef(true);\n  React.useEffect(() => {\n    if (!enabled) return;\n    const win = getWindow(elements.domReference);\n\n    // If the reference was focused and the user left the tab/window, and the\n    // floating element was not open, the focus should be blocked when they\n    // return to the tab/window.\n    function onBlur() {\n      if (!open && isHTMLElement(elements.domReference) && elements.domReference === activeElement(getDocument(elements.domReference))) {\n        blockFocusRef.current = true;\n      }\n    }\n    function onKeyDown() {\n      keyboardModalityRef.current = true;\n    }\n    win.addEventListener('blur', onBlur);\n    win.addEventListener('keydown', onKeyDown, true);\n    return () => {\n      win.removeEventListener('blur', onBlur);\n      win.removeEventListener('keydown', onKeyDown, true);\n    };\n  }, [elements.domReference, open, enabled]);\n  React.useEffect(() => {\n    if (!enabled) return;\n    function onOpenChange(_ref) {\n      let {\n        reason\n      } = _ref;\n      if (reason === 'reference-press' || reason === 'escape-key') {\n        blockFocusRef.current = true;\n      }\n    }\n    events.on('openchange', onOpenChange);\n    return () => {\n      events.off('openchange', onOpenChange);\n    };\n  }, [events, enabled]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timeoutRef.current);\n    };\n  }, []);\n  const reference = React.useMemo(() => ({\n    onPointerDown(event) {\n      if (isVirtualPointerEvent(event.nativeEvent)) return;\n      keyboardModalityRef.current = false;\n    },\n    onMouseLeave() {\n      blockFocusRef.current = false;\n    },\n    onFocus(event) {\n      if (blockFocusRef.current) return;\n      const target = getTarget(event.nativeEvent);\n      if (visibleOnly && isElement(target)) {\n        try {\n          // Mac Safari unreliably matches `:focus-visible` on the reference\n          // if focus was outside the page initially - use the fallback\n          // instead.\n          if (isSafari() && isMac()) throw Error();\n          if (!target.matches(':focus-visible')) return;\n        } catch (e) {\n          // Old browsers will throw an error when using `:focus-visible`.\n          if (!keyboardModalityRef.current && !isTypeableElement(target)) {\n            return;\n          }\n        }\n      }\n      onOpenChange(true, event.nativeEvent, 'focus');\n    },\n    onBlur(event) {\n      blockFocusRef.current = false;\n      const relatedTarget = event.relatedTarget;\n      const nativeEvent = event.nativeEvent;\n\n      // Hit the non-modal focus management portal guard. Focus will be\n      // moved into the floating element immediately after.\n      const movedToFocusGuard = isElement(relatedTarget) && relatedTarget.hasAttribute(createAttribute('focus-guard')) && relatedTarget.getAttribute('data-type') === 'outside';\n\n      // Wait for the window blur listener to fire.\n      timeoutRef.current = window.setTimeout(() => {\n        var _dataRef$current$floa;\n        const activeEl = activeElement(elements.domReference ? elements.domReference.ownerDocument : document);\n\n        // Focus left the page, keep it open.\n        if (!relatedTarget && activeEl === elements.domReference) return;\n\n        // When focusing the reference element (e.g. regular click), then\n        // clicking into the floating element, prevent it from hiding.\n        // Note: it must be focusable, e.g. `tabindex=\"-1\"`.\n        // We can not rely on relatedTarget to point to the correct element\n        // as it will only point to the shadow host of the newly focused element\n        // and not the element that actually has received focus if it is located\n        // inside a shadow root.\n        if (contains((_dataRef$current$floa = dataRef.current.floatingContext) == null ? void 0 : _dataRef$current$floa.refs.floating.current, activeEl) || contains(elements.domReference, activeEl) || movedToFocusGuard) {\n          return;\n        }\n        onOpenChange(false, nativeEvent, 'focus');\n      });\n    }\n  }), [dataRef, elements.domReference, onOpenChange, visibleOnly]);\n  return React.useMemo(() => enabled ? {\n    reference\n  } : {}, [enabled, reference]);\n}\n\nconst ACTIVE_KEY = 'active';\nconst SELECTED_KEY = 'selected';\nfunction mergeProps(userProps, propsList, elementKey) {\n  const map = new Map();\n  const isItem = elementKey === 'item';\n  let domUserProps = userProps;\n  if (isItem && userProps) {\n    const {\n      [ACTIVE_KEY]: _,\n      [SELECTED_KEY]: __,\n      ...validProps\n    } = userProps;\n    domUserProps = validProps;\n  }\n  return {\n    ...(elementKey === 'floating' && {\n      tabIndex: -1,\n      [FOCUSABLE_ATTRIBUTE]: ''\n    }),\n    ...domUserProps,\n    ...propsList.map(value => {\n      const propsOrGetProps = value ? value[elementKey] : null;\n      if (typeof propsOrGetProps === 'function') {\n        return userProps ? propsOrGetProps(userProps) : null;\n      }\n      return propsOrGetProps;\n    }).concat(userProps).reduce((acc, props) => {\n      if (!props) {\n        return acc;\n      }\n      Object.entries(props).forEach(_ref => {\n        let [key, value] = _ref;\n        if (isItem && [ACTIVE_KEY, SELECTED_KEY].includes(key)) {\n          return;\n        }\n        if (key.indexOf('on') === 0) {\n          if (!map.has(key)) {\n            map.set(key, []);\n          }\n          if (typeof value === 'function') {\n            var _map$get;\n            (_map$get = map.get(key)) == null || _map$get.push(value);\n            acc[key] = function () {\n              var _map$get2;\n              for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n              }\n              return (_map$get2 = map.get(key)) == null ? void 0 : _map$get2.map(fn => fn(...args)).find(val => val !== undefined);\n            };\n          }\n        } else {\n          acc[key] = value;\n        }\n      });\n      return acc;\n    }, {})\n  };\n}\n/**\n * Merges an array of interaction hooks' props into prop getters, allowing\n * event handler functions to be composed together without overwriting one\n * another.\n * @see https://floating-ui.com/docs/useInteractions\n */\nfunction useInteractions(propsList) {\n  if (propsList === void 0) {\n    propsList = [];\n  }\n  const referenceDeps = propsList.map(key => key == null ? void 0 : key.reference);\n  const floatingDeps = propsList.map(key => key == null ? void 0 : key.floating);\n  const itemDeps = propsList.map(key => key == null ? void 0 : key.item);\n  const getReferenceProps = React.useCallback(userProps => mergeProps(userProps, propsList, 'reference'),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  referenceDeps);\n  const getFloatingProps = React.useCallback(userProps => mergeProps(userProps, propsList, 'floating'),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  floatingDeps);\n  const getItemProps = React.useCallback(userProps => mergeProps(userProps, propsList, 'item'),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  itemDeps);\n  return React.useMemo(() => ({\n    getReferenceProps,\n    getFloatingProps,\n    getItemProps\n  }), [getReferenceProps, getFloatingProps, getItemProps]);\n}\n\nlet isPreventScrollSupported = false;\nfunction doSwitch(orientation, vertical, horizontal) {\n  switch (orientation) {\n    case 'vertical':\n      return vertical;\n    case 'horizontal':\n      return horizontal;\n    default:\n      return vertical || horizontal;\n  }\n}\nfunction isMainOrientationKey(key, orientation) {\n  const vertical = key === ARROW_UP || key === ARROW_DOWN;\n  const horizontal = key === ARROW_LEFT || key === ARROW_RIGHT;\n  return doSwitch(orientation, vertical, horizontal);\n}\nfunction isMainOrientationToEndKey(key, orientation, rtl) {\n  const vertical = key === ARROW_DOWN;\n  const horizontal = rtl ? key === ARROW_LEFT : key === ARROW_RIGHT;\n  return doSwitch(orientation, vertical, horizontal) || key === 'Enter' || key === ' ' || key === '';\n}\nfunction isCrossOrientationOpenKey(key, orientation, rtl) {\n  const vertical = rtl ? key === ARROW_LEFT : key === ARROW_RIGHT;\n  const horizontal = key === ARROW_DOWN;\n  return doSwitch(orientation, vertical, horizontal);\n}\nfunction isCrossOrientationCloseKey(key, orientation, rtl) {\n  const vertical = rtl ? key === ARROW_RIGHT : key === ARROW_LEFT;\n  const horizontal = key === ARROW_UP;\n  return doSwitch(orientation, vertical, horizontal);\n}\n/**\n * Adds arrow key-based navigation of a list of items, either using real DOM\n * focus or virtual focus.\n * @see https://floating-ui.com/docs/useListNavigation\n */\nfunction useListNavigation(context, props) {\n  const {\n    open,\n    onOpenChange,\n    elements\n  } = context;\n  const {\n    listRef,\n    activeIndex,\n    onNavigate: unstable_onNavigate = () => {},\n    enabled = true,\n    selectedIndex = null,\n    allowEscape = false,\n    loop = false,\n    nested = false,\n    rtl = false,\n    virtual = false,\n    focusItemOnOpen = 'auto',\n    focusItemOnHover = true,\n    openOnArrowKeyDown = true,\n    disabledIndices = undefined,\n    orientation = 'vertical',\n    cols = 1,\n    scrollItemIntoView = true,\n    virtualItemRef,\n    itemSizes,\n    dense = false\n  } = props;\n  if (process.env.NODE_ENV !== \"production\") {\n    if (allowEscape) {\n      if (!loop) {\n        warn('`useListNavigation` looping must be enabled to allow escaping.');\n      }\n      if (!virtual) {\n        warn('`useListNavigation` must be virtual to allow escaping.');\n      }\n    }\n    if (orientation === 'vertical' && cols > 1) {\n      warn('In grid list navigation mode (`cols` > 1), the `orientation` should', 'be either \"horizontal\" or \"both\".');\n    }\n  }\n  const floatingFocusElement = getFloatingFocusElement(elements.floating);\n  const floatingFocusElementRef = useLatestRef(floatingFocusElement);\n  const parentId = useFloatingParentNodeId();\n  const tree = useFloatingTree();\n  const onNavigate = useEffectEvent(unstable_onNavigate);\n  const typeableComboboxReference = isTypeableCombobox(elements.domReference);\n  const focusItemOnOpenRef = React.useRef(focusItemOnOpen);\n  const indexRef = React.useRef(selectedIndex != null ? selectedIndex : -1);\n  const keyRef = React.useRef(null);\n  const isPointerModalityRef = React.useRef(true);\n  const previousOnNavigateRef = React.useRef(onNavigate);\n  const previousMountedRef = React.useRef(!!elements.floating);\n  const previousOpenRef = React.useRef(open);\n  const forceSyncFocus = React.useRef(false);\n  const forceScrollIntoViewRef = React.useRef(false);\n  const disabledIndicesRef = useLatestRef(disabledIndices);\n  const latestOpenRef = useLatestRef(open);\n  const scrollItemIntoViewRef = useLatestRef(scrollItemIntoView);\n  const selectedIndexRef = useLatestRef(selectedIndex);\n  const [activeId, setActiveId] = React.useState();\n  const [virtualId, setVirtualId] = React.useState();\n  const focusItem = useEffectEvent(function (listRef, indexRef, forceScrollIntoView) {\n    if (forceScrollIntoView === void 0) {\n      forceScrollIntoView = false;\n    }\n    function runFocus(item) {\n      if (virtual) {\n        setActiveId(item.id);\n        tree == null || tree.events.emit('virtualfocus', item);\n        if (virtualItemRef) {\n          virtualItemRef.current = item;\n        }\n      } else {\n        enqueueFocus(item, {\n          preventScroll: true,\n          // Mac Safari does not move the virtual cursor unless the focus call\n          // is sync. However, for the very first focus call, we need to wait\n          // for the position to be ready in order to prevent unwanted\n          // scrolling. This means the virtual cursor will not move to the first\n          // item when first opening the floating element, but will on\n          // subsequent calls. `preventScroll` is supported in modern Safari,\n          // so we can use that instead.\n          // iOS Safari must be async or the first item will not be focused.\n          sync: isMac() && isSafari() ? isPreventScrollSupported || forceSyncFocus.current : false\n        });\n      }\n    }\n    const initialItem = listRef.current[indexRef.current];\n    if (initialItem) {\n      runFocus(initialItem);\n    }\n    requestAnimationFrame(() => {\n      const waitedItem = listRef.current[indexRef.current] || initialItem;\n      if (!waitedItem) return;\n      if (!initialItem) {\n        runFocus(waitedItem);\n      }\n      const scrollIntoViewOptions = scrollItemIntoViewRef.current;\n      const shouldScrollIntoView = scrollIntoViewOptions && item && (forceScrollIntoView || !isPointerModalityRef.current);\n      if (shouldScrollIntoView) {\n        // JSDOM doesn't support `.scrollIntoView()` but it's widely supported\n        // by all browsers.\n        waitedItem.scrollIntoView == null || waitedItem.scrollIntoView(typeof scrollIntoViewOptions === 'boolean' ? {\n          block: 'nearest',\n          inline: 'nearest'\n        } : scrollIntoViewOptions);\n      }\n    });\n  });\n  index(() => {\n    document.createElement('div').focus({\n      get preventScroll() {\n        isPreventScrollSupported = true;\n        return false;\n      }\n    });\n  }, []);\n\n  // Sync `selectedIndex` to be the `activeIndex` upon opening the floating\n  // element. Also, reset `activeIndex` upon closing the floating element.\n  index(() => {\n    if (!enabled) return;\n    if (open && elements.floating) {\n      if (focusItemOnOpenRef.current && selectedIndex != null) {\n        // Regardless of the pointer modality, we want to ensure the selected\n        // item comes into view when the floating element is opened.\n        forceScrollIntoViewRef.current = true;\n        indexRef.current = selectedIndex;\n        onNavigate(selectedIndex);\n      }\n    } else if (previousMountedRef.current) {\n      // Since the user can specify `onNavigate` conditionally\n      // (onNavigate: open ? setActiveIndex : setSelectedIndex),\n      // we store and call the previous function.\n      indexRef.current = -1;\n      previousOnNavigateRef.current(null);\n    }\n  }, [enabled, open, elements.floating, selectedIndex, onNavigate]);\n\n  // Sync `activeIndex` to be the focused item while the floating element is\n  // open.\n  index(() => {\n    if (!enabled) return;\n    if (open && elements.floating) {\n      if (activeIndex == null) {\n        forceSyncFocus.current = false;\n        if (selectedIndexRef.current != null) {\n          return;\n        }\n\n        // Reset while the floating element was open (e.g. the list changed).\n        if (previousMountedRef.current) {\n          indexRef.current = -1;\n          focusItem(listRef, indexRef);\n        }\n\n        // Initial sync.\n        if ((!previousOpenRef.current || !previousMountedRef.current) && focusItemOnOpenRef.current && (keyRef.current != null || focusItemOnOpenRef.current === true && keyRef.current == null)) {\n          let runs = 0;\n          const waitForListPopulated = () => {\n            if (listRef.current[0] == null) {\n              // Avoid letting the browser paint if possible on the first try,\n              // otherwise use rAF. Don't try more than twice, since something\n              // is wrong otherwise.\n              if (runs < 2) {\n                const scheduler = runs ? requestAnimationFrame : queueMicrotask;\n                scheduler(waitForListPopulated);\n              }\n              runs++;\n            } else {\n              indexRef.current = keyRef.current == null || isMainOrientationToEndKey(keyRef.current, orientation, rtl) || nested ? getMinIndex(listRef, disabledIndicesRef.current) : getMaxIndex(listRef, disabledIndicesRef.current);\n              keyRef.current = null;\n              onNavigate(indexRef.current);\n            }\n          };\n          waitForListPopulated();\n        }\n      } else if (!isIndexOutOfBounds(listRef, activeIndex)) {\n        indexRef.current = activeIndex;\n        focusItem(listRef, indexRef, forceScrollIntoViewRef.current);\n        forceScrollIntoViewRef.current = false;\n      }\n    }\n  }, [enabled, open, elements.floating, activeIndex, selectedIndexRef, nested, listRef, orientation, rtl, onNavigate, focusItem, disabledIndicesRef]);\n\n  // Ensure the parent floating element has focus when a nested child closes\n  // to allow arrow key navigation to work after the pointer leaves the child.\n  index(() => {\n    var _nodes$find;\n    if (!enabled || elements.floating || !tree || virtual || !previousMountedRef.current) {\n      return;\n    }\n    const nodes = tree.nodesRef.current;\n    const parent = (_nodes$find = nodes.find(node => node.id === parentId)) == null || (_nodes$find = _nodes$find.context) == null ? void 0 : _nodes$find.elements.floating;\n    const activeEl = activeElement(getDocument(elements.floating));\n    const treeContainsActiveEl = nodes.some(node => node.context && contains(node.context.elements.floating, activeEl));\n    if (parent && !treeContainsActiveEl && isPointerModalityRef.current) {\n      parent.focus({\n        preventScroll: true\n      });\n    }\n  }, [enabled, elements.floating, tree, parentId, virtual]);\n  index(() => {\n    if (!enabled) return;\n    if (!tree) return;\n    if (!virtual) return;\n    if (parentId) return;\n    function handleVirtualFocus(item) {\n      setVirtualId(item.id);\n      if (virtualItemRef) {\n        virtualItemRef.current = item;\n      }\n    }\n    tree.events.on('virtualfocus', handleVirtualFocus);\n    return () => {\n      tree.events.off('virtualfocus', handleVirtualFocus);\n    };\n  }, [enabled, tree, virtual, parentId, virtualItemRef]);\n  index(() => {\n    previousOnNavigateRef.current = onNavigate;\n    previousMountedRef.current = !!elements.floating;\n  });\n  index(() => {\n    if (!open) {\n      keyRef.current = null;\n    }\n  }, [open]);\n  index(() => {\n    previousOpenRef.current = open;\n  }, [open]);\n  const hasActiveIndex = activeIndex != null;\n  const item = React.useMemo(() => {\n    function syncCurrentTarget(currentTarget) {\n      if (!open) return;\n      const index = listRef.current.indexOf(currentTarget);\n      if (index !== -1) {\n        onNavigate(index);\n      }\n    }\n    const props = {\n      onFocus(_ref) {\n        let {\n          currentTarget\n        } = _ref;\n        syncCurrentTarget(currentTarget);\n      },\n      onClick: _ref2 => {\n        let {\n          currentTarget\n        } = _ref2;\n        return currentTarget.focus({\n          preventScroll: true\n        });\n      },\n      // Safari\n      ...(focusItemOnHover && {\n        onMouseMove(_ref3) {\n          let {\n            currentTarget\n          } = _ref3;\n          syncCurrentTarget(currentTarget);\n        },\n        onPointerLeave(_ref4) {\n          let {\n            pointerType\n          } = _ref4;\n          if (!isPointerModalityRef.current || pointerType === 'touch') {\n            return;\n          }\n          indexRef.current = -1;\n          focusItem(listRef, indexRef);\n          onNavigate(null);\n          if (!virtual) {\n            enqueueFocus(floatingFocusElementRef.current, {\n              preventScroll: true\n            });\n          }\n        }\n      })\n    };\n    return props;\n  }, [open, floatingFocusElementRef, focusItem, focusItemOnHover, listRef, onNavigate, virtual]);\n  const commonOnKeyDown = useEffectEvent(event => {\n    isPointerModalityRef.current = false;\n    forceSyncFocus.current = true;\n\n    // When composing a character, Chrome fires ArrowDown twice. Firefox/Safari\n    // don't appear to suffer from this. `event.isComposing` is avoided due to\n    // Safari not supporting it properly (although it's not needed in the first\n    // place for Safari, just avoiding any possible issues).\n    if (event.which === 229) {\n      return;\n    }\n\n    // If the floating element is animating out, ignore navigation. Otherwise,\n    // the `activeIndex` gets set to 0 despite not being open so the next time\n    // the user ArrowDowns, the first item won't be focused.\n    if (!latestOpenRef.current && event.currentTarget === floatingFocusElementRef.current) {\n      return;\n    }\n    if (nested && isCrossOrientationCloseKey(event.key, orientation, rtl)) {\n      stopEvent(event);\n      onOpenChange(false, event.nativeEvent, 'list-navigation');\n      if (isHTMLElement(elements.domReference)) {\n        if (virtual) {\n          tree == null || tree.events.emit('virtualfocus', elements.domReference);\n        } else {\n          elements.domReference.focus();\n        }\n      }\n      return;\n    }\n    const currentIndex = indexRef.current;\n    const minIndex = getMinIndex(listRef, disabledIndices);\n    const maxIndex = getMaxIndex(listRef, disabledIndices);\n    if (!typeableComboboxReference) {\n      if (event.key === 'Home') {\n        stopEvent(event);\n        indexRef.current = minIndex;\n        onNavigate(indexRef.current);\n      }\n      if (event.key === 'End') {\n        stopEvent(event);\n        indexRef.current = maxIndex;\n        onNavigate(indexRef.current);\n      }\n    }\n\n    // Grid navigation.\n    if (cols > 1) {\n      const sizes = itemSizes || Array.from({\n        length: listRef.current.length\n      }, () => ({\n        width: 1,\n        height: 1\n      }));\n      // To calculate movements on the grid, we use hypothetical cell indices\n      // as if every item was 1x1, then convert back to real indices.\n      const cellMap = buildCellMap(sizes, cols, dense);\n      const minGridIndex = cellMap.findIndex(index => index != null && !isDisabled(listRef.current, index, disabledIndices));\n      // last enabled index\n      const maxGridIndex = cellMap.reduce((foundIndex, index, cellIndex) => index != null && !isDisabled(listRef.current, index, disabledIndices) ? cellIndex : foundIndex, -1);\n      const index = cellMap[getGridNavigatedIndex({\n        current: cellMap.map(itemIndex => itemIndex != null ? listRef.current[itemIndex] : null)\n      }, {\n        event,\n        orientation,\n        loop,\n        cols,\n        // treat undefined (empty grid spaces) as disabled indices so we\n        // don't end up in them\n        disabledIndices: getCellIndices([...(disabledIndices || listRef.current.map((_, index) => isDisabled(listRef.current, index) ? index : undefined)), undefined], cellMap),\n        minIndex: minGridIndex,\n        maxIndex: maxGridIndex,\n        prevIndex: getCellIndexOfCorner(indexRef.current > maxIndex ? minIndex : indexRef.current, sizes, cellMap, cols,\n        // use a corner matching the edge closest to the direction\n        // we're moving in so we don't end up in the same item. Prefer\n        // top/left over bottom/right.\n        event.key === ARROW_DOWN ? 'bl' : event.key === ARROW_RIGHT ? 'tr' : 'tl'),\n        stopEvent: true\n      })];\n      if (index != null) {\n        indexRef.current = index;\n        onNavigate(indexRef.current);\n      }\n      if (orientation === 'both') {\n        return;\n      }\n    }\n    if (isMainOrientationKey(event.key, orientation)) {\n      stopEvent(event);\n\n      // Reset the index if no item is focused.\n      if (open && !virtual && activeElement(event.currentTarget.ownerDocument) === event.currentTarget) {\n        indexRef.current = isMainOrientationToEndKey(event.key, orientation, rtl) ? minIndex : maxIndex;\n        onNavigate(indexRef.current);\n        return;\n      }\n      if (isMainOrientationToEndKey(event.key, orientation, rtl)) {\n        if (loop) {\n          indexRef.current = currentIndex >= maxIndex ? allowEscape && currentIndex !== listRef.current.length ? -1 : minIndex : findNonDisabledIndex(listRef, {\n            startingIndex: currentIndex,\n            disabledIndices\n          });\n        } else {\n          indexRef.current = Math.min(maxIndex, findNonDisabledIndex(listRef, {\n            startingIndex: currentIndex,\n            disabledIndices\n          }));\n        }\n      } else {\n        if (loop) {\n          indexRef.current = currentIndex <= minIndex ? allowEscape && currentIndex !== -1 ? listRef.current.length : maxIndex : findNonDisabledIndex(listRef, {\n            startingIndex: currentIndex,\n            decrement: true,\n            disabledIndices\n          });\n        } else {\n          indexRef.current = Math.max(minIndex, findNonDisabledIndex(listRef, {\n            startingIndex: currentIndex,\n            decrement: true,\n            disabledIndices\n          }));\n        }\n      }\n      if (isIndexOutOfBounds(listRef, indexRef.current)) {\n        onNavigate(null);\n      } else {\n        onNavigate(indexRef.current);\n      }\n    }\n  });\n  const ariaActiveDescendantProp = React.useMemo(() => {\n    return virtual && open && hasActiveIndex && {\n      'aria-activedescendant': virtualId || activeId\n    };\n  }, [virtual, open, hasActiveIndex, virtualId, activeId]);\n  const floating = React.useMemo(() => {\n    return {\n      'aria-orientation': orientation === 'both' ? undefined : orientation,\n      ...(!isTypeableCombobox(elements.domReference) && ariaActiveDescendantProp),\n      onKeyDown: commonOnKeyDown,\n      onPointerMove() {\n        isPointerModalityRef.current = true;\n      }\n    };\n  }, [ariaActiveDescendantProp, commonOnKeyDown, elements.domReference, orientation]);\n  const reference = React.useMemo(() => {\n    function checkVirtualMouse(event) {\n      if (focusItemOnOpen === 'auto' && isVirtualClick(event.nativeEvent)) {\n        focusItemOnOpenRef.current = true;\n      }\n    }\n    function checkVirtualPointer(event) {\n      // `pointerdown` fires first, reset the state then perform the checks.\n      focusItemOnOpenRef.current = focusItemOnOpen;\n      if (focusItemOnOpen === 'auto' && isVirtualPointerEvent(event.nativeEvent)) {\n        focusItemOnOpenRef.current = true;\n      }\n    }\n    return {\n      ...ariaActiveDescendantProp,\n      onKeyDown(event) {\n        isPointerModalityRef.current = false;\n        const isArrowKey = event.key.startsWith('Arrow');\n        const isHomeOrEndKey = ['Home', 'End'].includes(event.key);\n        const isMoveKey = isArrowKey || isHomeOrEndKey;\n        const isCrossOpenKey = isCrossOrientationOpenKey(event.key, orientation, rtl);\n        const isCrossCloseKey = isCrossOrientationCloseKey(event.key, orientation, rtl);\n        const isMainKey = isMainOrientationKey(event.key, orientation);\n        const isNavigationKey = (nested ? isCrossOpenKey : isMainKey) || event.key === 'Enter' || event.key.trim() === '';\n        if (virtual && open) {\n          const rootNode = tree == null ? void 0 : tree.nodesRef.current.find(node => node.parentId == null);\n          const deepestNode = tree && rootNode ? getDeepestNode(tree.nodesRef.current, rootNode.id) : null;\n          if (isMoveKey && deepestNode && virtualItemRef) {\n            const eventObject = new KeyboardEvent('keydown', {\n              key: event.key,\n              bubbles: true\n            });\n            if (isCrossOpenKey || isCrossCloseKey) {\n              var _deepestNode$context, _deepestNode$context2;\n              const isCurrentTarget = ((_deepestNode$context = deepestNode.context) == null ? void 0 : _deepestNode$context.elements.domReference) === event.currentTarget;\n              const dispatchItem = isCrossCloseKey && !isCurrentTarget ? (_deepestNode$context2 = deepestNode.context) == null ? void 0 : _deepestNode$context2.elements.domReference : isCrossOpenKey ? listRef.current.find(item => (item == null ? void 0 : item.id) === activeId) : null;\n              if (dispatchItem) {\n                stopEvent(event);\n                dispatchItem.dispatchEvent(eventObject);\n                setVirtualId(undefined);\n              }\n            }\n            if ((isMainKey || isHomeOrEndKey) && deepestNode.context) {\n              if (deepestNode.context.open && deepestNode.parentId && event.currentTarget !== deepestNode.context.elements.domReference) {\n                var _deepestNode$context$;\n                stopEvent(event);\n                (_deepestNode$context$ = deepestNode.context.elements.domReference) == null || _deepestNode$context$.dispatchEvent(eventObject);\n                return;\n              }\n            }\n          }\n          return commonOnKeyDown(event);\n        }\n\n        // If a floating element should not open on arrow key down, avoid\n        // setting `activeIndex` while it's closed.\n        if (!open && !openOnArrowKeyDown && isArrowKey) {\n          return;\n        }\n        if (isNavigationKey) {\n          keyRef.current = nested && isMainKey ? null : event.key;\n        }\n        if (nested) {\n          if (isCrossOpenKey) {\n            stopEvent(event);\n            if (open) {\n              indexRef.current = getMinIndex(listRef, disabledIndicesRef.current);\n              onNavigate(indexRef.current);\n            } else {\n              onOpenChange(true, event.nativeEvent, 'list-navigation');\n            }\n          }\n          return;\n        }\n        if (isMainKey) {\n          if (selectedIndex != null) {\n            indexRef.current = selectedIndex;\n          }\n          stopEvent(event);\n          if (!open && openOnArrowKeyDown) {\n            onOpenChange(true, event.nativeEvent, 'list-navigation');\n          } else {\n            commonOnKeyDown(event);\n          }\n          if (open) {\n            onNavigate(indexRef.current);\n          }\n        }\n      },\n      onFocus() {\n        if (open && !virtual) {\n          onNavigate(null);\n        }\n      },\n      onPointerDown: checkVirtualPointer,\n      onMouseDown: checkVirtualMouse,\n      onClick: checkVirtualMouse\n    };\n  }, [activeId, ariaActiveDescendantProp, commonOnKeyDown, disabledIndicesRef, focusItemOnOpen, listRef, nested, onNavigate, onOpenChange, open, openOnArrowKeyDown, orientation, rtl, selectedIndex, tree, virtual, virtualItemRef]);\n  return React.useMemo(() => enabled ? {\n    reference,\n    floating,\n    item\n  } : {}, [enabled, reference, floating, item]);\n}\n\nconst componentRoleToAriaRoleMap = /*#__PURE__*/new Map([['select', 'listbox'], ['combobox', 'listbox'], ['label', false]]);\n\n/**\n * Adds base screen reader props to the reference and floating elements for a\n * given floating element `role`.\n * @see https://floating-ui.com/docs/useRole\n */\nfunction useRole(context, props) {\n  var _componentRoleToAriaR;\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    floatingId\n  } = context;\n  const {\n    enabled = true,\n    role = 'dialog'\n  } = props;\n  const ariaRole = (_componentRoleToAriaR = componentRoleToAriaRoleMap.get(role)) != null ? _componentRoleToAriaR : role;\n  const referenceId = useId();\n  const parentId = useFloatingParentNodeId();\n  const isNested = parentId != null;\n  const reference = React.useMemo(() => {\n    if (ariaRole === 'tooltip' || role === 'label') {\n      return {\n        [\"aria-\" + (role === 'label' ? 'labelledby' : 'describedby')]: open ? floatingId : undefined\n      };\n    }\n    return {\n      'aria-expanded': open ? 'true' : 'false',\n      'aria-haspopup': ariaRole === 'alertdialog' ? 'dialog' : ariaRole,\n      'aria-controls': open ? floatingId : undefined,\n      ...(ariaRole === 'listbox' && {\n        role: 'combobox'\n      }),\n      ...(ariaRole === 'menu' && {\n        id: referenceId\n      }),\n      ...(ariaRole === 'menu' && isNested && {\n        role: 'menuitem'\n      }),\n      ...(role === 'select' && {\n        'aria-autocomplete': 'none'\n      }),\n      ...(role === 'combobox' && {\n        'aria-autocomplete': 'list'\n      })\n    };\n  }, [ariaRole, floatingId, isNested, open, referenceId, role]);\n  const floating = React.useMemo(() => {\n    const floatingProps = {\n      id: floatingId,\n      ...(ariaRole && {\n        role: ariaRole\n      })\n    };\n    if (ariaRole === 'tooltip' || role === 'label') {\n      return floatingProps;\n    }\n    return {\n      ...floatingProps,\n      ...(ariaRole === 'menu' && {\n        'aria-labelledby': referenceId\n      })\n    };\n  }, [ariaRole, floatingId, referenceId, role]);\n  const item = React.useCallback(_ref => {\n    let {\n      active,\n      selected\n    } = _ref;\n    const commonProps = {\n      role: 'option',\n      ...(active && {\n        id: floatingId + \"-option\"\n      })\n    };\n\n    // For `menu`, we are unable to tell if the item is a `menuitemradio`\n    // or `menuitemcheckbox`. For backwards-compatibility reasons, also\n    // avoid defaulting to `menuitem` as it may overwrite custom role props.\n    switch (role) {\n      case 'select':\n        return {\n          ...commonProps,\n          'aria-selected': active && selected\n        };\n      case 'combobox':\n        {\n          return {\n            ...commonProps,\n            ...(active && {\n              'aria-selected': true\n            })\n          };\n        }\n    }\n    return {};\n  }, [floatingId, role]);\n  return React.useMemo(() => enabled ? {\n    reference,\n    floating,\n    item\n  } : {}, [enabled, reference, floating, item]);\n}\n\n// Converts a JS style key like `backgroundColor` to a CSS transition-property\n// like `background-color`.\nconst camelCaseToKebabCase = str => str.replace(/[A-Z]+(?![a-z])|[A-Z]/g, ($, ofs) => (ofs ? '-' : '') + $.toLowerCase());\nfunction execWithArgsOrReturn(valueOrFn, args) {\n  return typeof valueOrFn === 'function' ? valueOrFn(args) : valueOrFn;\n}\nfunction useDelayUnmount(open, durationMs) {\n  const [isMounted, setIsMounted] = React.useState(open);\n  if (open && !isMounted) {\n    setIsMounted(true);\n  }\n  React.useEffect(() => {\n    if (!open && isMounted) {\n      const timeout = setTimeout(() => setIsMounted(false), durationMs);\n      return () => clearTimeout(timeout);\n    }\n  }, [open, isMounted, durationMs]);\n  return isMounted;\n}\n/**\n * Provides a status string to apply CSS transitions to a floating element,\n * correctly handling placement-aware transitions.\n * @see https://floating-ui.com/docs/useTransition#usetransitionstatus\n */\nfunction useTransitionStatus(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    elements: {\n      floating\n    }\n  } = context;\n  const {\n    duration = 250\n  } = props;\n  const isNumberDuration = typeof duration === 'number';\n  const closeDuration = (isNumberDuration ? duration : duration.close) || 0;\n  const [status, setStatus] = React.useState('unmounted');\n  const isMounted = useDelayUnmount(open, closeDuration);\n  if (!isMounted && status === 'close') {\n    setStatus('unmounted');\n  }\n  index(() => {\n    if (!floating) return;\n    if (open) {\n      setStatus('initial');\n      const frame = requestAnimationFrame(() => {\n        setStatus('open');\n      });\n      return () => {\n        cancelAnimationFrame(frame);\n      };\n    }\n    setStatus('close');\n  }, [open, floating]);\n  return {\n    isMounted,\n    status\n  };\n}\n/**\n * Provides styles to apply CSS transitions to a floating element, correctly\n * handling placement-aware transitions. Wrapper around `useTransitionStatus`.\n * @see https://floating-ui.com/docs/useTransition#usetransitionstyles\n */\nfunction useTransitionStyles(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    initial: unstable_initial = {\n      opacity: 0\n    },\n    open: unstable_open,\n    close: unstable_close,\n    common: unstable_common,\n    duration = 250\n  } = props;\n  const placement = context.placement;\n  const side = placement.split('-')[0];\n  const fnArgs = React.useMemo(() => ({\n    side,\n    placement\n  }), [side, placement]);\n  const isNumberDuration = typeof duration === 'number';\n  const openDuration = (isNumberDuration ? duration : duration.open) || 0;\n  const closeDuration = (isNumberDuration ? duration : duration.close) || 0;\n  const [styles, setStyles] = React.useState(() => ({\n    ...execWithArgsOrReturn(unstable_common, fnArgs),\n    ...execWithArgsOrReturn(unstable_initial, fnArgs)\n  }));\n  const {\n    isMounted,\n    status\n  } = useTransitionStatus(context, {\n    duration\n  });\n  const initialRef = useLatestRef(unstable_initial);\n  const openRef = useLatestRef(unstable_open);\n  const closeRef = useLatestRef(unstable_close);\n  const commonRef = useLatestRef(unstable_common);\n  index(() => {\n    const initialStyles = execWithArgsOrReturn(initialRef.current, fnArgs);\n    const closeStyles = execWithArgsOrReturn(closeRef.current, fnArgs);\n    const commonStyles = execWithArgsOrReturn(commonRef.current, fnArgs);\n    const openStyles = execWithArgsOrReturn(openRef.current, fnArgs) || Object.keys(initialStyles).reduce((acc, key) => {\n      acc[key] = '';\n      return acc;\n    }, {});\n    if (status === 'initial') {\n      setStyles(styles => ({\n        transitionProperty: styles.transitionProperty,\n        ...commonStyles,\n        ...initialStyles\n      }));\n    }\n    if (status === 'open') {\n      setStyles({\n        transitionProperty: Object.keys(openStyles).map(camelCaseToKebabCase).join(','),\n        transitionDuration: openDuration + \"ms\",\n        ...commonStyles,\n        ...openStyles\n      });\n    }\n    if (status === 'close') {\n      const styles = closeStyles || initialStyles;\n      setStyles({\n        transitionProperty: Object.keys(styles).map(camelCaseToKebabCase).join(','),\n        transitionDuration: closeDuration + \"ms\",\n        ...commonStyles,\n        ...styles\n      });\n    }\n  }, [closeDuration, closeRef, initialRef, openRef, commonRef, openDuration, status, fnArgs]);\n  return {\n    isMounted,\n    styles\n  };\n}\n\n/**\n * Provides a matching callback that can be used to focus an item as the user\n * types, often used in tandem with `useListNavigation()`.\n * @see https://floating-ui.com/docs/useTypeahead\n */\nfunction useTypeahead(context, props) {\n  var _ref;\n  const {\n    open,\n    dataRef\n  } = context;\n  const {\n    listRef,\n    activeIndex,\n    onMatch: unstable_onMatch,\n    onTypingChange: unstable_onTypingChange,\n    enabled = true,\n    findMatch = null,\n    resetMs = 750,\n    ignoreKeys = [],\n    selectedIndex = null\n  } = props;\n  const timeoutIdRef = React.useRef();\n  const stringRef = React.useRef('');\n  const prevIndexRef = React.useRef((_ref = selectedIndex != null ? selectedIndex : activeIndex) != null ? _ref : -1);\n  const matchIndexRef = React.useRef(null);\n  const onMatch = useEffectEvent(unstable_onMatch);\n  const onTypingChange = useEffectEvent(unstable_onTypingChange);\n  const findMatchRef = useLatestRef(findMatch);\n  const ignoreKeysRef = useLatestRef(ignoreKeys);\n  index(() => {\n    if (open) {\n      clearTimeout(timeoutIdRef.current);\n      matchIndexRef.current = null;\n      stringRef.current = '';\n    }\n  }, [open]);\n  index(() => {\n    // Sync arrow key navigation but not typeahead navigation.\n    if (open && stringRef.current === '') {\n      var _ref2;\n      prevIndexRef.current = (_ref2 = selectedIndex != null ? selectedIndex : activeIndex) != null ? _ref2 : -1;\n    }\n  }, [open, selectedIndex, activeIndex]);\n  const setTypingChange = useEffectEvent(value => {\n    if (value) {\n      if (!dataRef.current.typing) {\n        dataRef.current.typing = value;\n        onTypingChange(value);\n      }\n    } else {\n      if (dataRef.current.typing) {\n        dataRef.current.typing = value;\n        onTypingChange(value);\n      }\n    }\n  });\n  const onKeyDown = useEffectEvent(event => {\n    function getMatchingIndex(list, orderedList, string) {\n      const str = findMatchRef.current ? findMatchRef.current(orderedList, string) : orderedList.find(text => (text == null ? void 0 : text.toLocaleLowerCase().indexOf(string.toLocaleLowerCase())) === 0);\n      return str ? list.indexOf(str) : -1;\n    }\n    const listContent = listRef.current;\n    if (stringRef.current.length > 0 && stringRef.current[0] !== ' ') {\n      if (getMatchingIndex(listContent, listContent, stringRef.current) === -1) {\n        setTypingChange(false);\n      } else if (event.key === ' ') {\n        stopEvent(event);\n      }\n    }\n    if (listContent == null || ignoreKeysRef.current.includes(event.key) ||\n    // Character key.\n    event.key.length !== 1 ||\n    // Modifier key.\n    event.ctrlKey || event.metaKey || event.altKey) {\n      return;\n    }\n    if (open && event.key !== ' ') {\n      stopEvent(event);\n      setTypingChange(true);\n    }\n\n    // Bail out if the list contains a word like \"llama\" or \"aaron\". TODO:\n    // allow it in this case, too.\n    const allowRapidSuccessionOfFirstLetter = listContent.every(text => {\n      var _text$, _text$2;\n      return text ? ((_text$ = text[0]) == null ? void 0 : _text$.toLocaleLowerCase()) !== ((_text$2 = text[1]) == null ? void 0 : _text$2.toLocaleLowerCase()) : true;\n    });\n\n    // Allows the user to cycle through items that start with the same letter\n    // in rapid succession.\n    if (allowRapidSuccessionOfFirstLetter && stringRef.current === event.key) {\n      stringRef.current = '';\n      prevIndexRef.current = matchIndexRef.current;\n    }\n    stringRef.current += event.key;\n    clearTimeout(timeoutIdRef.current);\n    timeoutIdRef.current = setTimeout(() => {\n      stringRef.current = '';\n      prevIndexRef.current = matchIndexRef.current;\n      setTypingChange(false);\n    }, resetMs);\n    const prevIndex = prevIndexRef.current;\n    const index = getMatchingIndex(listContent, [...listContent.slice((prevIndex || 0) + 1), ...listContent.slice(0, (prevIndex || 0) + 1)], stringRef.current);\n    if (index !== -1) {\n      onMatch(index);\n      matchIndexRef.current = index;\n    } else if (event.key !== ' ') {\n      stringRef.current = '';\n      setTypingChange(false);\n    }\n  });\n  const reference = React.useMemo(() => ({\n    onKeyDown\n  }), [onKeyDown]);\n  const floating = React.useMemo(() => {\n    return {\n      onKeyDown,\n      onKeyUp(event) {\n        if (event.key === ' ') {\n          setTypingChange(false);\n        }\n      }\n    };\n  }, [onKeyDown, setTypingChange]);\n  return React.useMemo(() => enabled ? {\n    reference,\n    floating\n  } : {}, [enabled, reference, floating]);\n}\n\nfunction getArgsWithCustomFloatingHeight(state, height) {\n  return {\n    ...state,\n    rects: {\n      ...state.rects,\n      floating: {\n        ...state.rects.floating,\n        height\n      }\n    }\n  };\n}\n/**\n * Positions the floating element such that an inner element inside of it is\n * anchored to the reference element.\n * @see https://floating-ui.com/docs/inner\n */\nconst inner = props => ({\n  name: 'inner',\n  options: props,\n  async fn(state) {\n    const {\n      listRef,\n      overflowRef,\n      onFallbackChange,\n      offset: innerOffset = 0,\n      index = 0,\n      minItemsVisible = 4,\n      referenceOverflowThreshold = 0,\n      scrollRef,\n      ...detectOverflowOptions\n    } = evaluate(props, state);\n    const {\n      rects,\n      elements: {\n        floating\n      }\n    } = state;\n    const item = listRef.current[index];\n    const scrollEl = (scrollRef == null ? void 0 : scrollRef.current) || floating;\n\n    // Valid combinations:\n    // 1. Floating element is the scrollRef and has a border (default)\n    // 2. Floating element is not the scrollRef, floating element has a border\n    // 3. Floating element is not the scrollRef, scrollRef has a border\n    // Floating > {...getFloatingProps()} wrapper > scrollRef > items is not\n    // allowed as VoiceOver doesn't work.\n    const clientTop = floating.clientTop || scrollEl.clientTop;\n    const floatingIsBordered = floating.clientTop !== 0;\n    const scrollElIsBordered = scrollEl.clientTop !== 0;\n    const floatingIsScrollEl = floating === scrollEl;\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!state.placement.startsWith('bottom')) {\n        warn('`placement` side must be \"bottom\" when using the `inner`', 'middleware.');\n      }\n    }\n    if (!item) {\n      return {};\n    }\n    const nextArgs = {\n      ...state,\n      ...(await offset(-item.offsetTop - floating.clientTop - rects.reference.height / 2 - item.offsetHeight / 2 - innerOffset).fn(state))\n    };\n    const overflow = await detectOverflow(getArgsWithCustomFloatingHeight(nextArgs, scrollEl.scrollHeight + clientTop + floating.clientTop), detectOverflowOptions);\n    const refOverflow = await detectOverflow(nextArgs, {\n      ...detectOverflowOptions,\n      elementContext: 'reference'\n    });\n    const diffY = max(0, overflow.top);\n    const nextY = nextArgs.y + diffY;\n    const isScrollable = scrollEl.scrollHeight > scrollEl.clientHeight;\n    const rounder = isScrollable ? v => v : round;\n    const maxHeight = rounder(max(0, scrollEl.scrollHeight + (floatingIsBordered && floatingIsScrollEl || scrollElIsBordered ? clientTop * 2 : 0) - diffY - max(0, overflow.bottom)));\n    scrollEl.style.maxHeight = maxHeight + \"px\";\n    scrollEl.scrollTop = diffY;\n\n    // There is not enough space, fallback to standard anchored positioning\n    if (onFallbackChange) {\n      const shouldFallback = scrollEl.offsetHeight < item.offsetHeight * min(minItemsVisible, listRef.current.length) - 1 || refOverflow.top >= -referenceOverflowThreshold || refOverflow.bottom >= -referenceOverflowThreshold;\n      ReactDOM.flushSync(() => onFallbackChange(shouldFallback));\n    }\n    if (overflowRef) {\n      overflowRef.current = await detectOverflow(getArgsWithCustomFloatingHeight({\n        ...nextArgs,\n        y: nextY\n      }, scrollEl.offsetHeight + clientTop + floating.clientTop), detectOverflowOptions);\n    }\n    return {\n      y: nextY\n    };\n  }\n});\n/**\n * Changes the `inner` middleware's `offset` upon a `wheel` event to\n * expand the floating element's height, revealing more list items.\n * @see https://floating-ui.com/docs/inner\n */\nfunction useInnerOffset(context, props) {\n  const {\n    open,\n    elements\n  } = context;\n  const {\n    enabled = true,\n    overflowRef,\n    scrollRef,\n    onChange: unstable_onChange\n  } = props;\n  const onChange = useEffectEvent(unstable_onChange);\n  const controlledScrollingRef = React.useRef(false);\n  const prevScrollTopRef = React.useRef(null);\n  const initialOverflowRef = React.useRef(null);\n  React.useEffect(() => {\n    if (!enabled) return;\n    function onWheel(e) {\n      if (e.ctrlKey || !el || overflowRef.current == null) {\n        return;\n      }\n      const dY = e.deltaY;\n      const isAtTop = overflowRef.current.top >= -0.5;\n      const isAtBottom = overflowRef.current.bottom >= -0.5;\n      const remainingScroll = el.scrollHeight - el.clientHeight;\n      const sign = dY < 0 ? -1 : 1;\n      const method = dY < 0 ? 'max' : 'min';\n      if (el.scrollHeight <= el.clientHeight) {\n        return;\n      }\n      if (!isAtTop && dY > 0 || !isAtBottom && dY < 0) {\n        e.preventDefault();\n        ReactDOM.flushSync(() => {\n          onChange(d => d + Math[method](dY, remainingScroll * sign));\n        });\n      } else if (/firefox/i.test(getUserAgent())) {\n        // Needed to propagate scrolling during momentum scrolling phase once\n        // it gets limited by the boundary. UX improvement, not critical.\n        el.scrollTop += dY;\n      }\n    }\n    const el = (scrollRef == null ? void 0 : scrollRef.current) || elements.floating;\n    if (open && el) {\n      el.addEventListener('wheel', onWheel);\n\n      // Wait for the position to be ready.\n      requestAnimationFrame(() => {\n        prevScrollTopRef.current = el.scrollTop;\n        if (overflowRef.current != null) {\n          initialOverflowRef.current = {\n            ...overflowRef.current\n          };\n        }\n      });\n      return () => {\n        prevScrollTopRef.current = null;\n        initialOverflowRef.current = null;\n        el.removeEventListener('wheel', onWheel);\n      };\n    }\n  }, [enabled, open, elements.floating, overflowRef, scrollRef, onChange]);\n  const floating = React.useMemo(() => ({\n    onKeyDown() {\n      controlledScrollingRef.current = true;\n    },\n    onWheel() {\n      controlledScrollingRef.current = false;\n    },\n    onPointerMove() {\n      controlledScrollingRef.current = false;\n    },\n    onScroll() {\n      const el = (scrollRef == null ? void 0 : scrollRef.current) || elements.floating;\n      if (!overflowRef.current || !el || !controlledScrollingRef.current) {\n        return;\n      }\n      if (prevScrollTopRef.current !== null) {\n        const scrollDiff = el.scrollTop - prevScrollTopRef.current;\n        if (overflowRef.current.bottom < -0.5 && scrollDiff < -1 || overflowRef.current.top < -0.5 && scrollDiff > 1) {\n          ReactDOM.flushSync(() => onChange(d => d + scrollDiff));\n        }\n      }\n\n      // [Firefox] Wait for the height change to have been applied.\n      requestAnimationFrame(() => {\n        prevScrollTopRef.current = el.scrollTop;\n      });\n    }\n  }), [elements.floating, onChange, overflowRef, scrollRef]);\n  return React.useMemo(() => enabled ? {\n    floating\n  } : {}, [enabled, floating]);\n}\n\nfunction isPointInPolygon(point, polygon) {\n  const [x, y] = point;\n  let isInside = false;\n  const length = polygon.length;\n  for (let i = 0, j = length - 1; i < length; j = i++) {\n    const [xi, yi] = polygon[i] || [0, 0];\n    const [xj, yj] = polygon[j] || [0, 0];\n    const intersect = yi >= y !== yj >= y && x <= (xj - xi) * (y - yi) / (yj - yi) + xi;\n    if (intersect) {\n      isInside = !isInside;\n    }\n  }\n  return isInside;\n}\nfunction isInside(point, rect) {\n  return point[0] >= rect.x && point[0] <= rect.x + rect.width && point[1] >= rect.y && point[1] <= rect.y + rect.height;\n}\n/**\n * Generates a safe polygon area that the user can traverse without closing the\n * floating element once leaving the reference element.\n * @see https://floating-ui.com/docs/useHover#safepolygon\n */\nfunction safePolygon(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    buffer = 0.5,\n    blockPointerEvents = false,\n    requireIntent = true\n  } = options;\n  let timeoutId;\n  let hasLanded = false;\n  let lastX = null;\n  let lastY = null;\n  let lastCursorTime = performance.now();\n  function getCursorSpeed(x, y) {\n    const currentTime = performance.now();\n    const elapsedTime = currentTime - lastCursorTime;\n    if (lastX === null || lastY === null || elapsedTime === 0) {\n      lastX = x;\n      lastY = y;\n      lastCursorTime = currentTime;\n      return null;\n    }\n    const deltaX = x - lastX;\n    const deltaY = y - lastY;\n    const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const speed = distance / elapsedTime; // px / ms\n\n    lastX = x;\n    lastY = y;\n    lastCursorTime = currentTime;\n    return speed;\n  }\n  const fn = _ref => {\n    let {\n      x,\n      y,\n      placement,\n      elements,\n      onClose,\n      nodeId,\n      tree\n    } = _ref;\n    return function onMouseMove(event) {\n      function close() {\n        clearTimeout(timeoutId);\n        onClose();\n      }\n      clearTimeout(timeoutId);\n      if (!elements.domReference || !elements.floating || placement == null || x == null || y == null) {\n        return;\n      }\n      const {\n        clientX,\n        clientY\n      } = event;\n      const clientPoint = [clientX, clientY];\n      const target = getTarget(event);\n      const isLeave = event.type === 'mouseleave';\n      const isOverFloatingEl = contains(elements.floating, target);\n      const isOverReferenceEl = contains(elements.domReference, target);\n      const refRect = elements.domReference.getBoundingClientRect();\n      const rect = elements.floating.getBoundingClientRect();\n      const side = placement.split('-')[0];\n      const cursorLeaveFromRight = x > rect.right - rect.width / 2;\n      const cursorLeaveFromBottom = y > rect.bottom - rect.height / 2;\n      const isOverReferenceRect = isInside(clientPoint, refRect);\n      const isFloatingWider = rect.width > refRect.width;\n      const isFloatingTaller = rect.height > refRect.height;\n      const left = (isFloatingWider ? refRect : rect).left;\n      const right = (isFloatingWider ? refRect : rect).right;\n      const top = (isFloatingTaller ? refRect : rect).top;\n      const bottom = (isFloatingTaller ? refRect : rect).bottom;\n      if (isOverFloatingEl) {\n        hasLanded = true;\n        if (!isLeave) {\n          return;\n        }\n      }\n      if (isOverReferenceEl) {\n        hasLanded = false;\n      }\n      if (isOverReferenceEl && !isLeave) {\n        hasLanded = true;\n        return;\n      }\n\n      // Prevent overlapping floating element from being stuck in an open-close\n      // loop: https://github.com/floating-ui/floating-ui/issues/1910\n      if (isLeave && isElement(event.relatedTarget) && contains(elements.floating, event.relatedTarget)) {\n        return;\n      }\n\n      // If any nested child is open, abort.\n      if (tree && getChildren(tree.nodesRef.current, nodeId).some(_ref2 => {\n        let {\n          context\n        } = _ref2;\n        return context == null ? void 0 : context.open;\n      })) {\n        return;\n      }\n\n      // If the pointer is leaving from the opposite side, the \"buffer\" logic\n      // creates a point where the floating element remains open, but should be\n      // ignored.\n      // A constant of 1 handles floating point rounding errors.\n      if (side === 'top' && y >= refRect.bottom - 1 || side === 'bottom' && y <= refRect.top + 1 || side === 'left' && x >= refRect.right - 1 || side === 'right' && x <= refRect.left + 1) {\n        return close();\n      }\n\n      // Ignore when the cursor is within the rectangular trough between the\n      // two elements. Since the triangle is created from the cursor point,\n      // which can start beyond the ref element's edge, traversing back and\n      // forth from the ref to the floating element can cause it to close. This\n      // ensures it always remains open in that case.\n      let rectPoly = [];\n      switch (side) {\n        case 'top':\n          rectPoly = [[left, refRect.top + 1], [left, rect.bottom - 1], [right, rect.bottom - 1], [right, refRect.top + 1]];\n          break;\n        case 'bottom':\n          rectPoly = [[left, rect.top + 1], [left, refRect.bottom - 1], [right, refRect.bottom - 1], [right, rect.top + 1]];\n          break;\n        case 'left':\n          rectPoly = [[rect.right - 1, bottom], [rect.right - 1, top], [refRect.left + 1, top], [refRect.left + 1, bottom]];\n          break;\n        case 'right':\n          rectPoly = [[refRect.right - 1, bottom], [refRect.right - 1, top], [rect.left + 1, top], [rect.left + 1, bottom]];\n          break;\n      }\n      function getPolygon(_ref3) {\n        let [x, y] = _ref3;\n        switch (side) {\n          case 'top':\n            {\n              const cursorPointOne = [isFloatingWider ? x + buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y + buffer + 1];\n              const cursorPointTwo = [isFloatingWider ? x - buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y + buffer + 1];\n              const commonPoints = [[rect.left, cursorLeaveFromRight ? rect.bottom - buffer : isFloatingWider ? rect.bottom - buffer : rect.top], [rect.right, cursorLeaveFromRight ? isFloatingWider ? rect.bottom - buffer : rect.top : rect.bottom - buffer]];\n              return [cursorPointOne, cursorPointTwo, ...commonPoints];\n            }\n          case 'bottom':\n            {\n              const cursorPointOne = [isFloatingWider ? x + buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y - buffer];\n              const cursorPointTwo = [isFloatingWider ? x - buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y - buffer];\n              const commonPoints = [[rect.left, cursorLeaveFromRight ? rect.top + buffer : isFloatingWider ? rect.top + buffer : rect.bottom], [rect.right, cursorLeaveFromRight ? isFloatingWider ? rect.top + buffer : rect.bottom : rect.top + buffer]];\n              return [cursorPointOne, cursorPointTwo, ...commonPoints];\n            }\n          case 'left':\n            {\n              const cursorPointOne = [x + buffer + 1, isFloatingTaller ? y + buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];\n              const cursorPointTwo = [x + buffer + 1, isFloatingTaller ? y - buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];\n              const commonPoints = [[cursorLeaveFromBottom ? rect.right - buffer : isFloatingTaller ? rect.right - buffer : rect.left, rect.top], [cursorLeaveFromBottom ? isFloatingTaller ? rect.right - buffer : rect.left : rect.right - buffer, rect.bottom]];\n              return [...commonPoints, cursorPointOne, cursorPointTwo];\n            }\n          case 'right':\n            {\n              const cursorPointOne = [x - buffer, isFloatingTaller ? y + buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];\n              const cursorPointTwo = [x - buffer, isFloatingTaller ? y - buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];\n              const commonPoints = [[cursorLeaveFromBottom ? rect.left + buffer : isFloatingTaller ? rect.left + buffer : rect.right, rect.top], [cursorLeaveFromBottom ? isFloatingTaller ? rect.left + buffer : rect.right : rect.left + buffer, rect.bottom]];\n              return [cursorPointOne, cursorPointTwo, ...commonPoints];\n            }\n        }\n      }\n      if (isPointInPolygon([clientX, clientY], rectPoly)) {\n        return;\n      }\n      if (hasLanded && !isOverReferenceRect) {\n        return close();\n      }\n      if (!isLeave && requireIntent) {\n        const cursorSpeed = getCursorSpeed(event.clientX, event.clientY);\n        const cursorSpeedThreshold = 0.1;\n        if (cursorSpeed !== null && cursorSpeed < cursorSpeedThreshold) {\n          return close();\n        }\n      }\n      if (!isPointInPolygon([clientX, clientY], getPolygon([x, y]))) {\n        close();\n      } else if (!hasLanded && requireIntent) {\n        timeoutId = window.setTimeout(close, 40);\n      }\n    };\n  };\n  fn.__options = {\n    blockPointerEvents\n  };\n  return fn;\n}\n\nexport { Composite, CompositeItem, FloatingArrow, FloatingDelayGroup, FloatingFocusManager, FloatingList, FloatingNode, FloatingOverlay, FloatingPortal, FloatingTree, inner, safePolygon, useClick, useClientPoint, useDelayGroup, useDelayGroupContext, useDismiss, useFloating, useFloatingNodeId, useFloatingParentNodeId, useFloatingPortalNode, useFloatingRootContext, useFloatingTree, useFocus, useHover, useId, useInnerOffset, useInteractions, useListItem, useListNavigation, useMergeRefs, useRole, useTransitionStatus, useTransitionStyles, useTypeahead };\n", "import { isShadowRoot, isHTMLElement } from '@floating-ui/utils/dom';\n\nfunction activeElement(doc) {\n  let activeElement = doc.activeElement;\n  while (((_activeElement = activeElement) == null || (_activeElement = _activeElement.shadowRoot) == null ? void 0 : _activeElement.activeElement) != null) {\n    var _activeElement;\n    activeElement = activeElement.shadowRoot.activeElement;\n  }\n  return activeElement;\n}\nfunction contains(parent, child) {\n  if (!parent || !child) {\n    return false;\n  }\n  const rootNode = child.getRootNode == null ? void 0 : child.getRootNode();\n\n  // First, attempt with faster native method\n  if (parent.contains(child)) {\n    return true;\n  }\n\n  // then fallback to custom implementation with Shadow DOM support\n  if (rootNode && isShadowRoot(rootNode)) {\n    let next = child;\n    while (next) {\n      if (parent === next) {\n        return true;\n      }\n      // @ts-ignore\n      next = next.parentNode || next.host;\n    }\n  }\n\n  // Give up, the result is false\n  return false;\n}\n// Avoid Chrome DevTools blue warning.\nfunction getPlatform() {\n  const uaData = navigator.userAgentData;\n  if (uaData != null && uaData.platform) {\n    return uaData.platform;\n  }\n  return navigator.platform;\n}\nfunction getUserAgent() {\n  const uaData = navigator.userAgentData;\n  if (uaData && Array.isArray(uaData.brands)) {\n    return uaData.brands.map(_ref => {\n      let {\n        brand,\n        version\n      } = _ref;\n      return brand + \"/\" + version;\n    }).join(' ');\n  }\n  return navigator.userAgent;\n}\n\n// License: https://github.com/adobe/react-spectrum/blob/b35d5c02fe900badccd0cf1a8f23bb593419f238/packages/@react-aria/utils/src/isVirtualEvent.ts\nfunction isVirtualClick(event) {\n  // FIXME: Firefox is now emitting a deprecation warning for `mozInputSource`.\n  // Try to find a workaround for this. `react-aria` source still has the check.\n  if (event.mozInputSource === 0 && event.isTrusted) {\n    return true;\n  }\n  if (isAndroid() && event.pointerType) {\n    return event.type === 'click' && event.buttons === 1;\n  }\n  return event.detail === 0 && !event.pointerType;\n}\nfunction isVirtualPointerEvent(event) {\n  if (isJSDOM()) return false;\n  return !isAndroid() && event.width === 0 && event.height === 0 || isAndroid() && event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === 'mouse' ||\n  // iOS VoiceOver returns 0.333• for width/height.\n  event.width < 1 && event.height < 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === 'touch';\n}\nfunction isSafari() {\n  // Chrome DevTools does not complain about navigator.vendor\n  return /apple/i.test(navigator.vendor);\n}\nfunction isAndroid() {\n  const re = /android/i;\n  return re.test(getPlatform()) || re.test(getUserAgent());\n}\nfunction isMac() {\n  return getPlatform().toLowerCase().startsWith('mac') && !navigator.maxTouchPoints;\n}\nfunction isJSDOM() {\n  return getUserAgent().includes('jsdom/');\n}\nfunction isMouseLikePointerType(pointerType, strict) {\n  // On some Linux machines with Chromium, mouse inputs return a `pointerType`\n  // of \"pen\": https://github.com/floating-ui/floating-ui/issues/2015\n  const values = ['mouse', 'pen'];\n  if (!strict) {\n    values.push('', undefined);\n  }\n  return values.includes(pointerType);\n}\nfunction isReactEvent(event) {\n  return 'nativeEvent' in event;\n}\nfunction isRootElement(element) {\n  return element.matches('html,body');\n}\nfunction getDocument(node) {\n  return (node == null ? void 0 : node.ownerDocument) || document;\n}\nfunction isEventTargetWithin(event, node) {\n  if (node == null) {\n    return false;\n  }\n  if ('composedPath' in event) {\n    return event.composedPath().includes(node);\n  }\n\n  // TS thinks `event` is of type never as it assumes all browsers support composedPath, but browsers without shadow dom don't\n  const e = event;\n  return e.target != null && node.contains(e.target);\n}\nfunction getTarget(event) {\n  if ('composedPath' in event) {\n    return event.composedPath()[0];\n  }\n\n  // TS thinks `event` is of type never as it assumes all browsers support\n  // `composedPath()`, but browsers without shadow DOM don't.\n  return event.target;\n}\nconst TYPEABLE_SELECTOR = \"input:not([type='hidden']):not([disabled]),\" + \"[contenteditable]:not([contenteditable='false']),textarea:not([disabled])\";\nfunction isTypeableElement(element) {\n  return isHTMLElement(element) && element.matches(TYPEABLE_SELECTOR);\n}\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\nfunction isTypeableCombobox(element) {\n  if (!element) return false;\n  return element.getAttribute('role') === 'combobox' && isTypeableElement(element);\n}\n\nexport { TYPEABLE_SELECTOR, activeElement, contains, getDocument, getPlatform, getTarget, getUserAgent, isAndroid, isEventTargetWithin, isJSDOM, isMac, isMouseLikePointerType, isReactEvent, isRootElement, isSafari, isTypeableCombobox, isTypeableElement, isVirtualClick, isVirtualPointerEvent, stopEvent };\n", "// NOTE: separate `:not()` selectors has broader browser support than the newer\n//  `:not([inert], [inert] *)` (Feb 2023)\n// CAREFUL: JSDom does not support `:not([inert] *)` as a selector; using it causes\n//  the entire query to fail, resulting in no nodes found, which will break a lot\n//  of things... so we have to rely on JS to identify nodes inside an inert container\nconst candidateSelectors = [\n  'input:not([inert])',\n  'select:not([inert])',\n  'textarea:not([inert])',\n  'a[href]:not([inert])',\n  'button:not([inert])',\n  '[tabindex]:not(slot):not([inert])',\n  'audio[controls]:not([inert])',\n  'video[controls]:not([inert])',\n  '[contenteditable]:not([contenteditable=\"false\"]):not([inert])',\n  'details>summary:first-of-type:not([inert])',\n  'details:not([inert])',\n];\nconst candidateSelector = /* #__PURE__ */ candidateSelectors.join(',');\n\nconst NoElement = typeof Element === 'undefined';\n\nconst matches = NoElement\n  ? function () {}\n  : Element.prototype.matches ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n\nconst getRootNode =\n  !NoElement && Element.prototype.getRootNode\n    ? (element) => element?.getRootNode?.()\n    : (element) => element?.ownerDocument;\n\n/**\n * Determines if a node is inert or in an inert ancestor.\n * @param {Element} [node]\n * @param {boolean} [lookUp] If true and `node` is not inert, looks up at ancestors to\n *  see if any of them are inert. If false, only `node` itself is considered.\n * @returns {boolean} True if inert itself or by way of being in an inert ancestor.\n *  False if `node` is falsy.\n */\nconst isInert = function (node, lookUp = true) {\n  // CAREFUL: JSDom does not support inert at all, so we can't use the `HTMLElement.inert`\n  //  JS API property; we have to check the attribute, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's an active element\n  const inertAtt = node?.getAttribute?.('inert');\n  const inert = inertAtt === '' || inertAtt === 'true';\n\n  // NOTE: this could also be handled with `node.matches('[inert], :is([inert] *)')`\n  //  if it weren't for `matches()` not being a function on shadow roots; the following\n  //  code works for any kind of node\n  // CAREFUL: JSDom does not appear to support certain selectors like `:not([inert] *)`\n  //  so it likely would not support `:is([inert] *)` either...\n  const result = inert || (lookUp && node && isInert(node.parentNode)); // recursive\n\n  return result;\n};\n\n/**\n * Determines if a node's content is editable.\n * @param {Element} [node]\n * @returns True if it's content-editable; false if it's not or `node` is falsy.\n */\nconst isContentEditable = function (node) {\n  // CAREFUL: JSDom does not support the `HTMLElement.isContentEditable` API so we have\n  //  to use the attribute directly to check for this, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's a non-editable element\n  const attValue = node?.getAttribute?.('contenteditable');\n  return attValue === '' || attValue === 'true';\n};\n\n/**\n * @param {Element} el container to check in\n * @param {boolean} includeContainer add container to check\n * @param {(node: Element) => boolean} filter filter candidates\n * @returns {Element[]}\n */\nconst getCandidates = function (el, includeContainer, filter) {\n  // even if `includeContainer=false`, we still have to check it for inertness because\n  //  if it's inert, all its children are inert\n  if (isInert(el)) {\n    return [];\n  }\n\n  let candidates = Array.prototype.slice.apply(\n    el.querySelectorAll(candidateSelector)\n  );\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n\n/**\n * @callback GetShadowRoot\n * @param {Element} element to check for shadow root\n * @returns {ShadowRoot|boolean} ShadowRoot if available or boolean indicating if a shadowRoot is attached but not available.\n */\n\n/**\n * @callback ShadowRootFilter\n * @param {Element} shadowHostNode the element which contains shadow content\n * @returns {boolean} true if a shadow root could potentially contain valid candidates.\n */\n\n/**\n * @typedef {Object} CandidateScope\n * @property {Element} scopeParent contains inner candidates\n * @property {Element[]} candidates list of candidates found in the scope parent\n */\n\n/**\n * @typedef {Object} IterativeOptions\n * @property {GetShadowRoot|boolean} getShadowRoot true if shadow support is enabled; falsy if not;\n *  if a function, implies shadow support is enabled and either returns the shadow root of an element\n *  or a boolean stating if it has an undisclosed shadow root\n * @property {(node: Element) => boolean} filter filter candidates\n * @property {boolean} flatten if true then result will flatten any CandidateScope into the returned list\n * @property {ShadowRootFilter} shadowRootFilter filter shadow roots;\n */\n\n/**\n * @param {Element[]} elements list of element containers to match candidates from\n * @param {boolean} includeContainer add container list to check\n * @param {IterativeOptions} options\n * @returns {Array.<Element|CandidateScope>}\n */\nconst getCandidatesIteratively = function (\n  elements,\n  includeContainer,\n  options\n) {\n  const candidates = [];\n  const elementsToCheck = Array.from(elements);\n  while (elementsToCheck.length) {\n    const element = elementsToCheck.shift();\n    if (isInert(element, false)) {\n      // no need to look up since we're drilling down\n      // anything inside this container will also be inert\n      continue;\n    }\n\n    if (element.tagName === 'SLOT') {\n      // add shadow dom slot scope (slot itself cannot be focusable)\n      const assigned = element.assignedElements();\n      const content = assigned.length ? assigned : element.children;\n      const nestedCandidates = getCandidatesIteratively(content, true, options);\n      if (options.flatten) {\n        candidates.push(...nestedCandidates);\n      } else {\n        candidates.push({\n          scopeParent: element,\n          candidates: nestedCandidates,\n        });\n      }\n    } else {\n      // check candidate element\n      const validCandidate = matches.call(element, candidateSelector);\n      if (\n        validCandidate &&\n        options.filter(element) &&\n        (includeContainer || !elements.includes(element))\n      ) {\n        candidates.push(element);\n      }\n\n      // iterate over shadow content if possible\n      const shadowRoot =\n        element.shadowRoot ||\n        // check for an undisclosed shadow\n        (typeof options.getShadowRoot === 'function' &&\n          options.getShadowRoot(element));\n\n      // no inert look up because we're already drilling down and checking for inertness\n      //  on the way down, so all containers to this root node should have already been\n      //  vetted as non-inert\n      const validShadowRoot =\n        !isInert(shadowRoot, false) &&\n        (!options.shadowRootFilter || options.shadowRootFilter(element));\n\n      if (shadowRoot && validShadowRoot) {\n        // add shadow dom scope IIF a shadow root node was given; otherwise, an undisclosed\n        //  shadow exists, so look at light dom children as fallback BUT create a scope for any\n        //  child candidates found because they're likely slotted elements (elements that are\n        //  children of the web component element (which has the shadow), in the light dom, but\n        //  slotted somewhere _inside_ the undisclosed shadow) -- the scope is created below,\n        //  _after_ we return from this recursive call\n        const nestedCandidates = getCandidatesIteratively(\n          shadowRoot === true ? element.children : shadowRoot.children,\n          true,\n          options\n        );\n\n        if (options.flatten) {\n          candidates.push(...nestedCandidates);\n        } else {\n          candidates.push({\n            scopeParent: element,\n            candidates: nestedCandidates,\n          });\n        }\n      } else {\n        // there's not shadow so just dig into the element's (light dom) children\n        //  __without__ giving the element special scope treatment\n        elementsToCheck.unshift(...element.children);\n      }\n    }\n  }\n  return candidates;\n};\n\n/**\n * @private\n * Determines if the node has an explicitly specified `tabindex` attribute.\n * @param {HTMLElement} node\n * @returns {boolean} True if so; false if not.\n */\nconst hasTabIndex = function (node) {\n  return !isNaN(parseInt(node.getAttribute('tabindex'), 10));\n};\n\n/**\n * Determine the tab index of a given node.\n * @param {HTMLElement} node\n * @returns {number} Tab order (negative, 0, or positive number).\n * @throws {Error} If `node` is falsy.\n */\nconst getTabIndex = function (node) {\n  if (!node) {\n    throw new Error('No node provided');\n  }\n\n  if (node.tabIndex < 0) {\n    // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n    // `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n    // yet they are still part of the regular tab order; in FF, they get a default\n    // `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n    // order, consider their tab index to be 0.\n    // Also browsers do not return `tabIndex` correctly for contentEditable nodes;\n    // so if they don't have a tabindex attribute specifically set, assume it's 0.\n    if (\n      (/^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) ||\n        isContentEditable(node)) &&\n      !hasTabIndex(node)\n    ) {\n      return 0;\n    }\n  }\n\n  return node.tabIndex;\n};\n\n/**\n * Determine the tab index of a given node __for sort order purposes__.\n * @param {HTMLElement} node\n * @param {boolean} [isScope] True for a custom element with shadow root or slot that, by default,\n *  has tabIndex -1, but needs to be sorted by document order in order for its content to be\n *  inserted into the correct sort position.\n * @returns {number} Tab order (negative, 0, or positive number).\n */\nconst getSortOrderTabIndex = function (node, isScope) {\n  const tabIndex = getTabIndex(node);\n\n  if (tabIndex < 0 && isScope && !hasTabIndex(node)) {\n    return 0;\n  }\n\n  return tabIndex;\n};\n\nconst sortOrderedTabbables = function (a, b) {\n  return a.tabIndex === b.tabIndex\n    ? a.documentOrder - b.documentOrder\n    : a.tabIndex - b.tabIndex;\n};\n\nconst isInput = function (node) {\n  return node.tagName === 'INPUT';\n};\n\nconst isHiddenInput = function (node) {\n  return isInput(node) && node.type === 'hidden';\n};\n\nconst isDetailsWithSummary = function (node) {\n  const r =\n    node.tagName === 'DETAILS' &&\n    Array.prototype.slice\n      .apply(node.children)\n      .some((child) => child.tagName === 'SUMMARY');\n  return r;\n};\n\nconst getCheckedRadio = function (nodes, form) {\n  for (let i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\n\nconst isTabbableRadio = function (node) {\n  if (!node.name) {\n    return true;\n  }\n  const radioScope = node.form || getRootNode(node);\n  const queryRadios = function (name) {\n    return radioScope.querySelectorAll(\n      'input[type=\"radio\"][name=\"' + name + '\"]'\n    );\n  };\n\n  let radioSet;\n  if (\n    typeof window !== 'undefined' &&\n    typeof window.CSS !== 'undefined' &&\n    typeof window.CSS.escape === 'function'\n  ) {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(\n        'Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s',\n        err.message\n      );\n      return false;\n    }\n  }\n\n  const checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\n\nconst isRadio = function (node) {\n  return isInput(node) && node.type === 'radio';\n};\n\nconst isNonTabbableRadio = function (node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\n\n// determines if a node is ultimately attached to the window's document\nconst isNodeAttached = function (node) {\n  // The root node is the shadow root if the node is in a shadow DOM; some document otherwise\n  //  (but NOT _the_ document; see second 'If' comment below for more).\n  // If rootNode is shadow root, it'll have a host, which is the element to which the shadow\n  //  is attached, and the one we need to check if it's in the document or not (because the\n  //  shadow, and all nodes it contains, is never considered in the document since shadows\n  //  behave like self-contained DOMs; but if the shadow's HOST, which is part of the document,\n  //  is hidden, or is not in the document itself but is detached, it will affect the shadow's\n  //  visibility, including all the nodes it contains). The host could be any normal node,\n  //  or a custom element (i.e. web component). Either way, that's the one that is considered\n  //  part of the document, not the shadow root, nor any of its children (i.e. the node being\n  //  tested).\n  // To further complicate things, we have to look all the way up until we find a shadow HOST\n  //  that is attached (or find none) because the node might be in nested shadows...\n  // If rootNode is not a shadow root, it won't have a host, and so rootNode should be the\n  //  document (per the docs) and while it's a Document-type object, that document does not\n  //  appear to be the same as the node's `ownerDocument` for some reason, so it's safer\n  //  to ignore the rootNode at this point, and use `node.ownerDocument`. Otherwise,\n  //  using `rootNode.contains(node)` will _always_ be true we'll get false-positives when\n  //  node is actually detached.\n  // NOTE: If `nodeRootHost` or `node` happens to be the `document` itself (which is possible\n  //  if a tabbable/focusable node was quickly added to the DOM, focused, and then removed\n  //  from the DOM as in https://github.com/focus-trap/focus-trap-react/issues/905), then\n  //  `ownerDocument` will be `null`, hence the optional chaining on it.\n  let nodeRoot = node && getRootNode(node);\n  let nodeRootHost = nodeRoot?.host;\n\n  // in some cases, a detached node will return itself as the root instead of a document or\n  //  shadow root object, in which case, we shouldn't try to look further up the host chain\n  let attached = false;\n  if (nodeRoot && nodeRoot !== node) {\n    attached = !!(\n      nodeRootHost?.ownerDocument?.contains(nodeRootHost) ||\n      node?.ownerDocument?.contains(node)\n    );\n\n    while (!attached && nodeRootHost) {\n      // since it's not attached and we have a root host, the node MUST be in a nested shadow DOM,\n      //  which means we need to get the host's host and check if that parent host is contained\n      //  in (i.e. attached to) the document\n      nodeRoot = getRootNode(nodeRootHost);\n      nodeRootHost = nodeRoot?.host;\n      attached = !!nodeRootHost?.ownerDocument?.contains(nodeRootHost);\n    }\n  }\n\n  return attached;\n};\n\nconst isZeroArea = function (node) {\n  const { width, height } = node.getBoundingClientRect();\n  return width === 0 && height === 0;\n};\nconst isHidden = function (node, { displayCheck, getShadowRoot }) {\n  // NOTE: visibility will be `undefined` if node is detached from the document\n  //  (see notes about this further down), which means we will consider it visible\n  //  (this is legacy behavior from a very long way back)\n  // NOTE: we check this regardless of `displayCheck=\"none\"` because this is a\n  //  _visibility_ check, not a _display_ check\n  if (getComputedStyle(node).visibility === 'hidden') {\n    return true;\n  }\n\n  const isDirectSummary = matches.call(node, 'details>summary:first-of-type');\n  const nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {\n    return true;\n  }\n\n  if (\n    !displayCheck ||\n    displayCheck === 'full' ||\n    displayCheck === 'legacy-full'\n  ) {\n    if (typeof getShadowRoot === 'function') {\n      // figure out if we should consider the node to be in an undisclosed shadow and use the\n      //  'non-zero-area' fallback\n      const originalNode = node;\n      while (node) {\n        const parentElement = node.parentElement;\n        const rootNode = getRootNode(node);\n        if (\n          parentElement &&\n          !parentElement.shadowRoot &&\n          getShadowRoot(parentElement) === true // check if there's an undisclosed shadow\n        ) {\n          // node has an undisclosed shadow which means we can only treat it as a black box, so we\n          //  fall back to a non-zero-area test\n          return isZeroArea(node);\n        } else if (node.assignedSlot) {\n          // iterate up slot\n          node = node.assignedSlot;\n        } else if (!parentElement && rootNode !== node.ownerDocument) {\n          // cross shadow boundary\n          node = rootNode.host;\n        } else {\n          // iterate up normal dom\n          node = parentElement;\n        }\n      }\n\n      node = originalNode;\n    }\n    // else, `getShadowRoot` might be true, but all that does is enable shadow DOM support\n    //  (i.e. it does not also presume that all nodes might have undisclosed shadows); or\n    //  it might be a falsy value, which means shadow DOM support is disabled\n\n    // Since we didn't find it sitting in an undisclosed shadow (or shadows are disabled)\n    //  now we can just test to see if it would normally be visible or not, provided it's\n    //  attached to the main document.\n    // NOTE: We must consider case where node is inside a shadow DOM and given directly to\n    //  `isTabbable()` or `isFocusable()` -- regardless of `getShadowRoot` option setting.\n\n    if (isNodeAttached(node)) {\n      // this works wherever the node is: if there's at least one client rect, it's\n      //  somehow displayed; it also covers the CSS 'display: contents' case where the\n      //  node itself is hidden in place of its contents; and there's no need to search\n      //  up the hierarchy either\n      return !node.getClientRects().length;\n    }\n\n    // Else, the node isn't attached to the document, which means the `getClientRects()`\n    //  API will __always__ return zero rects (this can happen, for example, if React\n    //  is used to render nodes onto a detached tree, as confirmed in this thread:\n    //  https://github.com/facebook/react/issues/9117#issuecomment-284228870)\n    //\n    // It also means that even window.getComputedStyle(node).display will return `undefined`\n    //  because styles are only computed for nodes that are in the document.\n    //\n    // NOTE: THIS HAS BEEN THE CASE FOR YEARS. It is not new, nor is it caused by tabbable\n    //  somehow. Though it was never stated officially, anyone who has ever used tabbable\n    //  APIs on nodes in detached containers has actually implicitly used tabbable in what\n    //  was later (as of v5.2.0 on Apr 9, 2021) called `displayCheck=\"none\"` mode -- essentially\n    //  considering __everything__ to be visible because of the innability to determine styles.\n    //\n    // v6.0.0: As of this major release, the default 'full' option __no longer treats detached\n    //  nodes as visible with the 'none' fallback.__\n    if (displayCheck !== 'legacy-full') {\n      return true; // hidden\n    }\n    // else, fallback to 'none' mode and consider the node visible\n  } else if (displayCheck === 'non-zero-area') {\n    // NOTE: Even though this tests that the node's client rect is non-zero to determine\n    //  whether it's displayed, and that a detached node will __always__ have a zero-area\n    //  client rect, we don't special-case for whether the node is attached or not. In\n    //  this mode, we do want to consider nodes that have a zero area to be hidden at all\n    //  times, and that includes attached or not.\n    return isZeroArea(node);\n  }\n\n  // visible, as far as we can tell, or per current `displayCheck=none` mode, we assume\n  //  it's visible\n  return false;\n};\n\n// form fields (nested) inside a disabled fieldset are not focusable/tabbable\n//  unless they are in the _first_ <legend> element of the top-most disabled\n//  fieldset\nconst isDisabledFromFieldset = function (node) {\n  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {\n    let parentNode = node.parentElement;\n    // check if `node` is contained in a disabled <fieldset>\n    while (parentNode) {\n      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {\n        // look for the first <legend> among the children of the disabled <fieldset>\n        for (let i = 0; i < parentNode.children.length; i++) {\n          const child = parentNode.children.item(i);\n          // when the first <legend> (in document order) is found\n          if (child.tagName === 'LEGEND') {\n            // if its parent <fieldset> is not nested in another disabled <fieldset>,\n            // return whether `node` is a descendant of its first <legend>\n            return matches.call(parentNode, 'fieldset[disabled] *')\n              ? true\n              : !child.contains(node);\n          }\n        }\n        // the disabled <fieldset> containing `node` has no <legend>\n        return true;\n      }\n      parentNode = parentNode.parentElement;\n    }\n  }\n\n  // else, node's tabbable/focusable state should not be affected by a fieldset's\n  //  enabled/disabled state\n  return false;\n};\n\nconst isNodeMatchingSelectorFocusable = function (options, node) {\n  if (\n    node.disabled ||\n    // we must do an inert look up to filter out any elements inside an inert ancestor\n    //  because we're limited in the type of selectors we can use in JSDom (see related\n    //  note related to `candidateSelectors`)\n    isInert(node) ||\n    isHiddenInput(node) ||\n    isHidden(node, options) ||\n    // For a details element with a summary, the summary element gets the focus\n    isDetailsWithSummary(node) ||\n    isDisabledFromFieldset(node)\n  ) {\n    return false;\n  }\n  return true;\n};\n\nconst isNodeMatchingSelectorTabbable = function (options, node) {\n  if (\n    isNonTabbableRadio(node) ||\n    getTabIndex(node) < 0 ||\n    !isNodeMatchingSelectorFocusable(options, node)\n  ) {\n    return false;\n  }\n  return true;\n};\n\nconst isValidShadowRootTabbable = function (shadowHostNode) {\n  const tabIndex = parseInt(shadowHostNode.getAttribute('tabindex'), 10);\n  if (isNaN(tabIndex) || tabIndex >= 0) {\n    return true;\n  }\n  // If a custom element has an explicit negative tabindex,\n  // browsers will not allow tab targeting said element's children.\n  return false;\n};\n\n/**\n * @param {Array.<Element|CandidateScope>} candidates\n * @returns Element[]\n */\nconst sortByOrder = function (candidates) {\n  const regularTabbables = [];\n  const orderedTabbables = [];\n  candidates.forEach(function (item, i) {\n    const isScope = !!item.scopeParent;\n    const element = isScope ? item.scopeParent : item;\n    const candidateTabindex = getSortOrderTabIndex(element, isScope);\n    const elements = isScope ? sortByOrder(item.candidates) : element;\n    if (candidateTabindex === 0) {\n      isScope\n        ? regularTabbables.push(...elements)\n        : regularTabbables.push(element);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        item: item,\n        isScope: isScope,\n        content: elements,\n      });\n    }\n  });\n\n  return orderedTabbables\n    .sort(sortOrderedTabbables)\n    .reduce((acc, sortable) => {\n      sortable.isScope\n        ? acc.push(...sortable.content)\n        : acc.push(sortable.content);\n      return acc;\n    }, [])\n    .concat(regularTabbables);\n};\n\nconst tabbable = function (container, options) {\n  options = options || {};\n\n  let candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively(\n      [container],\n      options.includeContainer,\n      {\n        filter: isNodeMatchingSelectorTabbable.bind(null, options),\n        flatten: false,\n        getShadowRoot: options.getShadowRoot,\n        shadowRootFilter: isValidShadowRootTabbable,\n      }\n    );\n  } else {\n    candidates = getCandidates(\n      container,\n      options.includeContainer,\n      isNodeMatchingSelectorTabbable.bind(null, options)\n    );\n  }\n  return sortByOrder(candidates);\n};\n\nconst focusable = function (container, options) {\n  options = options || {};\n\n  let candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively(\n      [container],\n      options.includeContainer,\n      {\n        filter: isNodeMatchingSelectorFocusable.bind(null, options),\n        flatten: true,\n        getShadowRoot: options.getShadowRoot,\n      }\n    );\n  } else {\n    candidates = getCandidates(\n      container,\n      options.includeContainer,\n      isNodeMatchingSelectorFocusable.bind(null, options)\n    );\n  }\n\n  return candidates;\n};\n\nconst isTabbable = function (node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorTabbable(options, node);\n};\n\nconst focusableCandidateSelector = /* #__PURE__ */ candidateSelectors\n  .concat('iframe')\n  .join(',');\n\nconst isFocusable = function (node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorFocusable(options, node);\n};\n\nexport { tabbable, focusable, isTabbable, isFocusable, getTabIndex };\n", "export const bigInt=()=>(async e=>{try{return(await WebAssembly.instantiate(e)).instance.exports.b(BigInt(0))===BigInt(0)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,1,126,1,126,3,2,1,0,7,5,1,1,98,0,0,10,6,1,4,0,32,0,11])),bulkMemory=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,3,1,0,1,10,14,1,12,0,65,0,65,0,65,0,252,10,0,0,11])),exceptions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,6,64,25,11,11])),exceptionsFinal=()=>(async()=>{try{return new WebAssembly.Module(Uint8Array.from(atob(\"AGFzbQEAAAABBAFgAAADAgEAChABDgACaR9AAQMAAAsACxoL\"),(e=>e.codePointAt(0)))),!0}catch(e){return!1}})(),extendedConst=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,5,3,1,0,1,11,9,1,0,65,1,65,2,106,11,0])),gc=()=>(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,95,1,120,0])))(),jsStringBuiltins=()=>(async()=>{try{return await WebAssembly.instantiate(Uint8Array.from(atob(\"AGFzbQEAAAABBgFgAW8BfwIXAQ53YXNtOmpzLXN0cmluZwR0ZXN0AAA=\"),(e=>e.codePointAt(0))),{},{builtins:[\"js-string\"]}),!0}catch(e){return!1}})(),jspi=()=>(async()=>\"Suspending\"in WebAssembly)(),memory64=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,5,3,1,4,1])),multiMemory=()=>(async()=>{try{return new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,5,5,2,0,0,0,0])),!0}catch(e){return!1}})(),multiValue=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,0,2,127,127,3,2,1,0,10,8,1,6,0,65,0,65,0,11])),mutableGlobals=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,2,8,1,1,97,1,98,3,127,1,6,6,1,127,1,65,0,11,7,5,1,1,97,3,1])),referenceTypes=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,7,1,5,0,208,112,26,11])),relaxedSimd=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,15,1,13,0,65,1,253,15,65,2,253,15,253,128,2,11])),saturatedFloatToInt=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,12,1,10,0,67,0,0,0,0,252,0,26,11])),signExtensions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,65,0,192,26,11])),simd=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11])),streamingCompilation=()=>(async()=>\"compileStreaming\"in WebAssembly)(),tailCall=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,6,1,4,0,18,0,11])),threads=()=>(async e=>{try{return\"undefined\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(e)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])),typeReflection=()=>(async()=>\"Function\"in WebAssembly)(),typedFunctionReferences=()=>(async()=>{try{return new WebAssembly.Module(Uint8Array.from(atob(\"AGFzbQEAAAABEANgAX8Bf2ABZAABf2AAAX8DBAMBAAIJBQEDAAEBChwDCwBBCkEqIAAUAGoLBwAgAEEBagsGANIBEAAL\"),(e=>e.codePointAt(0)))),!0}catch(e){return!1}})();\n", "import { simd } from 'wasm-feature-detect';\n\n/**\n * Checks if the current platform is a mobile device.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Browser_detection_using_the_user_agent\n */\nconst isMobile = () => /Mobi/i.test(navigator.userAgent);\n\n/**\n * Runs a check to see if the current platform supports\n * the necessary APIs required for the video filters.\n */\nexport const isPlatformSupported = async () =>\n  typeof document !== 'undefined' &&\n  typeof window !== 'undefined' &&\n  typeof navigator !== 'undefined' &&\n  !isMobile() && // we don't support mobile devices yet due to performance issues\n  typeof WebAssembly !== 'undefined' &&\n  !!window.WebGL2RenderingContext && // WebGL2 is required for the video filters\n  !!document.createElement('canvas').getContext('webgl2') &&\n  (await simd()); // SIMD is required for the wasm module\n", "/**\n * Use it along with boyswan.glsl-literal VSCode extension\n * to get GLSL syntax highlighting.\n * https://marketplace.visualstudio.com/items?itemName=boyswan.glsl-literal\n *\n * On VSCode OSS, boyswan.glsl-literal requires slevesque.shader extension\n * to be installed as well.\n * https://marketplace.visualstudio.com/items?itemName=slevesque.shader\n */\nexport const glsl = String.raw;\n\nexport function createPipelineStageProgram(\n  gl: WebGL2RenderingContext,\n  vertexShader: WebGLShader,\n  fragmentShader: WebGLShader,\n  positionBuffer: WebGLBuffer,\n  texCoordBuffer: WebGLBuffer,\n) {\n  const program = createProgram(gl, vertexShader, fragmentShader);\n\n  const positionAttributeLocation = gl.getAttribLocation(program, 'a_position');\n  gl.enableVertexAttribArray(positionAttributeLocation);\n  gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n  gl.vertexAttribPointer(positionAttributeLocation, 2, gl.FLOAT, false, 0, 0);\n\n  const texCoordAttributeLocation = gl.getAttribLocation(program, 'a_texCoord');\n  gl.enableVertexAttribArray(texCoordAttributeLocation);\n  gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n  gl.vertexAttribPointer(texCoordAttributeLocation, 2, gl.FLOAT, false, 0, 0);\n\n  return program;\n}\n\nexport function createProgram(\n  gl: WebGL2RenderingContext,\n  vertexShader: WebGLShader,\n  fragmentShader: WebGLShader,\n) {\n  const program = gl.createProgram()!;\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n  gl.linkProgram(program);\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    throw new Error(\n      `Could not link WebGL program: ${gl.getProgramInfoLog(program)}`,\n    );\n  }\n  return program;\n}\n\nexport function compileShader(\n  gl: WebGL2RenderingContext,\n  shaderType: number,\n  shaderSource: string,\n) {\n  const shader = gl.createShader(shaderType)!;\n  gl.shaderSource(shader, shaderSource);\n  gl.compileShader(shader);\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    throw new Error(`Could not compile shader: ${gl.getShaderInfoLog(shader)}`);\n  }\n  return shader;\n}\n\nexport function createTexture(\n  gl: WebGL2RenderingContext,\n  internalformat: number,\n  width: number,\n  height: number,\n  minFilter = gl.NEAREST,\n  magFilter = gl.NEAREST,\n) {\n  const texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter);\n  gl.texStorage2D(gl.TEXTURE_2D, 1, internalformat, width, height);\n  return texture;\n}\n\nexport async function readPixelsAsync(\n  gl: WebGL2RenderingContext,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  format: number,\n  type: number,\n  dest: ArrayBufferView,\n) {\n  const buf = gl.createBuffer()!;\n  gl.bindBuffer(gl.PIXEL_PACK_BUFFER, buf);\n  gl.bufferData(gl.PIXEL_PACK_BUFFER, dest.byteLength, gl.STREAM_READ);\n  gl.readPixels(x, y, width, height, format, type, 0);\n  gl.bindBuffer(gl.PIXEL_PACK_BUFFER, null);\n\n  await getBufferSubDataAsync(gl, gl.PIXEL_PACK_BUFFER, buf, 0, dest);\n\n  gl.deleteBuffer(buf);\n  return dest;\n}\n\nasync function getBufferSubDataAsync(\n  gl: WebGL2RenderingContext,\n  target: number,\n  buffer: WebGLBuffer,\n  srcByteOffset: number,\n  dstBuffer: ArrayBufferView,\n  dstOffset?: number,\n  length?: number,\n) {\n  const sync = gl.fenceSync(gl.SYNC_GPU_COMMANDS_COMPLETE, 0);\n  gl.flush();\n  if (!sync) return;\n\n  const res = await clientWaitAsync(gl, sync);\n  gl.deleteSync(sync);\n\n  if (res !== gl.WAIT_FAILED) {\n    gl.bindBuffer(target, buffer);\n    gl.getBufferSubData(target, srcByteOffset, dstBuffer, dstOffset, length);\n    gl.bindBuffer(target, null);\n  }\n}\n\nfunction clientWaitAsync(gl: WebGL2RenderingContext, sync: WebGLSync) {\n  return new Promise<number>((resolve) => {\n    function test() {\n      const res = gl.clientWaitSync(sync, 0, 0);\n      if (res === gl.WAIT_FAILED) {\n        resolve(res);\n        return;\n      }\n      if (res === gl.TIMEOUT_EXPIRED) {\n        setTimeout(test);\n        return;\n      }\n      resolve(res);\n    }\n    setTimeout(test);\n  });\n}\n", "import {\n  compileShader,\n  createPipelineStageProgram,\n  createTexture,\n  glsl,\n} from '../helpers/webglHelper';\nimport type { BackgroundBlurLevel } from '../createRenderer';\n\nexport type BackgroundBlurStage = {\n  render(): void;\n  updateCoverage(coverage: [number, number]): void;\n  cleanUp(): void;\n};\n\nexport function buildBackgroundBlurStage(\n  gl: WebGL2RenderingContext,\n  vertexShader: WebGLShader,\n  positionBuffer: WebGLBuffer,\n  texCoordBuffer: WebGLBuffer,\n  personMaskTexture: WebGLTexture,\n  canvas: HTMLCanvasElement,\n  blurLevel: BackgroundBlurLevel,\n): BackgroundBlurStage {\n  const blurPass = buildBlurPass(\n    gl,\n    vertexShader,\n    positionBuffer,\n    texCoordBuffer,\n    personMaskTexture,\n    canvas,\n    blurLevel,\n  );\n  const blendPass = buildBlendPass(gl, positionBuffer, texCoordBuffer, canvas);\n\n  function render() {\n    blurPass.render();\n    blendPass.render();\n  }\n\n  function updateCoverage(coverage: [number, number]) {\n    blendPass.updateCoverage(coverage);\n  }\n\n  function cleanUp() {\n    blendPass.cleanUp();\n    blurPass.cleanUp();\n  }\n\n  return {\n    render,\n    updateCoverage,\n    cleanUp,\n  };\n}\n\nfunction buildBlurPass(\n  gl: WebGL2RenderingContext,\n  vertexShader: WebGLShader,\n  positionBuffer: WebGLBuffer,\n  texCoordBuffer: WebGLBuffer,\n  personMaskTexture: WebGLTexture,\n  canvas: HTMLCanvasElement,\n  blurLevel: BackgroundBlurLevel,\n) {\n  const sigma =\n    typeof blurLevel === 'number'\n      ? blurLevel\n      : blurLevel === 'low'\n        ? 2\n        : blurLevel === 'medium'\n          ? 4\n          : 6;\n  const windowSize = Math.max(1, Math.floor(sigma * 3));\n  const offset = new Array<number>(windowSize).fill(0).map((v, index) => index);\n  const variance = sigma ** 2;\n  const weights = offset.map((x) => {\n    var m = sigma * Math.sqrt(2 * Math.PI);\n    var e = Math.exp(-(x ** 2) / (2 * variance));\n    return e / m;\n  });\n\n  const fragmentShaderSource = glsl`#version 300 es\n\n    precision highp float;\n\n    uniform sampler2D u_inputFrame;\n    uniform sampler2D u_personMask;\n    uniform vec2 u_texelSize;\n\n    in vec2 v_texCoord;\n    out vec4 outColor;\n\n    const float offset[${windowSize}] = float[](${offset.map((i) => i.toFixed(10)).join(', ')});\n    const float weight[${windowSize}] = float[](${weights.map((i) => i.toFixed(10)).join(', ')});\n\n    void main() {\n      vec4 centerColor = texture(u_inputFrame, v_texCoord);\n      float personMask = texture(u_personMask, v_texCoord).a;\n\n      vec4 frameColor = centerColor * weight[0] * (1.0 - personMask);\n\n      for (int i = 1; i < ${windowSize}; i++) {\n        vec2 offset = vec2(offset[i]) * u_texelSize;\n\n        vec2 texCoord = v_texCoord + offset;\n        frameColor += texture(u_inputFrame, texCoord)\n           * weight[i]\n           * (1.0 - texture(u_personMask, texCoord).a);\n\n        texCoord = v_texCoord - offset;\n        frameColor += texture(u_inputFrame, texCoord)\n          * weight[i]\n          * (1.0 - texture(u_personMask, texCoord).a);\n      }\n      outColor = vec4(frameColor.rgb + (1.0 - frameColor.a) * centerColor.rgb, 1.0);\n    }\n  `;\n\n  const scale = 0.5;\n  const outputWidth = canvas.width * scale;\n  const outputHeight = canvas.height * scale;\n  const texelWidth = 1 / outputWidth;\n  const texelHeight = 1 / outputHeight;\n\n  const fragmentShader = compileShader(\n    gl,\n    gl.FRAGMENT_SHADER,\n    fragmentShaderSource,\n  );\n  const program = createPipelineStageProgram(\n    gl,\n    vertexShader,\n    fragmentShader,\n    positionBuffer,\n    texCoordBuffer,\n  );\n  const inputFrameLocation = gl.getUniformLocation(program, 'u_inputFrame');\n  const personMaskLocation = gl.getUniformLocation(program, 'u_personMask');\n  const texelSizeLocation = gl.getUniformLocation(program, 'u_texelSize');\n  const texture1 = createTexture(\n    gl,\n    gl.RGBA8,\n    outputWidth,\n    outputHeight,\n    gl.NEAREST,\n    // @ts-expect-error types are incomplete\n    gl.LINEAR,\n  );\n  const texture2 = createTexture(\n    gl,\n    gl.RGBA8,\n    outputWidth,\n    outputHeight,\n    gl.NEAREST,\n    // @ts-expect-error types are incomplete\n    gl.LINEAR,\n  );\n\n  const frameBuffer1 = gl.createFramebuffer();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer1);\n  gl.framebufferTexture2D(\n    gl.FRAMEBUFFER,\n    gl.COLOR_ATTACHMENT0,\n    gl.TEXTURE_2D,\n    texture1,\n    0,\n  );\n\n  const frameBuffer2 = gl.createFramebuffer();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer2);\n  gl.framebufferTexture2D(\n    gl.FRAMEBUFFER,\n    gl.COLOR_ATTACHMENT0,\n    gl.TEXTURE_2D,\n    texture2,\n    0,\n  );\n\n  gl.useProgram(program);\n  gl.uniform1i(personMaskLocation, 1);\n\n  function render() {\n    gl.viewport(0, 0, outputWidth, outputHeight);\n    gl.useProgram(program);\n    gl.uniform1i(inputFrameLocation, 0);\n    gl.activeTexture(gl.TEXTURE1);\n    gl.bindTexture(gl.TEXTURE_2D, personMaskTexture);\n\n    for (let i = 0; i < 3; i++) {\n      gl.uniform2f(texelSizeLocation, 0, texelHeight);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer1);\n      gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\n      gl.activeTexture(gl.TEXTURE2);\n      gl.bindTexture(gl.TEXTURE_2D, texture1);\n      gl.uniform1i(inputFrameLocation, 2);\n\n      gl.uniform2f(texelSizeLocation, texelWidth, 0);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer2);\n      gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\n      gl.bindTexture(gl.TEXTURE_2D, texture2);\n    }\n  }\n\n  function cleanUp() {\n    gl.deleteFramebuffer(frameBuffer2);\n    gl.deleteFramebuffer(frameBuffer1);\n    gl.deleteTexture(texture2);\n    gl.deleteTexture(texture1);\n    gl.deleteProgram(program);\n    gl.deleteShader(fragmentShader);\n  }\n\n  return {\n    render,\n    cleanUp,\n  };\n}\n\nfunction buildBlendPass(\n  gl: WebGL2RenderingContext,\n  positionBuffer: WebGLBuffer,\n  texCoordBuffer: WebGLBuffer,\n  canvas: HTMLCanvasElement,\n) {\n  const vertexShaderSource = glsl`#version 300 es\n\n    in vec2 a_position;\n    in vec2 a_texCoord;\n\n    out vec2 v_texCoord;\n\n    void main() {\n      // Flipping Y is required when rendering to canvas\n      gl_Position = vec4(a_position * vec2(1.0, -1.0), 0.0, 1.0);\n      v_texCoord = a_texCoord;\n    }\n  `;\n\n  const fragmentShaderSource = glsl`#version 300 es\n\n    precision highp float;\n\n    uniform sampler2D u_inputFrame;\n    uniform sampler2D u_personMask;\n    uniform sampler2D u_blurredInputFrame;\n    uniform vec2 u_coverage;\n\n    in vec2 v_texCoord;\n\n    out vec4 outColor;\n\n    void main() {\n      vec3 color = texture(u_inputFrame, v_texCoord).rgb;\n      vec3 blurredColor = texture(u_blurredInputFrame, v_texCoord).rgb;\n      float personMask = texture(u_personMask, v_texCoord).a;\n      personMask = smoothstep(u_coverage.x, u_coverage.y, personMask);\n      outColor = vec4(mix(blurredColor, color, personMask), 1.0);\n    }\n  `;\n\n  const { width: outputWidth, height: outputHeight } = canvas;\n\n  const vertexShader = compileShader(gl, gl.VERTEX_SHADER, vertexShaderSource);\n  const fragmentShader = compileShader(\n    gl,\n    gl.FRAGMENT_SHADER,\n    fragmentShaderSource,\n  );\n  const program = createPipelineStageProgram(\n    gl,\n    vertexShader,\n    fragmentShader,\n    positionBuffer,\n    texCoordBuffer,\n  );\n  const inputFrameLocation = gl.getUniformLocation(program, 'u_inputFrame');\n  const personMaskLocation = gl.getUniformLocation(program, 'u_personMask');\n  const blurredInputFrame = gl.getUniformLocation(\n    program,\n    'u_blurredInputFrame',\n  );\n  const coverageLocation = gl.getUniformLocation(program, 'u_coverage');\n\n  gl.useProgram(program);\n  gl.uniform1i(inputFrameLocation, 0);\n  gl.uniform1i(personMaskLocation, 1);\n  gl.uniform1i(blurredInputFrame, 2);\n  gl.uniform2f(coverageLocation, 0, 1);\n\n  function render() {\n    gl.viewport(0, 0, outputWidth, outputHeight);\n    gl.useProgram(program);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  }\n\n  function updateCoverage(coverage: [number, number]) {\n    gl.useProgram(program);\n    gl.uniform2f(coverageLocation, coverage[0], coverage[1]);\n  }\n\n  function cleanUp() {\n    gl.deleteProgram(program);\n    gl.deleteShader(fragmentShader);\n    gl.deleteShader(vertexShader);\n  }\n\n  return {\n    render,\n    updateCoverage,\n    cleanUp,\n  };\n}\n", "import {\n  compileShader,\n  createPipelineStageProgram,\n  createTexture,\n  glsl,\n} from '../helpers/webglHelper';\n\nexport type BackgroundImageStage = {\n  render(): void;\n  updateCoverage(coverage: [number, number]): void;\n  updateLightWrapping(lightWrapping: number): void;\n  updateBlendMode(blendMode: 'screen' | 'linearDodge'): void;\n  cleanUp(): void;\n};\n\nexport function buildBackgroundImageStage(\n  gl: WebGL2RenderingContext,\n  positionBuffer: WebGLBuffer,\n  texCoordBuffer: WebGLBuffer,\n  personMaskTexture: WebGLTexture,\n  backgroundImage: HTMLImageElement | undefined,\n  canvas: HTMLCanvasElement,\n): BackgroundImageStage {\n  const vertexShaderSource = glsl`#version 300 es\n\n    uniform vec2 u_backgroundScale;\n    uniform vec2 u_backgroundOffset;\n\n    in vec2 a_position;\n    in vec2 a_texCoord;\n\n    out vec2 v_texCoord;\n    out vec2 v_backgroundCoord;\n\n    void main() {\n      // Flipping Y is required when rendering to canvas\n      gl_Position = vec4(a_position * vec2(1.0, -1.0), 0.0, 1.0);\n      v_texCoord = a_texCoord;\n      v_backgroundCoord = a_texCoord * u_backgroundScale + u_backgroundOffset;\n    }\n  `;\n\n  const fragmentShaderSource = glsl`#version 300 es\n\n    precision highp float;\n\n    uniform sampler2D u_inputFrame;\n    uniform sampler2D u_personMask;\n    uniform sampler2D u_background;\n    uniform vec2 u_coverage;\n    uniform float u_lightWrapping;\n    uniform float u_blendMode;\n\n    in vec2 v_texCoord;\n    in vec2 v_backgroundCoord;\n\n    out vec4 outColor;\n\n    vec3 screen(vec3 a, vec3 b) {\n      return 1.0 - (1.0 - a) * (1.0 - b);\n    }\n\n    vec3 linearDodge(vec3 a, vec3 b) {\n      return a + b;\n    }\n\n    void main() {\n      vec3 frameColor = texture(u_inputFrame, v_texCoord).rgb;\n      vec3 backgroundColor = texture(u_background, v_backgroundCoord).rgb;\n      float personMask = texture(u_personMask, v_texCoord).a;\n      float lightWrapMask = 1.0 - max(0.0, personMask - u_coverage.y) / (1.0 - u_coverage.y);\n      vec3 lightWrap = u_lightWrapping * lightWrapMask * backgroundColor;\n\n      frameColor = u_blendMode * linearDodge(frameColor, lightWrap)\n        + (1.0 - u_blendMode) * screen(frameColor, lightWrap);\n      personMask = smoothstep(u_coverage.x, u_coverage.y, personMask);\n      outColor = vec4(frameColor * personMask + backgroundColor * (1.0 - personMask), 1.0);\n    }\n  `;\n\n  const { width: outputWidth, height: outputHeight } = canvas;\n  const outputRatio = outputWidth / outputHeight;\n\n  const vertexShader = compileShader(gl, gl.VERTEX_SHADER, vertexShaderSource);\n  const fragmentShader = compileShader(\n    gl,\n    gl.FRAGMENT_SHADER,\n    fragmentShaderSource,\n  );\n  const program = createPipelineStageProgram(\n    gl,\n    vertexShader,\n    fragmentShader,\n    positionBuffer,\n    texCoordBuffer,\n  );\n  const backgroundScaleLocation = gl.getUniformLocation(\n    program,\n    'u_backgroundScale',\n  );\n  const backgroundOffsetLocation = gl.getUniformLocation(\n    program,\n    'u_backgroundOffset',\n  );\n  const inputFrameLocation = gl.getUniformLocation(program, 'u_inputFrame');\n  const personMaskLocation = gl.getUniformLocation(program, 'u_personMask');\n  const backgroundLocation = gl.getUniformLocation(program, 'u_background');\n  const coverageLocation = gl.getUniformLocation(program, 'u_coverage');\n  const lightWrappingLocation = gl.getUniformLocation(\n    program,\n    'u_lightWrapping',\n  );\n  const blendModeLocation = gl.getUniformLocation(program, 'u_blendMode');\n\n  gl.useProgram(program);\n  gl.uniform2f(backgroundScaleLocation, 1, 1);\n  gl.uniform2f(backgroundOffsetLocation, 0, 0);\n  gl.uniform1i(inputFrameLocation, 0);\n  gl.uniform1i(personMaskLocation, 1);\n  gl.uniform2f(coverageLocation, 0, 1);\n  gl.uniform1f(lightWrappingLocation, 0);\n  gl.uniform1f(blendModeLocation, 0);\n\n  let backgroundTexture: WebGLTexture | null = null;\n  // TODO Find a better to handle background being loaded\n  if (backgroundImage?.complete) {\n    updateBackgroundImage(backgroundImage);\n  } else if (backgroundImage) {\n    backgroundImage.onload = () => {\n      updateBackgroundImage(backgroundImage);\n    };\n  }\n\n  function render() {\n    gl.viewport(0, 0, outputWidth, outputHeight);\n    gl.useProgram(program);\n    gl.activeTexture(gl.TEXTURE1);\n    gl.bindTexture(gl.TEXTURE_2D, personMaskTexture);\n    if (backgroundTexture !== null) {\n      gl.activeTexture(gl.TEXTURE2);\n      gl.bindTexture(gl.TEXTURE_2D, backgroundTexture);\n      // TODO Handle correctly the background not loaded yet\n      gl.uniform1i(backgroundLocation, 2);\n    }\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  }\n\n  function updateBackgroundImage(bgImage: HTMLImageElement) {\n    backgroundTexture = createTexture(\n      gl,\n      gl.RGBA8,\n      bgImage.naturalWidth,\n      bgImage.naturalHeight,\n      // @ts-expect-error types are incomplete\n      gl.LINEAR,\n      gl.LINEAR,\n    );\n    gl.texSubImage2D(\n      gl.TEXTURE_2D,\n      0,\n      0,\n      0,\n      bgImage.naturalWidth,\n      bgImage.naturalHeight,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      bgImage,\n    );\n\n    let xOffset = 0;\n    let yOffset = 0;\n    let backgroundWidth = bgImage.naturalWidth;\n    let backgroundHeight = bgImage.naturalHeight;\n    const backgroundRatio = backgroundWidth / backgroundHeight;\n    if (backgroundRatio < outputRatio) {\n      backgroundHeight = backgroundWidth / outputRatio;\n      yOffset = (bgImage.naturalHeight - backgroundHeight) / 2;\n    } else {\n      backgroundWidth = backgroundHeight * outputRatio;\n      xOffset = (bgImage.naturalWidth - backgroundWidth) / 2;\n    }\n\n    const xScale = backgroundWidth / bgImage.naturalWidth;\n    const yScale = backgroundHeight / bgImage.naturalHeight;\n    xOffset /= bgImage.naturalWidth;\n    yOffset /= bgImage.naturalHeight;\n\n    gl.uniform2f(backgroundScaleLocation, xScale, yScale);\n    gl.uniform2f(backgroundOffsetLocation, xOffset, yOffset);\n  }\n\n  function updateCoverage(coverage: [number, number]) {\n    gl.useProgram(program);\n    gl.uniform2f(coverageLocation, coverage[0], coverage[1]);\n  }\n\n  function updateLightWrapping(lightWrapping: number) {\n    gl.useProgram(program);\n    gl.uniform1f(lightWrappingLocation, lightWrapping);\n  }\n\n  function updateBlendMode(blendMode: 'screen' | 'linearDodge') {\n    gl.useProgram(program);\n    gl.uniform1f(blendModeLocation, blendMode === 'screen' ? 0 : 1);\n  }\n\n  function cleanUp() {\n    gl.deleteTexture(backgroundTexture);\n    gl.deleteProgram(program);\n    gl.deleteShader(fragmentShader);\n    gl.deleteShader(vertexShader);\n  }\n\n  return {\n    render,\n    updateCoverage,\n    updateLightWrapping,\n    updateBlendMode,\n    cleanUp,\n  };\n}\n", "import {\n  compileShader,\n  createPipelineStageProgram,\n  glsl,\n} from '../helpers/webglHelper';\nimport { SegmentationParams } from '../segmentation';\n\nexport function buildJointBilateralFilterStage(\n  gl: WebGL2RenderingContext,\n  vertexShader: WebGLShader,\n  positionBuffer: WebGLBuffer,\n  texCoordBuffer: WebGLBuffer,\n  inputTexture: WebGLTexture,\n  outputTexture: WebGLTexture,\n  canvas: HTMLCanvasElement,\n  segmentationConfig: SegmentationParams,\n) {\n  const fragmentShaderSource = glsl`#version 300 es\n\n    precision highp float;\n\n    uniform sampler2D u_inputFrame;\n    uniform sampler2D u_segmentationMask;\n    uniform vec2 u_texelSize;\n    uniform float u_step;\n    uniform float u_radius;\n    uniform float u_offset;\n    uniform float u_sigmaTexel;\n    uniform float u_sigmaColor;\n\n    in vec2 v_texCoord;\n    out vec4 outColor;\n\n    float gaussian(float x, float sigma) {\n      float coeff = -0.5 / (sigma * sigma * 4.0 + 1.0e-6);\n      return exp((x * x) * coeff);\n    }\n\n    void main() {\n      vec2 centerCoord = v_texCoord;\n      vec3 centerColor = texture(u_inputFrame, centerCoord).rgb;\n      float newVal = 0.0;\n\n      float spaceWeight = 0.0;\n      float colorWeight = 0.0;\n      float totalWeight = 0.0;\n\n      // Subsample kernel space.\n      for (float i = -u_radius + u_offset; i <= u_radius; i += u_step) {\n        for (float j = -u_radius + u_offset; j <= u_radius; j += u_step) {\n          vec2 shift = vec2(j, i) * u_texelSize;\n          vec2 coord = vec2(centerCoord + shift);\n          vec3 frameColor = texture(u_inputFrame, coord).rgb;\n          float outVal = texture(u_segmentationMask, coord).a;\n\n          spaceWeight = gaussian(distance(centerCoord, coord), u_sigmaTexel);\n          colorWeight = gaussian(distance(centerColor, frameColor), u_sigmaColor);\n          totalWeight += spaceWeight * colorWeight;\n\n          newVal += spaceWeight * colorWeight * outVal;\n        }\n      }\n      newVal /= totalWeight;\n\n      outColor = vec4(vec3(0.0), newVal);\n    }\n  `;\n\n  const { width: segmentationWidth, height: segmentationHeight } =\n    segmentationConfig;\n  const { width: outputWidth, height: outputHeight } = canvas;\n  const texelWidth = 1 / outputWidth;\n  const texelHeight = 1 / outputHeight;\n\n  const fragmentShader = compileShader(\n    gl,\n    gl.FRAGMENT_SHADER,\n    fragmentShaderSource,\n  );\n  const program = createPipelineStageProgram(\n    gl,\n    vertexShader,\n    fragmentShader,\n    positionBuffer,\n    texCoordBuffer,\n  );\n  const inputFrameLocation = gl.getUniformLocation(program, 'u_inputFrame');\n  const segmentationMaskLocation = gl.getUniformLocation(\n    program,\n    'u_segmentationMask',\n  );\n  const texelSizeLocation = gl.getUniformLocation(program, 'u_texelSize');\n  const stepLocation = gl.getUniformLocation(program, 'u_step');\n  const radiusLocation = gl.getUniformLocation(program, 'u_radius');\n  const offsetLocation = gl.getUniformLocation(program, 'u_offset');\n  const sigmaTexelLocation = gl.getUniformLocation(program, 'u_sigmaTexel');\n  const sigmaColorLocation = gl.getUniformLocation(program, 'u_sigmaColor');\n\n  const frameBuffer = gl.createFramebuffer();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n  gl.framebufferTexture2D(\n    gl.FRAMEBUFFER,\n    gl.COLOR_ATTACHMENT0,\n    gl.TEXTURE_2D,\n    outputTexture,\n    0,\n  );\n\n  gl.useProgram(program);\n  gl.uniform1i(inputFrameLocation, 0);\n  gl.uniform1i(segmentationMaskLocation, 1);\n  gl.uniform2f(texelSizeLocation, texelWidth, texelHeight);\n\n  // Ensures default values are configured to prevent infinite\n  // loop in fragment shader\n  updateSigmaSpace(0);\n  updateSigmaColor(0);\n\n  function render() {\n    gl.viewport(0, 0, outputWidth, outputHeight);\n    gl.useProgram(program);\n    gl.activeTexture(gl.TEXTURE1);\n    gl.bindTexture(gl.TEXTURE_2D, inputTexture);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  }\n\n  function updateSigmaSpace(sigmaSpace: number) {\n    sigmaSpace *= Math.max(\n      outputWidth / segmentationWidth,\n      outputHeight / segmentationHeight,\n    );\n\n    const kSparsityFactor = 0.66; // Higher is sparser.\n    const step = Math.max(1, Math.sqrt(sigmaSpace) * kSparsityFactor);\n    const radius = sigmaSpace;\n    const offset = step > 1 ? step * 0.5 : 0;\n    const sigmaTexel = Math.max(texelWidth, texelHeight) * sigmaSpace;\n\n    gl.useProgram(program);\n    gl.uniform1f(stepLocation, step);\n    gl.uniform1f(radiusLocation, radius);\n    gl.uniform1f(offsetLocation, offset);\n    gl.uniform1f(sigmaTexelLocation, sigmaTexel);\n  }\n\n  function updateSigmaColor(sigmaColor: number) {\n    gl.useProgram(program);\n    gl.uniform1f(sigmaColorLocation, sigmaColor);\n  }\n\n  function cleanUp() {\n    gl.deleteFramebuffer(frameBuffer);\n    gl.deleteProgram(program);\n    gl.deleteShader(fragmentShader);\n  }\n\n  return { render, updateSigmaSpace, updateSigmaColor, cleanUp };\n}\n", "import { TFLite } from '../tflite';\nimport {\n  compileShader,\n  createPipelineStageProgram,\n  createTexture,\n  glsl,\n  readPixelsAsync,\n} from '../helpers/webglHelper';\nimport { SegmentationParams } from '../segmentation';\n\nexport function buildResizingStage(\n  gl: WebGL2RenderingContext,\n  vertexShader: WebGLShader,\n  positionBuffer: WebGLBuffer,\n  texCoordBuffer: WebGLBuffer,\n  tflite: TFLite,\n  segmentationConfig: SegmentationParams,\n) {\n  const fragmentShaderSource = glsl`#version 300 es\n\n    precision highp float;\n    uniform sampler2D u_inputFrame;\n    in vec2 v_texCoord;\n    out vec4 outColor;\n\n    void main() {\n      outColor = texture(u_inputFrame, v_texCoord);\n    }\n  `;\n\n  // TFLite memory will be accessed as float32\n  const tfliteInputMemoryOffset = tflite._getInputMemoryOffset() / 4;\n\n  const { width: outputWidth, height: outputHeight } = segmentationConfig;\n  const outputPixelCount = outputWidth * outputHeight;\n\n  const fragmentShader = compileShader(\n    gl,\n    gl.FRAGMENT_SHADER,\n    fragmentShaderSource,\n  );\n  const program = createPipelineStageProgram(\n    gl,\n    vertexShader,\n    fragmentShader,\n    positionBuffer,\n    texCoordBuffer,\n  );\n  const inputFrameLocation = gl.getUniformLocation(program, 'u_inputFrame');\n  const outputTexture = createTexture(gl, gl.RGBA8, outputWidth, outputHeight);\n\n  const frameBuffer = gl.createFramebuffer();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n  gl.framebufferTexture2D(\n    gl.FRAMEBUFFER,\n    gl.COLOR_ATTACHMENT0,\n    gl.TEXTURE_2D,\n    outputTexture,\n    0,\n  );\n  const outputPixels = new Uint8Array(outputPixelCount * 4);\n\n  gl.useProgram(program);\n  gl.uniform1i(inputFrameLocation, 0);\n\n  function render() {\n    gl.viewport(0, 0, outputWidth, outputHeight);\n    gl.useProgram(program);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\n    // Downloads pixels asynchronously from GPU while rendering the current frame.\n    // The pixels will be available in the next frame render which results\n    // in offsets in the segmentation output but increases the frame rate.\n    readPixelsAsync(\n      gl,\n      0,\n      0,\n      outputWidth,\n      outputHeight,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      outputPixels,\n    );\n\n    for (let i = 0; i < outputPixelCount; i++) {\n      const tfliteIndex = tfliteInputMemoryOffset + i * 3;\n      const outputIndex = i * 4;\n      tflite.HEAPF32[tfliteIndex] = outputPixels[outputIndex] / 255;\n      tflite.HEAPF32[tfliteIndex + 1] = outputPixels[outputIndex + 1] / 255;\n      tflite.HEAPF32[tfliteIndex + 2] = outputPixels[outputIndex + 2] / 255;\n    }\n  }\n\n  function cleanUp() {\n    gl.deleteFramebuffer(frameBuffer);\n    gl.deleteTexture(outputTexture);\n    gl.deleteProgram(program);\n    gl.deleteShader(fragmentShader);\n  }\n\n  return { render, cleanUp };\n}\n", "import { TFLite } from '../tflite';\nimport {\n  compileShader,\n  createPipelineStageProgram,\n  createTexture,\n  glsl,\n} from '../helpers/webglHelper';\nimport { SegmentationParams } from '../segmentation';\n\nexport function buildSoftmaxStage(\n  gl: WebGL2RenderingContext,\n  vertexShader: WebGLShader,\n  positionBuffer: WebGLBuffer,\n  texCoordBuffer: WebGLBuffer,\n  tflite: TFLite,\n  outputTexture: WebGLTexture,\n  segmentationConfig: SegmentationParams,\n) {\n  const fragmentShaderSource = glsl`#version 300 es\n\n    precision highp float;\n\n    uniform sampler2D u_inputSegmentation;\n    in vec2 v_texCoord;\n    out vec4 outColor;\n\n    void main() {\n      vec2 segmentation = texture(u_inputSegmentation, v_texCoord).rg;\n      float shift = max(segmentation.r, segmentation.g);\n      float backgroundExp = exp(segmentation.r - shift);\n      float personExp = exp(segmentation.g - shift);\n      outColor = vec4(vec3(0.0), personExp / (backgroundExp + personExp));\n    }\n  `;\n\n  // TFLite memory will be accessed as float32\n  const tfliteOutputMemoryOffset = tflite._getOutputMemoryOffset() / 4;\n  const { width: segmentationWidth, height: segmentationHeight } =\n    segmentationConfig;\n\n  const fragmentShader = compileShader(\n    gl,\n    gl.FRAGMENT_SHADER,\n    fragmentShaderSource,\n  );\n  const program = createPipelineStageProgram(\n    gl,\n    vertexShader,\n    fragmentShader,\n    positionBuffer,\n    texCoordBuffer,\n  );\n  const inputLocation = gl.getUniformLocation(program, 'u_inputSegmentation');\n  const inputTexture = createTexture(\n    gl,\n    gl.RG32F,\n    segmentationWidth,\n    segmentationHeight,\n  );\n\n  const frameBuffer = gl.createFramebuffer();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n  gl.framebufferTexture2D(\n    gl.FRAMEBUFFER,\n    gl.COLOR_ATTACHMENT0,\n    gl.TEXTURE_2D,\n    outputTexture,\n    0,\n  );\n\n  gl.useProgram(program);\n  gl.uniform1i(inputLocation, 1);\n\n  function render() {\n    gl.viewport(0, 0, segmentationWidth, segmentationHeight);\n    gl.useProgram(program);\n    gl.activeTexture(gl.TEXTURE1);\n    gl.bindTexture(gl.TEXTURE_2D, inputTexture);\n    gl.texSubImage2D(\n      gl.TEXTURE_2D,\n      0,\n      0,\n      0,\n      segmentationWidth,\n      segmentationHeight,\n      gl.RG,\n      gl.FLOAT,\n      tflite.HEAPF32,\n      tfliteOutputMemoryOffset,\n    );\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  }\n\n  function cleanUp() {\n    gl.deleteFramebuffer(frameBuffer);\n    gl.deleteTexture(inputTexture);\n    gl.deleteProgram(program);\n    gl.deleteShader(fragmentShader);\n  }\n\n  return { render, cleanUp };\n}\n", "import { TFLite } from '../tflite';\nimport { compileShader, createTexture, glsl } from '../helpers/webglHelper';\nimport {\n  BackgroundBlurStage,\n  buildBackgroundBlurStage,\n} from './backgroundBlurStage';\nimport {\n  BackgroundImageStage,\n  buildBackgroundImageStage,\n} from './backgroundImageStage';\nimport { buildJointBilateralFilterStage } from './jointBilateralFilterStage';\nimport { buildResizingStage } from './resizingStage';\nimport { buildSoftmaxStage } from './softmaxStage';\nimport { BackgroundBlurLevel, BackgroundFilter } from '../createRenderer';\nimport { SegmentationParams } from '../segmentation';\n\nexport function buildWebGL2Pipeline(\n  videoSource: HTMLVideoElement,\n  backgroundImage: HTMLImageElement | undefined,\n  blurLevel: BackgroundBlurLevel | undefined,\n  backgroundFilter: BackgroundFilter,\n  canvas: HTMLCanvasElement,\n  tflite: TFLite,\n  segmentationConfig: SegmentationParams,\n) {\n  const gl = canvas.getContext('webgl2')!;\n  if (!gl) throw new Error('WebGL2 is not supported');\n  if (gl.isContextLost()) throw new Error('WebGL2 context was lost');\n\n  const { width: frameWidth, height: frameHeight } = videoSource;\n  const { width: segmentationWidth, height: segmentationHeight } =\n    segmentationConfig;\n\n  const vertexShaderSource = glsl`#version 300 es\n\n    in vec2 a_position;\n    in vec2 a_texCoord;\n    out vec2 v_texCoord;\n\n    void main() {\n      gl_Position = vec4(a_position, 0.0, 1.0);\n      v_texCoord = a_texCoord;\n    }\n  `;\n  const vertexShader = compileShader(gl, gl.VERTEX_SHADER, vertexShaderSource);\n\n  const vertexArray = gl.createVertexArray();\n  gl.bindVertexArray(vertexArray);\n\n  const positionBuffer = gl.createBuffer()!;\n  gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n  gl.bufferData(\n    gl.ARRAY_BUFFER,\n    new Float32Array([-1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0]),\n    gl.STATIC_DRAW,\n  );\n\n  const texCoordBuffer = gl.createBuffer()!;\n  gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n  gl.bufferData(\n    gl.ARRAY_BUFFER,\n    new Float32Array([0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0]),\n    gl.STATIC_DRAW,\n  );\n\n  // We don't use texStorage2D here because texImage2D seems faster\n  // to upload video texture than texSubImage2D even though the latter\n  // is supposed to be the recommended way:\n  // https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/WebGL_best_practices#use_texstorage_to_create_textures\n  const inputFrameTexture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, inputFrameTexture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n  // TODO Rename segmentation and person mask to be more specific\n  const segmentationTexture = createTexture(\n    gl,\n    gl.RGBA8,\n    segmentationWidth,\n    segmentationHeight,\n  )!;\n  const personMaskTexture = createTexture(\n    gl,\n    gl.RGBA8,\n    frameWidth,\n    frameHeight,\n  )!;\n\n  const resizingStage = buildResizingStage(\n    gl,\n    vertexShader,\n    positionBuffer,\n    texCoordBuffer,\n    tflite,\n    segmentationConfig,\n  );\n  const loadSegmentationStage = buildSoftmaxStage(\n    gl,\n    vertexShader,\n    positionBuffer,\n    texCoordBuffer,\n    tflite,\n    segmentationTexture,\n    segmentationConfig,\n  );\n\n  const jointBilateralFilterStage = buildJointBilateralFilterStage(\n    gl,\n    vertexShader,\n    positionBuffer,\n    texCoordBuffer,\n    segmentationTexture,\n    personMaskTexture,\n    canvas,\n    segmentationConfig,\n  );\n  const backgroundStage =\n    backgroundFilter === 'blur'\n      ? buildBackgroundBlurStage(\n          gl,\n          vertexShader,\n          positionBuffer,\n          texCoordBuffer,\n          personMaskTexture,\n          canvas,\n          blurLevel || 'high',\n        )\n      : buildBackgroundImageStage(\n          gl,\n          positionBuffer,\n          texCoordBuffer,\n          personMaskTexture,\n          backgroundImage,\n          canvas,\n        );\n\n  function render() {\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, inputFrameTexture);\n\n    // texImage2D seems faster than texSubImage2D to upload\n    // video texture\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      0,\n      gl.RGBA,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      videoSource,\n    );\n\n    gl.bindVertexArray(vertexArray);\n\n    resizingStage.render();\n\n    tflite._runInference();\n\n    loadSegmentationStage.render();\n    jointBilateralFilterStage.render();\n    backgroundStage.render();\n  }\n\n  function updatePostProcessingConfig() {\n    jointBilateralFilterStage.updateSigmaSpace(1);\n    jointBilateralFilterStage.updateSigmaColor(0.1);\n\n    if (backgroundFilter === 'image') {\n      const backgroundImageStage = backgroundStage as BackgroundImageStage;\n      backgroundImageStage.updateCoverage([0.5, 0.75]);\n      backgroundImageStage.updateLightWrapping(0.3);\n      backgroundImageStage.updateBlendMode('screen');\n    } else if (backgroundFilter === 'blur') {\n      const backgroundBlurStage = backgroundStage as BackgroundBlurStage;\n      backgroundBlurStage.updateCoverage([0.5, 0.75]);\n    } else {\n      // TODO Handle no background in a separate pipeline path\n      const backgroundImageStage = backgroundStage as BackgroundImageStage;\n      backgroundImageStage.updateCoverage([0, 0.9999]);\n      backgroundImageStage.updateLightWrapping(0);\n    }\n  }\n\n  function cleanUp() {\n    backgroundStage.cleanUp();\n    jointBilateralFilterStage.cleanUp();\n    loadSegmentationStage.cleanUp();\n    resizingStage.cleanUp();\n\n    gl.deleteTexture(personMaskTexture);\n    gl.deleteTexture(segmentationTexture);\n    gl.deleteTexture(inputFrameTexture);\n    gl.deleteBuffer(texCoordBuffer);\n    gl.deleteBuffer(positionBuffer);\n    gl.deleteVertexArray(vertexArray);\n    gl.deleteShader(vertexShader);\n  }\n\n  return { render, updatePostProcessingConfig, cleanUp };\n}\n", "export type SegmentationParams = {\n  width: number;\n  height: number;\n};\n\nexport enum SegmentationLevel {\n  LOW = 'low',\n  HIGH = 'high',\n}\n\nexport const getSegmentationParams = (\n  level: SegmentationLevel,\n): SegmentationParams => {\n  if (level === SegmentationLevel.HIGH) {\n    return { width: 256, height: 144 };\n  }\n  return { width: 160, height: 96 };\n};\n", "import { TFLite } from './tflite';\nimport { buildWebGL2Pipeline } from './webgl2/webgl2Pipeline';\nimport { getSegmentationParams, SegmentationLevel } from './segmentation';\n\nexport type BackgroundFilter = 'blur' | 'image';\nexport type BackgroundBlurLevel = 'low' | 'medium' | 'high' | number;\nexport type Renderer = {\n  /**\n   * Disposes of the renderer.\n   */\n  dispose: () => void;\n};\n\nexport function createRenderer(\n  tflite: TFLite,\n  videoSource: HTMLVideoElement,\n  targetCanvas: HTMLCanvasElement,\n  options: {\n    backgroundFilter: BackgroundFilter;\n    segmentationLevel?: SegmentationLevel;\n    backgroundImage?: HTMLImageElement;\n    backgroundBlurLevel?: BackgroundBlurLevel;\n    fps?: number;\n  },\n  onError?: (error: any) => void,\n): Renderer {\n  const {\n    backgroundFilter,\n    backgroundImage,\n    backgroundBlurLevel,\n    segmentationLevel = SegmentationLevel.HIGH,\n    fps = 30,\n  } = options;\n  if (backgroundFilter === 'image' && !backgroundImage) {\n    throw new Error(\n      `backgroundImage element is required when backgroundFilter is image`,\n    );\n  }\n\n  const pipeline = buildWebGL2Pipeline(\n    videoSource,\n    backgroundImage,\n    backgroundBlurLevel,\n    backgroundFilter,\n    targetCanvas,\n    tflite,\n    getSegmentationParams(segmentationLevel),\n  );\n\n  const id = setInterval(\n    () => {\n      try {\n        pipeline.render();\n\n        if (backgroundFilter === 'image') {\n          pipeline.updatePostProcessingConfig();\n        }\n      } catch (error) {\n        onError?.(error);\n      }\n    },\n    1000 / (fps <= 0 ? 30 : fps),\n  );\n\n  return {\n    dispose: () => {\n      pipeline.cleanUp();\n      clearInterval(id);\n    },\n  };\n}\n", "export const createTFLiteSIMDModule = (__Module) => {\n  __Module = __Module || {};\n\n  var _scriptDir =\n    typeof document !== 'undefined' && document.currentScript\n      ? document.currentScript.src\n      : undefined;\n\n  var Module = typeof __Module != 'undefined' ? __Module : {};\n  var readyPromiseResolve, readyPromiseReject;\n  Module['ready'] = new Promise(function (resolve, reject) {\n    readyPromiseResolve = resolve;\n    readyPromiseReject = reject;\n  });\n  var moduleOverrides = Object.assign({}, Module);\n  var arguments_ = [];\n  var thisProgram = './this.program';\n  var quit_ = (status, toThrow) => {\n    throw toThrow;\n  };\n  var ENVIRONMENT_IS_WEB = true;\n  var ENVIRONMENT_IS_WORKER = false;\n  var scriptDirectory = '';\n\n  function locateFile(path) {\n    if (Module['locateFile']) {\n      return Module['locateFile'](path, scriptDirectory);\n    }\n    return scriptDirectory + path;\n  }\n\n  var read_, readAsync, readBinary, setWindowTitle;\n  if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n    if (ENVIRONMENT_IS_WORKER) {\n      // eslint-disable-next-line no-restricted-globals\n      scriptDirectory = self.location.href;\n    } else if (typeof document != 'undefined' && document.currentScript) {\n      scriptDirectory = document.currentScript.src;\n    }\n    if (_scriptDir) {\n      scriptDirectory = _scriptDir;\n    }\n    if (scriptDirectory.indexOf('blob:') !== 0) {\n      scriptDirectory = scriptDirectory.substr(\n        0,\n        scriptDirectory.replace(/[?#].*/, '').lastIndexOf('/') + 1,\n      );\n    } else {\n      scriptDirectory = '';\n    }\n    {\n      read_ = (url) => {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', url, false);\n        xhr.send(null);\n        return xhr.responseText;\n      };\n      if (ENVIRONMENT_IS_WORKER) {\n        readBinary = (url) => {\n          var xhr = new XMLHttpRequest();\n          xhr.open('GET', url, false);\n          xhr.responseType = 'arraybuffer';\n          xhr.send(null);\n          return new Uint8Array(xhr.response);\n        };\n      }\n      readAsync = (url, onload, onerror) => {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', url, true);\n        xhr.responseType = 'arraybuffer';\n        xhr.onload = () => {\n          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) {\n            onload(xhr.response);\n            return;\n          }\n          onerror();\n        };\n        xhr.onerror = onerror;\n        xhr.send(null);\n      };\n    }\n    setWindowTitle = (title) => (document.title = title);\n  } else {\n  }\n  var out = Module['print'] || console.log.bind(console);\n  var err = Module['printErr'] || console.warn.bind(console);\n  Object.assign(Module, moduleOverrides);\n  moduleOverrides = null;\n  if (Module['arguments']) arguments_ = Module['arguments'];\n  if (Module['thisProgram']) thisProgram = Module['thisProgram'];\n  if (Module['quit']) quit_ = Module['quit'];\n  var POINTER_SIZE = 4;\n  var wasmBinary;\n  if (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];\n  var noExitRuntime = Module['noExitRuntime'] || true;\n  if (typeof WebAssembly != 'object') {\n    abort('no native wasm support detected');\n  }\n  var wasmMemory;\n  var ABORT = false;\n  var EXITSTATUS;\n\n  function assert(condition, text) {\n    if (!condition) {\n      abort(text);\n    }\n  }\n\n  var UTF8Decoder =\n    typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\n\n  function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\n    var endIdx = idx + maxBytesToRead;\n    var endPtr = idx;\n    while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n    if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n      return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n    }\n    var str = '';\n    while (idx < endPtr) {\n      var u0 = heapOrArray[idx++];\n      if (!(u0 & 128)) {\n        str += String.fromCharCode(u0);\n        continue;\n      }\n      var u1 = heapOrArray[idx++] & 63;\n      if ((u0 & 224) == 192) {\n        str += String.fromCharCode(((u0 & 31) << 6) | u1);\n        continue;\n      }\n      var u2 = heapOrArray[idx++] & 63;\n      if ((u0 & 240) == 224) {\n        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n      } else {\n        u0 =\n          ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heapOrArray[idx++] & 63);\n      }\n      if (u0 < 65536) {\n        str += String.fromCharCode(u0);\n      } else {\n        var ch = u0 - 65536;\n        str += String.fromCharCode(55296 | (ch >> 10), 56320 | (ch & 1023));\n      }\n    }\n    return str;\n  }\n\n  function UTF8ToString(ptr, maxBytesToRead) {\n    return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n  }\n\n  function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n    if (!(maxBytesToWrite > 0)) return 0;\n    var startIdx = outIdx;\n    var endIdx = outIdx + maxBytesToWrite - 1;\n    for (var i = 0; i < str.length; ++i) {\n      var u = str.charCodeAt(i);\n      if (u >= 55296 && u <= 57343) {\n        var u1 = str.charCodeAt(++i);\n        u = (65536 + ((u & 1023) << 10)) | (u1 & 1023);\n      }\n      if (u <= 127) {\n        if (outIdx >= endIdx) break;\n        heap[outIdx++] = u;\n      } else if (u <= 2047) {\n        if (outIdx + 1 >= endIdx) break;\n        heap[outIdx++] = 192 | (u >> 6);\n        heap[outIdx++] = 128 | (u & 63);\n      } else if (u <= 65535) {\n        if (outIdx + 2 >= endIdx) break;\n        heap[outIdx++] = 224 | (u >> 12);\n        heap[outIdx++] = 128 | ((u >> 6) & 63);\n        heap[outIdx++] = 128 | (u & 63);\n      } else {\n        if (outIdx + 3 >= endIdx) break;\n        heap[outIdx++] = 240 | (u >> 18);\n        heap[outIdx++] = 128 | ((u >> 12) & 63);\n        heap[outIdx++] = 128 | ((u >> 6) & 63);\n        heap[outIdx++] = 128 | (u & 63);\n      }\n    }\n    heap[outIdx] = 0;\n    return outIdx - startIdx;\n  }\n\n  var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n\n  function updateGlobalBufferAndViews(buf) {\n    buffer = buf;\n    Module['HEAP8'] = HEAP8 = new Int8Array(buf);\n    Module['HEAP16'] = HEAP16 = new Int16Array(buf);\n    Module['HEAP32'] = HEAP32 = new Int32Array(buf);\n    Module['HEAPU8'] = HEAPU8 = new Uint8Array(buf);\n    Module['HEAPU16'] = HEAPU16 = new Uint16Array(buf);\n    Module['HEAPU32'] = HEAPU32 = new Uint32Array(buf);\n    Module['HEAPF32'] = HEAPF32 = new Float32Array(buf);\n    Module['HEAPF64'] = HEAPF64 = new Float64Array(buf);\n  }\n\n  var INITIAL_MEMORY = Module['INITIAL_MEMORY'] || 16777216;\n  var wasmTable;\n  var __ATPRERUN__ = [];\n  var __ATINIT__ = [];\n  var __ATPOSTRUN__ = [];\n  var runtimeInitialized = false;\n\n  function keepRuntimeAlive() {\n    return noExitRuntime;\n  }\n\n  function preRun() {\n    if (Module['preRun']) {\n      if (typeof Module['preRun'] == 'function')\n        Module['preRun'] = [Module['preRun']];\n      while (Module['preRun'].length) {\n        addOnPreRun(Module['preRun'].shift());\n      }\n    }\n    callRuntimeCallbacks(__ATPRERUN__);\n  }\n\n  function initRuntime() {\n    runtimeInitialized = true;\n    callRuntimeCallbacks(__ATINIT__);\n  }\n\n  function postRun() {\n    if (Module['postRun']) {\n      if (typeof Module['postRun'] == 'function')\n        Module['postRun'] = [Module['postRun']];\n      while (Module['postRun'].length) {\n        addOnPostRun(Module['postRun'].shift());\n      }\n    }\n    callRuntimeCallbacks(__ATPOSTRUN__);\n  }\n\n  function addOnPreRun(cb) {\n    __ATPRERUN__.unshift(cb);\n  }\n\n  function addOnInit(cb) {\n    __ATINIT__.unshift(cb);\n  }\n\n  function addOnPostRun(cb) {\n    __ATPOSTRUN__.unshift(cb);\n  }\n\n  var runDependencies = 0;\n  var runDependencyWatcher = null;\n  var dependenciesFulfilled = null;\n\n  function addRunDependency(id) {\n    runDependencies++;\n    if (Module['monitorRunDependencies']) {\n      Module['monitorRunDependencies'](runDependencies);\n    }\n  }\n\n  function removeRunDependency(id) {\n    runDependencies--;\n    if (Module['monitorRunDependencies']) {\n      Module['monitorRunDependencies'](runDependencies);\n    }\n    if (runDependencies == 0) {\n      if (runDependencyWatcher !== null) {\n        clearInterval(runDependencyWatcher);\n        runDependencyWatcher = null;\n      }\n      if (dependenciesFulfilled) {\n        var callback = dependenciesFulfilled;\n        dependenciesFulfilled = null;\n        callback();\n      }\n    }\n  }\n\n  function abort(what) {\n    {\n      if (Module['onAbort']) {\n        Module['onAbort'](what);\n      }\n    }\n    what = 'Aborted(' + what + ')';\n    err(what);\n    ABORT = true;\n    EXITSTATUS = 1;\n    what += '. Build with -sASSERTIONS for more info.';\n    var e = new WebAssembly.RuntimeError(what);\n    readyPromiseReject(e);\n    throw e;\n  }\n\n  var dataURIPrefix = 'data:application/octet-stream;base64,';\n\n  function isDataURI(filename) {\n    return filename.startsWith(dataURIPrefix);\n  }\n\n  var wasmBinaryFile;\n  wasmBinaryFile = 'tflite-simd.wasm';\n  if (!isDataURI(wasmBinaryFile)) {\n    wasmBinaryFile = locateFile(wasmBinaryFile);\n  }\n\n  function getBinary(file) {\n    try {\n      if (file == wasmBinaryFile && wasmBinary) {\n        return new Uint8Array(wasmBinary);\n      }\n      if (readBinary) {\n        return readBinary(file);\n      }\n      throw 'both async and sync fetching of the wasm failed';\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n    } catch (err) {\n      abort(err);\n    }\n  }\n\n  function getBinaryPromise() {\n    if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n      if (typeof fetch == 'function') {\n        return fetch(wasmBinaryFile, { credentials: 'same-origin' })\n          .then(function (response) {\n            if (!response['ok']) {\n              throw (\n                \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\"\n              );\n            }\n            return response['arrayBuffer']();\n          })\n          .catch(function () {\n            return getBinary(wasmBinaryFile);\n          });\n      }\n    }\n    return Promise.resolve().then(function () {\n      return getBinary(wasmBinaryFile);\n    });\n  }\n\n  function createWasm() {\n    var info = {\n      env: asmLibraryArg,\n      wasi_snapshot_preview1: asmLibraryArg,\n    };\n\n    function receiveInstance(instance, module) {\n      var exports = instance.exports;\n      Module['asm'] = exports;\n      wasmMemory = Module['asm']['memory'];\n      updateGlobalBufferAndViews(wasmMemory.buffer);\n      wasmTable = Module['asm']['__indirect_function_table'];\n      addOnInit(Module['asm']['__wasm_call_ctors']);\n      removeRunDependency('wasm-instantiate');\n    }\n\n    addRunDependency('wasm-instantiate');\n\n    function receiveInstantiationResult(result) {\n      receiveInstance(result['instance']);\n    }\n\n    function instantiateArrayBuffer(receiver) {\n      return getBinaryPromise()\n        .then(function (binary) {\n          return WebAssembly.instantiate(binary, info);\n        })\n        .then(function (instance) {\n          return instance;\n        })\n        .then(receiver, function (reason) {\n          err('failed to asynchronously prepare wasm: ' + reason);\n          abort(reason);\n        });\n    }\n\n    function instantiateAsync() {\n      if (\n        !wasmBinary &&\n        typeof WebAssembly.instantiateStreaming == 'function' &&\n        !isDataURI(wasmBinaryFile) &&\n        typeof fetch == 'function'\n      ) {\n        return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(\n          function (response) {\n            var result = WebAssembly.instantiateStreaming(response, info);\n            return result.then(receiveInstantiationResult, function (reason) {\n              err('wasm streaming compile failed: ' + reason);\n              err('falling back to ArrayBuffer instantiation');\n              return instantiateArrayBuffer(receiveInstantiationResult);\n            });\n          },\n        );\n      } else {\n        return instantiateArrayBuffer(receiveInstantiationResult);\n      }\n    }\n\n    if (Module['instantiateWasm']) {\n      try {\n        var exports = Module['instantiateWasm'](info, receiveInstance);\n        return exports;\n      } catch (e) {\n        err('Module.instantiateWasm callback failed with error: ' + e);\n        readyPromiseReject(e);\n      }\n    }\n    instantiateAsync().catch(readyPromiseReject);\n    return {};\n  }\n\n  var tempDouble;\n  var tempI64;\n\n  function ExitStatus(status) {\n    this.name = 'ExitStatus';\n    this.message = 'Program terminated with exit(' + status + ')';\n    this.status = status;\n  }\n\n  function callRuntimeCallbacks(callbacks) {\n    while (callbacks.length > 0) {\n      callbacks.shift()(Module);\n    }\n  }\n\n  function demangle(func) {\n    return func;\n  }\n\n  function demangleAll(text) {\n    var regex = /\\b_Z[\\w\\d_]+/g;\n    return text.replace(regex, function (x) {\n      var y = demangle(x);\n      return x === y ? x : y + ' [' + x + ']';\n    });\n  }\n\n  function jsStackTrace() {\n    var error = new Error();\n    if (!error.stack) {\n      try {\n        throw new Error();\n      } catch (e) {\n        error = e;\n      }\n      if (!error.stack) {\n        return '(no stack trace available)';\n      }\n    }\n    return error.stack.toString();\n  }\n\n  function __dlinit(main_dso_handle) {}\n\n  var dlopenMissingError =\n    'To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking';\n\n  function __dlopen_js(filename, flag) {\n    abort(dlopenMissingError);\n  }\n\n  function __dlsym_js(handle, symbol) {\n    abort(dlopenMissingError);\n  }\n\n  var nowIsMonotonic = true;\n\n  function __emscripten_get_now_is_monotonic() {\n    return nowIsMonotonic;\n  }\n\n  var SYSCALLS = {\n    varargs: undefined,\n    get: function () {\n      SYSCALLS.varargs += 4;\n      var ret = HEAP32[(SYSCALLS.varargs - 4) >> 2];\n      return ret;\n    },\n    getStr: function (ptr) {\n      var ret = UTF8ToString(ptr);\n      return ret;\n    },\n  };\n\n  function __mmap_js(len, prot, flags, fd, off, allocated) {\n    return -52;\n  }\n\n  function __munmap_js(addr, len, prot, flags, fd, offset) {}\n\n  function _abort() {\n    abort('');\n  }\n\n  function _emscripten_date_now() {\n    return Date.now();\n  }\n\n  function getHeapMax() {\n    return 2147483648;\n  }\n\n  function _emscripten_get_heap_max() {\n    return getHeapMax();\n  }\n\n  var _emscripten_get_now;\n  _emscripten_get_now = () => performance.now();\n\n  function _emscripten_memcpy_big(dest, src, num) {\n    HEAPU8.copyWithin(dest, src, src + num);\n  }\n\n  function emscripten_realloc_buffer(size) {\n    try {\n      wasmMemory.grow((size - buffer.byteLength + 65535) >>> 16);\n      updateGlobalBufferAndViews(wasmMemory.buffer);\n      return 1;\n    } catch (e) {}\n  }\n\n  function _emscripten_resize_heap(requestedSize) {\n    var oldSize = HEAPU8.length;\n    requestedSize = requestedSize >>> 0;\n    var maxHeapSize = getHeapMax();\n    if (requestedSize > maxHeapSize) {\n      return false;\n    }\n    let alignUp = (x, multiple) => x + ((multiple - (x % multiple)) % multiple);\n    for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n      var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n      overGrownHeapSize = Math.min(\n        overGrownHeapSize,\n        requestedSize + 100663296,\n      );\n      var newSize = Math.min(\n        maxHeapSize,\n        alignUp(Math.max(requestedSize, overGrownHeapSize), 65536),\n      );\n      var replacement = emscripten_realloc_buffer(newSize);\n      if (replacement) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  var ENV = {};\n\n  function getExecutableName() {\n    return thisProgram || './this.program';\n  }\n\n  function getEnvStrings() {\n    if (!getEnvStrings.strings) {\n      var lang =\n        (\n          (typeof navigator == 'object' &&\n            navigator.languages &&\n            navigator.languages[0]) ||\n          'C'\n        ).replace('-', '_') + '.UTF-8';\n      var env = {\n        USER: 'web_user',\n        LOGNAME: 'web_user',\n        PATH: '/',\n        PWD: '/',\n        HOME: '/home/web_user',\n        LANG: lang,\n        _: getExecutableName(),\n      };\n      for (var x in ENV) {\n        if (ENV[x] === undefined) delete env[x];\n        else env[x] = ENV[x];\n      }\n      var strings = [];\n      for (var x in env) {\n        strings.push(x + '=' + env[x]);\n      }\n      getEnvStrings.strings = strings;\n    }\n    return getEnvStrings.strings;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  function writeAsciiToMemory(str, buffer, dontAddNull) {\n    for (var i = 0; i < str.length; ++i) {\n      HEAP8[buffer++ >> 0] = str.charCodeAt(i);\n    }\n    if (!dontAddNull) HEAP8[buffer >> 0] = 0;\n  }\n\n  function _environ_get(__environ, environ_buf) {\n    var bufSize = 0;\n    getEnvStrings().forEach(function (string, i) {\n      var ptr = environ_buf + bufSize;\n      HEAPU32[(__environ + i * 4) >> 2] = ptr;\n      writeAsciiToMemory(string, ptr);\n      bufSize += string.length + 1;\n    });\n    return 0;\n  }\n\n  function _environ_sizes_get(penviron_count, penviron_buf_size) {\n    var strings = getEnvStrings();\n    HEAPU32[penviron_count >> 2] = strings.length;\n    var bufSize = 0;\n    strings.forEach(function (string) {\n      bufSize += string.length + 1;\n    });\n    HEAPU32[penviron_buf_size >> 2] = bufSize;\n    return 0;\n  }\n\n  function _proc_exit(code) {\n    EXITSTATUS = code;\n    if (!keepRuntimeAlive()) {\n      if (Module['onExit']) Module['onExit'](code);\n      ABORT = true;\n    }\n    quit_(code, new ExitStatus(code));\n  }\n\n  function exitJS(status, implicit) {\n    EXITSTATUS = status;\n    _proc_exit(status);\n  }\n\n  var _exit = exitJS;\n\n  function _fd_close(fd) {\n    return 52;\n  }\n\n  function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n    return 70;\n  }\n\n  var printCharBuffers = [null, [], []];\n\n  function printChar(stream, curr) {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    var buffer = printCharBuffers[stream];\n    if (curr === 0 || curr === 10) {\n      (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n      buffer.length = 0;\n    } else {\n      buffer.push(curr);\n    }\n  }\n\n  function _fd_write(fd, iov, iovcnt, pnum) {\n    var num = 0;\n    for (var i = 0; i < iovcnt; i++) {\n      var ptr = HEAPU32[iov >> 2];\n      var len = HEAPU32[(iov + 4) >> 2];\n      iov += 8;\n      for (var j = 0; j < len; j++) {\n        printChar(fd, HEAPU8[ptr + j]);\n      }\n      num += len;\n    }\n    HEAPU32[pnum >> 2] = num;\n    return 0;\n  }\n\n  function getRandomDevice() {\n    if (\n      typeof crypto == 'object' &&\n      typeof crypto['getRandomValues'] == 'function'\n    ) {\n      var randomBuffer = new Uint8Array(1);\n      return () => {\n        crypto.getRandomValues(randomBuffer);\n        return randomBuffer[0];\n      };\n    } else return () => abort('randomDevice');\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  function _getentropy(buffer, size) {\n    if (!_getentropy.randomDevice) {\n      _getentropy.randomDevice = getRandomDevice();\n    }\n    for (var i = 0; i < size; i++) {\n      HEAP8[(buffer + i) >> 0] = _getentropy.randomDevice();\n    }\n    return 0;\n  }\n\n  var asmLibraryArg = {\n    _dlinit: __dlinit,\n    _dlopen_js: __dlopen_js,\n    _dlsym_js: __dlsym_js,\n    _emscripten_get_now_is_monotonic: __emscripten_get_now_is_monotonic,\n    _mmap_js: __mmap_js,\n    _munmap_js: __munmap_js,\n    abort: _abort,\n    emscripten_date_now: _emscripten_date_now,\n    emscripten_get_heap_max: _emscripten_get_heap_max,\n    emscripten_get_now: _emscripten_get_now,\n    emscripten_memcpy_big: _emscripten_memcpy_big,\n    emscripten_resize_heap: _emscripten_resize_heap,\n    environ_get: _environ_get,\n    environ_sizes_get: _environ_sizes_get,\n    exit: _exit,\n    fd_close: _fd_close,\n    fd_seek: _fd_seek,\n    fd_write: _fd_write,\n    getentropy: _getentropy,\n  };\n  var asm = createWasm();\n  var ___wasm_call_ctors = (Module['___wasm_call_ctors'] = function () {\n    return (___wasm_call_ctors = Module['___wasm_call_ctors'] =\n      Module['asm']['__wasm_call_ctors']).apply(null, arguments);\n  });\n  var _getModelBufferMemoryOffset = (Module['_getModelBufferMemoryOffset'] =\n    function () {\n      return (_getModelBufferMemoryOffset = Module[\n        '_getModelBufferMemoryOffset'\n      ] =\n        Module['asm']['getModelBufferMemoryOffset']).apply(null, arguments);\n    });\n  var _getInputMemoryOffset = (Module['_getInputMemoryOffset'] = function () {\n    return (_getInputMemoryOffset = Module['_getInputMemoryOffset'] =\n      Module['asm']['getInputMemoryOffset']).apply(null, arguments);\n  });\n  var _getInputHeight = (Module['_getInputHeight'] = function () {\n    return (_getInputHeight = Module['_getInputHeight'] =\n      Module['asm']['getInputHeight']).apply(null, arguments);\n  });\n  var _getInputWidth = (Module['_getInputWidth'] = function () {\n    return (_getInputWidth = Module['_getInputWidth'] =\n      Module['asm']['getInputWidth']).apply(null, arguments);\n  });\n  var _getInputChannelCount = (Module['_getInputChannelCount'] = function () {\n    return (_getInputChannelCount = Module['_getInputChannelCount'] =\n      Module['asm']['getInputChannelCount']).apply(null, arguments);\n  });\n  var _getOutputMemoryOffset = (Module['_getOutputMemoryOffset'] = function () {\n    return (_getOutputMemoryOffset = Module['_getOutputMemoryOffset'] =\n      Module['asm']['getOutputMemoryOffset']).apply(null, arguments);\n  });\n  var _getOutputHeight = (Module['_getOutputHeight'] = function () {\n    return (_getOutputHeight = Module['_getOutputHeight'] =\n      Module['asm']['getOutputHeight']).apply(null, arguments);\n  });\n  var _getOutputWidth = (Module['_getOutputWidth'] = function () {\n    return (_getOutputWidth = Module['_getOutputWidth'] =\n      Module['asm']['getOutputWidth']).apply(null, arguments);\n  });\n  var _getOutputChannelCount = (Module['_getOutputChannelCount'] = function () {\n    return (_getOutputChannelCount = Module['_getOutputChannelCount'] =\n      Module['asm']['getOutputChannelCount']).apply(null, arguments);\n  });\n  var _loadModel = (Module['_loadModel'] = function () {\n    return (_loadModel = Module['_loadModel'] =\n      Module['asm']['loadModel']).apply(null, arguments);\n  });\n  var _runInference = (Module['_runInference'] = function () {\n    return (_runInference = Module['_runInference'] =\n      Module['asm']['runInference']).apply(null, arguments);\n  });\n  var _malloc = (Module['_malloc'] = function () {\n    return (_malloc = Module['_malloc'] = Module['asm']['malloc']).apply(\n      null,\n      arguments,\n    );\n  });\n  var ___errno_location = (Module['___errno_location'] = function () {\n    return (___errno_location = Module['___errno_location'] =\n      Module['asm']['__errno_location']).apply(null, arguments);\n  });\n  var ___dl_seterr = (Module['___dl_seterr'] = function () {\n    return (___dl_seterr = Module['___dl_seterr'] =\n      Module['asm']['__dl_seterr']).apply(null, arguments);\n  });\n  var stackSave = (Module['stackSave'] = function () {\n    return (stackSave = Module['stackSave'] = Module['asm']['stackSave']).apply(\n      null,\n      arguments,\n    );\n  });\n  var stackRestore = (Module['stackRestore'] = function () {\n    return (stackRestore = Module['stackRestore'] =\n      Module['asm']['stackRestore']).apply(null, arguments);\n  });\n  var stackAlloc = (Module['stackAlloc'] = function () {\n    return (stackAlloc = Module['stackAlloc'] =\n      Module['asm']['stackAlloc']).apply(null, arguments);\n  });\n  var dynCall_jjj = (Module['dynCall_jjj'] = function () {\n    return (dynCall_jjj = Module['dynCall_jjj'] =\n      Module['asm']['dynCall_jjj']).apply(null, arguments);\n  });\n  var dynCall_jiii = (Module['dynCall_jiii'] = function () {\n    return (dynCall_jiii = Module['dynCall_jiii'] =\n      Module['asm']['dynCall_jiii']).apply(null, arguments);\n  });\n  var dynCall_iiiijj = (Module['dynCall_iiiijj'] = function () {\n    return (dynCall_iiiijj = Module['dynCall_iiiijj'] =\n      Module['asm']['dynCall_iiiijj']).apply(null, arguments);\n  });\n  var dynCall_viijj = (Module['dynCall_viijj'] = function () {\n    return (dynCall_viijj = Module['dynCall_viijj'] =\n      Module['asm']['dynCall_viijj']).apply(null, arguments);\n  });\n  var dynCall_viiijjj = (Module['dynCall_viiijjj'] = function () {\n    return (dynCall_viiijjj = Module['dynCall_viiijjj'] =\n      Module['asm']['dynCall_viiijjj']).apply(null, arguments);\n  });\n  var dynCall_iijjiiii = (Module['dynCall_iijjiiii'] = function () {\n    return (dynCall_iijjiiii = Module['dynCall_iijjiiii'] =\n      Module['asm']['dynCall_iijjiiii']).apply(null, arguments);\n  });\n  var dynCall_jiji = (Module['dynCall_jiji'] = function () {\n    return (dynCall_jiji = Module['dynCall_jiji'] =\n      Module['asm']['dynCall_jiji']).apply(null, arguments);\n  });\n  var calledRun;\n  dependenciesFulfilled = function runCaller() {\n    if (!calledRun) run();\n    if (!calledRun) dependenciesFulfilled = runCaller;\n  };\n\n  function run(args) {\n    args = args || arguments_;\n    if (runDependencies > 0) {\n      return;\n    }\n    preRun();\n    if (runDependencies > 0) {\n      return;\n    }\n\n    function doRun() {\n      if (calledRun) return;\n      calledRun = true;\n      Module['calledRun'] = true;\n      if (ABORT) return;\n      initRuntime();\n      readyPromiseResolve(Module);\n      if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n      postRun();\n    }\n\n    if (Module['setStatus']) {\n      Module['setStatus']('Running...');\n      setTimeout(function () {\n        setTimeout(function () {\n          Module['setStatus']('');\n        }, 1);\n        doRun();\n      }, 1);\n    } else {\n      doRun();\n    }\n  }\n\n  if (Module['preInit']) {\n    if (typeof Module['preInit'] == 'function')\n      Module['preInit'] = [Module['preInit']];\n    while (Module['preInit'].length > 0) {\n      Module['preInit'].pop()();\n    }\n  }\n  run();\n\n  return __Module.ready;\n};\n", "export const version = process.env.PKG_VERSION || '0.0.0-development';\nexport const packageName =\n  process.env.PKG_NAME || '@stream-io/video-filters-web';\n", "// @ts-expect-error - module is not declared\nimport { createTFLiteSIMDModule } from './tflite-simd.js';\nimport { packageName, version } from './version';\n\n// This is a WebAssembly module compiled from the TensorFlow Lite C++ library.\nconst createTFLite = createTFLiteSIMDModule as (opts?: any) => Promise<TFLite>;\n\nexport interface TFLite extends EmscriptenModule {\n  _getModelBufferMemoryOffset(): number;\n  _getInputMemoryOffset(): number;\n  _getInputHeight(): number;\n  _getInputWidth(): number;\n  _getInputChannelCount(): number;\n  _getOutputMemoryOffset(): number;\n  _getOutputHeight(): number;\n  _getOutputWidth(): number;\n  _getOutputChannelCount(): number;\n  _loadModel(bufferSize: number): number;\n  _runInference(): number;\n}\n\nexport const loadTFLite = async (\n  options: {\n    basePath?: string;\n    tfFilePath?: string;\n    modelFilePath?: string;\n  } = {},\n) => {\n  const {\n    basePath = `https://unpkg.com/${packageName}@${version}/tf`,\n    tfFilePath = `${basePath}/tflite/tflite-simd.wasm`,\n    modelFilePath = `${basePath}/models/segm_full_v679.tflite`,\n  } = options;\n\n  const [tfLite, model] = await Promise.all([\n    createTFLite({ locateFile: () => tfFilePath }),\n    fetchModel(modelFilePath),\n  ]);\n\n  const modelBufferOffset = tfLite._getModelBufferMemoryOffset();\n  tfLite.HEAPU8.set(new Uint8Array(model), modelBufferOffset);\n  tfLite._loadModel(model.byteLength);\n\n  return tfLite;\n};\n\nlet lastModelFilePath = '';\nlet modelFileCache: ArrayBuffer | undefined;\nconst fetchModel = async (modelFilePath: string) => {\n  const model =\n    modelFilePath === lastModelFilePath && modelFileCache\n      ? modelFileCache\n      : await fetch(modelFilePath).then((r) => r.arrayBuffer());\n\n  // Cache the model file for future use.\n  modelFileCache = model;\n  lastModelFilePath = modelFilePath;\n  return model;\n};\n", "import { ComponentPropsWithoutRef, useEffect, useState } from 'react';\nimport {\n  AudioTrackType,\n  StreamVideoParticipant,\n} from '@stream-io/video-client';\nimport { useCall } from '@stream-io/video-react-bindings';\n\nexport type AudioProps = ComponentPropsWithoutRef<'audio'> & {\n  /**\n   * The participant whose audio stream we want to play.\n   */\n  participant: StreamVideoParticipant;\n\n  /**\n   * The type of audio stream to play for the given participant.\n   * The default value is `audioTrack`.\n   */\n  trackType?: AudioTrackType;\n};\n\nexport const Audio = ({\n  participant,\n  trackType = 'audioTrack',\n  ...rest\n}: AudioProps) => {\n  const call = useCall();\n  const [audioElement, setAudioElement] = useState<HTMLAudioElement | null>(\n    null,\n  );\n  const { userId, sessionId } = participant;\n\n  useEffect(() => {\n    if (!call || !audioElement) return;\n    const cleanup = call.bindAudioElement(audioElement, sessionId, trackType);\n    return () => {\n      cleanup?.();\n    };\n  }, [call, sessionId, audioElement, trackType]);\n\n  return (\n    <audio\n      autoPlay\n      {...rest}\n      ref={setAudioElement}\n      data-user-id={userId}\n      data-session-id={sessionId}\n      data-track-type={trackType}\n    />\n  );\n};\n\nAudio.displayName = 'Audio';\n", "import { ComponentProps, Fragment } from 'react';\nimport {\n  hasAudio,\n  hasScreenShareAudio,\n  StreamVideoParticipant,\n} from '@stream-io/video-client';\nimport { Audio } from './Audio';\n\nexport type ParticipantsAudioProps = {\n  /**\n   * The participants to play audio for.\n   */\n  participants: StreamVideoParticipant[];\n\n  /**\n   * Props to pass to the underlying `Audio` components.\n   */\n  audioProps?: ComponentProps<typeof Audio>;\n};\n\nexport const ParticipantsAudio = (props: ParticipantsAudioProps) => {\n  const { participants, audioProps } = props;\n  return (\n    <>\n      {participants.map((participant) => {\n        if (participant.isLocalParticipant) return null;\n        const { audioStream, screenShareAudioStream, sessionId } = participant;\n\n        const hasAudioTrack = hasAudio(participant);\n        const audioTrackElement = hasAudioTrack && audioStream && (\n          <Audio\n            {...audioProps}\n            trackType=\"audioTrack\"\n            participant={participant}\n          />\n        );\n\n        const hasScreenShareAudioTrack = hasScreenShareAudio(participant);\n        const screenShareAudioTrackElement = hasScreenShareAudioTrack &&\n          screenShareAudioStream && (\n            <Audio\n              {...audioProps}\n              trackType=\"screenShareAudioTrack\"\n              participant={participant}\n            />\n          );\n\n        return (\n          <Fragment key={sessionId}>\n            {audioTrackElement}\n            {screenShareAudioTrackElement}\n          </Fragment>\n        );\n      })}\n    </>\n  );\n};\n\nParticipantsAudio.displayName = 'ParticipantsAudio';\n", "import { createContext, useContext } from 'react';\nimport { ParticipantViewProps } from './ParticipantView';\n\nexport type ParticipantViewContextValue = Required<\n  Pick<ParticipantViewProps, 'participant' | 'trackType'>\n> & {\n  participantViewElement?: HTMLDivElement | null;\n  videoElement?: HTMLVideoElement | null;\n  videoPlaceholderElement?: HTMLDivElement | null;\n};\n\nexport const ParticipantViewContext = createContext<\n  ParticipantViewContextValue | undefined\n>(undefined);\n\nexport const useParticipantViewContext = () =>\n  useContext(ParticipantViewContext) as ParticipantViewContextValue;\n", "import { useEffect } from 'react';\nimport type { UseFloatingOptions } from '@floating-ui/react';\nimport {\n  autoUpdate,\n  flip,\n  offset,\n  shift,\n  size,\n  useFloating,\n} from '@floating-ui/react';\n\nexport const useFloatingUIPreset = ({\n  middleware = [],\n  placement,\n  strategy,\n  offset: offsetInPx = 10,\n}: Pick<UseFloatingOptions, 'placement' | 'strategy' | 'middleware'> & {\n  offset?: number;\n}) => {\n  const {\n    refs,\n    x,\n    y,\n    update,\n    elements: { domReference, floating },\n    context,\n  } = useFloating({\n    placement,\n    strategy,\n    middleware: [\n      offset(offsetInPx),\n      shift(),\n      flip(),\n      size({\n        padding: 10,\n        apply: ({ availableHeight, elements }) => {\n          Object.assign(elements.floating.style, {\n            maxHeight: `${availableHeight}px`,\n          });\n        },\n      }),\n      ...middleware,\n    ],\n  });\n\n  // handle window resizing\n  useEffect(() => {\n    if (!domReference || !floating) return;\n\n    const cleanup = autoUpdate(domReference, floating, update);\n\n    return () => cleanup();\n  }, [domReference, floating, update]);\n\n  return { refs, x, y, domReference, floating, strategy, context };\n};\n", "import { useEffect } from 'react';\nimport { CallingState } from '@stream-io/video-client';\nimport { useCall, useCallStateHooks } from '@stream-io/video-react-bindings';\n\nexport type LocalDevicePreference = {\n  selectedDeviceId: string;\n  muted: boolean;\n};\n\nexport type LocalDevicePreferences = {\n  [type in 'mic' | 'camera' | 'speaker']: LocalDevicePreference;\n};\n\nconst defaultDevice = 'default';\n\n/**\n * This hook will persist the device settings to local storage.\n *\n * @param key the key to use for local storage.\n */\nconst usePersistDevicePreferences = (key: string) => {\n  const { useMicrophoneState, useCameraState, useSpeakerState } =\n    useCallStateHooks();\n  const call = useCall();\n  const mic = useMicrophoneState();\n  const camera = useCameraState();\n  const speaker = useSpeakerState();\n  useEffect(() => {\n    if (!call) return;\n    if (call.state.callingState === CallingState.LEFT) return;\n    try {\n      const preferences: LocalDevicePreferences = {\n        mic: {\n          selectedDeviceId: mic.selectedDevice || defaultDevice,\n          muted: mic.isMute,\n        },\n        camera: {\n          selectedDeviceId: camera.selectedDevice || defaultDevice,\n          muted: camera.isMute,\n        },\n        speaker: {\n          selectedDeviceId: speaker.selectedDevice || defaultDevice,\n          muted: false,\n        },\n      };\n      window.localStorage.setItem(key, JSON.stringify(preferences));\n    } catch (err) {\n      console.warn('Failed to save device preferences', err);\n    }\n  }, [\n    call,\n    camera.isMute,\n    camera.selectedDevice,\n    key,\n    mic.isMute,\n    mic.selectedDevice,\n    speaker.selectedDevice,\n  ]);\n};\n\n/**\n * This hook will apply the device settings from local storage.\n *\n * @param key the key to use for local storage.\n */\nconst useApplyDevicePreferences = (key: string) => {\n  const call = useCall();\n  useEffect(() => {\n    if (!call) return;\n    if (call.state.callingState === CallingState.LEFT) return;\n\n    const apply = async () => {\n      const initMic = async (setting: LocalDevicePreference) => {\n        await call.microphone.select(parseDeviceId(setting.selectedDeviceId));\n        if (setting.muted) {\n          await call.microphone.disable();\n        } else {\n          await call.microphone.enable();\n        }\n      };\n\n      const initCamera = async (setting: LocalDevicePreference) => {\n        await call.camera.select(parseDeviceId(setting.selectedDeviceId));\n        if (setting.muted) {\n          await call.camera.disable();\n        } else {\n          await call.camera.enable();\n        }\n      };\n\n      const initSpeaker = (setting: LocalDevicePreference) => {\n        call.speaker.select(parseDeviceId(setting.selectedDeviceId) ?? '');\n      };\n\n      let preferences: LocalDevicePreferences | null = null;\n      try {\n        preferences = JSON.parse(\n          window.localStorage.getItem(key)!,\n        ) as LocalDevicePreferences;\n      } catch (err) {\n        console.warn('Failed to load device preferences', err);\n      }\n      if (preferences) {\n        await initMic(preferences.mic);\n        await initCamera(preferences.camera);\n        initSpeaker(preferences.speaker);\n      }\n    };\n\n    apply().catch((err) => {\n      console.warn('Failed to apply device preferences', err);\n    });\n  }, [call, key]);\n};\n\n/**\n * This hook will apply and persist the device preferences from local storage.\n *\n * @param key the key to use for local storage.\n */\nexport const usePersistedDevicePreferences = (\n  key: string = '@stream-io/device-preferences',\n) => {\n  useApplyDevicePreferences(key);\n  usePersistDevicePreferences(key);\n};\n\nconst parseDeviceId = (deviceId: string) =>\n  deviceId !== defaultDevice ? deviceId : undefined;\n", "import { useEffect, useState } from 'react';\n\nconst SCROLL_THRESHOLD = 10;\n\n/**\n * Hook which observes element's scroll position and returns text value based on the\n * position of the scrollbar (`top`, `bottom`, `between` and `null` if no scrollbar is available)\n */\nexport const useVerticalScrollPosition = (\n  scrollElement: HTMLElement | null,\n  threshold: number = SCROLL_THRESHOLD,\n) => {\n  const [scrollPosition, setScrollPosition] = useState<\n    'top' | 'bottom' | 'between' | null\n  >(null);\n\n  useEffect(() => {\n    if (!scrollElement) return;\n\n    const scrollHandler = () => {\n      const element = scrollElement;\n\n      const hasVerticalScrollbar = element.scrollHeight > element.clientHeight;\n\n      if (!hasVerticalScrollbar) return setScrollPosition(null);\n\n      const isAtTheTop = element.scrollTop <= threshold;\n      if (isAtTheTop) return setScrollPosition('top');\n\n      const isAtTheBottom =\n        Math.abs(\n          element.scrollHeight - element.scrollTop - element.clientHeight,\n        ) <= threshold;\n\n      if (isAtTheBottom) return setScrollPosition('bottom');\n\n      setScrollPosition('between');\n    };\n\n    const resizeObserver = new ResizeObserver(scrollHandler);\n    resizeObserver.observe(scrollElement);\n\n    scrollElement.addEventListener('scroll', scrollHandler);\n    return () => {\n      scrollElement.removeEventListener('scroll', scrollHandler);\n      resizeObserver.disconnect();\n    };\n  }, [scrollElement, threshold]);\n\n  return scrollPosition;\n};\n\nexport const useHorizontalScrollPosition = (\n  scrollElement: HTMLElement | null,\n  threshold: number = SCROLL_THRESHOLD,\n) => {\n  const [scrollPosition, setScrollPosition] = useState<\n    'start' | 'end' | 'between' | null\n  >(null);\n\n  useEffect(() => {\n    if (!scrollElement) return;\n\n    const scrollHandler = () => {\n      const element = scrollElement;\n\n      const hasHorizontalScrollbar = element.scrollWidth > element.clientWidth;\n\n      if (!hasHorizontalScrollbar) return setScrollPosition(null);\n\n      const isAtTheStart = element.scrollLeft <= threshold;\n      if (isAtTheStart) return setScrollPosition('start');\n\n      const isAtTheEnd =\n        Math.abs(\n          element.scrollWidth - element.scrollLeft - element.clientWidth,\n        ) <= threshold;\n\n      if (isAtTheEnd) return setScrollPosition('end');\n\n      setScrollPosition('between');\n    };\n\n    const resizeObserver = new ResizeObserver(scrollHandler);\n    resizeObserver.observe(scrollElement);\n\n    scrollElement.addEventListener('scroll', scrollHandler);\n    return () => {\n      scrollElement.removeEventListener('scroll', scrollHandler);\n      resizeObserver.disconnect();\n    };\n  }, [scrollElement, threshold]);\n\n  return scrollPosition;\n};\n", "import { useCallback, useEffect, useState } from 'react';\nimport { OwnCapability } from '@stream-io/video-client';\nimport { useCall, useCallStateHooks } from '@stream-io/video-react-bindings';\n\nexport const useRequestPermission = (permission: OwnCapability) => {\n  const call = useCall();\n  const { useHasPermissions } = useCallStateHooks();\n  const hasPermission = useHasPermissions(permission);\n  const [isAwaitingPermission, setIsAwaitingPermission] = useState(false); // TODO: load with possibly pending state\n\n  useEffect(() => {\n    const reset = () => setIsAwaitingPermission(false);\n\n    if (hasPermission) reset();\n  }, [hasPermission]);\n\n  const requestPermission = useCallback(async () => {\n    if (hasPermission) return true;\n\n    const canRequestPermission =\n      !!call?.permissionsContext.canRequest(permission);\n    if (isAwaitingPermission || !canRequestPermission) return false;\n\n    setIsAwaitingPermission(true);\n\n    try {\n      await call?.requestPermissions({\n        permissions: [permission],\n      });\n    } catch (error) {\n      setIsAwaitingPermission(false);\n      throw new Error(`requestPermission failed: ${error}`);\n    }\n\n    return false;\n  }, [call, hasPermission, isAwaitingPermission, permission]);\n\n  return {\n    requestPermission,\n    hasPermission,\n    canRequestPermission: !!call?.permissionsContext.canRequest(permission),\n    isAwaitingPermission,\n  };\n};\n", "import {\n  ComponentType,\n  createContext,\n  PropsWithChildren,\n  RefAttributes,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  FloatingOverlay,\n  FloatingPortal,\n  Placement,\n  Strategy,\n  UseFloatingReturn,\n} from '@floating-ui/react';\n\nimport { useFloatingUIPreset } from '../../hooks';\n\nexport type ToggleMenuButtonProps<E extends HTMLElement = HTMLButtonElement> = {\n  menuShown: boolean;\n} & RefAttributes<E>;\n\nexport enum MenuVisualType {\n  PORTAL = 'portal',\n  MENU = 'menu',\n}\n\nexport type MenuToggleProps<E extends HTMLElement> = PropsWithChildren<{\n  ToggleButton: ComponentType<ToggleMenuButtonProps<E>>;\n  placement?: Placement;\n  strategy?: Strategy;\n  offset?: number;\n  visualType?: MenuVisualType;\n  onToggle?: (menuShown: boolean) => void;\n}>;\n\nexport type MenuContextValue = {\n  close?: () => void;\n};\n\n/**\n * Used to provide utility APIs to the components rendered inside the portal.\n */\nconst MenuContext = createContext<MenuContextValue>({});\n\n/**\n * Access to the closes MenuContext.\n */\nexport const useMenuContext = (): MenuContextValue => {\n  return useContext(MenuContext);\n};\n\nconst MenuPortal = ({\n  children,\n  refs,\n}: PropsWithChildren<{\n  refs: UseFloatingReturn['refs'];\n}>) => {\n  const portalId = useMemo(\n    () => `str-video-portal-${Math.random().toString(36).substring(2, 9)}`,\n    [],\n  );\n\n  return (\n    <>\n      <div id={portalId} className=\"str-video__portal\" />\n      <FloatingOverlay>\n        <FloatingPortal id={portalId}>\n          <div className=\"str-video__portal-content\" ref={refs.setFloating}>\n            {children}\n          </div>\n        </FloatingPortal>\n      </FloatingOverlay>\n    </>\n  );\n};\n\nexport const MenuToggle = <E extends HTMLElement>({\n  ToggleButton,\n  placement = 'top-start',\n  strategy = 'absolute',\n  offset,\n  visualType = MenuVisualType.MENU,\n  children,\n  onToggle,\n}: MenuToggleProps<E>) => {\n  const [menuShown, setMenuShown] = useState(false);\n  const toggleHandler = useRef(onToggle);\n  toggleHandler.current = onToggle;\n\n  const { floating, domReference, refs, x, y } = useFloatingUIPreset({\n    placement,\n    strategy,\n    offset,\n  });\n\n  useEffect(() => {\n    const handleClick = (event: MouseEvent) => {\n      if (!floating && domReference?.contains(event.target as Node)) {\n        setMenuShown(true);\n        toggleHandler.current?.(true);\n      } else if (floating && !floating?.contains(event.target as Node)) {\n        setMenuShown(false);\n        toggleHandler.current?.(false);\n      }\n    };\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (\n        event.key && // key can be undefined in some browsers\n        event.key.toLowerCase() === 'escape' &&\n        !event.altKey &&\n        !event.ctrlKey\n      ) {\n        setMenuShown(false);\n        toggleHandler.current?.(false);\n      }\n    };\n    document?.addEventListener('click', handleClick, { capture: true });\n    document?.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document?.removeEventListener('click', handleClick, { capture: true });\n      document?.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [floating, domReference]);\n\n  return (\n    <>\n      {menuShown && (\n        <MenuContext.Provider value={{ close: () => setMenuShown(false) }}>\n          {visualType === MenuVisualType.PORTAL ? (\n            <MenuPortal refs={refs} children={children} />\n          ) : visualType === MenuVisualType.MENU ? (\n            <div\n              className=\"str-video__menu-container\"\n              ref={refs.setFloating}\n              style={{\n                position: strategy,\n                top: y ?? 0,\n                left: x ?? 0,\n                overflowY: 'auto',\n              }}\n              role=\"menu\"\n              children={children}\n            />\n          ) : null}\n        </MenuContext.Provider>\n      )}\n      <ToggleButton menuShown={menuShown} ref={refs.setReference} />\n    </>\n  );\n};\n", "import { ComponentProps, MouseEvent, PropsWithChildren, useRef } from 'react';\n\nexport const GenericMenu = ({\n  children,\n  onItemClick,\n}: PropsWithChildren<{\n  onItemClick?: (e: MouseEvent) => void;\n}>) => {\n  const ref = useRef<HTMLUListElement>(null);\n  return (\n    <ul\n      className=\"str-video__generic-menu\"\n      ref={ref}\n      onClick={(e) => {\n        if (\n          onItemClick &&\n          e.target !== ref.current &&\n          ref.current?.contains(e.target as Node)\n        ) {\n          onItemClick(e);\n        }\n      }}\n    >\n      {children}\n    </ul>\n  );\n};\n\nexport const GenericMenuButtonItem = ({\n  children,\n  ...rest\n}: Omit<ComponentProps<'button'>, 'ref'>) => {\n  return (\n    <li className=\"str-video__generic-menu--item\">\n      <button {...rest}>{children}</button>\n    </li>\n  );\n};\n", "import clsx from 'clsx';\n\nexport type IconProps = {\n  icon: string;\n  className?: string;\n};\n\nexport const Icon = ({ className, icon }: IconProps) => (\n  <span\n    className={clsx(\n      'str-video__icon',\n      icon && `str-video__icon--${icon}`,\n      className,\n    )}\n  />\n);\n", "import { useEffect, useState } from 'react';\n\nexport function usePictureInPictureState(videoElement?: HTMLVideoElement) {\n  const [isPiP, setIsPiP] = useState(\n    document.pictureInPictureElement === videoElement,\n  );\n\n  if (!videoElement && isPiP) setIsPiP(false);\n\n  useEffect(() => {\n    if (!videoElement) return;\n\n    const handlePiP = () => {\n      setIsPiP(document.pictureInPictureElement === videoElement);\n    };\n\n    videoElement.addEventListener('enterpictureinpicture', handlePiP);\n    videoElement.addEventListener('leavepictureinpicture', handlePiP);\n\n    return () => {\n      videoElement.removeEventListener('enterpictureinpicture', handlePiP);\n      videoElement.removeEventListener('leavepictureinpicture', handlePiP);\n    };\n  }, [videoElement]);\n\n  return isPiP;\n}\n", "import { useEffect, useState } from 'react';\nimport { Restricted, useCall, useI18n } from '@stream-io/video-react-bindings';\nimport {\n  hasAudio,\n  hasScreenShare,\n  hasScreenShareAudio,\n  hasVideo,\n  OwnCapability,\n} from '@stream-io/video-client';\nimport { useParticipantViewContext } from './ParticipantViewContext';\nimport {\n  GenericMenu,\n  GenericMenuButtonItem,\n  useMenuContext,\n} from '../../../components/Menu';\nimport { Icon } from '../../../components/Icon';\nimport { usePictureInPictureState } from '../../hooks/usePictureInPictureState';\n\nexport const ParticipantActionsContextMenu = () => {\n  const { participant, participantViewElement, videoElement } =\n    useParticipantViewContext();\n  const [fullscreenModeOn, setFullscreenModeOn] = useState(\n    !!document.fullscreenElement,\n  );\n  const call = useCall();\n  const isPiP = usePictureInPictureState(videoElement ?? undefined);\n  const { t } = useI18n();\n\n  const { pin, sessionId, userId } = participant;\n\n  const hasAudioTrack = hasAudio(participant);\n  const hasVideoTrack = hasVideo(participant);\n  const hasScreenShareTrack = hasScreenShare(participant);\n  const hasScreenShareAudioTrack = hasScreenShareAudio(participant);\n\n  const blockUser = () => call?.blockUser(userId);\n  const muteAudio = () => call?.muteUser(userId, 'audio');\n  const muteVideo = () => call?.muteUser(userId, 'video');\n  const muteScreenShare = () => call?.muteUser(userId, 'screenshare');\n  const muteScreenShareAudio = () =>\n    call?.muteUser(userId, 'screenshare_audio');\n\n  const grantPermission = (permission: string) => () => {\n    call?.updateUserPermissions({\n      user_id: userId,\n      grant_permissions: [permission],\n    });\n  };\n\n  const revokePermission = (permission: string) => () => {\n    call?.updateUserPermissions({\n      user_id: userId,\n      revoke_permissions: [permission],\n    });\n  };\n\n  const toggleParticipantPin = () => {\n    if (pin) {\n      call?.unpin(sessionId);\n    } else {\n      call?.pin(sessionId);\n    }\n  };\n\n  const pinForEveryone = () => {\n    call\n      ?.pinForEveryone({\n        user_id: userId,\n        session_id: sessionId,\n      })\n      .catch((err) => {\n        console.error(`Failed to pin participant ${userId}`, err);\n      });\n  };\n\n  const unpinForEveryone = () => {\n    call\n      ?.unpinForEveryone({\n        user_id: userId,\n        session_id: sessionId,\n      })\n      .catch((err) => {\n        console.error(`Failed to unpin participant ${userId}`, err);\n      });\n  };\n\n  const toggleFullscreenMode = () => {\n    if (!fullscreenModeOn) {\n      return participantViewElement?.requestFullscreen().catch(console.error);\n    }\n    return document.exitFullscreen().catch(console.error);\n  };\n\n  useEffect(() => {\n    // handles the case when fullscreen mode is toggled externally,\n    // e.g., by pressing ESC key or some other keyboard shortcut\n    const handleFullscreenChange = () => {\n      setFullscreenModeOn(!!document.fullscreenElement);\n    };\n    document.addEventListener('fullscreenchange', handleFullscreenChange);\n    return () => {\n      document.removeEventListener('fullscreenchange', handleFullscreenChange);\n    };\n  }, []);\n\n  const togglePictureInPicture = () => {\n    if (videoElement && !isPiP) {\n      return videoElement\n        .requestPictureInPicture()\n        .catch(console.error) as Promise<void>;\n    }\n\n    return document.exitPictureInPicture().catch(console.error);\n  };\n\n  const { close } = useMenuContext() || {};\n  return (\n    <GenericMenu onItemClick={close}>\n      <GenericMenuButtonItem\n        onClick={toggleParticipantPin}\n        disabled={pin && !pin.isLocalPin}\n      >\n        <Icon icon=\"pin\" />\n        {pin ? t('Unpin') : t('Pin')}\n      </GenericMenuButtonItem>\n      <Restricted requiredGrants={[OwnCapability.PIN_FOR_EVERYONE]}>\n        <GenericMenuButtonItem\n          onClick={pinForEveryone}\n          disabled={pin && !pin.isLocalPin}\n        >\n          <Icon icon=\"pin\" />\n          {t('Pin for everyone')}\n        </GenericMenuButtonItem>\n        <GenericMenuButtonItem\n          onClick={unpinForEveryone}\n          disabled={!pin || pin.isLocalPin}\n        >\n          <Icon icon=\"pin\" />\n          {t('Unpin for everyone')}\n        </GenericMenuButtonItem>\n      </Restricted>\n      <Restricted requiredGrants={[OwnCapability.BLOCK_USERS]}>\n        <GenericMenuButtonItem onClick={blockUser}>\n          <Icon icon=\"not-allowed\" />\n          {t('Block')}\n        </GenericMenuButtonItem>\n      </Restricted>\n      <Restricted requiredGrants={[OwnCapability.MUTE_USERS]}>\n        {hasVideoTrack && (\n          <GenericMenuButtonItem onClick={muteVideo}>\n            <Icon icon=\"camera-off-outline\" />\n            {t('Turn off video')}\n          </GenericMenuButtonItem>\n        )}\n        {hasScreenShareTrack && (\n          <GenericMenuButtonItem onClick={muteScreenShare}>\n            <Icon icon=\"screen-share-off\" />\n            {t('Turn off screen share')}\n          </GenericMenuButtonItem>\n        )}\n        {hasAudioTrack && (\n          <GenericMenuButtonItem onClick={muteAudio}>\n            <Icon icon=\"no-audio\" />\n            {t('Mute audio')}\n          </GenericMenuButtonItem>\n        )}\n        {hasScreenShareAudioTrack && (\n          <GenericMenuButtonItem onClick={muteScreenShareAudio}>\n            <Icon icon=\"no-audio\" />\n            {t('Mute screen share audio')}\n          </GenericMenuButtonItem>\n        )}\n      </Restricted>\n      {participantViewElement && (\n        <GenericMenuButtonItem onClick={toggleFullscreenMode}>\n          {t('{{ direction }} fullscreen', {\n            direction: fullscreenModeOn ? t('Leave') : t('Enter'),\n          })}\n        </GenericMenuButtonItem>\n      )}\n      {videoElement && document.pictureInPictureEnabled && (\n        <GenericMenuButtonItem onClick={togglePictureInPicture}>\n          {t('{{ direction }} picture-in-picture', {\n            direction: isPiP ? t('Leave') : t('Enter'),\n          })}\n        </GenericMenuButtonItem>\n      )}\n      <Restricted requiredGrants={[OwnCapability.UPDATE_CALL_PERMISSIONS]}>\n        <GenericMenuButtonItem\n          onClick={grantPermission(OwnCapability.SEND_AUDIO)}\n        >\n          {t('Allow audio')}\n        </GenericMenuButtonItem>\n        <GenericMenuButtonItem\n          onClick={grantPermission(OwnCapability.SEND_VIDEO)}\n        >\n          {t('Allow video')}\n        </GenericMenuButtonItem>\n        <GenericMenuButtonItem\n          onClick={grantPermission(OwnCapability.SCREENSHARE)}\n        >\n          {t('Allow screen sharing')}\n        </GenericMenuButtonItem>\n\n        <GenericMenuButtonItem\n          onClick={revokePermission(OwnCapability.SEND_AUDIO)}\n        >\n          {t('Disable audio')}\n        </GenericMenuButtonItem>\n        <GenericMenuButtonItem\n          onClick={revokePermission(OwnCapability.SEND_VIDEO)}\n        >\n          {t('Disable video')}\n        </GenericMenuButtonItem>\n        <GenericMenuButtonItem\n          onClick={revokePermission(OwnCapability.SCREENSHARE)}\n        >\n          {t('Disable screen sharing')}\n        </GenericMenuButtonItem>\n      </Restricted>\n    </GenericMenu>\n  );\n};\n", "import { ComponentType, isValidElement, ReactElement } from 'react';\n\nexport const isComponentType = <T extends {}>(\n  elementOrComponent?: ComponentType<T> | ReactElement | null,\n): elementOrComponent is ComponentType<T> => {\n  return elementOrComponent === null\n    ? false\n    : !isValidElement(elementOrComponent);\n};\n", "export const chunk = <T extends unknown[]>(array: T, size: number) => {\n  const chunkCount = Math.ceil(array.length / size);\n\n  return Array.from(\n    { length: chunkCount },\n    (_, index) => array.slice(size * index, size * index + size) as T,\n  );\n};\n", "import type { ForwardedRef } from 'react';\n\nexport const applyElementToRef = <T extends HTMLElement | null>(\n  ref: ForwardedRef<T>,\n  element: T,\n) => {\n  if (!ref) return;\n\n  if (typeof ref === 'function') return ref(element);\n\n  ref.current = element;\n};\n", "import { ComponentPropsWithRef, forwardRef, useEffect, useState } from 'react';\nimport { Browsers } from '@stream-io/video-client';\n\nimport { applyElementToRef } from '../../../utilities';\n\nexport type BaseVideoProps = ComponentPropsWithRef<'video'> & {\n  stream?: MediaStream;\n};\n\n/**\n * @description Extends video element with `stream` property\n * (`srcObject`) to reactively handle stream changes\n */\nexport const BaseVideo = forwardRef<HTMLVideoElement, BaseVideoProps>(\n  function BaseVideo({ stream, ...rest }, ref) {\n    const [videoElement, setVideoElement] = useState<HTMLVideoElement | null>(\n      null,\n    );\n\n    useEffect(() => {\n      if (!videoElement || !stream) return;\n      if (stream === videoElement.srcObject) return;\n\n      videoElement.srcObject = stream;\n      if (Browsers.isSafari() || Browsers.isFirefox()) {\n        // Firefox and Safari have some timing issue\n        setTimeout(() => {\n          videoElement.srcObject = stream;\n          videoElement.play().catch((e) => {\n            console.error(`Failed to play stream`, e);\n          });\n        }, 0);\n      }\n\n      return () => {\n        videoElement.pause();\n        videoElement.srcObject = null;\n      };\n    }, [stream, videoElement]);\n\n    return (\n      <video\n        autoPlay\n        playsInline\n        {...rest}\n        ref={(element) => {\n          applyElementToRef(ref, element);\n          setVideoElement(element);\n        }}\n      />\n    );\n  },\n);\n", "import { ComponentProps, RefAttributes, forwardRef, useState } from 'react';\nimport type { StreamVideoParticipant } from '@stream-io/video-client';\n\nexport type BaseVideoPlaceholderProps = {\n  participant: StreamVideoParticipant;\n} & RefAttributes<HTMLDivElement> &\n  ComponentProps<'div'>;\n\nexport const BaseVideoPlaceholder = forwardRef<\n  HTMLDivElement,\n  BaseVideoPlaceholderProps\n>(function DefaultVideoPlaceholder({ participant, style, children }, ref) {\n  const [error, setError] = useState(false);\n  const name = participant.name || participant.userId;\n  return (\n    <div className=\"str-video__video-placeholder\" style={style} ref={ref}>\n      {(!participant.image || error) &&\n        (name ? (\n          <InitialsFallback name={name} />\n        ) : (\n          <div className=\"str-video__video-placeholder__no-video-label\">\n            {children}\n          </div>\n        ))}\n      {participant.image && !error && (\n        <img\n          onError={() => setError(true)}\n          alt={name}\n          className=\"str-video__video-placeholder__avatar\"\n          src={participant.image}\n        />\n      )}\n    </div>\n  );\n});\n\nconst InitialsFallback = (props: { name: string }) => {\n  const { name } = props;\n  const initials = name\n    .split(' ')\n    .slice(0, 2)\n    .map((n) => n[0])\n    .join('');\n  return (\n    <div className=\"str-video__video-placeholder__initials-fallback\">\n      {initials}\n    </div>\n  );\n};\n", "import { forwardRef } from 'react';\nimport { useI18n } from '@stream-io/video-react-bindings';\nimport {\n  BaseVideoPlaceholder,\n  type BaseVideoPlaceholderProps,\n} from './BaseVideoPlaceholder';\n\nexport type VideoPlaceholderProps = BaseVideoPlaceholderProps;\n\nexport const DefaultVideoPlaceholder = forwardRef<\n  HTMLDivElement,\n  VideoPlaceholderProps\n>(function DefaultVideoPlaceholder(props, ref) {\n  const { t } = useI18n();\n  return (\n    <BaseVideoPlaceholder ref={ref} {...props}>\n      {t('Video is disabled')}\n    </BaseVideoPlaceholder>\n  );\n});\n", "import { forwardRef } from 'react';\nimport { useI18n } from '@stream-io/video-react-bindings';\nimport {\n  BaseVideoPlaceholder,\n  type BaseVideoPlaceholderProps,\n} from './BaseVideoPlaceholder';\n\nexport type PictureInPicturePlaceholderProps = BaseVideoPlaceholderProps;\n\nexport const DefaultPictureInPicturePlaceholder = forwardRef<\n  HTMLDivElement,\n  PictureInPicturePlaceholderProps\n>(function DefaultPictureInPicturePlaceholder(props, ref) {\n  const { t } = useI18n();\n  return (\n    <BaseVideoPlaceholder ref={ref} {...props}>\n      {t('Video is playing in a popup')}\n    </BaseVideoPlaceholder>\n  );\n});\n", "import {\n  ComponentPropsWithoutRef,\n  ComponentType,\n  useEffect,\n  useLayoutEffect,\n  useState,\n} from 'react';\nimport {\n  hasScreenShare,\n  hasVideo,\n  StreamVideoParticipant,\n  VideoTrackType,\n  VisibilityState,\n} from '@stream-io/video-client';\nimport clsx from 'clsx';\nimport {\n  DefaultVideoPlaceholder,\n  VideoPlaceholderProps,\n} from './DefaultVideoPlaceholder';\nimport { useCall } from '@stream-io/video-react-bindings';\nimport { usePictureInPictureState } from '../../hooks/usePictureInPictureState';\nimport {\n  DefaultPictureInPicturePlaceholder,\n  PictureInPicturePlaceholderProps,\n} from './DefaultPictureInPicturePlaceholder';\n\nexport type VideoProps = ComponentPropsWithoutRef<'video'> & {\n  /**\n   * Pass false to disable rendering video and render fallback\n   * even if the participant has published video.\n   * @default true\n   */\n  enabled?: boolean;\n  /**\n   * Forces the video to be mirrored or unmirrored. By default, video track\n   * from the local participant is mirrored, and all other videos are not mirrored.\n   */\n  mirror?: boolean;\n  /**\n   * The track type to display.\n   */\n  trackType: VideoTrackType | 'none';\n  /**\n   * The participant represented by this video element.\n   */\n  participant: StreamVideoParticipant;\n  /**\n   * Override the default UI that's visible when a participant turned off their video.\n   * Set it to `null` if you wish to disable the video placeholder.\n   *\n   * @default DefaultVideoPlaceholder\n   */\n  VideoPlaceholder?: ComponentType<VideoPlaceholderProps> | null;\n  /**\n   * Override the default UI that's dispayed in place of the video when it's playing\n   * in picture-in-picture. Set it to `null` if you wish to display the browser's default\n   * placeholder.\n   *\n   * @default DefaultPictureInPicturePlaceholder\n   */\n  PictureInPicturePlaceholder?: ComponentType<PictureInPicturePlaceholderProps> | null;\n  /**\n  /**\n   * An object with setRef functions\n   * meant for exposing some of the internal elements of this component.\n   */\n  refs?: {\n    /**\n     * The video element that's used to play the video stream.\n     * @param element the video element.\n     */\n    setVideoElement?: (element: HTMLVideoElement | null) => void;\n    /**\n     * The video placeholder element that's used when the video stream is not playing.\n     * @param element the video placeholder element.\n     */\n    setVideoPlaceholderElement?: (element: HTMLDivElement | null) => void;\n    setPictureInPicturePlaceholderElement?: (\n      element: HTMLDivElement | null,\n    ) => void;\n  };\n};\n\nexport const Video = ({\n  enabled = true,\n  mirror,\n  trackType,\n  participant,\n  className,\n  VideoPlaceholder = DefaultVideoPlaceholder,\n  PictureInPicturePlaceholder = DefaultPictureInPicturePlaceholder,\n  refs,\n  ...rest\n}: VideoProps) => {\n  const {\n    sessionId,\n    videoStream,\n    screenShareStream,\n    viewportVisibilityState,\n    isLocalParticipant,\n    userId,\n  } = participant;\n\n  const call = useCall();\n  const [videoElement, setVideoElement] = useState<HTMLVideoElement | null>(\n    null,\n  );\n  // start with true, will flip once the video starts playing\n  const [isVideoPaused, setIsVideoPaused] = useState(true);\n  const [isWideMode, setIsWideMode] = useState(true);\n  const isPiP = usePictureInPictureState(videoElement ?? undefined);\n\n  const stream =\n    trackType === 'videoTrack'\n      ? videoStream\n      : trackType === 'screenShareTrack'\n        ? screenShareStream\n        : undefined;\n\n  useLayoutEffect(() => {\n    if (!call || !videoElement || trackType === 'none') return;\n\n    const cleanup = call.bindVideoElement(videoElement, sessionId, trackType);\n\n    return () => {\n      cleanup?.();\n    };\n  }, [call, trackType, sessionId, videoElement]);\n\n  useEffect(() => {\n    if (!stream || !videoElement) return;\n\n    const [track] = stream.getVideoTracks();\n    if (!track) return;\n\n    const handlePlayPause = () => {\n      setIsVideoPaused(videoElement.paused);\n\n      const { width = 0, height = 0 } = track.getSettings();\n      setIsWideMode(width >= height);\n    };\n\n    // playback may have started before we had a chance to\n    // attach the 'play/pause' event listener, so we set the state\n    // here to make sure it's in sync\n    setIsVideoPaused(videoElement.paused);\n\n    videoElement.addEventListener('play', handlePlayPause);\n    videoElement.addEventListener('pause', handlePlayPause);\n    track.addEventListener('unmute', handlePlayPause);\n    return () => {\n      videoElement.removeEventListener('play', handlePlayPause);\n      videoElement.removeEventListener('pause', handlePlayPause);\n      track.removeEventListener('unmute', handlePlayPause);\n\n      // reset the 'pause' state once we unmount the video element\n      setIsVideoPaused(true);\n    };\n  }, [stream, videoElement]);\n\n  if (!call) return null;\n\n  const isPublishingTrack =\n    trackType === 'videoTrack'\n      ? hasVideo(participant)\n      : trackType === 'screenShareTrack'\n        ? hasScreenShare(participant)\n        : false;\n\n  const isInvisible =\n    trackType === 'none' ||\n    viewportVisibilityState?.[trackType] === VisibilityState.INVISIBLE;\n\n  const hasNoVideoOrInvisible = !enabled || !isPublishingTrack || isInvisible;\n  const mirrorVideo =\n    mirror === undefined\n      ? isLocalParticipant && trackType === 'videoTrack'\n      : mirror;\n  const isScreenShareTrack = trackType === 'screenShareTrack';\n  return (\n    <>\n      {!hasNoVideoOrInvisible && (\n        <video\n          {...rest}\n          className={clsx('str-video__video', className, {\n            'str-video__video--not-playing': isVideoPaused,\n            'str-video__video--tall': !isWideMode,\n            'str-video__video--mirror': mirrorVideo,\n            'str-video__video--screen-share': isScreenShareTrack,\n          })}\n          data-user-id={userId}\n          data-session-id={sessionId}\n          ref={(element) => {\n            setVideoElement(element);\n            refs?.setVideoElement?.(element);\n          }}\n        />\n      )}\n      {isPiP && (\n        <DefaultPictureInPicturePlaceholder\n          style={{ position: 'absolute' }}\n          participant={participant}\n        />\n      )}\n      {/* TODO: add condition to \"hold\" the placeholder until track unmutes as well */}\n      {(hasNoVideoOrInvisible || isVideoPaused) && VideoPlaceholder && (\n        <VideoPlaceholder\n          style={{ position: 'absolute' }}\n          participant={participant}\n          ref={refs?.setVideoPlaceholderElement}\n        />\n      )}\n    </>\n  );\n};\n\nVideo.displayName = 'Video';\n", "import { useEffect } from 'react';\nimport { DynascaleManager, VideoTrackType } from '@stream-io/video-client';\nimport { useCall } from '@stream-io/video-react-bindings';\n\nexport const useTrackElementVisibility = <T extends HTMLElement>({\n  trackedElement,\n  dynascaleManager: propsDynascaleManager,\n  sessionId,\n  trackType,\n}: {\n  trackedElement: T | null;\n  sessionId: string;\n  dynascaleManager?: DynascaleManager;\n  trackType: VideoTrackType | 'none';\n}) => {\n  const call = useCall();\n  const manager = propsDynascaleManager ?? call?.dynascaleManager;\n  useEffect(() => {\n    if (!trackedElement || !manager || !call || trackType === 'none') return;\n    const unobserve = manager.trackElementVisibility(\n      trackedElement,\n      sessionId,\n      trackType,\n    );\n    return () => {\n      unobserve();\n    };\n  }, [trackedElement, manager, call, sessionId, trackType]);\n};\n", "import { ComponentProps, CSSProperties, useState } from 'react';\nimport clsx from 'clsx';\n\nexport type AvatarData = {\n  imageSrc?: string;\n  name?: string;\n  style?: CSSProperties & Record<string, string | number>;\n};\n\nexport type AvatarProps = AvatarData & ComponentProps<'img'>;\n\nexport const Avatar = ({\n  imageSrc,\n  name,\n  style,\n  className,\n  ...rest\n}: AvatarProps) => {\n  const [error, setError] = useState(false);\n\n  return (\n    <>\n      {(!imageSrc || error) && name && (\n        <AvatarFallback className={className} style={style} names={[name]} />\n      )}\n      {imageSrc && !error && (\n        <img\n          onError={() => setError(true)}\n          alt=\"avatar\"\n          className={clsx('str-video__avatar', className)}\n          src={imageSrc}\n          style={style}\n          {...rest}\n        />\n      )}\n    </>\n  );\n};\n\ntype AvatarFallbackProps = {\n  names: string[];\n  className?: string;\n  style?: CSSProperties & Record<string, string | number>;\n};\nexport const AvatarFallback = ({\n  className,\n  names,\n  style,\n}: AvatarFallbackProps) => {\n  return (\n    <div\n      className={clsx('str-video__avatar--initials-fallback', className)}\n      style={style}\n    >\n      <div>\n        {names[0][0]}\n        {names[1]?.[0]}\n      </div>\n    </div>\n  );\n};\n", "import {\n  createContext,\n  PropsWithChildren,\n  useCallback,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { flushSync } from 'react-dom';\nimport clsx from 'clsx';\nimport { useCall } from '@stream-io/video-react-bindings';\nimport { disposeOfMediaStream, getLogger } from '@stream-io/video-client';\nimport {\n  BackgroundBlurLevel,\n  BackgroundFilter,\n  createRenderer,\n  isPlatformSupported,\n  loadTFLite,\n  Renderer,\n  TFLite,\n} from '@stream-io/video-filters-web';\n\nexport type BackgroundFiltersProps = {\n  /**\n   * A list of URLs to use as background images.\n   */\n  backgroundImages?: string[];\n\n  /**\n   * The background filter to apply to the video (by default).\n   * @default undefined no filter applied\n   */\n  backgroundFilter?: BackgroundFilter;\n\n  /**\n   * The URL of the image to use as the background (by default).\n   */\n  backgroundImage?: string;\n\n  /**\n   * The level of blur to apply to the background (by default).\n   * @default 'high'.\n   */\n  backgroundBlurLevel?: BackgroundBlurLevel;\n\n  /**\n   * The base path for the TensorFlow Lite files.\n   * @default 'https://unpkg.com/@stream-io/video-filters-web/tf'.\n   */\n  basePath?: string;\n\n  /**\n   * The path to the TensorFlow Lite WebAssembly file.\n   *\n   * Override this prop to use a custom path to the TensorFlow Lite WebAssembly file\n   * (e.g., if you choose to host it yourself).\n   */\n  tfFilePath?: string;\n\n  /**\n   * The path to the TensorFlow Lite model file.\n   * Override this prop to use a custom path to the TensorFlow Lite model file\n   * (e.g., if you choose to host it yourself).\n   */\n  modelFilePath?: string;\n\n  /**\n   * When a started filter encounters an error, this callback will be executed.\n   * The default behavior (not overridable) is unregistering a failed filter.\n   * Use this callback to display UI error message, disable the corresponsing stream,\n   * or to try registering the filter again.\n   */\n  onError?: (error: any) => void;\n};\n\nexport type BackgroundFiltersAPI = {\n  /**\n   * Whether the current platform supports the background filters.\n   */\n  isSupported: boolean;\n\n  /**\n   * Indicates whether the background filters engine is loaded and ready.\n   */\n  isReady: boolean;\n\n  /**\n   * Disables all background filters applied to the video.\n   */\n  disableBackgroundFilter: () => void;\n\n  /**\n   * Applies a background blur filter to the video.\n   *\n   * @param blurLevel the level of blur to apply to the background.\n   */\n  applyBackgroundBlurFilter: (blurLevel: BackgroundBlurLevel) => void;\n\n  /**\n   * Applies a background image filter to the video.\n   *\n   * @param imageUrl the URL of the image to use as the background.\n   */\n  applyBackgroundImageFilter: (imageUrl: string) => void;\n};\n\n/**\n * The context value for the background filters context.\n */\nexport type BackgroundFiltersContextValue = BackgroundFiltersProps &\n  BackgroundFiltersAPI;\n\n/**\n * The context for the background filters.\n */\nconst BackgroundFiltersContext = createContext<\n  BackgroundFiltersContextValue | undefined\n>(undefined);\n\n/**\n * A hook to access the background filters context API.\n */\nexport const useBackgroundFilters = () => {\n  const context = useContext(BackgroundFiltersContext);\n  if (!context) {\n    throw new Error(\n      'useBackgroundFilters must be used within a BackgroundFiltersProvider',\n    );\n  }\n  return context;\n};\n\n/**\n * A provider component that enables the use of background filters in your app.\n *\n * Please make sure you have the `@stream-io/video-filters-web` package installed\n * in your project before using this component.\n */\nexport const BackgroundFiltersProvider = (\n  props: PropsWithChildren<BackgroundFiltersProps>,\n) => {\n  const {\n    children,\n    backgroundImages = [],\n    backgroundFilter: bgFilterFromProps = undefined,\n    backgroundImage: bgImageFromProps = undefined,\n    backgroundBlurLevel: bgBlurLevelFromProps = 'high',\n    tfFilePath,\n    modelFilePath,\n    basePath,\n    onError,\n  } = props;\n\n  const [backgroundFilter, setBackgroundFilter] = useState(bgFilterFromProps);\n  const [backgroundImage, setBackgroundImage] = useState(bgImageFromProps);\n  const [backgroundBlurLevel, setBackgroundBlurLevel] =\n    useState(bgBlurLevelFromProps);\n\n  const applyBackgroundImageFilter = useCallback((imageUrl: string) => {\n    setBackgroundFilter('image');\n    setBackgroundImage(imageUrl);\n  }, []);\n\n  const applyBackgroundBlurFilter = useCallback(\n    (blurLevel: BackgroundBlurLevel = 'high') => {\n      setBackgroundFilter('blur');\n      setBackgroundBlurLevel(blurLevel);\n    },\n    [],\n  );\n\n  const disableBackgroundFilter = useCallback(() => {\n    setBackgroundFilter(undefined);\n    setBackgroundImage(undefined);\n    setBackgroundBlurLevel('high');\n  }, []);\n\n  const [isSupported, setIsSupported] = useState(false);\n  useEffect(() => {\n    isPlatformSupported().then(setIsSupported);\n  }, []);\n\n  const [tfLite, setTfLite] = useState<TFLite>();\n  useEffect(() => {\n    // don't try to load TFLite if the platform is not supported\n    if (!isSupported) return;\n    loadTFLite({ basePath, modelFilePath, tfFilePath })\n      .then(setTfLite)\n      .catch((err) => console.error('Failed to load TFLite', err));\n  }, [basePath, isSupported, modelFilePath, tfFilePath]);\n\n  const handleError = useCallback(\n    (error: any) => {\n      getLogger(['filters'])(\n        'warn',\n        'Filter encountered an error and will be disabled',\n      );\n      disableBackgroundFilter();\n      onError?.(error);\n    },\n    [disableBackgroundFilter, onError],\n  );\n\n  return (\n    <BackgroundFiltersContext.Provider\n      value={{\n        isSupported,\n        isReady: !!tfLite,\n        backgroundImage,\n        backgroundBlurLevel,\n        backgroundFilter,\n        disableBackgroundFilter,\n        applyBackgroundBlurFilter,\n        applyBackgroundImageFilter,\n        backgroundImages,\n        tfFilePath,\n        modelFilePath,\n        basePath,\n        onError: handleError,\n      }}\n    >\n      {children}\n      {tfLite && <BackgroundFilters tfLite={tfLite} />}\n    </BackgroundFiltersContext.Provider>\n  );\n};\n\nconst BackgroundFilters = (props: { tfLite: TFLite }) => {\n  const call = useCall();\n  const { children, start } = useRenderer(props.tfLite);\n  const { backgroundFilter, onError } = useBackgroundFilters();\n  const handleErrorRef = useRef<((error: any) => void) | undefined>(undefined);\n  handleErrorRef.current = onError;\n\n  useEffect(() => {\n    if (!call || !backgroundFilter) return;\n    const { unregister } = call.camera.registerFilter((ms) =>\n      start(ms, (error) => handleErrorRef.current?.(error)),\n    );\n    return () => {\n      unregister();\n    };\n  }, [backgroundFilter, call, start]);\n\n  return children;\n};\n\nconst useRenderer = (tfLite: TFLite) => {\n  const { backgroundFilter, backgroundBlurLevel, backgroundImage } =\n    useBackgroundFilters();\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const bgImageRef = useRef<HTMLImageElement>(null);\n  const [videoSize, setVideoSize] = useState<{ width: number; height: number }>(\n    {\n      width: 1920,\n      height: 1080,\n    },\n  );\n\n  const start = useCallback(\n    (ms: MediaStream, onError?: (error: any) => void) => {\n      let outputStream: MediaStream | undefined;\n      let renderer: Renderer | undefined;\n\n      const output = new Promise<MediaStream>((resolve, reject) => {\n        if (!backgroundFilter) {\n          reject(new Error('No filter specified'));\n          return;\n        }\n\n        const videoEl = videoRef.current;\n        const canvasEl = canvasRef.current;\n        const bgImageEl = bgImageRef.current;\n\n        if (!videoEl || !canvasEl || (backgroundImage && !bgImageEl)) {\n          // You should start renderer in effect or event handlers\n          reject(new Error('Renderer started before elements are ready'));\n          return;\n        }\n\n        videoEl.srcObject = ms;\n        videoEl.play().then(\n          () => {\n            const [track] = ms.getVideoTracks();\n\n            if (!track) {\n              reject(new Error('No video tracks in input media stream'));\n              return;\n            }\n\n            const trackSettings = track.getSettings();\n            flushSync(() =>\n              setVideoSize({\n                width: trackSettings.width ?? 0,\n                height: trackSettings.height ?? 0,\n              }),\n            );\n            renderer = createRenderer(\n              tfLite,\n              videoEl,\n              canvasEl,\n              {\n                backgroundFilter,\n                backgroundBlurLevel,\n                backgroundImage: bgImageEl ?? undefined,\n              },\n              onError,\n            );\n            outputStream = canvasEl.captureStream();\n            resolve(outputStream);\n          },\n          () => {\n            reject(new Error('Could not play the source video stream'));\n          },\n        );\n      });\n\n      return {\n        output,\n        stop: () => {\n          renderer?.dispose();\n          videoRef.current && (videoRef.current.srcObject = null);\n          outputStream && disposeOfMediaStream(outputStream);\n        },\n      };\n    },\n    [backgroundBlurLevel, backgroundFilter, backgroundImage, tfLite],\n  );\n\n  const children = (\n    <div className=\"str-video__background-filters\">\n      <video\n        className={clsx(\n          'str-video__background-filters__video',\n          videoSize.height > videoSize.width &&\n            'str-video__background-filters__video--tall',\n        )}\n        ref={videoRef}\n        playsInline\n        muted\n        controls={false}\n        {...videoSize}\n      />\n      {backgroundImage && (\n        <img\n          className=\"str-video__background-filters__background-image\"\n          alt=\"Background\"\n          ref={bgImageRef}\n          src={backgroundImage}\n          {...videoSize}\n        />\n      )}\n      <canvas\n        className=\"str-video__background-filters__target-canvas\"\n        {...videoSize}\n        ref={canvasRef}\n      />\n    </div>\n  );\n\n  return {\n    start,\n    children,\n  };\n};\n", "import { ComponentProps, ForwardedRef, forwardRef } from 'react';\nimport clsx from 'clsx';\n\nimport { Icon, IconProps } from '../Icon';\n\nexport type ButtonWithIconProps = {\n  enabled?: boolean;\n  variant?: string;\n} & ComponentProps<'button'> &\n  IconProps;\n\nexport const IconButton = forwardRef(function IconButton(\n  props: ButtonWithIconProps,\n  ref: ForwardedRef<HTMLButtonElement>,\n) {\n  const { icon, enabled, variant, onClick, className, ...rest } = props;\n  return (\n    <button\n      className={clsx('str-video__call-controls__button', className, {\n        [`str-video__call-controls__button--variant-${variant}`]: variant,\n        'str-video__call-controls__button--enabled': enabled,\n      })}\n      onClick={(e) => {\n        e.preventDefault();\n        onClick?.(e);\n      }}\n      ref={ref}\n      {...rest}\n    >\n      <Icon icon={icon} />\n    </button>\n  );\n});\n", "import clsx from 'clsx';\nimport { MenuToggle, ToggleMenuButtonProps } from '../Menu';\nimport {\n  ComponentProps,\n  ComponentType,\n  forwardRef,\n  JSX,\n  PropsWithChildren,\n} from 'react';\nimport { Placement } from '@floating-ui/react';\n\nimport { IconButton } from './IconButton';\nimport { isComponentType } from '../../utilities';\n\nexport type IconButtonWithMenuProps<E extends HTMLElement = HTMLButtonElement> =\n  PropsWithChildren<{\n    active?: boolean;\n    Menu?: ComponentType | JSX.Element;\n    caption?: string;\n    className?: string;\n    menuPlacement?: Placement;\n    menuOffset?: number;\n    ToggleMenuButton?: ComponentType<ToggleMenuButtonProps<E>>;\n    variant?: 'primary' | 'secondary';\n    onMenuToggle?: (menuShown: boolean) => void;\n  }> &\n    ComponentProps<'button'>;\n\nexport const CompositeButton = forwardRef<\n  HTMLDivElement,\n  IconButtonWithMenuProps\n>(function CompositeButton(\n  {\n    disabled,\n    caption,\n    children,\n    className,\n    active,\n    Menu,\n    menuPlacement,\n    menuOffset,\n    title,\n    ToggleMenuButton = DefaultToggleMenuButton,\n    variant,\n    onClick,\n    onMenuToggle,\n    ...restButtonProps\n  },\n  ref,\n) {\n  return (\n    <div\n      className={clsx('str-video__composite-button', className, {\n        'str-video__composite-button--caption': caption,\n        'str-video__composite-button--menu': Menu,\n      })}\n      title={title}\n      ref={ref}\n    >\n      <div\n        className={clsx('str-video__composite-button__button-group', {\n          'str-video__composite-button__button-group--active': active,\n          'str-video__composite-button__button-group--active-primary':\n            active && variant === 'primary',\n          'str-video__composite-button__button-group--active-secondary':\n            active && variant === 'secondary',\n          'str-video__composite-button__button-group--disabled': disabled,\n        })}\n      >\n        <button\n          type=\"button\"\n          className=\"str-video__composite-button__button\"\n          onClick={(e) => {\n            e.preventDefault();\n            onClick?.(e);\n          }}\n          disabled={disabled}\n          {...restButtonProps}\n        >\n          {children}\n        </button>\n        {Menu && (\n          <MenuToggle\n            offset={menuOffset}\n            placement={menuPlacement}\n            ToggleButton={ToggleMenuButton}\n            onToggle={onMenuToggle}\n          >\n            {isComponentType(Menu) ? <Menu /> : Menu}\n          </MenuToggle>\n        )}\n      </div>\n      {caption && (\n        <div className=\"str-video__composite-button__caption\">{caption}</div>\n      )}\n    </div>\n  );\n});\n\nconst DefaultToggleMenuButton = forwardRef<\n  HTMLButtonElement,\n  ToggleMenuButtonProps\n>(function DefaultToggleMenuButton({ menuShown }, ref) {\n  return (\n    <IconButton\n      className={clsx('str-video__menu-toggle-button', {\n        'str-video__menu-toggle-button--active': menuShown,\n      })}\n      icon={menuShown ? 'caret-down' : 'caret-up'}\n      ref={ref}\n    />\n  );\n});\n", "import { ComponentProps } from 'react';\n\nexport const TextButton = ({\n  children,\n  ...rest\n}: Omit<ComponentProps<'button'>, 'ref' | 'className'>) => {\n  return (\n    <button {...rest} className=\"str-video__text-button\">\n      {children}\n    </button>\n  );\n};\n", "import { MouseEventHandler, useCallback } from 'react';\nimport { IconButton } from '../Button';\nimport { useCall } from '@stream-io/video-react-bindings';\n\nexport type AcceptCallButtonProps = {\n  disabled?: boolean;\n  onClick?: MouseEventHandler<HTMLButtonElement>;\n  onAccept?: () => void;\n};\n\nexport const AcceptCallButton = ({\n  disabled,\n  onAccept,\n  onClick,\n}: AcceptCallButtonProps) => {\n  const call = useCall();\n  const handleClick: MouseEventHandler<HTMLButtonElement> = useCallback(\n    async (e) => {\n      if (onClick) {\n        onClick(e);\n      } else if (call) {\n        await call.join();\n        onAccept?.();\n      }\n    },\n    [onClick, onAccept, call],\n  );\n  return (\n    <IconButton\n      disabled={disabled}\n      icon=\"call-accept\"\n      variant=\"success\"\n      data-testid=\"accept-call-button\"\n      onClick={handleClick}\n    />\n  );\n};\n", "import { PropsWithChildren, ReactNode, useEffect } from 'react';\nimport { Placement } from '@floating-ui/react';\n\nimport { useFloatingUIPreset } from '../../hooks';\n\nexport type NotificationProps = {\n  message?: ReactNode;\n  isVisible?: boolean;\n  visibilityTimeout?: number;\n  resetIsVisible?: () => void;\n  placement?: Placement;\n  iconClassName?: string | null;\n  close?: () => void;\n};\n\nexport const Notification = (props: PropsWithChildren<NotificationProps>) => {\n  const {\n    isVisible,\n    message,\n    children,\n    visibilityTimeout,\n    resetIsVisible,\n    placement = 'top',\n    iconClassName = 'str-video__notification__icon',\n    close,\n  } = props;\n\n  const { refs, x, y, strategy } = useFloatingUIPreset({\n    placement,\n    strategy: 'absolute',\n  });\n\n  useEffect(() => {\n    if (!isVisible || !visibilityTimeout || !resetIsVisible) return;\n\n    const timeout = setTimeout(() => {\n      resetIsVisible();\n    }, visibilityTimeout);\n\n    return () => clearTimeout(timeout);\n  }, [isVisible, resetIsVisible, visibilityTimeout]);\n\n  return (\n    <div ref={refs.setReference}>\n      {isVisible && (\n        <div\n          className=\"str-video__notification\"\n          ref={refs.setFloating}\n          style={{\n            position: strategy,\n            top: y ?? 0,\n            left: x ?? 0,\n            overflowY: 'auto',\n          }}\n        >\n          {iconClassName && <i className={iconClassName} />}\n          <span className=\"str-video__notification__message\">{message}</span>\n          {close ? (\n            <i\n              className=\"str-video__icon str-video__icon--close str-video__notification__close\"\n              onClick={close}\n            />\n          ) : null}\n        </div>\n      )}\n      {children}\n    </div>\n  );\n};\n", "import { Notification } from './Notification';\nimport { OwnCapability } from '@stream-io/video-client';\nimport {\n  PropsWithChildren,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { useCallStateHooks } from '@stream-io/video-react-bindings';\n\nexport type PermissionNotificationProps = PropsWithChildren<{\n  /**\n   * Set this to true if there is ongoing request for the permission.\n   */\n  isAwaitingApproval: boolean;\n\n  /**\n   * The message to display in the notification once\n   * the requested permission is granted.\n   */\n  messageApproved: string;\n\n  /**\n   * The message to display in the notification once a permission\n   * is revoked.\n   */\n  messageRevoked: string;\n\n  /**\n   * The message to display in the notification while\n   * the requested permission is awaiting approval.\n   */\n  messageAwaitingApproval: string;\n\n  /**\n   * The permission to check for.\n   */\n  permission: OwnCapability;\n\n  /**\n   * The time in milliseconds to display the notification.\n   * Defaults to 3500ms.\n   */\n  visibilityTimeout?: number;\n}>;\n\nexport const PermissionNotification = (props: PermissionNotificationProps) => {\n  const {\n    permission,\n    isAwaitingApproval,\n    messageApproved,\n    messageAwaitingApproval,\n    messageRevoked,\n    visibilityTimeout = 3500,\n    children,\n  } = props;\n  const { useHasPermissions } = useCallStateHooks();\n  const hasPermission = useHasPermissions(permission);\n  const prevHasPermission = useRef(hasPermission);\n  const [showNotification, setShowNotification] = useState<\n    'granted' | 'revoked'\n  >();\n  useEffect(() => {\n    if (hasPermission && !prevHasPermission.current) {\n      setShowNotification('granted');\n      prevHasPermission.current = true;\n    } else if (!hasPermission && prevHasPermission.current) {\n      setShowNotification('revoked');\n      prevHasPermission.current = false;\n    }\n  }, [hasPermission]);\n\n  const resetIsVisible = useCallback(() => setShowNotification(undefined), []);\n  if (isAwaitingApproval) {\n    return (\n      <Notification\n        isVisible={isAwaitingApproval && !hasPermission}\n        message={messageAwaitingApproval}\n      >\n        {children}\n      </Notification>\n    );\n  }\n\n  return (\n    <Notification\n      isVisible={!!showNotification}\n      visibilityTimeout={visibilityTimeout}\n      resetIsVisible={resetIsVisible}\n      message={\n        showNotification === 'granted' ? messageApproved : messageRevoked\n      }\n    >\n      {children}\n    </Notification>\n  );\n};\n", "import { PropsWithChildren } from 'react';\nimport { Placement } from '@floating-ui/react';\n\nimport { useCallStateHooks, useI18n } from '@stream-io/video-react-bindings';\nimport { Notification } from './Notification';\n\nexport type SpeakingWhileMutedNotificationProps = {\n  /**\n   * Text message displayed by the notification.\n   */\n  text?: string;\n  placement?: Placement;\n};\n\nexport const SpeakingWhileMutedNotification = ({\n  children,\n  text,\n  placement,\n}: PropsWithChildren<SpeakingWhileMutedNotificationProps>) => {\n  const { useMicrophoneState } = useCallStateHooks();\n  const { isSpeakingWhileMuted } = useMicrophoneState();\n  const { t } = useI18n();\n\n  const message = text ?? t('You are muted. Unmute to speak.');\n  return (\n    <Notification\n      message={message}\n      isVisible={isSpeakingWhileMuted}\n      placement={placement || 'top-start'}\n    >\n      {children}\n    </Notification>\n  );\n};\n", "import { PropsWithChildren, useEffect, useState } from 'react';\nimport {\n  useI18n,\n  useToggleCallRecording,\n} from '@stream-io/video-react-bindings';\nimport { Notification } from './Notification';\n\nexport type RecordingInProgressNotificationProps = {\n  text?: string;\n};\n\nexport const RecordingInProgressNotification = ({\n  children,\n  text,\n}: PropsWithChildren<RecordingInProgressNotificationProps>) => {\n  const { t } = useI18n();\n  const { isCallRecordingInProgress } = useToggleCallRecording();\n\n  const [isVisible, setVisible] = useState(false);\n\n  const message = text ?? t('Recording in progress...');\n\n  useEffect(() => {\n    if (isCallRecordingInProgress) {\n      setVisible(true);\n    } else {\n      setVisible(false);\n    }\n  }, [isCallRecordingInProgress]);\n\n  return (\n    <Notification\n      message={message}\n      iconClassName=\"str-video__icon str-video__icon--recording-on\"\n      isVisible={isVisible}\n      placement=\"top-start\"\n      close={() => setVisible(false)}\n    >\n      {children}\n    </Notification>\n  );\n};\n", "import clsx from 'clsx';\n\nexport type LoadingIndicatorProps = {\n  className?: string;\n  /** String will be injected into class and later used to apply as a CSS mask-image to an element as data URL */\n  type?: string;\n  /** Text to be displayed under the loading indicator icon */\n  text?: string;\n  /** Tooltip to be displayed on hover */\n  tooltip?: string;\n};\n\nexport const LoadingIndicator = ({\n  className,\n  type = 'spinner',\n  text,\n  tooltip,\n}: LoadingIndicatorProps) => {\n  return (\n    <div\n      className={clsx('str-video__loading-indicator', className)}\n      title={tooltip}\n    >\n      <div className={clsx('str-video__loading-indicator__icon', type)}></div>\n      {text && <p className=\"str-video__loading-indicator-text\">{text}</p>}\n    </div>\n  );\n};\n", "import { PropsWithChildren, useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { useFloatingUIPreset } from '../../hooks';\nimport { FloatingArrow, Placement, arrow } from '@floating-ui/react';\n\nexport type TooltipProps<T extends HTMLElement> = PropsWithChildren<{\n  /** Reference element to which the tooltip should attach to */\n  referenceElement: T | null;\n  /** Additional class applied to the tooltip root element */\n  tooltipClassName?: string;\n  /** Popper's modifier (offset) property - [xAxis offset, yAxis offset], default [0, 10] */\n  offset?: [number, number];\n  /** Popper's placement property defining default position of the tooltip, default 'top' */\n  tooltipPlacement?: Placement;\n  /** Tells component whether to render its contents */\n  visible?: boolean;\n}>;\n\nexport const Tooltip = <T extends HTMLElement>({\n  children,\n  referenceElement,\n  tooltipClassName,\n  tooltipPlacement = 'top',\n  visible = false,\n}: TooltipProps<T>) => {\n  const arrowRef = useRef<SVGSVGElement>(null);\n  const { refs, x, y, strategy, context } = useFloatingUIPreset({\n    placement: tooltipPlacement,\n    strategy: 'absolute',\n    middleware: [arrow({ element: arrowRef })],\n  });\n\n  useEffect(() => {\n    refs.setReference(referenceElement);\n  }, [referenceElement, refs]);\n\n  if (!visible) return null;\n\n  return (\n    <div\n      className={clsx('str-video__tooltip', tooltipClassName)}\n      ref={refs.setFloating}\n      style={{\n        position: strategy,\n        top: y ?? 0,\n        left: x ?? 0,\n      }}\n    >\n      <FloatingArrow\n        ref={arrowRef}\n        context={context}\n        fill=\"var(--str-video__tooltip--background-color)\"\n      />\n      {children}\n    </div>\n  );\n};\n", "import { MouseEventHandler, useCallback, useState } from 'react';\n\nexport const useEnterLeaveHandlers = <T extends HTMLElement>({\n  onMouseEnter,\n  onMouseLeave,\n}: Partial<\n  Record<'onMouseEnter' | 'onMouseLeave', MouseEventHandler<T>>\n> = {}) => {\n  const [tooltipVisible, setTooltipVisible] = useState(false);\n\n  const handleMouseEnter: MouseEventHandler<T> = useCallback(\n    (e) => {\n      setTooltipVisible(true);\n      onMouseEnter?.(e);\n    },\n    [onMouseEnter],\n  );\n\n  const handleMouseLeave: MouseEventHandler<T> = useCallback(\n    (e) => {\n      setTooltipVisible(false);\n      onMouseLeave?.(e);\n    },\n    [onMouseLeave],\n  );\n\n  return { handleMouseEnter, handleMouseLeave, tooltipVisible };\n};\n", "import { ComponentProps, useState } from 'react';\nimport { Tooltip, TooltipProps } from './Tooltip';\nimport { useEnterLeaveHandlers } from './hooks';\n\ntype WithPopupProps = ComponentProps<'div'> &\n  Omit<TooltipProps<HTMLDivElement>, 'referenceElement' | 'children'> & {\n    tooltipDisabled?: boolean;\n  };\n\n// todo: duplicate of CallParticipantList.tsx#MediaIndicator - refactor to a single component\nexport const WithTooltip = ({\n  title,\n  tooltipClassName,\n  tooltipPlacement,\n  tooltipDisabled,\n  ...props\n}: WithPopupProps) => {\n  const { handleMouseEnter, handleMouseLeave, tooltipVisible } =\n    useEnterLeaveHandlers<HTMLDivElement>();\n  const [tooltipAnchor, setTooltipAnchor] = useState<HTMLDivElement | null>(\n    null,\n  );\n  const tooltipActuallyVisible =\n    !tooltipDisabled && Boolean(title) && tooltipVisible;\n\n  return (\n    <>\n      <Tooltip\n        referenceElement={tooltipAnchor}\n        visible={tooltipActuallyVisible}\n        tooltipClassName={tooltipClassName}\n        tooltipPlacement={tooltipPlacement}\n      >\n        {title || ''}\n      </Tooltip>\n      <div\n        ref={setTooltipAnchor}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n        {...props}\n      />\n    </>\n  );\n};\n", "import { forwardRef } from 'react';\n\nimport { OwnCapability } from '@stream-io/video-client';\nimport {\n  Restricted,\n  useI18n,\n  useToggleCallRecording,\n} from '@stream-io/video-react-bindings';\nimport { CompositeButton } from '../Button/';\nimport { Icon } from '../Icon';\nimport {\n  MenuToggle,\n  MenuVisualType,\n  ToggleMenuButtonProps,\n  useMenuContext,\n} from '../Menu';\nimport { LoadingIndicator } from '../LoadingIndicator';\nimport { WithTooltip } from '../Tooltip';\n\nexport type RecordCallButtonProps = {\n  caption?: string;\n};\n\nconst RecordEndConfirmation = () => {\n  const { t } = useI18n();\n  const { toggleCallRecording, isAwaitingResponse } = useToggleCallRecording();\n\n  const { close } = useMenuContext();\n\n  return (\n    <div className=\"str-video__end-recording__confirmation\">\n      <div className=\"str-video__end-recording__header\">\n        <Icon icon=\"recording-on\" />\n        <h2 className=\"str-video__end-recording__heading\">\n          {t('End recording')}\n        </h2>\n      </div>\n      <p className=\"str-video__end-recording__description\">\n        {t('Are you sure you want end the recording?')}\n      </p>\n      <div className=\"str-video__end-recording__actions\">\n        <CompositeButton variant=\"secondary\" onClick={close}>\n          {t('Cancel')}\n        </CompositeButton>\n        <CompositeButton variant=\"primary\" onClick={toggleCallRecording}>\n          {isAwaitingResponse ? <LoadingIndicator /> : t('End recording')}\n        </CompositeButton>\n      </div>\n    </div>\n  );\n};\n\nconst ToggleEndRecordingMenuButton = forwardRef<\n  HTMLDivElement,\n  ToggleMenuButtonProps\n>(function ToggleEndRecordingMenuButton(props, ref) {\n  return (\n    <CompositeButton\n      ref={ref}\n      active={true}\n      variant=\"secondary\"\n      data-testid=\"recording-stop-button\"\n    >\n      <Icon icon=\"recording-off\" />\n    </CompositeButton>\n  );\n});\n\nexport const RecordCallConfirmationButton = ({\n  caption,\n}: {\n  caption?: string;\n}) => {\n  const { t } = useI18n();\n  const { toggleCallRecording, isAwaitingResponse, isCallRecordingInProgress } =\n    useToggleCallRecording();\n\n  if (isCallRecordingInProgress) {\n    return (\n      <Restricted\n        requiredGrants={[\n          OwnCapability.START_RECORD_CALL,\n          OwnCapability.STOP_RECORD_CALL,\n        ]}\n      >\n        <MenuToggle\n          ToggleButton={ToggleEndRecordingMenuButton}\n          visualType={MenuVisualType.PORTAL}\n        >\n          <RecordEndConfirmation />\n        </MenuToggle>\n      </Restricted>\n    );\n  }\n\n  const title = isAwaitingResponse\n    ? t('Waiting for recording to start...')\n    : caption ?? t('Record call');\n\n  return (\n    <Restricted\n      requiredGrants={[\n        OwnCapability.START_RECORD_CALL,\n        OwnCapability.STOP_RECORD_CALL,\n      ]}\n    >\n      <WithTooltip title={title}>\n        <CompositeButton\n          active={isCallRecordingInProgress}\n          caption={caption}\n          variant=\"secondary\"\n          data-testid=\"recording-start-button\"\n          onClick={isAwaitingResponse ? undefined : toggleCallRecording}\n        >\n          {isAwaitingResponse ? (\n            <LoadingIndicator />\n          ) : (\n            <Icon icon=\"recording-off\" />\n          )}\n        </CompositeButton>\n      </WithTooltip>\n    </Restricted>\n  );\n};\n\nexport const RecordCallButton = ({ caption }: RecordCallButtonProps) => {\n  const { t } = useI18n();\n  const { toggleCallRecording, isAwaitingResponse, isCallRecordingInProgress } =\n    useToggleCallRecording();\n\n  let title = caption ?? t('Record call');\n\n  if (isAwaitingResponse) {\n    title = isCallRecordingInProgress\n      ? t('Waiting for recording to stop...')\n      : t('Waiting for recording to start...');\n  }\n\n  return (\n    <Restricted\n      requiredGrants={[\n        OwnCapability.START_RECORD_CALL,\n        OwnCapability.STOP_RECORD_CALL,\n      ]}\n    >\n      <CompositeButton\n        active={isCallRecordingInProgress}\n        caption={caption}\n        variant=\"secondary\"\n        data-testid={\n          isCallRecordingInProgress\n            ? 'recording-stop-button'\n            : 'recording-start-button'\n        }\n        title={title}\n        onClick={isAwaitingResponse ? undefined : toggleCallRecording}\n      >\n        {isAwaitingResponse ? (\n          <LoadingIndicator />\n        ) : (\n          <Icon\n            icon={isCallRecordingInProgress ? 'recording-on' : 'recording-off'}\n          />\n        )}\n      </CompositeButton>\n    </Restricted>\n  );\n};\n", "import { useEffect } from 'react';\nimport { StreamVideoParticipant } from '@stream-io/video-client';\nimport { useCall } from '@stream-io/video-react-bindings';\n\nexport type ReactionProps = {\n  participant: StreamVideoParticipant;\n  hideAfterTimeoutInMs?: number;\n  emojiReactionMap?: Record<string, string>;\n};\n\nexport const defaultEmojiReactionMap: Record<string, string> = {\n  ':like:': '👍',\n  ':raise-hand:': '✋',\n  ':fireworks:': '🎉',\n  ':dislike:': '👎',\n  ':heart:': '❤️',\n  ':smile:': '😀',\n};\n\nexport const Reaction = ({\n  participant: { reaction, sessionId },\n  hideAfterTimeoutInMs = 5500,\n  emojiReactionMap = defaultEmojiReactionMap,\n}: ReactionProps) => {\n  const call = useCall();\n\n  useEffect(() => {\n    if (!call || !reaction) return;\n\n    const timeoutId = setTimeout(() => {\n      call.resetReaction(sessionId);\n    }, hideAfterTimeoutInMs);\n\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [call, hideAfterTimeoutInMs, reaction, sessionId]);\n\n  if (!reaction) return null;\n\n  const { emoji_code: emojiCode } = reaction;\n\n  return (\n    <div className=\"str-video__reaction\">\n      <span className=\"str-video__reaction__emoji\">\n        {emojiCode && emojiReactionMap[emojiCode]}\n      </span>\n    </div>\n  );\n};\n", "import { forwardRef } from 'react';\nimport clsx from 'clsx';\n\nimport { OwnCapability, StreamReaction } from '@stream-io/video-client';\nimport { Restricted, useCall, useI18n } from '@stream-io/video-react-bindings';\n\nimport {\n  MenuToggle,\n  MenuVisualType,\n  ToggleMenuButtonProps,\n  useMenuContext,\n} from '../Menu';\nimport { CompositeButton } from '../Button';\nimport { defaultEmojiReactionMap } from '../Reaction';\nimport { Icon } from '../Icon';\nimport { WithTooltip } from '../Tooltip';\n\nexport const defaultReactions: StreamReaction[] = [\n  {\n    type: 'reaction',\n    emoji_code: ':like:',\n  },\n  {\n    // TODO OL: use `prompt` type?\n    type: 'raised-hand',\n    emoji_code: ':raise-hand:',\n  },\n  {\n    type: 'reaction',\n    emoji_code: ':fireworks:',\n  },\n  {\n    type: 'reaction',\n    emoji_code: ':dislike:',\n  },\n  {\n    type: 'reaction',\n    emoji_code: ':heart:',\n  },\n  {\n    type: 'reaction',\n    emoji_code: ':smile:',\n  },\n];\n\nexport interface ReactionsButtonProps {\n  reactions?: StreamReaction[];\n}\n\nexport const ReactionsButton = ({\n  reactions = defaultReactions,\n}: ReactionsButtonProps) => {\n  return (\n    <Restricted requiredGrants={[OwnCapability.CREATE_REACTION]}>\n      <MenuToggle\n        placement=\"top\"\n        ToggleButton={ToggleReactionsMenuButton}\n        visualType={MenuVisualType.MENU}\n      >\n        <DefaultReactionsMenu reactions={reactions} />\n      </MenuToggle>\n    </Restricted>\n  );\n};\n\nconst ToggleReactionsMenuButton = forwardRef<\n  HTMLDivElement,\n  ToggleMenuButtonProps\n>(function ToggleReactionsMenuButton({ menuShown }, ref) {\n  const { t } = useI18n();\n  return (\n    <WithTooltip title={t('Reactions')} tooltipDisabled={menuShown}>\n      <CompositeButton ref={ref} active={menuShown} variant=\"primary\">\n        <Icon icon=\"reactions\" />\n      </CompositeButton>\n    </WithTooltip>\n  );\n});\n\nexport interface DefaultReactionsMenuProps {\n  reactions: StreamReaction[];\n  layout?: 'horizontal' | 'vertical';\n}\n\nexport const DefaultReactionsMenu = ({\n  reactions,\n  layout = 'horizontal',\n}: DefaultReactionsMenuProps) => {\n  const call = useCall();\n  const { close } = useMenuContext();\n  return (\n    <div\n      className={clsx('str-video__reactions-menu', {\n        'str-video__reactions-menu--horizontal': layout === 'horizontal',\n        'str-video__reactions-menu--vertical': layout === 'vertical',\n      })}\n    >\n      {reactions.map((reaction) => (\n        <button\n          key={reaction.emoji_code}\n          type=\"button\"\n          className=\"str-video__reactions-menu__button\"\n          onClick={() => {\n            call?.sendReaction(reaction);\n            close?.();\n          }}\n        >\n          {reaction.emoji_code && defaultEmojiReactionMap[reaction.emoji_code]}\n        </button>\n      ))}\n    </div>\n  );\n};\n", "import { getLogger } from '@stream-io/video-client';\n\nexport type PropsWithErrorHandler<T = unknown> = T & {\n  /**\n   * Will be called if the call control action failed with an error (e.g. user didn't grant a\n   * browser permission to enable a media device). If no callback is provided, just logs the error.\n   * @param error Exception which caused call control action to fail\n   */\n  onError?: (error: unknown) => void;\n};\n\n/**\n * Wraps an event handler, silencing and logging exceptions (excluding the NotAllowedError\n * DOMException, which is a normal situation handled by the SDK)\n *\n * @param props component props, including the onError callback\n * @param handler event handler to wrap\n */\nexport const createCallControlHandler = (\n  props: PropsWithErrorHandler,\n  handler: () => Promise<void>,\n): (() => Promise<void>) => {\n  const logger = getLogger(['react-sdk']);\n\n  return async () => {\n    try {\n      await handler();\n    } catch (error) {\n      if (props.onError) {\n        props.onError(error);\n        return;\n      }\n\n      if (!isNotAllowedError(error)) {\n        logger('error', 'Call control handler failed', error);\n      }\n    }\n  };\n};\n\nfunction isNotAllowedError(error: unknown): error is DOMException {\n  return error instanceof DOMException && error.name === 'NotAllowedError';\n}\n", "import { OwnCapability } from '@stream-io/video-client';\nimport {\n  Restricted,\n  useCallStateHooks,\n  useI18n,\n} from '@stream-io/video-react-bindings';\nimport { CompositeButton } from '../Button/';\nimport { PermissionNotification } from '../Notification';\nimport { useRequestPermission } from '../../hooks';\nimport { Icon } from '../Icon';\nimport { WithTooltip } from '../Tooltip';\nimport {\n  PropsWithErrorHandler,\n  createCallControlHandler,\n} from '../../utilities/callControlHandler';\n\nexport type ScreenShareButtonProps = PropsWithErrorHandler<{\n  caption?: string;\n}>;\n\nexport const ScreenShareButton = (props: ScreenShareButtonProps) => {\n  const { t } = useI18n();\n  const { caption } = props;\n\n  const { useHasOngoingScreenShare, useScreenShareState, useCallSettings } =\n    useCallStateHooks();\n  const isSomeoneScreenSharing = useHasOngoingScreenShare();\n  const { hasPermission, requestPermission, isAwaitingPermission } =\n    useRequestPermission(OwnCapability.SCREENSHARE);\n\n  const callSettings = useCallSettings();\n  const isScreenSharingAllowed = callSettings?.screensharing.enabled;\n\n  const { screenShare, optimisticIsMute } = useScreenShareState();\n  const amIScreenSharing = !optimisticIsMute;\n  const disableScreenShareButton =\n    !amIScreenSharing &&\n    (isSomeoneScreenSharing || isScreenSharingAllowed === false);\n  const handleClick = createCallControlHandler(props, async () => {\n    if (!hasPermission) {\n      await requestPermission();\n    } else {\n      await screenShare.toggle();\n    }\n  });\n\n  return (\n    <Restricted requiredGrants={[OwnCapability.SCREENSHARE]}>\n      <PermissionNotification\n        permission={OwnCapability.SCREENSHARE}\n        isAwaitingApproval={isAwaitingPermission}\n        messageApproved={t('You can now share your screen.')}\n        messageAwaitingApproval={t('Awaiting for an approval to share screen.')}\n        messageRevoked={t('You can no longer share your screen.')}\n      >\n        <WithTooltip title={caption ?? t('Share screen')}>\n          <CompositeButton\n            active={isSomeoneScreenSharing || amIScreenSharing}\n            caption={caption}\n            variant=\"primary\"\n            data-testid={\n              isSomeoneScreenSharing\n                ? 'screen-share-stop-button'\n                : 'screen-share-start-button'\n            }\n            disabled={disableScreenShareButton}\n            onClick={handleClick}\n          >\n            <Icon\n              icon={\n                isSomeoneScreenSharing ? 'screen-share-on' : 'screen-share-off'\n              }\n            />\n          </CompositeButton>\n        </WithTooltip>\n      </PermissionNotification>\n    </Restricted>\n  );\n};\n", "import {\n  createContext,\n  ReactElement,\n  ReactNode,\n  useCallback,\n  useContext,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport clsx from 'clsx';\nimport {\n  autoUpdate,\n  flip,\n  FloatingFocusManager,\n  FloatingList,\n  useClick,\n  useDismiss,\n  useFloating,\n  useInteractions,\n  useListItem,\n  useListNavigation,\n  useRole,\n  useTypeahead,\n} from '@floating-ui/react';\n\nimport { Icon } from '../Icon';\n\ninterface SelectContextValue {\n  activeIndex: number | null;\n  selectedIndex: number | null;\n  getItemProps: ReturnType<typeof useInteractions>['getItemProps'];\n  handleSelect: (index: number | null) => void;\n}\n\nconst SelectContext = createContext<SelectContextValue>(\n  {} as SelectContextValue,\n);\n\nconst Select = (props: {\n  children: ReactNode;\n  icon?: string;\n  defaultSelectedLabel: string;\n  defaultSelectedIndex: number;\n  handleSelect: (index: number) => void;\n}) => {\n  const {\n    children,\n    icon,\n    defaultSelectedLabel,\n    defaultSelectedIndex,\n    handleSelect: handleSelectProp,\n  } = props;\n  const [isOpen, setIsOpen] = useState(false);\n  const [activeIndex, setActiveIndex] = useState<number | null>(null);\n  const [selectedIndex, setSelectedIndex] = useState<number | null>(\n    defaultSelectedIndex,\n  );\n  const [selectedLabel, setSelectedLabel] = useState<string | null>(\n    defaultSelectedLabel,\n  );\n\n  const { refs, context } = useFloating({\n    placement: 'bottom-start',\n    open: isOpen,\n    onOpenChange: setIsOpen,\n    whileElementsMounted: autoUpdate,\n    middleware: [flip()],\n  });\n\n  const elementsRef = useRef<Array<HTMLElement | null>>([]);\n  const labelsRef = useRef<Array<string | null>>([]);\n\n  const handleSelect = useCallback(\n    (index: number | null) => {\n      setSelectedIndex(index);\n      handleSelectProp(index || 0);\n      setIsOpen(false);\n      if (index !== null) {\n        setSelectedLabel(labelsRef.current[index]);\n      }\n    },\n    [handleSelectProp],\n  );\n\n  const handleTypeaheadMatch = (index: number | null) => {\n    if (isOpen) {\n      setActiveIndex(index);\n    } else {\n      handleSelect(index);\n    }\n  };\n\n  const listNav = useListNavigation(context, {\n    listRef: elementsRef,\n    activeIndex,\n    selectedIndex,\n    onNavigate: setActiveIndex,\n  });\n  const typeahead = useTypeahead(context, {\n    listRef: labelsRef,\n    activeIndex,\n    selectedIndex,\n    onMatch: handleTypeaheadMatch,\n  });\n  const click = useClick(context);\n  const dismiss = useDismiss(context);\n  const role = useRole(context, { role: 'listbox' });\n\n  const { getReferenceProps, getFloatingProps, getItemProps } = useInteractions(\n    [listNav, typeahead, click, dismiss, role],\n  );\n\n  const selectContext = useMemo(\n    () => ({\n      activeIndex,\n      selectedIndex,\n      getItemProps,\n      handleSelect,\n    }),\n    [activeIndex, selectedIndex, getItemProps, handleSelect],\n  );\n\n  return (\n    <div className=\"str-video__dropdown\">\n      <div\n        className=\"str-video__dropdown-selected\"\n        ref={refs.setReference}\n        tabIndex={0}\n        {...getReferenceProps()}\n      >\n        <label className=\"str-video__dropdown-selected__label\">\n          {icon && (\n            <Icon className=\"str-video__dropdown-selected__icon\" icon={icon} />\n          )}\n          {selectedLabel}\n        </label>\n        <Icon\n          className=\"str-video__dropdown-selected__chevron\"\n          icon={isOpen ? 'chevron-up' : 'chevron-down'}\n        />\n      </div>\n      <SelectContext.Provider value={selectContext}>\n        {isOpen && (\n          <FloatingFocusManager context={context} modal={false}>\n            <div\n              className=\"str-video__dropdown-list\"\n              ref={refs.setFloating}\n              {...getFloatingProps()}\n            >\n              <FloatingList elementsRef={elementsRef} labelsRef={labelsRef}>\n                {children}\n              </FloatingList>\n            </div>\n          </FloatingFocusManager>\n        )}\n      </SelectContext.Provider>\n    </div>\n  );\n};\n\nexport type DropDownSelectOptionProps = {\n  label: string;\n  selected?: boolean;\n  icon?: string;\n};\n\nexport const DropDownSelectOption = (props: DropDownSelectOptionProps) => {\n  const { selected, label, icon } = props;\n  const { getItemProps, handleSelect } = useContext(SelectContext);\n  const { ref, index } = useListItem();\n  return (\n    <div\n      className={clsx('str-video__dropdown-option', {\n        'str-video__dropdown-option--selected': selected,\n      })}\n      ref={ref}\n      {...getItemProps({\n        onClick: () => handleSelect(index),\n      })}\n    >\n      {icon && <Icon className=\"str-video__dropdown-icon\" icon={icon} />}\n      <span className=\"str-video__dropdown-label\">{label}</span>\n    </div>\n  );\n};\n\nexport const DropDownSelect = (props: {\n  icon?: string;\n  defaultSelectedLabel: string;\n  defaultSelectedIndex: number;\n  handleSelect: (index: number) => void;\n  children:\n    | ReactElement<DropDownSelectOptionProps>\n    | ReactElement<DropDownSelectOptionProps>[];\n}) => {\n  const {\n    children,\n    icon,\n    handleSelect,\n    defaultSelectedLabel,\n    defaultSelectedIndex,\n  } = props;\n  return (\n    <Select\n      icon={icon}\n      handleSelect={handleSelect}\n      defaultSelectedIndex={defaultSelectedIndex}\n      defaultSelectedLabel={defaultSelectedLabel}\n    >\n      {children}\n    </Select>\n  );\n};\n", "import clsx from 'clsx';\nimport { ChangeEventHandler, useCallback } from 'react';\n\nimport { DropDownSelect, DropDownSelectOption } from '../DropdownSelect';\nimport { useMenuContext } from '../Menu';\nimport { useI18n } from '@stream-io/video-react-bindings';\n\ntype DeviceSelectorOptionProps = {\n  id: string;\n  label: string;\n  name?: string;\n  selected?: boolean;\n  value: string;\n  disabled?: boolean;\n  defaultChecked?: boolean;\n  onChange?: ChangeEventHandler<HTMLInputElement>;\n};\n\nconst DeviceSelectorOption = ({\n  disabled,\n  id,\n  label,\n  onChange,\n  name,\n  selected,\n  defaultChecked,\n  value,\n}: DeviceSelectorOptionProps) => {\n  return (\n    <label\n      className={clsx('str-video__device-settings__option', {\n        'str-video__device-settings__option--selected': selected,\n        'str-video__device-settings__option--disabled': disabled,\n      })}\n      htmlFor={id}\n    >\n      <input\n        type=\"radio\"\n        name={name}\n        onChange={onChange}\n        value={value}\n        id={id}\n        checked={selected}\n        defaultChecked={defaultChecked}\n        disabled={disabled}\n      />\n      {label}\n    </label>\n  );\n};\n\nexport type DeviceSelectorType = 'audioinput' | 'audiooutput' | 'videoinput';\n\nconst DeviceSelectorList = (props: {\n  devices: MediaDeviceInfo[];\n  type: DeviceSelectorType;\n  selectedDeviceId?: string;\n  title?: string;\n  onChange?: (deviceId: string) => void;\n}) => {\n  const { devices = [], selectedDeviceId, title, type, onChange } = props;\n  const { close } = useMenuContext();\n  const { t } = useI18n();\n\n  return (\n    <div className=\"str-video__device-settings__device-kind\">\n      {title && (\n        <div className=\"str-video__device-settings__device-selector-title\">\n          {title}\n        </div>\n      )}\n      {devices.length === 0 ? (\n        <DeviceSelectorOption\n          id={`${type}--default`}\n          label={t('Default')}\n          name={type}\n          defaultChecked\n          value=\"default\"\n        />\n      ) : (\n        devices.map((device) => {\n          return (\n            <DeviceSelectorOption\n              id={`${type}--${device.deviceId}`}\n              value={device.deviceId}\n              label={device.label}\n              key={device.deviceId}\n              onChange={(e) => {\n                onChange?.(e.target.value);\n                close?.();\n              }}\n              name={type}\n              selected={\n                device.deviceId === selectedDeviceId || devices.length === 1\n              }\n            />\n          );\n        })\n      )}\n    </div>\n  );\n};\n\nconst DeviceSelectorDropdown = (props: {\n  devices: MediaDeviceInfo[];\n  selectedDeviceId?: string;\n  title?: string;\n  onChange?: (deviceId: string) => void;\n  icon: string;\n}) => {\n  const { devices = [], selectedDeviceId, title, onChange, icon } = props;\n  const { t } = useI18n();\n\n  const selectedIndex = devices.findIndex(\n    (d) => d.deviceId === selectedDeviceId,\n  );\n\n  const handleSelect = useCallback(\n    (index: number) => {\n      onChange?.(devices[index].deviceId);\n    },\n    [devices, onChange],\n  );\n\n  return (\n    <div className=\"str-video__device-settings__device-kind\">\n      <div className=\"str-video__device-settings__device-selector-title\">\n        {title}\n      </div>\n      <DropDownSelect\n        icon={icon}\n        defaultSelectedIndex={selectedIndex}\n        defaultSelectedLabel={devices[selectedIndex]?.label ?? t('Default')}\n        handleSelect={handleSelect}\n      >\n        {devices.length === 0 ? (\n          <DropDownSelectOption icon={icon} label={t('Default')} selected />\n        ) : (\n          devices.map((device) => (\n            <DropDownSelectOption\n              key={device.deviceId}\n              icon={icon}\n              label={device.label}\n              selected={\n                device.deviceId === selectedDeviceId || devices.length === 1\n              }\n            />\n          ))\n        )}\n      </DropDownSelect>\n    </div>\n  );\n};\n\nexport const DeviceSelector = (props: {\n  devices: MediaDeviceInfo[];\n  icon: string;\n  type: DeviceSelectorType;\n  selectedDeviceId?: string;\n  title?: string;\n  onChange?: (deviceId: string) => void;\n  visualType?: 'list' | 'dropdown';\n  placeholder?: string;\n}) => {\n  const { visualType = 'list', icon, placeholder, ...rest } = props;\n\n  if (visualType === 'list') {\n    return <DeviceSelectorList {...rest} />;\n  }\n  return <DeviceSelectorDropdown {...rest} icon={icon} />;\n};\n", "import { useCallStateHooks } from '@stream-io/video-react-bindings';\nimport { DeviceSelector } from './DeviceSelector';\n\nexport type DeviceSelectorAudioInputProps = {\n  title?: string;\n  visualType?: 'list' | 'dropdown';\n};\n\nexport const DeviceSelectorAudioInput = ({\n  title,\n  visualType,\n}: DeviceSelectorAudioInputProps) => {\n  const { useMicrophoneState } = useCallStateHooks();\n  const { microphone, selectedDevice, devices } = useMicrophoneState();\n\n  return (\n    <DeviceSelector\n      devices={devices || []}\n      selectedDeviceId={selectedDevice}\n      type=\"audioinput\"\n      onChange={async (deviceId) => {\n        await microphone.select(deviceId);\n      }}\n      title={title}\n      visualType={visualType}\n      icon=\"mic\"\n    />\n  );\n};\n\nexport type DeviceSelectorAudioOutputProps = {\n  title?: string;\n  visualType?: 'list' | 'dropdown';\n};\n\nexport const DeviceSelectorAudioOutput = ({\n  title,\n  visualType,\n}: DeviceSelectorAudioOutputProps) => {\n  const { useSpeakerState } = useCallStateHooks();\n  const { speaker, selectedDevice, devices, isDeviceSelectionSupported } =\n    useSpeakerState();\n\n  if (!isDeviceSelectionSupported) return null;\n\n  return (\n    <DeviceSelector\n      devices={devices}\n      type=\"audiooutput\"\n      selectedDeviceId={selectedDevice}\n      onChange={(deviceId) => {\n        speaker.select(deviceId);\n      }}\n      title={title}\n      visualType={visualType}\n      icon=\"speaker\"\n    />\n  );\n};\n", "import { DeviceSelector } from './DeviceSelector';\nimport { useCallStateHooks } from '@stream-io/video-react-bindings';\n\nexport type DeviceSelectorVideoProps = {\n  title?: string;\n  visualType?: 'list' | 'dropdown';\n};\n\nexport const DeviceSelectorVideo = ({\n  title,\n  visualType,\n}: DeviceSelectorVideoProps) => {\n  const { useCameraState } = useCallStateHooks();\n  const { camera, devices, selectedDevice } = useCameraState();\n\n  return (\n    <DeviceSelector\n      devices={devices || []}\n      type=\"videoinput\"\n      selectedDeviceId={selectedDevice}\n      onChange={async (deviceId) => {\n        await camera.select(deviceId);\n      }}\n      title={title}\n      visualType={visualType}\n      icon=\"camera\"\n    />\n  );\n};\n", "import { forwardRef } from 'react';\nimport { useI18n } from '@stream-io/video-react-bindings';\nimport clsx from 'clsx';\nimport { MenuToggle, MenuVisualType, ToggleMenuButtonProps } from '../Menu';\nimport {\n  DeviceSelectorAudioInput,\n  DeviceSelectorAudioOutput,\n} from './DeviceSelectorAudio';\nimport { DeviceSelectorVideo } from './DeviceSelectorVideo';\nimport { IconButton } from '../Button';\n\nexport type DeviceSettingsProps = {\n  visualType?: MenuVisualType;\n};\n\nexport const DeviceSettings = ({\n  visualType = MenuVisualType.MENU,\n}: DeviceSettingsProps) => {\n  return (\n    <MenuToggle\n      placement=\"bottom-end\"\n      ToggleButton={ToggleDeviceSettingsMenuButton}\n      visualType={visualType}\n    >\n      <Menu />\n    </MenuToggle>\n  );\n};\n\nconst Menu = () => {\n  const { t } = useI18n();\n  return (\n    <div className=\"str-video__device-settings\">\n      <DeviceSelectorVideo title={t('Select a Camera')} />\n      <DeviceSelectorAudioInput title={t('Select a Mic')} />\n      <DeviceSelectorAudioOutput title={t('Select Speakers')} />\n    </div>\n  );\n};\n\nconst ToggleDeviceSettingsMenuButton = forwardRef<\n  HTMLButtonElement,\n  ToggleMenuButtonProps\n>(function ToggleDeviceSettingsMenuButton({ menuShown }, ref) {\n  const { t } = useI18n();\n  return (\n    <IconButton\n      className={clsx('str-video__device-settings__button', {\n        'str-video__device-settings__button--active': menuShown,\n      })}\n      title={t('Toggle device menu')}\n      icon=\"device-settings\"\n      ref={ref}\n    />\n  );\n});\n", "import { OwnCapability } from '@stream-io/video-client';\nimport {\n  Restricted,\n  useCallStateHooks,\n  useI18n,\n} from '@stream-io/video-react-bindings';\nimport clsx from 'clsx';\nimport { CompositeButton, IconButtonWithMenuProps } from '../Button';\nimport { DeviceSelectorAudioInput } from '../DeviceSettings';\nimport { PermissionNotification } from '../Notification';\nimport { useRequestPermission } from '../../hooks';\nimport { Icon } from '../Icon';\nimport { WithTooltip } from '../Tooltip';\nimport { useState } from 'react';\nimport {\n  PropsWithErrorHandler,\n  createCallControlHandler,\n} from '../../utilities/callControlHandler';\n\nexport type ToggleAudioPreviewButtonProps = PropsWithErrorHandler<\n  Pick<\n    IconButtonWithMenuProps,\n    'caption' | 'Menu' | 'menuPlacement' | 'onMenuToggle'\n  >\n>;\n\nexport const ToggleAudioPreviewButton = (\n  props: ToggleAudioPreviewButtonProps,\n) => {\n  const { caption, onMenuToggle, ...restCompositeButtonProps } = props;\n  const { t } = useI18n();\n  const { useMicrophoneState } = useCallStateHooks();\n  const { microphone, optimisticIsMute, hasBrowserPermission } =\n    useMicrophoneState();\n  const [tooltipDisabled, setTooltipDisabled] = useState(false);\n  const handleClick = createCallControlHandler(props, () =>\n    microphone.toggle(),\n  );\n\n  return (\n    <WithTooltip\n      title={\n        !hasBrowserPermission\n          ? t('Check your browser audio permissions')\n          : caption ?? t('Mic')\n      }\n      tooltipDisabled={tooltipDisabled}\n    >\n      <CompositeButton\n        active={optimisticIsMute}\n        caption={caption}\n        className={clsx(\n          !hasBrowserPermission && 'str-video__device-unavailable',\n        )}\n        variant=\"secondary\"\n        disabled={!hasBrowserPermission}\n        data-testid={\n          optimisticIsMute\n            ? 'preview-audio-unmute-button'\n            : 'preview-audio-mute-button'\n        }\n        onClick={handleClick}\n        {...restCompositeButtonProps}\n        onMenuToggle={(shown) => {\n          setTooltipDisabled(shown);\n          onMenuToggle?.(shown);\n        }}\n      >\n        <Icon icon={!optimisticIsMute ? 'mic' : 'mic-off'} />\n        {!hasBrowserPermission && (\n          <span\n            className=\"str-video__no-media-permission\"\n            title={t('Check your browser audio permissions')}\n            children=\"!\"\n          />\n        )}\n      </CompositeButton>\n    </WithTooltip>\n  );\n};\n\nexport type ToggleAudioPublishingButtonProps = PropsWithErrorHandler<\n  Pick<\n    IconButtonWithMenuProps,\n    'caption' | 'Menu' | 'menuPlacement' | 'onMenuToggle'\n  >\n>;\n\nexport const ToggleAudioPublishingButton = (\n  props: ToggleAudioPublishingButtonProps,\n) => {\n  const { t } = useI18n();\n  const {\n    caption,\n    Menu = <DeviceSelectorAudioInput visualType=\"list\" />,\n    menuPlacement = 'top',\n    onMenuToggle,\n    ...restCompositeButtonProps\n  } = props;\n\n  const { hasPermission, requestPermission, isAwaitingPermission } =\n    useRequestPermission(OwnCapability.SEND_AUDIO);\n\n  const { useMicrophoneState } = useCallStateHooks();\n  const { microphone, optimisticIsMute, hasBrowserPermission } =\n    useMicrophoneState();\n  const [tooltipDisabled, setTooltipDisabled] = useState(false);\n  const handleClick = createCallControlHandler(props, async () => {\n    if (!hasPermission) {\n      await requestPermission();\n    } else {\n      await microphone.toggle();\n    }\n  });\n\n  return (\n    <Restricted requiredGrants={[OwnCapability.SEND_AUDIO]}>\n      <PermissionNotification\n        permission={OwnCapability.SEND_AUDIO}\n        isAwaitingApproval={isAwaitingPermission}\n        messageApproved={t('You can now speak.')}\n        messageAwaitingApproval={t('Awaiting for an approval to speak.')}\n        messageRevoked={t('You can no longer speak.')}\n      >\n        <WithTooltip\n          title={\n            !hasPermission\n              ? t('You have no permission to share your audio')\n              : !hasBrowserPermission\n                ? t('Check your browser mic permissions')\n                : caption ?? t('Mic')\n          }\n          tooltipDisabled={tooltipDisabled}\n        >\n          <CompositeButton\n            active={optimisticIsMute}\n            caption={caption}\n            variant=\"secondary\"\n            disabled={!hasBrowserPermission || !hasPermission}\n            data-testid={\n              optimisticIsMute ? 'audio-unmute-button' : 'audio-mute-button'\n            }\n            onClick={handleClick}\n            Menu={Menu}\n            menuPlacement={menuPlacement}\n            menuOffset={16}\n            {...restCompositeButtonProps}\n            onMenuToggle={(shown) => {\n              setTooltipDisabled(shown);\n              onMenuToggle?.(shown);\n            }}\n          >\n            <Icon icon={optimisticIsMute ? 'mic-off' : 'mic'} />\n            {(!hasBrowserPermission || !hasPermission) && (\n              <span className=\"str-video__no-media-permission\">!</span>\n            )}\n          </CompositeButton>\n        </WithTooltip>\n      </PermissionNotification>\n    </Restricted>\n  );\n};\n", "import {\n  Restricted,\n  useCallStateHooks,\n  useI18n,\n} from '@stream-io/video-react-bindings';\nimport clsx from 'clsx';\nimport { OwnCapability } from '@stream-io/video-client';\nimport { CompositeButton, IconButtonWithMenuProps } from '../Button/';\nimport { DeviceSelectorVideo } from '../DeviceSettings';\nimport { PermissionNotification } from '../Notification';\nimport { useRequestPermission } from '../../hooks';\nimport { Icon } from '../Icon';\nimport { WithTooltip } from '../Tooltip';\nimport { useState } from 'react';\nimport {\n  PropsWithErrorHandler,\n  createCallControlHandler,\n} from '../../utilities/callControlHandler';\n\nexport type ToggleVideoPreviewButtonProps = PropsWithErrorHandler<\n  Pick<\n    IconButtonWithMenuProps,\n    'caption' | 'Menu' | 'menuPlacement' | 'onMenuToggle'\n  >\n>;\n\nexport const ToggleVideoPreviewButton = (\n  props: ToggleVideoPreviewButtonProps,\n) => {\n  const {\n    caption,\n    Menu = DeviceSelectorVideo,\n    menuPlacement = 'top',\n    onMenuToggle,\n    ...restCompositeButtonProps\n  } = props;\n  const { t } = useI18n();\n  const { useCameraState } = useCallStateHooks();\n  const { camera, optimisticIsMute, hasBrowserPermission } = useCameraState();\n  const [tooltipDisabled, setTooltipDisabled] = useState(false);\n  const handleClick = createCallControlHandler(props, () => camera.toggle());\n\n  return (\n    <WithTooltip\n      title={\n        !hasBrowserPermission\n          ? t('Check your browser video permissions')\n          : caption ?? t('Video')\n      }\n      tooltipDisabled={tooltipDisabled}\n    >\n      <CompositeButton\n        active={optimisticIsMute}\n        caption={caption}\n        className={clsx(\n          !hasBrowserPermission && 'str-video__device-unavailable',\n        )}\n        variant=\"secondary\"\n        data-testid={\n          optimisticIsMute\n            ? 'preview-video-unmute-button'\n            : 'preview-video-mute-button'\n        }\n        onClick={handleClick}\n        disabled={!hasBrowserPermission}\n        Menu={Menu}\n        menuPlacement={menuPlacement}\n        {...restCompositeButtonProps}\n        onMenuToggle={(shown) => {\n          setTooltipDisabled(shown);\n          onMenuToggle?.(shown);\n        }}\n      >\n        <Icon icon={!optimisticIsMute ? 'camera' : 'camera-off'} />\n        {!hasBrowserPermission && (\n          <span\n            className=\"str-video__no-media-permission\"\n            title={t('Check your browser video permissions')}\n            children=\"!\"\n          />\n        )}\n      </CompositeButton>\n    </WithTooltip>\n  );\n};\n\ntype ToggleVideoPublishingButtonProps = PropsWithErrorHandler<\n  Pick<\n    IconButtonWithMenuProps,\n    'caption' | 'Menu' | 'menuPlacement' | 'onMenuToggle'\n  >\n>;\n\nexport const ToggleVideoPublishingButton = (\n  props: ToggleVideoPublishingButtonProps,\n) => {\n  const { t } = useI18n();\n  const {\n    caption,\n    Menu = <DeviceSelectorVideo visualType=\"list\" />,\n    menuPlacement = 'top',\n    onMenuToggle,\n    ...restCompositeButtonProps\n  } = props;\n\n  const { hasPermission, requestPermission, isAwaitingPermission } =\n    useRequestPermission(OwnCapability.SEND_VIDEO);\n\n  const { useCameraState, useCallSettings } = useCallStateHooks();\n  const { camera, optimisticIsMute, hasBrowserPermission } = useCameraState();\n  const callSettings = useCallSettings();\n  const isPublishingVideoAllowed = callSettings?.video.enabled;\n  const [tooltipDisabled, setTooltipDisabled] = useState(false);\n  const handleClick = createCallControlHandler(props, async () => {\n    if (!hasPermission) {\n      await requestPermission();\n    } else {\n      await camera.toggle();\n    }\n  });\n\n  return (\n    <Restricted requiredGrants={[OwnCapability.SEND_VIDEO]}>\n      <PermissionNotification\n        permission={OwnCapability.SEND_VIDEO}\n        isAwaitingApproval={isAwaitingPermission}\n        messageApproved={t('You can now share your video.')}\n        messageAwaitingApproval={t(\n          'Awaiting for an approval to share your video.',\n        )}\n        messageRevoked={t('You can no longer share your video.')}\n      >\n        <WithTooltip\n          title={\n            !hasPermission\n              ? t('You have no permission to share your video')\n              : !hasBrowserPermission\n                ? t('Check your browser video permissions')\n                : !isPublishingVideoAllowed\n                  ? t('Video publishing is disabled by the system')\n                  : caption || t('Video')\n          }\n          tooltipDisabled={tooltipDisabled}\n        >\n          <CompositeButton\n            active={optimisticIsMute}\n            caption={caption}\n            variant=\"secondary\"\n            disabled={\n              !hasBrowserPermission ||\n              !hasPermission ||\n              !isPublishingVideoAllowed\n            }\n            data-testid={\n              optimisticIsMute ? 'video-unmute-button' : 'video-mute-button'\n            }\n            onClick={handleClick}\n            Menu={Menu}\n            menuPlacement={menuPlacement}\n            menuOffset={16}\n            {...restCompositeButtonProps}\n            onMenuToggle={(shown) => {\n              setTooltipDisabled(shown);\n              onMenuToggle?.(shown);\n            }}\n          >\n            <Icon icon={optimisticIsMute ? 'camera-off' : 'camera'} />\n            {(!hasBrowserPermission ||\n              !hasPermission ||\n              !isPublishingVideoAllowed) && (\n              <span className=\"str-video__no-media-permission\">!</span>\n            )}\n          </CompositeButton>\n        </WithTooltip>\n      </PermissionNotification>\n    </Restricted>\n  );\n};\n", "import { forwardRef, MouseEventHandler, useCallback } from 'react';\nimport { OwnCapability } from '@stream-io/video-client';\nimport { Restricted, useCall, useI18n } from '@stream-io/video-react-bindings';\n\nimport { MenuToggle, ToggleMenuButtonProps } from '../Menu';\n\nimport { IconButton } from '../Button';\nimport { Icon } from '../Icon';\nimport { WithTooltip } from '../Tooltip';\n\nconst EndCallMenu = (props: {\n  onLeave: MouseEventHandler<HTMLButtonElement>;\n  onEnd: MouseEventHandler<HTMLButtonElement>;\n}) => {\n  const { onLeave, onEnd } = props;\n  const { t } = useI18n();\n  return (\n    <div className=\"str-video__end-call__confirmation\">\n      <button\n        className=\"str-video__button str-video__end-call__leave\"\n        type=\"button\"\n        data-testid=\"leave-call-button\"\n        onClick={onLeave}\n      >\n        <Icon\n          className=\"str-video__button__icon str-video__end-call__leave-icon\"\n          icon=\"logout\"\n        />\n        {t('Leave call')}\n      </button>\n      <Restricted requiredGrants={[OwnCapability.END_CALL]}>\n        <button\n          className=\"str-video__button str-video__end-call__end\"\n          type=\"button\"\n          data-testid=\"end-call-for-all-button\"\n          onClick={onEnd}\n        >\n          <Icon\n            className=\"str-video__button__icon str-video__end-call__end-icon\"\n            icon=\"call-end\"\n          />\n          {t('End call for all')}\n        </button>\n      </Restricted>\n    </div>\n  );\n};\n\nconst CancelCallToggleMenuButton = forwardRef<\n  HTMLButtonElement,\n  ToggleMenuButtonProps\n>(function CancelCallToggleMenuButton({ menuShown }, ref) {\n  const { t } = useI18n();\n  return (\n    <WithTooltip title={t('Leave call')} tooltipDisabled={menuShown}>\n      <IconButton\n        icon={menuShown ? 'close' : 'call-end'}\n        variant={menuShown ? 'active' : 'danger'}\n        data-testid=\"leave-call-button\"\n        ref={ref}\n      />\n    </WithTooltip>\n  );\n});\n\nexport type CancelCallButtonProps = {\n  disabled?: boolean;\n  caption?: string;\n  onClick?: MouseEventHandler<HTMLButtonElement>;\n  onLeave?: () => void;\n};\n\nexport const CancelCallConfirmButton = ({\n  onClick,\n  onLeave,\n}: CancelCallButtonProps) => {\n  const call = useCall();\n\n  const handleLeave: MouseEventHandler<HTMLButtonElement> = useCallback(\n    async (e) => {\n      if (onClick) {\n        onClick(e);\n      } else if (call) {\n        await call.leave();\n        onLeave?.();\n      }\n    },\n    [onClick, onLeave, call],\n  );\n\n  const handleEndCall: MouseEventHandler<HTMLButtonElement> = useCallback(\n    async (e) => {\n      if (onClick) {\n        onClick(e);\n      } else if (call) {\n        await call.endCall();\n        onLeave?.();\n      }\n    },\n    [onClick, onLeave, call],\n  );\n\n  return (\n    <MenuToggle placement=\"top-start\" ToggleButton={CancelCallToggleMenuButton}>\n      <EndCallMenu onEnd={handleEndCall} onLeave={handleLeave} />\n    </MenuToggle>\n  );\n};\n\nexport const CancelCallButton = ({\n  disabled,\n  caption,\n  onClick,\n  onLeave,\n}: CancelCallButtonProps) => {\n  const call = useCall();\n  const { t } = useI18n();\n  const handleClick: MouseEventHandler<HTMLButtonElement> = useCallback(\n    async (e) => {\n      if (onClick) {\n        onClick(e);\n      } else if (call) {\n        await call.leave();\n        onLeave?.();\n      }\n    },\n    [onClick, onLeave, call],\n  );\n  return (\n    <IconButton\n      disabled={disabled}\n      icon=\"call-end\"\n      variant=\"danger\"\n      title={caption ?? t('Leave call')}\n      data-testid=\"cancel-call-button\"\n      onClick={handleClick}\n    />\n  );\n};\n", "import { OwnCapability } from '@stream-io/video-client';\nimport { Restricted } from '@stream-io/video-react-bindings';\nimport { SpeakingWhileMutedNotification } from '../Notification';\nimport { RecordCallButton } from './RecordCallButton';\nimport { ReactionsButton } from './ReactionsButton';\nimport { ScreenShareButton } from './ScreenShareButton';\nimport { ToggleAudioPublishingButton } from './ToggleAudioButton';\nimport { ToggleVideoPublishingButton } from './ToggleVideoButton';\nimport { CancelCallButton } from './CancelCallButton';\n\nexport type CallControlsProps = {\n  onLeave?: () => void;\n};\n\nexport const CallControls = ({ onLeave }: CallControlsProps) => (\n  <div className=\"str-video__call-controls\">\n    <Restricted requiredGrants={[OwnCapability.SEND_AUDIO]}>\n      <SpeakingWhileMutedNotification>\n        <ToggleAudioPublishingButton />\n      </SpeakingWhileMutedNotification>\n    </Restricted>\n    <Restricted requiredGrants={[OwnCapability.SEND_VIDEO]}>\n      <ToggleVideoPublishingButton />\n    </Restricted>\n    <Restricted requiredGrants={[OwnCapability.CREATE_REACTION]}>\n      <ReactionsButton />\n    </Restricted>\n    <Restricted requiredGrants={[OwnCapability.SCREENSHARE]}>\n      <ScreenShareButton />\n    </Restricted>\n    <Restricted\n      requiredGrants={[\n        OwnCapability.START_RECORD_CALL,\n        OwnCapability.STOP_RECORD_CALL,\n      ]}\n    >\n      <RecordCallButton />\n    </Restricted>\n    <CancelCallButton onLeave={onLeave} />\n  </div>\n);\n", "import { lazy, ReactNode, Suspense, useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport {\n  AggregatedStatsReport,\n  CallStatsReport,\n} from '@stream-io/video-client';\nimport { useCallStateHooks, useI18n } from '@stream-io/video-react-bindings';\nimport { useFloating, useHover, useInteractions } from '@floating-ui/react';\nimport { Icon } from '../Icon';\n\nconst CallStatsLatencyChart = lazy(() => import('./CallStatsLatencyChart'));\n\nenum Status {\n  GOOD = 'Good',\n  OK = 'Ok',\n  BAD = 'Bad',\n}\n\nexport type CallStatsProps = {\n  latencyLowBound?: number;\n  latencyHighBound?: number;\n  showCodecInfo?: boolean;\n  LatencyChartSuspenseFallback?: ReactNode;\n};\n\nexport const CallStats = (props: CallStatsProps) => {\n  const {\n    latencyLowBound = 75,\n    latencyHighBound = 400,\n    showCodecInfo = false,\n    LatencyChartSuspenseFallback = null,\n  } = props;\n  const [latencyBuffer, setLatencyBuffer] = useState<\n    Array<{ x: number; y: number }>\n  >(() => {\n    const now = Date.now();\n    return Array.from({ length: 20 }, (_, i) => ({ x: now + i, y: 0 }));\n  });\n\n  const { t } = useI18n();\n  const [publishBitrate, setPublishBitrate] = useState('-');\n  const [subscribeBitrate, setSubscribeBitrate] = useState('-');\n  const previousStats = useRef<CallStatsReport>();\n  const { useCallStatsReport } = useCallStateHooks();\n  const callStatsReport = useCallStatsReport();\n\n  useEffect(() => {\n    if (!callStatsReport) return;\n    if (!previousStats.current) {\n      previousStats.current = callStatsReport;\n      return;\n    }\n    const previousCallStatsReport = previousStats.current;\n    setPublishBitrate(() => {\n      return calculatePublishBitrate(previousCallStatsReport, callStatsReport);\n    });\n    setSubscribeBitrate(() => {\n      return calculateSubscribeBitrate(\n        previousCallStatsReport,\n        callStatsReport,\n      );\n    });\n\n    setLatencyBuffer((latencyBuf) => {\n      const newLatencyBuffer = latencyBuf.slice(-19);\n      newLatencyBuffer.push({\n        x: callStatsReport.timestamp,\n        y: callStatsReport.publisherStats.averageRoundTripTimeInMs,\n      });\n      return newLatencyBuffer;\n    });\n\n    previousStats.current = callStatsReport;\n  }, [callStatsReport]);\n\n  const latencyComparison = {\n    lowBound: latencyLowBound,\n    highBound: latencyHighBound,\n    value: callStatsReport?.publisherStats.averageRoundTripTimeInMs || 0,\n  };\n\n  return (\n    <div className=\"str-video__call-stats\">\n      {callStatsReport && (\n        <>\n          <div className=\"str-video__call-stats__header\">\n            <h3 className=\"str-video__call-stats__heading\">\n              <Icon\n                className=\"str-video__call-stats__icon\"\n                icon=\"call-latency\"\n              />\n              {t('Call Latency')}\n            </h3>\n            <p className=\"str-video__call-stats__description\">\n              {t(\n                'Very high latency values may reduce call quality, cause lag, and make the call less enjoyable.',\n              )}\n            </p>\n          </div>\n\n          <div className=\"str-video__call-stats__latencychart\">\n            <Suspense fallback={LatencyChartSuspenseFallback}>\n              <CallStatsLatencyChart values={latencyBuffer} />\n            </Suspense>\n          </div>\n\n          <div className=\"str-video__call-stats__header\">\n            <h3 className=\"str-video__call-stats__heading\">\n              <Icon\n                className=\"str-video__call-stats__icon\"\n                icon=\"network-quality\"\n              />\n              {t('Call performance')}\n            </h3>\n            <p className=\"str-video__call-stats__description\">\n              {t('Review the key data points below to assess call performance')}\n            </p>\n          </div>\n\n          <div className=\"str-video__call-stats__card-container\">\n            <StatCard label={t('Region')} value={callStatsReport.datacenter} />\n            <StatCard\n              label={t('Latency')}\n              value={`${callStatsReport.publisherStats.averageRoundTripTimeInMs} ms.`}\n              comparison={latencyComparison}\n            />\n            <StatCard\n              label={t('Receive jitter')}\n              value={`${callStatsReport.subscriberStats.averageJitterInMs} ms.`}\n              comparison={{\n                ...latencyComparison,\n                value: callStatsReport.subscriberStats.averageJitterInMs,\n              }}\n            />\n            <StatCard\n              label={t('Publish jitter')}\n              value={`${callStatsReport.publisherStats.averageJitterInMs} ms.`}\n              comparison={{\n                ...latencyComparison,\n                value: callStatsReport.publisherStats.averageJitterInMs,\n              }}\n            />\n            <StatCard\n              label={`${t('Publish resolution')}${showCodecInfo ? formatCodec(callStatsReport) : ''}`}\n              value={toFrameSize(callStatsReport.publisherStats)}\n            />\n            <StatCard\n              label={t('Publish quality drop reason')}\n              value={callStatsReport.publisherStats.qualityLimitationReasons}\n            />\n            <StatCard\n              label={t('Receiving resolution')}\n              value={toFrameSize(callStatsReport.subscriberStats)}\n            />\n            <StatCard\n              label={t('Receive quality drop reason')}\n              value={callStatsReport.subscriberStats.qualityLimitationReasons}\n            />\n            <StatCard label={t('Publish bitrate')} value={publishBitrate} />\n            <StatCard label={t('Receiving bitrate')} value={subscribeBitrate} />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nconst StatCardExplanation = (props: { description: string }) => {\n  const { description } = props;\n  const [isOpen, setIsOpen] = useState(false);\n\n  const { refs, floatingStyles, context } = useFloating({\n    open: isOpen,\n    onOpenChange: setIsOpen,\n  });\n\n  const hover = useHover(context);\n\n  const { getReferenceProps, getFloatingProps } = useInteractions([hover]);\n\n  return (\n    <>\n      <div\n        className=\"str-video__call-explanation\"\n        ref={refs.setReference}\n        {...getReferenceProps()}\n      >\n        <Icon className=\"str-video__call-explanation__icon\" icon=\"info\" />\n      </div>\n      {isOpen && (\n        <div\n          className=\"str-video__call-explanation__description\"\n          ref={refs.setFloating}\n          style={floatingStyles}\n          {...getFloatingProps()}\n        >\n          {description}\n        </div>\n      )}\n    </>\n  );\n};\n\nconst StatsTag = (props: { children: ReactNode; status: Status }) => {\n  const { children, status } = props;\n  return (\n    <div\n      className={clsx('str-video__call-stats__tag', {\n        'str-video__call-stats__tag--good': status === Status.GOOD,\n        'str-video__call-stats__tag--ok': status === Status.OK,\n        'str-video__call-stats__tag--bad': status === Status.BAD,\n      })}\n    >\n      <div className=\"str-video__call-stats__tag__text\">{children}</div>\n    </div>\n  );\n};\n\nexport const StatCard = (props: {\n  label: string;\n  value: string | ReactNode;\n  description?: string;\n  comparison?: { value: number; highBound: number; lowBound: number };\n}) => {\n  const { label, value, description, comparison } = props;\n\n  const { t } = useI18n();\n  const status = comparison ? toStatus(comparison) : undefined;\n\n  return (\n    <div className=\"str-video__call-stats__card\">\n      <div className=\"str-video__call-stats__card-content\">\n        <div className=\"str-video__call-stats__card-label\">\n          {label}\n          {description && <StatCardExplanation description={description} />}\n        </div>\n        <div className=\"str-video__call-stats__card-value\">{value}</div>\n      </div>\n      {status && <StatsTag status={status}>{t(status)}</StatsTag>}\n    </div>\n  );\n};\n\nconst toStatus = (config: {\n  value: number;\n  lowBound: number;\n  highBound: number;\n}): Status => {\n  const { value, lowBound, highBound } = config;\n  if (value <= lowBound) return Status.GOOD;\n  if (value >= lowBound && value <= highBound) return Status.OK;\n  if (value >= highBound) return Status.BAD;\n  return Status.GOOD;\n};\n\nconst toFrameSize = (stats: AggregatedStatsReport) => {\n  const {\n    highestFrameWidth: w,\n    highestFrameHeight: h,\n    highestFramesPerSecond: fps,\n  } = stats;\n  let size = `-`;\n  if (w && h) {\n    size = `${w}x${h}`;\n    if (fps) {\n      size += `@${fps}fps.`;\n    }\n  }\n  return size;\n};\n\nconst formatCodec = (callStatsReport: CallStatsReport): string => {\n  const { codec } = callStatsReport.publisherStats;\n  if (!codec) return '';\n  const [, name] = codec.split('/');\n  return name ? ` (${name})` : '';\n};\n\nconst calculatePublishBitrate = (\n  previousCallStatsReport: CallStatsReport,\n  callStatsReport: CallStatsReport,\n) => {\n  const {\n    publisherStats: {\n      totalBytesSent: previousTotalBytesSent,\n      timestamp: previousTimestamp,\n    },\n  } = previousCallStatsReport;\n\n  const {\n    publisherStats: { totalBytesSent, timestamp },\n  } = callStatsReport;\n\n  const bytesSent = totalBytesSent - previousTotalBytesSent;\n  const timeElapsed = timestamp - previousTimestamp;\n  return `${((bytesSent * 8) / timeElapsed).toFixed(2)} kbps`;\n};\n\nconst calculateSubscribeBitrate = (\n  previousCallStatsReport: CallStatsReport,\n  callStatsReport: CallStatsReport,\n) => {\n  const {\n    subscriberStats: {\n      totalBytesReceived: previousTotalBytesReceived,\n      timestamp: previousTimestamp,\n    },\n  } = previousCallStatsReport;\n\n  const {\n    subscriberStats: { totalBytesReceived, timestamp },\n  } = callStatsReport;\n\n  const bytesReceived = totalBytesReceived - previousTotalBytesReceived;\n  const timeElapsed = timestamp - previousTimestamp;\n  return `${((bytesReceived * 8) / timeElapsed).toFixed(2)} kbps`;\n};\n", "import { forwardRef } from 'react';\nimport { useI18n } from '@stream-io/video-react-bindings';\n\nimport { CallStats } from '../CallStats';\nimport { CompositeButton } from '../Button/';\nimport { MenuToggle, ToggleMenuButtonProps } from '../Menu';\nimport { Icon } from '../Icon';\n\nexport type CallStatsButtonProps = {\n  caption?: string;\n};\n\nexport const CallStatsButton = () => (\n  <MenuToggle placement=\"top-end\" ToggleButton={ToggleMenuButton}>\n    <CallStats />\n  </MenuToggle>\n);\n\nconst ToggleMenuButton = forwardRef<\n  HTMLDivElement,\n  ToggleMenuButtonProps<HTMLDivElement> & CallStatsButtonProps\n>(function ToggleMenuButton(props, ref) {\n  const { t } = useI18n();\n  const { caption, menuShown } = props;\n\n  return (\n    <CompositeButton\n      ref={ref}\n      active={menuShown}\n      caption={caption}\n      title={caption || t('Statistics')}\n      data-testid=\"stats-button\"\n    >\n      <Icon icon=\"stats\" />\n    </CompositeButton>\n  );\n});\n", "import { CompositeButton, IconButtonWithMenuProps } from '../Button';\nimport { useI18n } from '@stream-io/video-react-bindings';\nimport { Icon } from '../Icon';\nimport { DeviceSelectorAudioOutput } from '../DeviceSettings';\nimport { WithTooltip } from '../Tooltip';\nimport { useState } from 'react';\n\nexport type ToggleAudioOutputButtonProps = Pick<\n  IconButtonWithMenuProps,\n  'caption' | 'Menu' | 'menuPlacement' | 'onMenuToggle'\n>;\n\nexport const ToggleAudioOutputButton = (\n  props: ToggleAudioOutputButtonProps,\n) => {\n  const { t } = useI18n();\n  const {\n    caption,\n    Menu = DeviceSelectorAudioOutput,\n    menuPlacement = 'top',\n    onMenuToggle,\n  } = props;\n  const [tooltipDisabled, setTooltipDisabled] = useState(false);\n\n  return (\n    <WithTooltip\n      title={caption || t('Speakers')}\n      tooltipDisabled={tooltipDisabled}\n    >\n      <CompositeButton\n        Menu={Menu}\n        menuPlacement={menuPlacement}\n        caption={caption}\n        data-testid=\"audio-output-button\"\n        onMenuToggle={(shown) => {\n          setTooltipDisabled(shown);\n          onMenuToggle?.(shown);\n        }}\n      >\n        <Icon icon=\"speaker\" />\n      </CompositeButton>\n    </WithTooltip>\n  );\n};\n", "import { Restricted, useCall } from '@stream-io/video-react-bindings';\nimport { OwnCapability } from '@stream-io/video-client';\n\nimport { TextButton } from '../Button';\n\nexport const BlockedUserListing = ({ data }: { data: string[] }) => {\n  if (!data.length) return null;\n\n  return (\n    <>\n      <div className=\"str-video__participant-listing\">\n        {data.map((userId) => (\n          <BlockedUserListingItem key={userId} userId={userId} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nconst BlockedUserListingItem = ({ userId }: { userId: string }) => {\n  const call = useCall();\n\n  const unblockUserClickHandler = () => {\n    if (userId) call?.unblockUser(userId);\n  };\n\n  return (\n    <div className=\"str-video__participant-listing-item\">\n      <div className=\"str-video__participant-listing-item__display-name\">\n        {userId}\n      </div>\n      <Restricted requiredGrants={[OwnCapability.BLOCK_USERS]}>\n        <TextButton onClick={unblockUserClickHandler}>Unblock</TextButton>\n      </Restricted>\n    </div>\n  );\n};\n", "import { useCallStateHooks, useI18n } from '@stream-io/video-react-bindings';\n\nimport { IconButton } from '../Button';\n\nexport type CallParticipantListHeaderProps = {\n  /**\n   * Click event listener function to be invoked to dismiss / hide the CallParticipantsList from the UI.\n   */\n  onClose: () => void;\n};\n\nexport const CallParticipantListHeader = ({\n  onClose,\n}: CallParticipantListHeaderProps) => {\n  const { useParticipants, useAnonymousParticipantCount } = useCallStateHooks();\n  const participants = useParticipants();\n  const anonymousParticipantCount = useAnonymousParticipantCount();\n  const { t } = useI18n();\n\n  return (\n    <div className=\"str-video__participant-list-header\">\n      <div className=\"str-video__participant-list-header__title\">\n        {t('Participants')}{' '}\n        <span className=\"str-video__participant-list-header__title-count\">\n          [{participants.length}]\n        </span>\n        {anonymousParticipantCount > 0 && (\n          <span className=\"str-video__participant-list-header__title-anonymous\">\n            {t('Anonymous', { count: anonymousParticipantCount })}\n          </span>\n        )}\n      </div>\n      <IconButton\n        onClick={onClose}\n        className=\"str-video__participant-list-header__close-button\"\n        icon=\"close\"\n      />\n    </div>\n  );\n};\n", "import clsx from 'clsx';\nimport { ComponentProps, ComponentType, forwardRef } from 'react';\nimport { useConnectedUser, useI18n } from '@stream-io/video-react-bindings';\nimport {\n  hasAudio,\n  hasVideo,\n  isPinned,\n  StreamVideoParticipant,\n} from '@stream-io/video-client';\nimport { IconButton } from '../Button';\nimport { MenuToggle, ToggleMenuButtonProps } from '../Menu';\nimport { WithTooltip } from '../Tooltip';\nimport { Avatar } from '../Avatar';\nimport { ParticipantActionsContextMenu } from '../../core/components/ParticipantView/ParticipantActionsContextMenu';\nimport { ParticipantViewContext } from '../../core/components/ParticipantView/ParticipantViewContext';\n\ntype CallParticipantListingItemProps = {\n  /** Participant object be rendered */\n  participant: StreamVideoParticipant;\n  /** Custom component used to display participant's name */\n  DisplayName?: ComponentType<{ participant: StreamVideoParticipant }>;\n};\nexport const CallParticipantListingItem = ({\n  participant,\n  DisplayName = DefaultDisplayName,\n}: CallParticipantListingItemProps) => {\n  const isAudioOn = hasAudio(participant);\n  const isVideoOn = hasVideo(participant);\n  const isPinnedOn = isPinned(participant);\n\n  const { t } = useI18n();\n\n  return (\n    <div className=\"str-video__participant-listing-item\">\n      <Avatar name={participant.name} imageSrc={participant.image} />\n      <DisplayName participant={participant} />\n      <div className=\"str-video__participant-listing-item__media-indicator-group\">\n        <MediaIndicator\n          title={isAudioOn ? t('Microphone on') : t('Microphone off')}\n          className={clsx(\n            'str-video__participant-listing-item__icon',\n            `str-video__participant-listing-item__icon-${\n              isAudioOn ? 'mic' : 'mic-off'\n            }`,\n          )}\n        />\n        <MediaIndicator\n          title={isVideoOn ? t('Camera on') : t('Camera off')}\n          className={clsx(\n            'str-video__participant-listing-item__icon',\n            `str-video__participant-listing-item__icon-${\n              isVideoOn ? 'camera' : 'camera-off'\n            }`,\n          )}\n        />\n        {isPinnedOn && (\n          <MediaIndicator\n            title={t('Pinned')}\n            className={clsx(\n              'str-video__participant-listing-item__icon',\n              'str-video__participant-listing-item__icon-pinned',\n            )}\n          />\n        )}\n\n        <MenuToggle placement=\"bottom-end\" ToggleButton={ToggleButton}>\n          <ParticipantViewContext.Provider\n            value={{ participant, trackType: 'none' }}\n          >\n            <ParticipantActionsContextMenu />\n          </ParticipantViewContext.Provider>\n        </MenuToggle>\n      </div>\n    </div>\n  );\n};\n\nconst MediaIndicator = (props: ComponentProps<'div'>) => (\n  <WithTooltip {...props} />\n);\n\ntype DisplayNameProps = {\n  /** Participant object that provides the data from which display name can be generated */\n  participant: StreamVideoParticipant;\n};\n\nconst DefaultDisplayName = ({ participant }: DisplayNameProps) => {\n  const connectedUser = useConnectedUser();\n  const { t } = useI18n();\n\n  const meFlag = participant.userId === connectedUser?.id ? t('Me') : '';\n  const nameOrId = participant.name || participant.userId || t('Unknown');\n  let displayName;\n  if (!participant.name) {\n    displayName = meFlag || nameOrId || t('Unknown');\n  } else if (meFlag) {\n    displayName = `${nameOrId} (${meFlag})`;\n  } else {\n    displayName = nameOrId;\n  }\n\n  return (\n    <WithTooltip\n      className=\"str-video__participant-listing-item__display-name\"\n      title={displayName}\n    >\n      {displayName}\n    </WithTooltip>\n  );\n};\n\nconst ToggleButton = forwardRef<HTMLButtonElement, ToggleMenuButtonProps>(\n  function ToggleButton(props, ref) {\n    return <IconButton enabled={props.menuShown} icon=\"ellipsis\" ref={ref} />;\n  },\n);\n", "import { ComponentType } from 'react';\nimport { StreamVideoParticipant } from '@stream-io/video-client';\nimport { CallParticipantListingItem } from './CallParticipantListingItem';\n\nexport type CallParticipantListingProps = {\n  /** Array of participant objects to be rendered */\n  data: StreamVideoParticipant[];\n  Header?: ComponentType;\n};\n\nexport const CallParticipantListing = ({\n  data,\n}: CallParticipantListingProps) => (\n  <div className=\"str-video__participant-listing\">\n    {data.map((participant) => (\n      <CallParticipantListingItem\n        key={participant.sessionId}\n        participant={participant}\n      />\n    ))}\n  </div>\n);\n", "import { useI18n } from '@stream-io/video-react-bindings';\n\nexport const EmptyParticipantSearchList = () => {\n  const { t } = useI18n();\n  return (\n    <div className=\"str-video__participant-list--empty\">\n      {t('No participants found')}\n    </div>\n  );\n};\n", "import { ComponentProps, useEffect, useState } from 'react';\nimport clsx from 'clsx';\n\ntype SearchInputProps = ComponentProps<'input'> & {\n  /**\n   * Resets the search to its initial state.\n   * The function is called when Esc key or inputs clear button are pressed\n   */\n  exitSearch: () => void;\n  /**\n   * Flag to signal, whether search input elements should be rendered as active\n   */\n  isActive: boolean;\n};\nexport const SearchInput = ({\n  exitSearch,\n  isActive,\n  ...rest\n}: SearchInputProps) => {\n  const [inputElement, setInputElement] = useState<HTMLInputElement | null>(\n    null,\n  );\n  useEffect(() => {\n    if (!inputElement) return;\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.key.toLowerCase() === 'escape') exitSearch();\n    };\n\n    inputElement.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      inputElement.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [exitSearch, inputElement]);\n\n  return (\n    <div\n      className={clsx('str-video__search-input__container', {\n        'str-video__search-input__container--active': isActive,\n      })}\n    >\n      <input placeholder=\"Search\" {...rest} ref={setInputElement} />\n      {isActive ? (\n        <button\n          className=\"str-video__search-input__clear-btn\"\n          onClick={exitSearch}\n        >\n          <span className=\"str-video__search-input__icon--active\" />\n        </button>\n      ) : (\n        <span className=\"str-video__search-input__icon\" />\n      )}\n    </div>\n  );\n};\n", "import { ComponentType } from 'react';\nimport { LoadingIndicator as DefaultLoadingIndicator } from '../LoadingIndicator';\nimport { SearchController } from './hooks';\n\nexport type SearchResultListProps<T> = {\n  data: T[];\n};\n\nexport type SearchResultsProps<T> = Pick<\n  SearchController<T>,\n  'searchResults' | 'searchQueryInProgress'\n> & {\n  /** Component to be displayed, when empty array of search results is provided */\n  EmptySearchResultComponent: ComponentType;\n  /** Component will be used to render non-empty array of search results  */\n  SearchResultList: ComponentType<SearchResultListProps<T>>;\n  /** Component to be displayed while the search query request is in progress */\n  LoadingIndicator?: ComponentType;\n};\n\nexport const SearchResults = <T extends unknown>({\n  EmptySearchResultComponent,\n  LoadingIndicator = DefaultLoadingIndicator,\n  searchQueryInProgress,\n  searchResults,\n  SearchResultList,\n}: SearchResultsProps<T>) => {\n  if (searchQueryInProgress) {\n    return (\n      <div className=\"str-video__search-results--loading\">\n        <LoadingIndicator />\n      </div>\n    );\n  }\n  if (!searchResults.length) {\n    return <EmptySearchResultComponent />;\n  }\n\n  return <SearchResultList data={searchResults} />;\n};\n", "import { useEffect, useState } from 'react';\n\nexport type SearchController<T> = {\n  /** Flag signals that the search request is flight await the response */\n  searchQueryInProgress: boolean;\n  /** Array of items returned by the search query */\n  searchResults: T[];\n};\n\nexport type UseSearchParams<T> = {\n  /** Search function performing the search request */\n  searchFn: (searchQuery: string) => Promise<T[]>;\n  /** Debounce interval applied to the search function */\n  debounceInterval: number;\n  /** Search query string */\n  searchQuery?: string;\n};\n\nexport const useSearch = <T>({\n  debounceInterval,\n  searchFn,\n  searchQuery = '',\n}: UseSearchParams<T>): SearchController<T> => {\n  const [searchResults, setSearchResults] = useState<T[]>([]);\n  const [searchQueryInProgress, setSearchQueryInProgress] = useState(false);\n\n  useEffect(() => {\n    if (!searchQuery.length) {\n      setSearchQueryInProgress(false);\n      setSearchResults([]);\n      return;\n    }\n\n    setSearchQueryInProgress(true);\n\n    const timeout = setTimeout(async () => {\n      try {\n        const results = await searchFn(searchQuery);\n        setSearchResults(results);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setSearchQueryInProgress(false);\n      }\n    }, debounceInterval);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [debounceInterval, searchFn, searchQuery]);\n\n  return {\n    searchQueryInProgress,\n    searchResults,\n  };\n};\n", "import {\n  Dispatch,\n  forwardRef,\n  SetStateAction,\n  useCallback,\n  useState,\n} from 'react';\nimport {\n  Restricted,\n  useCall,\n  useCallStateHooks,\n} from '@stream-io/video-react-bindings';\nimport {\n  name,\n  OwnCapability,\n  StreamVideoParticipant,\n} from '@stream-io/video-client';\n\nimport { BlockedUserListing } from './BlockedUserListing';\nimport { IconButton, TextButton } from '../Button';\nimport { CallParticipantListHeader } from './CallParticipantListHeader';\nimport { CallParticipantListing } from './CallParticipantListing';\nimport { EmptyParticipantSearchList } from './EmptyParticipantSearchList';\nimport { LoadingIndicator } from '../LoadingIndicator';\nimport { SearchInput, SearchResults } from '../Search';\nimport { useSearch, UseSearchParams } from '../Search/hooks';\nimport {\n  GenericMenu,\n  GenericMenuButtonItem,\n  MenuToggle,\n  ToggleMenuButtonProps,\n} from '../Menu';\n\ntype CallParticipantListProps = {\n  /** Click event listener function to be invoked in order to dismiss/hide the CallParticipantsList from the UI */\n  onClose: () => void;\n  /** Custom function to override the searching logic of active participants */\n  activeUsersSearchFn?: UseSearchParams<StreamVideoParticipant>['searchFn'];\n  /** Custom function to override the searching logic of blocked users */\n  blockedUsersSearchFn?: UseSearchParams<string>['searchFn'];\n  /** Interval in ms, during which the participant search calls will be debounced. The default value is 200ms. */\n  debounceSearchInterval?: number;\n};\n\nconst UserListTypes = {\n  active: 'Active users',\n  blocked: 'Blocked users',\n} as const;\n\nconst DEFAULT_DEBOUNCE_SEARCH_INTERVAL = 200 as const;\n\nexport const CallParticipantsList = ({\n  onClose,\n  activeUsersSearchFn,\n  blockedUsersSearchFn,\n  debounceSearchInterval,\n}: CallParticipantListProps) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [userListType, setUserListType] =\n    useState<keyof typeof UserListTypes>('active');\n\n  const exitSearch = useCallback(() => setSearchQuery(''), []);\n\n  return (\n    <div className=\"str-video__participant-list\">\n      <CallParticipantListHeader onClose={onClose} />\n      <SearchInput\n        value={searchQuery}\n        onChange={({ currentTarget }) => setSearchQuery(currentTarget.value)}\n        exitSearch={exitSearch}\n        isActive={!!searchQuery}\n      />\n      <CallParticipantListContentHeader\n        userListType={userListType}\n        setUserListType={setUserListType}\n      />\n      <div className=\"str-video__participant-list__content\">\n        {userListType === 'active' && (\n          <ActiveUsersSearchResults\n            searchQuery={searchQuery}\n            activeUsersSearchFn={activeUsersSearchFn}\n            debounceSearchInterval={debounceSearchInterval}\n          />\n        )}\n        {userListType === 'blocked' && (\n          <BlockedUsersSearchResults\n            searchQuery={searchQuery}\n            blockedUsersSearchFn={blockedUsersSearchFn}\n            debounceSearchInterval={debounceSearchInterval}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst CallParticipantListContentHeader = ({\n  userListType,\n  setUserListType,\n}: {\n  userListType: keyof typeof UserListTypes;\n  setUserListType: Dispatch<SetStateAction<keyof typeof UserListTypes>>;\n}) => {\n  const call = useCall();\n\n  const muteAll = () => {\n    call?.muteAllUsers('audio');\n  };\n\n  return (\n    <div className=\"str-video__participant-list__content-header\">\n      <div className=\"str-video__participant-list__content-header-title\">\n        {userListType === 'active' && (\n          <Restricted\n            requiredGrants={[OwnCapability.MUTE_USERS]}\n            hasPermissionsOnly\n          >\n            <TextButton onClick={muteAll}>Mute all</TextButton>\n          </Restricted>\n        )}\n      </div>\n      <MenuToggle placement=\"bottom-end\" ToggleButton={ToggleButton}>\n        <GenericMenu>\n          {(\n            Object.keys(UserListTypes) as Array<keyof typeof UserListTypes>\n          ).map((lt) => (\n            <GenericMenuButtonItem\n              key={lt}\n              aria-selected={lt === userListType}\n              onClick={() => setUserListType(lt)}\n            >\n              {UserListTypes[lt]}\n            </GenericMenuButtonItem>\n          ))}\n        </GenericMenu>\n      </MenuToggle>\n    </div>\n  );\n};\n\nconst ActiveUsersSearchResults = ({\n  searchQuery,\n  activeUsersSearchFn: activeUsersSearchFnFromProps,\n  debounceSearchInterval = DEFAULT_DEBOUNCE_SEARCH_INTERVAL,\n}: Pick<\n  CallParticipantListProps,\n  'activeUsersSearchFn' | 'debounceSearchInterval'\n> & { searchQuery: string }) => {\n  const { useParticipants } = useCallStateHooks();\n  const participants = useParticipants({ sortBy: name });\n\n  const activeUsersSearchFn = useCallback(\n    (queryString: string) => {\n      const queryRegExp = new RegExp(queryString, 'i');\n      return Promise.resolve(\n        participants.filter((participant) => {\n          return participant.name.match(queryRegExp);\n        }),\n      );\n    },\n    [participants],\n  );\n\n  const { searchQueryInProgress, searchResults } =\n    useSearch<StreamVideoParticipant>({\n      searchFn: activeUsersSearchFnFromProps ?? activeUsersSearchFn,\n      debounceInterval: debounceSearchInterval,\n      searchQuery,\n    });\n\n  return (\n    <SearchResults<StreamVideoParticipant>\n      EmptySearchResultComponent={EmptyParticipantSearchList}\n      LoadingIndicator={LoadingIndicator}\n      searchQueryInProgress={searchQueryInProgress}\n      searchResults={searchQuery ? searchResults : participants}\n      SearchResultList={CallParticipantListing}\n    />\n  );\n};\n\nconst BlockedUsersSearchResults = ({\n  blockedUsersSearchFn: blockedUsersSearchFnFromProps,\n  debounceSearchInterval = DEFAULT_DEBOUNCE_SEARCH_INTERVAL,\n  searchQuery,\n}: Pick<\n  CallParticipantListProps,\n  'blockedUsersSearchFn' | 'debounceSearchInterval'\n> & { searchQuery: string }) => {\n  const { useCallBlockedUserIds } = useCallStateHooks();\n  const blockedUsers = useCallBlockedUserIds();\n\n  const blockedUsersSearchFn = useCallback(\n    (queryString: string) => {\n      const queryRegExp = new RegExp(queryString, 'i');\n      return Promise.resolve(\n        blockedUsers.filter((blockedUser) => {\n          return blockedUser.match(queryRegExp);\n        }),\n      );\n    },\n    [blockedUsers],\n  );\n\n  const { searchQueryInProgress, searchResults } = useSearch<string>({\n    searchFn: blockedUsersSearchFnFromProps ?? blockedUsersSearchFn,\n    debounceInterval: debounceSearchInterval,\n    searchQuery,\n  });\n\n  return (\n    <SearchResults<string>\n      EmptySearchResultComponent={EmptyParticipantSearchList}\n      LoadingIndicator={LoadingIndicator}\n      searchQueryInProgress={searchQueryInProgress}\n      searchResults={searchQuery ? searchResults : blockedUsers}\n      SearchResultList={BlockedUserListing}\n    />\n  );\n};\n\nconst ToggleButton = forwardRef<HTMLButtonElement, ToggleMenuButtonProps>(\n  function ToggleButton(props, ref) {\n    return <IconButton enabled={props.menuShown} icon=\"filter\" ref={ref} />;\n  },\n);\n", "import clsx from 'clsx';\nimport { CSSProperties, useEffect, useState } from 'react';\nimport { useCall, useCallStateHooks } from '@stream-io/video-react-bindings';\n\nexport type CallPreviewProps = {\n  /**\n   * Additional CSS class name to apply to the CallPreview element.\n   */\n  className?: string;\n\n  /**\n   * Additional CSS properties to apply to the CallPreview element.\n   */\n  style?: CSSProperties;\n};\n\nexport const CallPreview = (props: CallPreviewProps) => {\n  const { className, style } = props;\n  const call = useCall();\n  const { useCallThumbnail } = useCallStateHooks();\n  const thumbnail = useCallThumbnail();\n\n  const [imageRef, setImageRef] = useState<HTMLImageElement | null>(null);\n  useEffect(() => {\n    if (!imageRef || !call) return;\n    const cleanup = call.bindCallThumbnailElement(imageRef);\n    return () => cleanup();\n  }, [imageRef, call]);\n\n  if (!thumbnail) return null;\n\n  return (\n    <img\n      className={clsx('str-video__call-preview', className)}\n      style={style}\n      alt=\"Call Preview Thumbnail\"\n      ref={setImageRef}\n    />\n  );\n};\n", "import { CallRecording } from '@stream-io/video-client';\nimport { useI18n } from '@stream-io/video-react-bindings';\nimport { IconButton } from '../Button';\n\nexport type CallRecordingListHeaderProps = {\n  /** Array of CallRecording objects */\n  callRecordings: CallRecording[];\n  /** Callback to be invoked when the refresh button is clicked */\n  onRefresh?: () => void;\n};\n\nexport const CallRecordingListHeader = ({\n  callRecordings,\n  onRefresh,\n}: CallRecordingListHeaderProps) => {\n  const { t } = useI18n();\n  return (\n    <div className=\"str-video__call-recording-list__header\">\n      <div className=\"str-video__call-recording-list__title\">\n        <span>{t('Call Recordings')}</span>\n        {callRecordings.length ? <span>({callRecordings.length})</span> : null}\n      </div>\n      {onRefresh && (\n        <IconButton icon=\"refresh\" title={t('Refresh')} onClick={onRefresh} />\n      )}\n    </div>\n  );\n};\n", "import clsx from 'clsx';\nimport { CallRecording } from '@stream-io/video-client';\nimport { Icon } from '../Icon';\n\nexport type CallRecordingListItemProps = {\n  /** CallRecording object to represent */\n  recording: CallRecording;\n};\n\nconst dateFormat = (date: string) => {\n  const format = new Date(date);\n  return format.toTimeString().split(' ')[0];\n};\nexport const CallRecordingListItem = ({\n  recording,\n}: CallRecordingListItemProps) => {\n  return (\n    <li className=\"str-video__call-recording-list__item\">\n      <div className=\"str-video__call-recording-list__table-cell str-video__call-recording-list__filename\">\n        {recording.filename}\n      </div>\n      <div className=\"str-video__call-recording-list__table-cell str-video__call-recording-list__time\">\n        {dateFormat(recording.start_time)}\n      </div>\n      <div className=\"str-video__call-recording-list__table-cell str-video__call-recording-list__time\">\n        {dateFormat(recording.end_time)}\n      </div>\n      <div className=\"str-video__call-recording-list__table-cell str-video__call-recording-list__download\">\n        <a\n          className={clsx(\n            'str-video__call-recording-list-item__action-button',\n            'str-video__call-recording-list-item__action-button--download',\n          )}\n          role=\"button\"\n          href={recording.url}\n          download={recording.filename}\n          title=\"Download the recording\"\n        >\n          <Icon icon=\"download\" />\n        </a>\n      </div>\n    </li>\n  );\n};\n", "export const EmptyCallRecordingListing = () => {\n  return (\n    <div className=\"str-video__call-recording-list__listing str-video__call-recording-list__listing--empty\">\n      <div className=\"str-video__call-recording-list__listing--icon-empty\" />\n      <p className=\"str-video__call-recording-list__listing--text-empty\">\n        {/* todo: introduce i18n to enable text customization */}\n        No recordings available\n      </p>\n    </div>\n  );\n};\n", "import { CallRecording } from '@stream-io/video-client';\nimport { CallRecordingListItem } from './CallRecordingListItem';\nimport { LoadingIndicator } from '../LoadingIndicator';\n\nexport type LoadingCallRecordingListProps = {\n  /** Array of CallRecording objects */\n  callRecordings: CallRecording[];\n};\n\nexport const LoadingCallRecordingListing = ({\n  callRecordings,\n}: LoadingCallRecordingListProps) => {\n  return (\n    <>\n      {callRecordings.map((recording) => (\n        <CallRecordingListItem recording={recording} key={recording.filename} />\n      ))}\n      <LoadingIndicator text=\"Recording getting ready\" />\n    </>\n  );\n};\n", "import { ComponentType } from 'react';\nimport { CallRecording } from '@stream-io/video-client';\n\nimport {\n  CallRecordingListHeader as DefaultCallRecordingListHeader,\n  CallRecordingListHeaderProps,\n} from './CallRecordingListHeader';\nimport {\n  CallRecordingListItem as DefaultCallRecordingListItem,\n  CallRecordingListItemProps,\n} from './CallRecordingListItem';\nimport { EmptyCallRecordingListing as DefaultEmptyCallRecordingList } from './EmptyCallRecordingListing';\nimport {\n  LoadingCallRecordingListing as DefaultLoadingCallRecordingList,\n  LoadingCallRecordingListProps,\n} from './LoadingCallRecordingListing';\n\nexport type CallRecordingListProps = {\n  /** Array of CallRecording objects to be displayed */\n  callRecordings: CallRecording[];\n  /** Custom component to replace the default header implementation */\n  CallRecordingListHeader?: ComponentType<CallRecordingListHeaderProps>;\n  /** Custom component to replace the default list item implementation */\n  CallRecordingListItem?: ComponentType<CallRecordingListItemProps>;\n  /** Custom component to replace the default empty list component implementation */\n  EmptyCallRecordingList?: ComponentType;\n  /** Signals that a request for new list of CallRecording object has been initiated */\n  loading?: boolean;\n  /** Custom component to be rendered when loading is true */\n  LoadingCallRecordingList?: ComponentType<LoadingCallRecordingListProps>;\n  /** Callback to be invoked when the refresh button is clicked */\n  onRefresh?: () => void;\n};\n\nexport const CallRecordingList = ({\n  callRecordings,\n  CallRecordingListHeader = DefaultCallRecordingListHeader,\n  CallRecordingListItem = DefaultCallRecordingListItem,\n  EmptyCallRecordingList = DefaultEmptyCallRecordingList,\n  loading,\n  LoadingCallRecordingList = DefaultLoadingCallRecordingList,\n  onRefresh,\n}: CallRecordingListProps) => {\n  return (\n    <div className=\"str-video__call-recording-list\">\n      <CallRecordingListHeader\n        callRecordings={callRecordings}\n        onRefresh={onRefresh}\n      />\n      <div className=\"str-video__call-recording-list__listing\">\n        {loading ? (\n          <LoadingCallRecordingList callRecordings={callRecordings} />\n        ) : callRecordings.length ? (\n          <>\n            <ul className=\"str-video__call-recording-list__list\">\n              <li className=\"str-video__call-recording-list__item\">\n                <div className=\"str-video__call-recording-list__filename\">\n                  Name\n                </div>\n                <div className=\"str-video__call-recording-list__time\">\n                  Start time\n                </div>\n                <div className=\"str-video__call-recording-list__time\">\n                  End time\n                </div>\n                <div className=\"str-video__call-recording-list__download\"></div>\n              </li>\n            </ul>\n            <ul className=\"str-video__call-recording-list__list\">\n              {callRecordings.map((recording) => (\n                <CallRecordingListItem\n                  recording={recording}\n                  key={recording.filename}\n                />\n              ))}\n            </ul>\n          </>\n        ) : (\n          <EmptyCallRecordingList />\n        )}\n      </div>\n    </div>\n  );\n};\n", "import {\n  createContext,\n  PropsWithChildren,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  NoiseCancellationSettingsModeEnum,\n  OwnCapability,\n} from '@stream-io/video-client';\nimport { useCall, useCallStateHooks } from '@stream-io/video-react-bindings';\nimport type { INoiseCancellation } from '@stream-io/audio-filters-web';\n\nexport type NoiseCancellationProviderProps = {\n  /**\n   * The noise cancellation instance to use.\n   */\n  noiseCancellation: INoiseCancellation;\n};\n\n/**\n * The Noise Cancellation API.\n */\nexport type NoiseCancellationAPI = {\n  /**\n   * A boolean providing information whether Noise Cancelling functionalities\n   * are supported on this platform and for the current user.\n   */\n  isSupported: boolean | undefined;\n  /**\n   * Provides information whether Noise Cancellation is active or not.\n   */\n  isEnabled: boolean;\n  /**\n   * Allows you to temporary enable or disable the Noise Cancellation filters.\n   *\n   * @param enabled a boolean or a setter.\n   */\n  setEnabled: (enabled: boolean | ((value: boolean) => boolean)) => void;\n};\n\nconst NoiseCancellationContext = createContext<NoiseCancellationAPI | null>(\n  null,\n);\n\n/**\n * Exposes the NoiseCancellation API.\n * Throws an error if used outside <NoiseCancellationProvider />.\n */\nexport const useNoiseCancellation = (): NoiseCancellationAPI => {\n  const context = useContext(NoiseCancellationContext);\n  if (!context) {\n    throw new Error(\n      'useNoiseCancellation must be used within a NoiseCancellationProvider',\n    );\n  }\n  return context;\n};\n\nexport const NoiseCancellationProvider = (\n  props: PropsWithChildren<NoiseCancellationProviderProps>,\n) => {\n  const { children, noiseCancellation } = props;\n  const call = useCall();\n  const { useCallSettings, useHasPermissions } = useCallStateHooks();\n  const settings = useCallSettings();\n  const noiseCancellationAllowed = !!(\n    settings &&\n    settings.audio.noise_cancellation &&\n    settings.audio.noise_cancellation.mode !==\n      NoiseCancellationSettingsModeEnum.DISABLED\n  );\n\n  const hasCapability = useHasPermissions(\n    OwnCapability.ENABLE_NOISE_CANCELLATION,\n  );\n  const [isSupportedByBrowser, setIsSupportedByBrowser] = useState<\n    boolean | undefined\n  >(undefined);\n\n  useEffect(() => {\n    const result = noiseCancellation.isSupported();\n\n    if (typeof result === 'boolean') {\n      setIsSupportedByBrowser(result);\n    } else {\n      result\n        .then((_isSupportedByBrowser) =>\n          setIsSupportedByBrowser(_isSupportedByBrowser),\n        )\n        .catch((err) =>\n          console.error(\n            `Can't determine if noise cancellation is supported`,\n            err,\n          ),\n        );\n    }\n  }, [noiseCancellation]);\n\n  const isSupported =\n    isSupportedByBrowser && hasCapability && noiseCancellationAllowed;\n\n  const [isEnabled, setIsEnabled] = useState(false);\n  const deinit = useRef<Promise<void>>();\n  useEffect(() => {\n    if (!call || !isSupported) return;\n    const unsubscribe = noiseCancellation.on('change', (v) => setIsEnabled(v));\n    const init = (deinit.current || Promise.resolve())\n      .then(() => noiseCancellation.init())\n      .then(() => call.microphone.enableNoiseCancellation(noiseCancellation))\n      .catch((err) => console.error(`Can't initialize noise suppression`, err));\n\n    return () => {\n      deinit.current = init\n        .then(() => call.microphone.disableNoiseCancellation())\n        .then(() => noiseCancellation.dispose())\n        .then(() => unsubscribe());\n    };\n  }, [call, isSupported, noiseCancellation]);\n\n  return (\n    <NoiseCancellationContext.Provider\n      value={{\n        isSupported,\n        isEnabled,\n        setEnabled: (enabledOrSetter) => {\n          if (!noiseCancellation) return;\n          const enable =\n            typeof enabledOrSetter === 'function'\n              ? enabledOrSetter(isEnabled)\n              : enabledOrSetter;\n          if (enable) {\n            noiseCancellation.enable();\n          } else {\n            noiseCancellation.disable();\n          }\n        },\n      }}\n    >\n      {children}\n    </NoiseCancellationContext.Provider>\n  );\n};\n", "import { CallingState } from '@stream-io/video-client';\nimport { AcceptCallButton, CancelCallButton } from '../CallControls';\nimport { useCall, useCallStateHooks } from '@stream-io/video-react-bindings';\n\nexport const RingingCallControls = () => {\n  const call = useCall();\n  const { useCallCallingState } = useCallStateHooks();\n  const callCallingState = useCallCallingState();\n\n  if (!call) return null;\n\n  const buttonsDisabled = callCallingState !== CallingState.RINGING;\n  return (\n    <div className=\"str-video__pending-call-controls\">\n      {call.isCreatedByMe ? (\n        <CancelCallButton disabled={buttonsDisabled} />\n      ) : (\n        <>\n          <AcceptCallButton disabled={buttonsDisabled} />\n          <CancelCallButton\n            onClick={() => call.leave({ reject: true })}\n            disabled={buttonsDisabled}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n", "import { CallingState, UserResponse } from '@stream-io/video-client';\nimport {\n  useCall,\n  useCallStateHooks,\n  useConnectedUser,\n  useI18n,\n} from '@stream-io/video-react-bindings';\nimport { Avatar } from '../Avatar';\nimport { RingingCallControls } from './RingingCallControls';\n\nconst CALLING_STATE_TO_LABEL: Record<CallingState, string> = {\n  [CallingState.JOINING]: 'Joining',\n  [CallingState.RINGING]: 'Ringing',\n  [CallingState.MIGRATING]: 'Migrating',\n  [CallingState.RECONNECTING]: 'Re-connecting',\n  [CallingState.RECONNECTING_FAILED]: 'Failed',\n  [CallingState.OFFLINE]: 'No internet connection',\n  [CallingState.IDLE]: '',\n  [CallingState.UNKNOWN]: '',\n  [CallingState.JOINED]: 'Joined',\n  [CallingState.LEFT]: 'Left call',\n};\n\nexport type RingingCallProps = {\n  /**\n   * Whether to include the current user in the list of members to show.\n   * @default false.\n   */\n  includeSelf?: boolean;\n\n  /**\n   * The maximum number of members to show.\n   * @default 3.\n   */\n  totalMembersToShow?: number;\n};\n\nexport const RingingCall = (props: RingingCallProps) => {\n  const { includeSelf = false, totalMembersToShow = 3 } = props;\n  const call = useCall();\n  const { t } = useI18n();\n  const { useCallCallingState, useCallMembers } = useCallStateHooks();\n  const callingState = useCallCallingState();\n  const members = useCallMembers();\n  const connectedUser = useConnectedUser();\n\n  if (!call) return null;\n\n  // take the first N members to show their avatars\n  const membersToShow: UserResponse[] = (members || [])\n    .slice(0, totalMembersToShow)\n    .map(({ user }) => user)\n    .filter((user) => user.id !== connectedUser?.id || includeSelf);\n  if (\n    includeSelf &&\n    !membersToShow.find((user) => user.id === connectedUser?.id)\n  ) {\n    // if the current user is not in the initial batch of members,\n    // replace the first item in membersToShow array with the current user\n    const self = members.find(({ user }) => user.id === connectedUser?.id);\n    if (self) {\n      membersToShow.splice(0, 1, self.user);\n    }\n  }\n\n  const callingStateLabel = CALLING_STATE_TO_LABEL[callingState];\n\n  return (\n    <div className=\"str-video__call-panel str-video__call-panel--ringing\">\n      <div className=\"str-video__call-panel__members-list\">\n        {membersToShow.map((user) => (\n          <div key={user.id} className=\"str-video__call-panel__member-box\">\n            <Avatar name={user.name} imageSrc={user.image} />\n            {user.name && (\n              <div className=\"str-video__member_details\">\n                <span className=\"str-video__member_name\">{user.name}</span>\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n\n      {callingStateLabel && (\n        <div className=\"str-video__call-panel__calling-state-label\">\n          {t(callingStateLabel)}\n        </div>\n      )}\n\n      {[CallingState.RINGING, CallingState.JOINING].includes(callingState) && (\n        <RingingCallControls />\n      )}\n    </div>\n  );\n};\n", "import {\n  ButtonHTMLAttributes,\n  ComponentProps,\n  forwardRef,\n  Fragment,\n  PropsWithChildren,\n  useEffect,\n  useState,\n} from 'react';\nimport {\n  OwnCapability,\n  PermissionRequestEvent,\n  UserResponse,\n} from '@stream-io/video-client';\nimport {\n  TranslatorFunction,\n  useCall,\n  useCallStateHooks,\n  useI18n,\n} from '@stream-io/video-react-bindings';\nimport clsx from 'clsx';\n\nimport { useFloatingUIPreset } from '../../hooks';\n\nconst byNameOrId = (a: UserResponse, b: UserResponse) => {\n  if (a.name && b.name && a.name < b.name) return -1;\n  if (a.name && b.name && a.name > b.name) return 1;\n  if (a.id < b.id) return -1;\n  if (a.id > b.id) return 1;\n  return 0;\n};\n\ntype HandleUpdatePermission = (\n  request: PermissionRequestEvent,\n  type: 'grant' | 'revoke' | 'dismiss',\n) => () => Promise<void>;\n\nexport const PermissionRequests = () => {\n  const call = useCall();\n  const { useLocalParticipant, useHasPermissions } = useCallStateHooks();\n  const localParticipant = useLocalParticipant();\n  const [expanded, setExpanded] = useState(false);\n  const [permissionRequests, setPermissionRequests] = useState<\n    PermissionRequestEvent[]\n  >([]);\n  const canUpdateCallPermissions = useHasPermissions(\n    OwnCapability.UPDATE_CALL_PERMISSIONS,\n  );\n\n  const localUserId = localParticipant?.userId;\n  useEffect(() => {\n    if (!call || !canUpdateCallPermissions) return;\n    return call.on('call.permission_request', (event) => {\n      if (event.user.id !== localUserId) {\n        setPermissionRequests((requests) =>\n          [...requests, event].sort((a, b) => byNameOrId(a.user, b.user)),\n        );\n      }\n    });\n  }, [call, canUpdateCallPermissions, localUserId]);\n\n  const handleUpdatePermission: HandleUpdatePermission = (request, type) => {\n    return async () => {\n      const { user, permissions } = request;\n      switch (type) {\n        case 'grant':\n          await call?.grantPermissions(user.id, permissions);\n          break;\n        case 'revoke':\n          await call?.revokePermissions(user.id, permissions);\n          break;\n        default:\n          break;\n      }\n      setPermissionRequests((requests) =>\n        requests.filter((r) => r !== request),\n      );\n    };\n  };\n\n  const { refs, x, y, strategy } = useFloatingUIPreset({\n    placement: 'bottom',\n    strategy: 'absolute',\n  });\n\n  // don't render anything if there are no permission requests\n  if (permissionRequests.length === 0) return null;\n\n  return (\n    <div className=\"str-video__permission-requests\" ref={refs.setReference}>\n      <div className=\"str-video__permission-requests__notification\">\n        <span className=\"str-video__permission-requests__notification__message\">\n          {permissionRequests.length} pending permission requests\n        </span>\n        <Button\n          type=\"button\"\n          onClick={() => {\n            setExpanded((e) => !e);\n          }}\n        >\n          {expanded ? 'Hide requests' : 'Show requests'}\n        </Button>\n      </div>\n      {expanded && (\n        <PermissionRequestList\n          ref={refs.setFloating}\n          style={{\n            position: strategy,\n            top: y ?? 0,\n            left: x ?? 0,\n            overflowY: 'auto',\n          }}\n          permissionRequests={permissionRequests}\n          handleUpdatePermission={handleUpdatePermission}\n        />\n      )}\n    </div>\n  );\n};\n\nexport type PermissionRequestListProps = ComponentProps<'div'> & {\n  permissionRequests: PermissionRequestEvent[];\n  handleUpdatePermission: HandleUpdatePermission;\n};\n\nexport const PermissionRequestList = forwardRef<\n  HTMLDivElement,\n  PermissionRequestListProps\n>(function PermissionRequestList(props, ref) {\n  const { permissionRequests, handleUpdatePermission, ...rest } = props;\n\n  const { t } = useI18n();\n\n  return (\n    <div className=\"str-video__permission-requests-list\" ref={ref} {...rest}>\n      {permissionRequests.map((request, reqIndex) => {\n        const { user, permissions } = request;\n        return (\n          <Fragment key={`${user.id}/${reqIndex}`}>\n            {permissions.map((permission) => (\n              <div className=\"str-video__permission-request\" key={permission}>\n                <div className=\"str-video__permission-request__message\">\n                  {messageForPermission(user.name || user.id, permission, t)}\n                </div>\n                <Button\n                  className=\"str-video__permission-request__button--allow\"\n                  type=\"button\"\n                  onClick={handleUpdatePermission(request, 'grant')}\n                >\n                  {t('Allow')}\n                </Button>\n                <Button\n                  className=\"str-video__permission-request__button--reject\"\n                  type=\"button\"\n                  onClick={handleUpdatePermission(request, 'revoke')}\n                >\n                  {t('Revoke')}\n                </Button>\n                <Button\n                  className=\"str-video__permission-request__button--reject\"\n                  type=\"button\"\n                  onClick={handleUpdatePermission(request, 'dismiss')}\n                >\n                  {t('Dismiss')}\n                </Button>\n              </div>\n            ))}\n          </Fragment>\n        );\n      })}\n    </div>\n  );\n});\n\nconst Button = (\n  props: PropsWithChildren<ButtonHTMLAttributes<HTMLButtonElement>>,\n) => {\n  const { className, ...rest } = props;\n  return (\n    <button\n      className={clsx('str-video__permission-request__button', className)}\n      {...rest}\n    />\n  );\n};\n\nconst messageForPermission = (\n  userName: string,\n  permission: string,\n  t: TranslatorFunction,\n) => {\n  switch (permission) {\n    case OwnCapability.SEND_AUDIO:\n      return t('{{ userName }} is requesting to speak', { userName });\n    case OwnCapability.SEND_VIDEO:\n      return t('{{ userName }} is requesting to share their camera', {\n        userName,\n      });\n    case OwnCapability.SCREENSHARE:\n      return t('{{ userName }} is requesting to present their screen', {\n        userName,\n      });\n    default:\n      return t('{{ userName }} is requesting permission: {{ permission }}', {\n        userName,\n        permission,\n      });\n  }\n};\n", "import { ElementType, HTMLProps, PropsWithChildren } from 'react';\nimport clsx from 'clsx';\n\nexport type StreamThemeProps = HTMLProps<HTMLElement> & {\n  as?: ElementType;\n};\n\nexport const StreamTheme = ({\n  as: Component = 'div',\n  className,\n  children,\n  ...props\n}: PropsWithChildren<StreamThemeProps>) => {\n  return (\n    <Component {...props} className={clsx('str-video', className)}>\n      {children}\n    </Component>\n  );\n};\n", "import { ComponentType } from 'react';\nimport clsx from 'clsx';\nimport { useCallStateHooks, useI18n } from '@stream-io/video-react-bindings';\nimport { BaseVideo } from '../../core/components/Video';\nimport { LoadingIndicator } from '../LoadingIndicator';\n\nconst DefaultDisabledVideoPreview = () => {\n  const { t } = useI18n();\n  return (\n    <div className=\"str_video__video-preview__disabled-video-preview\">\n      {t('Video is disabled')}\n    </div>\n  );\n};\n\nconst DefaultNoCameraPreview = () => {\n  const { t } = useI18n();\n  return (\n    <div className=\"str_video__video-preview__no-camera-preview\">\n      {t('No camera found')}\n    </div>\n  );\n};\n\nexport type VideoPreviewProps = {\n  /**\n   * Additional CSS class name to apply to the root element.\n   */\n  className?: string;\n  /**\n   * Enforces mirroring of the video on the X axis. Defaults to true.\n   */\n  mirror?: boolean;\n  /**\n   * Component rendered when user turns off the video.\n   */\n  DisabledVideoPreview?: ComponentType;\n  /**\n   * Component rendered when no camera devices are available.\n   */\n  NoCameraPreview?: ComponentType;\n  /**\n   * Component rendered above the BaseVideo until the video is ready (meaning until the play event is emitted).\n   */\n  StartingCameraPreview?: ComponentType;\n};\n\nexport const VideoPreview = ({\n  className,\n  mirror = true,\n  DisabledVideoPreview = DefaultDisabledVideoPreview,\n  NoCameraPreview = DefaultNoCameraPreview,\n  StartingCameraPreview = LoadingIndicator,\n}: VideoPreviewProps) => {\n  const { useCameraState } = useCallStateHooks();\n  const { devices, status, isMute, mediaStream } = useCameraState();\n\n  let contents;\n  if (isMute && devices?.length === 0) {\n    contents = <NoCameraPreview />;\n  } else if (status === 'enabled') {\n    const loading = !mediaStream;\n    contents = (\n      <>\n        {mediaStream && (\n          <BaseVideo\n            stream={mediaStream}\n            className={clsx('str-video__video-preview', {\n              'str-video__video-preview--mirror': mirror,\n              'str-video__video-preview--loading': loading,\n            })}\n          />\n        )}\n        {loading && <StartingCameraPreview />}\n      </>\n    );\n  } else {\n    contents = <DisabledVideoPreview />;\n  }\n\n  return (\n    <div className={clsx('str-video__video-preview-container', className)}>\n      {contents}\n    </div>\n  );\n};\n", "import { ComponentType, forwardRef } from 'react';\nimport { Placement } from '@floating-ui/react';\nimport {\n  hasAudio,\n  hasScreenShare,\n  hasVideo,\n  SfuModels,\n} from '@stream-io/video-client';\nimport { useCall, useI18n } from '@stream-io/video-react-bindings';\nimport clsx from 'clsx';\n\nimport {\n  Icon,\n  IconButton,\n  MenuToggle,\n  Notification,\n  ToggleMenuButtonProps,\n} from '../../../components';\nimport { ParticipantActionsContextMenu as DefaultParticipantActionsContextMenu } from './ParticipantActionsContextMenu';\nimport { Reaction } from '../../../components/Reaction';\nimport { useParticipantViewContext } from './ParticipantViewContext';\n\nexport type DefaultParticipantViewUIProps = {\n  /**\n   * Turns on/off the status indicator icons (mute, connection quality, etc...).\n   */\n  indicatorsVisible?: boolean;\n  /**\n   * Placement of the context menu component when opened\n   */\n  menuPlacement?: Placement;\n  /**\n   * Option to show/hide menu button component\n   */\n  showMenuButton?: boolean;\n  /**\n   * Custom component to render the context menu\n   */\n  ParticipantActionsContextMenu?: ComponentType;\n};\n\nconst ToggleButton = forwardRef<HTMLButtonElement, ToggleMenuButtonProps>(\n  function ToggleButton(props, ref) {\n    return <IconButton enabled={props.menuShown} icon=\"ellipsis\" ref={ref} />;\n  },\n);\n\nexport const DefaultScreenShareOverlay = () => {\n  const call = useCall();\n  const { t } = useI18n();\n\n  const stopScreenShare = () => {\n    call?.screenShare.disable();\n  };\n\n  return (\n    <div className=\"str-video__screen-share-overlay\">\n      <Icon icon=\"screen-share-off\" />\n      <span className=\"str-video__screen-share-overlay__title\">\n        {t('You are presenting your screen')}\n      </span>\n      <button\n        onClick={stopScreenShare}\n        className=\"str-video__screen-share-overlay__button\"\n      >\n        <Icon icon=\"close\" /> {t('Stop Screen Sharing')}\n      </button>\n    </div>\n  );\n};\n\nexport const DefaultParticipantViewUI = ({\n  indicatorsVisible = true,\n  menuPlacement = 'bottom-start',\n  showMenuButton = true,\n  ParticipantActionsContextMenu = DefaultParticipantActionsContextMenu,\n}: DefaultParticipantViewUIProps) => {\n  const { participant, trackType } = useParticipantViewContext();\n  const isScreenSharing = hasScreenShare(participant);\n\n  if (\n    participant.isLocalParticipant &&\n    isScreenSharing &&\n    trackType === 'screenShareTrack'\n  ) {\n    return (\n      <>\n        <DefaultScreenShareOverlay />\n        <ParticipantDetails indicatorsVisible={indicatorsVisible} />\n      </>\n    );\n  }\n\n  return (\n    <>\n      {showMenuButton && (\n        <MenuToggle\n          strategy=\"fixed\"\n          placement={menuPlacement}\n          ToggleButton={ToggleButton}\n        >\n          <ParticipantActionsContextMenu />\n        </MenuToggle>\n      )}\n      <Reaction participant={participant} />\n      <ParticipantDetails indicatorsVisible={indicatorsVisible} />\n    </>\n  );\n};\n\nexport const ParticipantDetails = ({\n  indicatorsVisible = true,\n}: Pick<DefaultParticipantViewUIProps, 'indicatorsVisible'>) => {\n  const { participant } = useParticipantViewContext();\n  const {\n    isLocalParticipant,\n    connectionQuality,\n    pin,\n    sessionId,\n    name,\n    userId,\n  } = participant;\n  const call = useCall();\n\n  const { t } = useI18n();\n  const connectionQualityAsString =\n    !!connectionQuality &&\n    SfuModels.ConnectionQuality[connectionQuality].toLowerCase();\n\n  const hasAudioTrack = hasAudio(participant);\n  const hasVideoTrack = hasVideo(participant);\n  const canUnpin = !!pin && pin.isLocalPin;\n\n  return (\n    <>\n      <div className=\"str-video__participant-details\">\n        <span className=\"str-video__participant-details__name\">\n          {name || userId}\n\n          {indicatorsVisible && !hasAudioTrack && (\n            <span className=\"str-video__participant-details__name--audio-muted\" />\n          )}\n          {indicatorsVisible && !hasVideoTrack && (\n            <span className=\"str-video__participant-details__name--video-muted\" />\n          )}\n          {indicatorsVisible && canUnpin && (\n            // TODO: remove this monstrosity once we have a proper design\n            <span\n              title={t('Unpin')}\n              onClick={() => call?.unpin(sessionId)}\n              className=\"str-video__participant-details__name--pinned\"\n            />\n          )}\n          {indicatorsVisible && <SpeechIndicator />}\n        </span>\n      </div>\n      {indicatorsVisible && (\n        <Notification\n          isVisible={\n            isLocalParticipant &&\n            connectionQuality === SfuModels.ConnectionQuality.POOR\n          }\n          message={t('Poor connection quality')}\n        >\n          {connectionQualityAsString && (\n            <span\n              className={clsx(\n                'str-video__participant-details__connection-quality',\n                `str-video__participant-details__connection-quality--${connectionQualityAsString}`,\n              )}\n              title={connectionQualityAsString}\n            />\n          )}\n        </Notification>\n      )}\n    </>\n  );\n};\n\nexport const SpeechIndicator = () => {\n  const { participant } = useParticipantViewContext();\n  const { isSpeaking, isDominantSpeaker } = participant;\n  return (\n    <span\n      className={clsx(\n        'str-video__speech-indicator',\n        isSpeaking && 'str-video__speech-indicator--speaking',\n        isDominantSpeaker && 'str-video__speech-indicator--dominant',\n      )}\n    >\n      <span className=\"str-video__speech-indicator__bar\" />\n      <span className=\"str-video__speech-indicator__bar\" />\n      <span className=\"str-video__speech-indicator__bar\" />\n    </span>\n  );\n};\n", "import {\n  ComponentType,\n  forwardRef,\n  ReactElement,\n  useMemo,\n  useState,\n} from 'react';\nimport clsx from 'clsx';\nimport {\n  hasAudio,\n  hasScreenShareAudio,\n  hasVideo,\n  StreamVideoParticipant,\n  VideoTrackType,\n} from '@stream-io/video-client';\nimport { useCallStateHooks } from '@stream-io/video-react-bindings';\n\nimport { Audio } from '../Audio';\nimport { Video, VideoProps } from '../Video';\nimport { useTrackElementVisibility } from '../../hooks';\nimport { DefaultParticipantViewUI } from './DefaultParticipantViewUI';\nimport { applyElementToRef, isComponentType } from '../../../utilities';\nimport { ParticipantViewContext } from './ParticipantViewContext';\n\nexport type ParticipantViewProps = {\n  /**\n   * The participant whose video/audio stream we want to play.\n   */\n  participant: StreamVideoParticipant;\n\n  /**\n   * Override the default UI for rendering participant information/actions.\n   * pass `null` if you wish to not render anything\n   * @default DefaultParticipantViewUI\n   */\n  ParticipantViewUI?: ComponentType | ReactElement | null;\n\n  /**\n   * The kind of video stream to play for the given participant.\n   * The default value is `videoTrack`.\n   * You can use `none` if you're building an audio-only call.\n   */\n  trackType?: VideoTrackType | 'none';\n\n  /**\n   * Forces participant's video to be mirrored or unmirrored. By default, video track\n   * from the local participant is mirrored, and all other videos are not mirrored.\n   */\n  mirror?: boolean;\n\n  /**\n   * This prop is only useful for advanced use-cases (for example, building your own layout).\n   * When set to `true` it will mute the give participant's audio stream on the client side.\n   * The local participant is always muted.\n   */\n  muteAudio?: boolean;\n\n  /**\n   * An object with set functions meant for exposing the video\n   * and video placeholder elements to the integrators.\n   * It's useful when you want to attach custom event handlers to these elements.\n   * - `refs.setVideoElement`\n   * - `refs.setVideoPlaceholderElement`\n   */\n  refs?: VideoProps['refs'];\n\n  /**\n   * Custom class applied to the root DOM element.\n   */\n  className?: string;\n} & Pick<VideoProps, 'VideoPlaceholder' | 'PictureInPicturePlaceholder'>;\n\nexport const ParticipantView = forwardRef<HTMLDivElement, ParticipantViewProps>(\n  function ParticipantView(\n    {\n      participant,\n      trackType = 'videoTrack',\n      mirror,\n      muteAudio,\n      refs: { setVideoElement, setVideoPlaceholderElement } = {},\n      className,\n      VideoPlaceholder,\n      PictureInPicturePlaceholder,\n      ParticipantViewUI = DefaultParticipantViewUI as ComponentType,\n    },\n    ref,\n  ) {\n    const { isLocalParticipant, isSpeaking, isDominantSpeaker, sessionId } =\n      participant;\n\n    const hasAudioTrack = hasAudio(participant);\n    const hasVideoTrack = hasVideo(participant);\n    const hasScreenShareAudioTrack = hasScreenShareAudio(participant);\n\n    const [trackedElement, setTrackedElement] = useState<HTMLDivElement | null>(\n      null,\n    );\n\n    const [contextVideoElement, setContextVideoElement] =\n      useState<HTMLVideoElement | null>(null);\n\n    const [contextVideoPlaceholderElement, setContextVideoPlaceholderElement] =\n      useState<HTMLDivElement | null>(null);\n\n    // TODO: allow to pass custom ViewportTracker instance from props\n    useTrackElementVisibility({\n      sessionId,\n      trackedElement,\n      trackType,\n    });\n\n    const { useIncomingVideoSettings } = useCallStateHooks();\n    const { isParticipantVideoEnabled } = useIncomingVideoSettings();\n\n    const participantViewContextValue = useMemo(\n      () => ({\n        participant,\n        participantViewElement: trackedElement,\n        videoElement: contextVideoElement,\n        videoPlaceholderElement: contextVideoPlaceholderElement,\n        trackType,\n      }),\n      [\n        contextVideoElement,\n        contextVideoPlaceholderElement,\n        participant,\n        trackedElement,\n        trackType,\n      ],\n    );\n\n    const videoRefs: VideoProps['refs'] = useMemo(\n      () => ({\n        setVideoElement: (element) => {\n          setVideoElement?.(element);\n          setContextVideoElement(element);\n        },\n        setVideoPlaceholderElement: (element) => {\n          setVideoPlaceholderElement?.(element);\n          setContextVideoPlaceholderElement(element);\n        },\n      }),\n      [setVideoElement, setVideoPlaceholderElement],\n    );\n\n    return (\n      <div\n        data-testid=\"participant-view\"\n        ref={(element) => {\n          applyElementToRef(ref, element);\n          setTrackedElement(element);\n        }}\n        className={clsx(\n          'str-video__participant-view',\n          isDominantSpeaker && 'str-video__participant-view--dominant-speaker',\n          isSpeaking && 'str-video__participant-view--speaking',\n          !hasVideoTrack && 'str-video__participant-view--no-video',\n          !hasAudioTrack && 'str-video__participant-view--no-audio',\n          className,\n        )}\n      >\n        <ParticipantViewContext.Provider value={participantViewContextValue}>\n          {/* mute the local participant, as we don't want to hear ourselves */}\n          {!isLocalParticipant && !muteAudio && (\n            <>\n              {hasAudioTrack && (\n                <Audio participant={participant} trackType=\"audioTrack\" />\n              )}\n              {hasScreenShareAudioTrack && (\n                <Audio\n                  participant={participant}\n                  trackType=\"screenShareAudioTrack\"\n                />\n              )}\n            </>\n          )}\n          <Video\n            VideoPlaceholder={VideoPlaceholder}\n            PictureInPicturePlaceholder={PictureInPicturePlaceholder}\n            participant={participant}\n            trackType={trackType}\n            refs={videoRefs}\n            enabled={\n              isLocalParticipant ||\n              trackType !== 'videoTrack' ||\n              isParticipantVideoEnabled(participant.sessionId)\n            }\n            mirror={mirror}\n            autoPlay\n          />\n          {isComponentType(ParticipantViewUI) ? (\n            <ParticipantViewUI />\n          ) : (\n            ParticipantViewUI\n          )}\n        </ParticipantViewContext.Provider>\n      </div>\n    );\n  },\n);\n\nParticipantView.displayName = 'ParticipantView';\n", "import { ComponentType, PropsWithChildren } from 'react';\nimport {\n  StreamCallProvider,\n  StreamCallProviderProps,\n} from '@stream-io/video-react-bindings';\n\n// re-exporting the StreamCallProvider as StreamCall\nexport const StreamCall: ComponentType<\n  PropsWithChildren<StreamCallProviderProps>\n> = StreamCallProvider;\n\nStreamCall.displayName = 'StreamCall';\n", "import en from './en.json';\n\nexport const translations = { en };\n", "import {\n  StreamVideoProps,\n  StreamVideoProvider,\n} from '@stream-io/video-react-bindings';\nimport { PropsWithChildren } from 'react';\nimport { translations } from '../../../translations';\n\nexport const StreamVideo = (props: PropsWithChildren<StreamVideoProps>) => {\n  return (\n    <StreamVideoProvider translationsOverrides={translations} {...props} />\n  );\n};\n\nStreamVideo.displayName = 'StreamVideo';\n", "import { useEffect } from 'react';\nimport {\n  Call,\n  CallTypes,\n  combineComparators,\n  Comparator,\n  defaultSortPreset,\n  paginatedLayoutSortPreset,\n  screenSharing,\n  speakerLayoutSortPreset,\n  StreamVideoParticipant,\n} from '@stream-io/video-client';\n\nexport const usePaginatedLayoutSortPreset = (call: Call | undefined) => {\n  useEffect(() => {\n    if (!call) return;\n    call.setSortParticipantsBy(paginatedLayoutSortPreset);\n    return () => {\n      resetSortPreset(call);\n    };\n  }, [call]);\n};\n\nexport const useSpeakerLayoutSortPreset = (\n  call: Call | undefined,\n  isOneOnOneCall: boolean,\n) => {\n  useEffect(() => {\n    if (!call) return;\n    // always show the remote participant in the spotlight\n    if (isOneOnOneCall) {\n      call.setSortParticipantsBy(combineComparators(screenSharing, loggedIn));\n    } else {\n      call.setSortParticipantsBy(speakerLayoutSortPreset);\n    }\n    return () => {\n      resetSortPreset(call);\n    };\n  }, [call, isOneOnOneCall]);\n};\n\nconst resetSortPreset = (call: Call) => {\n  // reset the sorting to the default for the call type\n  const callConfig = CallTypes.get(call.type);\n  call.setSortParticipantsBy(\n    callConfig.options.sortParticipantsBy || defaultSortPreset,\n  );\n};\n\nconst loggedIn: Comparator<StreamVideoParticipant> = (a, b) => {\n  if (a.isLocalParticipant) return 1;\n  if (b.isLocalParticipant) return -1;\n  return 0;\n};\n", "import clsx from 'clsx';\nimport { useCallback, useEffect, useState } from 'react';\nimport {\n  useCall,\n  useCallStateHooks,\n  useI18n,\n} from '@stream-io/video-react-bindings';\nimport { hasScreenShare } from '@stream-io/video-client';\nimport { ParticipantView, useParticipantViewContext } from '../ParticipantView';\nimport { ParticipantsAudio } from '../Audio';\nimport { usePaginatedLayoutSortPreset } from './hooks';\n\n/**\n * The props for the {@link LivestreamLayout} component.\n */\nexport type LivestreamLayoutProps = {\n  /**\n   * Whether the livestream is muted. Defaults to `false`.\n   */\n  muted?: boolean;\n\n  /**\n   * Whether to show the participant count. Defaults to `true`.\n   */\n  showParticipantCount?: boolean;\n\n  /**\n   * Whether to enable fullscreen mode. Defaults to `true`.\n   */\n  enableFullScreen?: boolean;\n\n  /**\n   * Whether to show the duration of the call. Defaults to `true`.\n   */\n  showDuration?: boolean;\n\n  /**\n   * Whether to show the live badge. Defaults to `true`.\n   */\n  showLiveBadge?: boolean;\n\n  /**\n   * Whether to show the speaker name. Defaults to `false`.\n   */\n  showSpeakerName?: boolean;\n\n  /**\n   * When set to `false` disables mirroring of the local partipant's video.\n   * @default true\n   */\n  mirrorLocalParticipantVideo?: boolean;\n\n  /**\n   * The props to pass to the floating participant element.\n   */\n  floatingParticipantProps?: LivestreamLayoutProps & {\n    /**\n     * The position of the floating participant element. Defaults to `top-right`.\n     */\n    position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n  };\n};\n\nexport const LivestreamLayout = (props: LivestreamLayoutProps) => {\n  const { useParticipants, useRemoteParticipants, useHasOngoingScreenShare } =\n    useCallStateHooks();\n  const call = useCall();\n  const participants = useParticipants();\n  const [currentSpeaker] = participants;\n  const remoteParticipants = useRemoteParticipants();\n  const hasOngoingScreenShare = useHasOngoingScreenShare();\n  const presenter = hasOngoingScreenShare\n    ? participants.find(hasScreenShare)\n    : undefined;\n\n  usePaginatedLayoutSortPreset(call);\n\n  const Overlay = (\n    <ParticipantOverlay\n      showParticipantCount={props.showParticipantCount}\n      showDuration={props.showDuration}\n      showLiveBadge={props.showLiveBadge}\n      showSpeakerName={props.showSpeakerName}\n    />\n  );\n\n  const { floatingParticipantProps } = props;\n  const FloatingParticipantOverlay = hasOngoingScreenShare && (\n    <ParticipantOverlay\n      // these elements aren't needed for the video feed\n      showParticipantCount={\n        floatingParticipantProps?.showParticipantCount ?? false\n      }\n      showDuration={floatingParticipantProps?.showDuration ?? false}\n      showLiveBadge={floatingParticipantProps?.showLiveBadge ?? false}\n      showSpeakerName={floatingParticipantProps?.showSpeakerName ?? true}\n    />\n  );\n\n  return (\n    <div className=\"str-video__livestream-layout__wrapper\">\n      <ParticipantsAudio participants={remoteParticipants} />\n      {hasOngoingScreenShare && presenter && (\n        <ParticipantView\n          className=\"str-video__livestream-layout__screen-share\"\n          participant={presenter}\n          ParticipantViewUI={Overlay}\n          trackType=\"screenShareTrack\"\n          muteAudio // audio is rendered by ParticipantsAudio\n        />\n      )}\n      {currentSpeaker && (\n        <ParticipantView\n          className={clsx(\n            hasOngoingScreenShare &&\n              clsx(\n                'str-video__livestream-layout__floating-participant',\n                `str-video__livestream-layout__floating-participant--${\n                  floatingParticipantProps?.position ?? 'top-right'\n                }`,\n              ),\n          )}\n          participant={currentSpeaker}\n          ParticipantViewUI={FloatingParticipantOverlay || Overlay}\n          mirror={\n            props.mirrorLocalParticipantVideo !== false ? undefined : false\n          }\n          muteAudio // audio is rendered by ParticipantsAudio\n        />\n      )}\n    </div>\n  );\n};\n\nconst ParticipantOverlay = (props: {\n  enableFullScreen?: boolean;\n  showParticipantCount?: boolean;\n  showDuration?: boolean;\n  showLiveBadge?: boolean;\n  showSpeakerName?: boolean;\n}) => {\n  const {\n    enableFullScreen = true,\n    showParticipantCount = true,\n    showDuration = true,\n    showLiveBadge = true,\n    showSpeakerName = false,\n  } = props;\n  const { participant } = useParticipantViewContext();\n  const { useParticipantCount } = useCallStateHooks();\n  const participantCount = useParticipantCount();\n  const duration = useUpdateCallDuration();\n  const toggleFullScreen = useToggleFullScreen();\n  const { t } = useI18n();\n  return (\n    <div className=\"str-video__livestream-layout__overlay\">\n      <div className=\"str-video__livestream-layout__overlay__bar\">\n        {showLiveBadge && (\n          <span className=\"str-video__livestream-layout__live-badge\">\n            {t('Live')}\n          </span>\n        )}\n        {showParticipantCount && (\n          <span className=\"str-video__livestream-layout__viewers-count\">\n            {participantCount}\n          </span>\n        )}\n        {showSpeakerName && (\n          <span\n            className=\"str-video__livestream-layout__speaker-name\"\n            title={participant.name || participant.userId || ''}\n          >\n            {participant.name || participant.userId || ''}\n          </span>\n        )}\n        {showDuration && (\n          <span className=\"str-video__livestream-layout__duration\">\n            {formatDuration(duration)}\n          </span>\n        )}\n        {enableFullScreen && (\n          <span\n            className=\"str-video__livestream-layout__go-fullscreen\"\n            onClick={toggleFullScreen}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nLivestreamLayout.displayName = 'LivestreamLayout';\n\nconst useUpdateCallDuration = () => {\n  const { useIsCallLive, useCallSession } = useCallStateHooks();\n  const isCallLive = useIsCallLive();\n  const session = useCallSession();\n  const [duration, setDuration] = useState(() => {\n    if (!session || !session.live_started_at) return 0;\n    const liveStartTime = new Date(session.live_started_at);\n    const now = new Date();\n    return Math.floor((now.getTime() - liveStartTime.getTime()) / 1000);\n  });\n\n  useEffect(() => {\n    if (!isCallLive) return;\n    const interval = setInterval(() => {\n      setDuration((d) => d + 1);\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [isCallLive]);\n\n  return duration;\n};\n\nconst useToggleFullScreen = () => {\n  const { participantViewElement } = useParticipantViewContext();\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  return useCallback(() => {\n    if (isFullscreen) {\n      document.exitFullscreen().then(() => {\n        setIsFullscreen(false);\n      });\n    } else {\n      participantViewElement?.requestFullscreen().then(() => {\n        setIsFullscreen(true);\n      });\n    }\n  }, [isFullscreen, participantViewElement]);\n};\n\nconst formatDuration = (durationInMs: number) => {\n  const days = Math.floor(durationInMs / 86400);\n  const hours = Math.floor(durationInMs / 3600);\n  const minutes = Math.floor((durationInMs % 3600) / 60);\n  const seconds = durationInMs % 60;\n\n  return `${days ? days + ' ' : ''}${hours ? hours + ':' : ''}${\n    minutes < 10 ? '0' : ''\n  }${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n};\n", "import { useEffect, useMemo, useState } from 'react';\nimport { useCall, useCallStateHooks } from '@stream-io/video-react-bindings';\nimport { StreamVideoParticipant } from '@stream-io/video-client';\nimport clsx from 'clsx';\n\nimport {\n  DefaultParticipantViewUI,\n  ParticipantView,\n  ParticipantViewProps,\n} from '../ParticipantView';\nimport { ParticipantsAudio } from '../Audio';\nimport { IconButton } from '../../../components';\nimport { chunk } from '../../../utilities';\nimport { usePaginatedLayoutSortPreset } from './hooks';\n\nconst GROUP_SIZE = 16;\n\ntype PaginatedGridLayoutGroupProps = {\n  /**\n   * The group of participants to render.\n   */\n  group: Array<StreamVideoParticipant>;\n} & Pick<\n  ParticipantViewProps,\n  'VideoPlaceholder' | 'PictureInPicturePlaceholder' | 'mirror'\n> &\n  Required<Pick<ParticipantViewProps, 'ParticipantViewUI'>>;\n\nconst PaginatedGridLayoutGroup = ({\n  group,\n  mirror,\n  VideoPlaceholder,\n  PictureInPicturePlaceholder,\n  ParticipantViewUI,\n}: PaginatedGridLayoutGroupProps) => {\n  return (\n    <div\n      className={clsx('str-video__paginated-grid-layout__group', {\n        'str-video__paginated-grid-layout--one': group.length === 1,\n        'str-video__paginated-grid-layout--two-four':\n          group.length >= 2 && group.length <= 4,\n        'str-video__paginated-grid-layout--five-nine':\n          group.length >= 5 && group.length <= 9,\n      })}\n    >\n      {group.map((participant) => (\n        <ParticipantView\n          key={participant.sessionId}\n          participant={participant}\n          muteAudio\n          mirror={mirror}\n          VideoPlaceholder={VideoPlaceholder}\n          PictureInPicturePlaceholder={PictureInPicturePlaceholder}\n          ParticipantViewUI={ParticipantViewUI}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport type PaginatedGridLayoutProps = {\n  /**\n   * The number of participants to display per page.\n   */\n  groupSize?: number;\n\n  /**\n   * Whether to exclude the local participant from the grid.\n   * @default false\n   */\n  excludeLocalParticipant?: boolean;\n\n  /**\n   * When set to `false` disables mirroring of the local partipant's video.\n   * @default true\n   */\n  mirrorLocalParticipantVideo?: boolean;\n\n  /**\n   * Turns on/off the pagination arrows.\n   * @default true\n   */\n  pageArrowsVisible?: boolean;\n} & Pick<ParticipantViewProps, 'ParticipantViewUI' | 'VideoPlaceholder'>;\n\nexport const PaginatedGridLayout = (props: PaginatedGridLayoutProps) => {\n  const {\n    groupSize = (props.groupSize || 0) > 0\n      ? props.groupSize || GROUP_SIZE\n      : GROUP_SIZE,\n    excludeLocalParticipant = false,\n    mirrorLocalParticipantVideo = true,\n    pageArrowsVisible = true,\n    VideoPlaceholder,\n    ParticipantViewUI = DefaultParticipantViewUI,\n  } = props;\n  const [page, setPage] = useState(0);\n  const [\n    paginatedGridLayoutWrapperElement,\n    setPaginatedGridLayoutWrapperElement,\n  ] = useState<HTMLDivElement | null>(null);\n\n  const call = useCall();\n  const { useParticipants, useRemoteParticipants } = useCallStateHooks();\n  const participants = useParticipants();\n  const remoteParticipants = useRemoteParticipants();\n\n  usePaginatedLayoutSortPreset(call);\n\n  useEffect(() => {\n    if (!paginatedGridLayoutWrapperElement || !call) return;\n\n    const cleanup = call.setViewport(paginatedGridLayoutWrapperElement);\n\n    return () => cleanup();\n  }, [paginatedGridLayoutWrapperElement, call]);\n\n  // only used to render video elements\n  const participantGroups = useMemo(\n    () =>\n      chunk(\n        excludeLocalParticipant ? remoteParticipants : participants,\n        groupSize,\n      ),\n    [excludeLocalParticipant, remoteParticipants, participants, groupSize],\n  );\n\n  const pageCount = participantGroups.length;\n\n  // update page when page count is reduced and selected page no longer exists\n  useEffect(() => {\n    if (page > pageCount - 1) {\n      setPage(Math.max(0, pageCount - 1));\n    }\n  }, [page, pageCount]);\n\n  const selectedGroup = participantGroups[page];\n  const mirror = mirrorLocalParticipantVideo ? undefined : false;\n\n  if (!call) return null;\n\n  return (\n    <div\n      className=\"str-video__paginated-grid-layout__wrapper\"\n      ref={setPaginatedGridLayoutWrapperElement}\n    >\n      <ParticipantsAudio participants={remoteParticipants} />\n      <div className=\"str-video__paginated-grid-layout\">\n        {pageArrowsVisible && pageCount > 1 && (\n          <IconButton\n            icon=\"caret-left\"\n            disabled={page === 0}\n            onClick={() =>\n              setPage((currentPage) => Math.max(0, currentPage - 1))\n            }\n          />\n        )}\n        {selectedGroup && (\n          <PaginatedGridLayoutGroup\n            group={selectedGroup}\n            mirror={mirror}\n            VideoPlaceholder={VideoPlaceholder}\n            ParticipantViewUI={ParticipantViewUI}\n          />\n        )}\n        {pageArrowsVisible && pageCount > 1 && (\n          <IconButton\n            disabled={page === pageCount - 1}\n            icon=\"caret-right\"\n            onClick={() =>\n              setPage((currentPage) => Math.min(pageCount - 1, currentPage + 1))\n            }\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nPaginatedGridLayout.displayName = 'PaginatedGridLayout';\n", "import { useEffect, useState } from 'react';\n\nexport const useCalculateHardLimit = (\n  /**\n   * Element that stretches to 100% of the whole layout component\n   */\n  wrapperElement: HTMLDivElement | null,\n  /**\n   * Element that directly hosts individual `ParticipantView` (or wrapper) elements\n   */\n  hostElement: HTMLDivElement | null,\n  limit?: 'dynamic' | number,\n) => {\n  const [calculatedLimit, setCalculatedLimit] = useState<{\n    vertical: number | null;\n    horizontal: number | null;\n  }>({\n    vertical: typeof limit === 'number' ? limit : null,\n    horizontal: typeof limit === 'number' ? limit : null,\n  });\n\n  useEffect(() => {\n    if (\n      !hostElement ||\n      !wrapperElement ||\n      typeof limit === 'number' ||\n      typeof limit === 'undefined'\n    )\n      return;\n\n    let childWidth: number | null = null;\n    let childHeight: number | null = null;\n\n    const resizeObserver = new ResizeObserver((entries, observer) => {\n      // this part should ideally run as little times as possible\n      // get child measurements and disconnect\n      // does not consider dynamically sized children\n      // this hook is for SpeakerLayout use only, where children in the bar are fixed size\n      if (entries.length > 1) {\n        const child = hostElement.firstChild as HTMLElement | null;\n\n        if (child) {\n          childHeight = child.clientHeight;\n          childWidth = child.clientWidth;\n          observer.unobserve(hostElement);\n        }\n      }\n\n      // keep the state at { vertical: 1, horizontal: 1 }\n      // until we get the proper child measurements\n      if (childHeight === null || childWidth === null) return;\n\n      const vertical = Math.floor(wrapperElement.clientHeight / childHeight);\n      const horizontal = Math.floor(wrapperElement.clientWidth / childWidth);\n\n      setCalculatedLimit((pv) => {\n        if (pv.vertical !== vertical || pv.horizontal !== horizontal)\n          return { vertical, horizontal };\n        return pv;\n      });\n    });\n\n    resizeObserver.observe(wrapperElement);\n    resizeObserver.observe(hostElement);\n\n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, [hostElement, limit, wrapperElement]);\n\n  return calculatedLimit;\n};\n", "import { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { hasScreenShare } from '@stream-io/video-client';\nimport { useCall, useCallStateHooks } from '@stream-io/video-react-bindings';\n\nimport {\n  DefaultParticipantViewUI,\n  ParticipantView,\n  ParticipantViewProps,\n} from '../ParticipantView';\nimport { IconButton } from '../../../components';\nimport {\n  useHorizontalScrollPosition,\n  useVerticalScrollPosition,\n} from '../../../hooks';\nimport { useSpeakerLayoutSortPreset } from './hooks';\nimport { useCalculateHardLimit } from '../../hooks/useCalculateHardLimit';\nimport { ParticipantsAudio } from '../Audio';\n\nexport type SpeakerLayoutProps = {\n  /**\n   * The UI to be used for the participant in the spotlight.\n   */\n  ParticipantViewUISpotlight?: ParticipantViewProps['ParticipantViewUI'];\n  /**\n   * The UI to be used for the participants in the participants bar.\n   */\n  ParticipantViewUIBar?: ParticipantViewProps['ParticipantViewUI'];\n  /**\n   * The position of the participants who are not in focus.\n   * Providing `null` will hide the bar.\n   */\n  participantsBarPosition?: 'top' | 'bottom' | 'left' | 'right' | null;\n  /**\n   * Hard limits the number of the participants rendered in the participants bar.\n   * Providing string `dynamic` will calculate hard limit based on screen width/height.\n   */\n  participantsBarLimit?: 'dynamic' | number;\n  /**\n   * When set to `true` will exclude the local participant from layout.\n   * @default false\n   */\n  excludeLocalParticipant?: boolean;\n  /**\n   * When set to `false` disables mirroring of the local participant's video.\n   * @default true\n   */\n  mirrorLocalParticipantVideo?: boolean;\n  /**\n   * Turns on/off the pagination arrows.\n   * @default true\n   */\n  pageArrowsVisible?: boolean;\n} & Pick<\n  ParticipantViewProps,\n  'VideoPlaceholder' | 'PictureInPicturePlaceholder'\n>;\n\nconst DefaultParticipantViewUIBar = () => (\n  <DefaultParticipantViewUI menuPlacement=\"top-end\" />\n);\n\nexport const SpeakerLayout = ({\n  ParticipantViewUIBar = DefaultParticipantViewUIBar,\n  ParticipantViewUISpotlight = DefaultParticipantViewUI,\n  VideoPlaceholder,\n  PictureInPicturePlaceholder,\n  participantsBarPosition = 'bottom',\n  participantsBarLimit,\n  mirrorLocalParticipantVideo = true,\n  excludeLocalParticipant = false,\n  pageArrowsVisible = true,\n}: SpeakerLayoutProps) => {\n  const call = useCall();\n  const { useParticipants, useRemoteParticipants } = useCallStateHooks();\n  const allParticipants = useParticipants();\n  const remoteParticipants = useRemoteParticipants();\n  const [participantInSpotlight, ...otherParticipants] = excludeLocalParticipant\n    ? remoteParticipants\n    : allParticipants;\n  const [participantsBarWrapperElement, setParticipantsBarWrapperElement] =\n    useState<HTMLDivElement | null>(null);\n  const [participantsBarElement, setParticipantsBarElement] =\n    useState<HTMLDivElement | null>(null);\n  const [buttonsWrapperElement, setButtonsWrapperElement] =\n    useState<HTMLDivElement | null>(null);\n\n  const isSpeakerScreenSharing =\n    participantInSpotlight && hasScreenShare(participantInSpotlight);\n  const hardLimit = useCalculateHardLimit(\n    buttonsWrapperElement,\n    participantsBarElement,\n    participantsBarLimit,\n  );\n\n  const isVertical =\n    participantsBarPosition === 'left' || participantsBarPosition === 'right';\n  const isHorizontal =\n    participantsBarPosition === 'top' || participantsBarPosition === 'bottom';\n\n  useEffect(() => {\n    if (!participantsBarWrapperElement || !call) return;\n\n    const cleanup = call.setViewport(participantsBarWrapperElement);\n\n    return () => cleanup();\n  }, [participantsBarWrapperElement, call]);\n\n  const isOneOnOneCall = allParticipants.length === 2;\n  useSpeakerLayoutSortPreset(call, isOneOnOneCall);\n\n  let participantsWithAppliedLimit = otherParticipants;\n\n  const hardLimitToApply = isVertical\n    ? hardLimit.vertical\n    : hardLimit.horizontal;\n\n  if (\n    typeof participantsBarLimit !== 'undefined' &&\n    hardLimitToApply !== null\n  ) {\n    participantsWithAppliedLimit = otherParticipants.slice(\n      0,\n      // subtract 1 if speaker is sharing screen as\n      // that one is rendered independently from otherParticipants array\n      hardLimitToApply - (isSpeakerScreenSharing ? 1 : 0),\n    );\n  }\n\n  const mirror = mirrorLocalParticipantVideo ? undefined : false;\n\n  if (!call) return null;\n\n  const renderParticipantsBar =\n    participantsBarPosition &&\n    (participantsWithAppliedLimit.length > 0 || isSpeakerScreenSharing);\n  return (\n    <div className=\"str-video__speaker-layout__wrapper\">\n      <ParticipantsAudio participants={remoteParticipants} />\n      <div\n        className={clsx(\n          'str-video__speaker-layout',\n          participantsBarPosition &&\n            `str-video__speaker-layout--variant-${participantsBarPosition}`,\n        )}\n      >\n        <div className=\"str-video__speaker-layout__spotlight\">\n          {participantInSpotlight && (\n            <ParticipantView\n              participant={participantInSpotlight}\n              muteAudio={true}\n              mirror={mirror}\n              trackType={\n                isSpeakerScreenSharing ? 'screenShareTrack' : 'videoTrack'\n              }\n              ParticipantViewUI={ParticipantViewUISpotlight}\n              VideoPlaceholder={VideoPlaceholder}\n              PictureInPicturePlaceholder={PictureInPicturePlaceholder}\n            />\n          )}\n        </div>\n        {renderParticipantsBar && (\n          <div\n            ref={setButtonsWrapperElement}\n            className=\"str-video__speaker-layout__participants-bar-buttons-wrapper\"\n          >\n            <div\n              className=\"str-video__speaker-layout__participants-bar-wrapper\"\n              ref={setParticipantsBarWrapperElement}\n            >\n              <div\n                ref={setParticipantsBarElement}\n                className=\"str-video__speaker-layout__participants-bar\"\n              >\n                {isSpeakerScreenSharing && (\n                  <div\n                    className=\"str-video__speaker-layout__participant-tile\"\n                    key={participantInSpotlight.sessionId}\n                  >\n                    <ParticipantView\n                      participant={participantInSpotlight}\n                      ParticipantViewUI={ParticipantViewUIBar}\n                      VideoPlaceholder={VideoPlaceholder}\n                      PictureInPicturePlaceholder={PictureInPicturePlaceholder}\n                      mirror={mirror}\n                      muteAudio={true}\n                    />\n                  </div>\n                )}\n                {participantsWithAppliedLimit.map((participant) => (\n                  <div\n                    className=\"str-video__speaker-layout__participant-tile\"\n                    key={participant.sessionId}\n                  >\n                    <ParticipantView\n                      participant={participant}\n                      ParticipantViewUI={ParticipantViewUIBar}\n                      VideoPlaceholder={VideoPlaceholder}\n                      PictureInPicturePlaceholder={PictureInPicturePlaceholder}\n                      mirror={mirror}\n                      muteAudio={true}\n                    />\n                  </div>\n                ))}\n              </div>\n            </div>\n            {pageArrowsVisible && isVertical && (\n              <VerticalScrollButtons\n                scrollWrapper={participantsBarWrapperElement}\n              />\n            )}\n            {pageArrowsVisible && isHorizontal && (\n              <HorizontalScrollButtons\n                scrollWrapper={participantsBarWrapperElement}\n              />\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nSpeakerLayout.displayName = 'SpeakerLayout';\n\ntype ScrollButtonsProps<T extends HTMLElement> = {\n  scrollWrapper: T | null;\n};\n\nconst HorizontalScrollButtons = <T extends HTMLElement>({\n  scrollWrapper,\n}: ScrollButtonsProps<T>) => {\n  const scrollPosition = useHorizontalScrollPosition(scrollWrapper);\n\n  const scrollStartClickHandler = () => {\n    scrollWrapper?.scrollBy({ left: -150, behavior: 'smooth' });\n  };\n\n  const scrollEndClickHandler = () => {\n    scrollWrapper?.scrollBy({ left: 150, behavior: 'smooth' });\n  };\n  return (\n    <>\n      {scrollPosition && scrollPosition !== 'start' && (\n        <IconButton\n          onClick={scrollStartClickHandler}\n          icon=\"caret-left\"\n          className=\"str-video__speaker-layout__participants-bar--button-left\"\n        />\n      )}\n      {scrollPosition && scrollPosition !== 'end' && (\n        <IconButton\n          onClick={scrollEndClickHandler}\n          icon=\"caret-right\"\n          className=\"str-video__speaker-layout__participants-bar--button-right\"\n        />\n      )}\n    </>\n  );\n};\n\nconst VerticalScrollButtons = <T extends HTMLElement>({\n  scrollWrapper,\n}: ScrollButtonsProps<T>) => {\n  const scrollPosition = useVerticalScrollPosition(scrollWrapper);\n\n  const scrollTopClickHandler = () => {\n    scrollWrapper?.scrollBy({ top: -150, behavior: 'smooth' });\n  };\n\n  const scrollBottomClickHandler = () => {\n    scrollWrapper?.scrollBy({ top: 150, behavior: 'smooth' });\n  };\n  return (\n    <>\n      {scrollPosition && scrollPosition !== 'top' && (\n        <IconButton\n          onClick={scrollTopClickHandler}\n          icon=\"caret-up\"\n          className=\"str-video__speaker-layout__participants-bar--button-top\"\n        />\n      )}\n      {scrollPosition && scrollPosition !== 'bottom' && (\n        <IconButton\n          onClick={scrollBottomClickHandler}\n          icon=\"caret-down\"\n          className=\"str-video__speaker-layout__participants-bar--button-bottom\"\n        />\n      )}\n    </>\n  );\n};\n", "import { useEffect, useState } from 'react';\nimport { Call } from '@stream-io/video-client';\nimport { useStreamVideoClient } from '@stream-io/video-react-bindings';\nimport {\n  LivestreamLayout,\n  LivestreamLayoutProps,\n  StreamCall,\n} from '../../core';\n\nexport type LivestreamPlayerProps = {\n  /**\n   * The call type. Usually `livestream`.\n   */\n  callType: string;\n  /**\n   * The call ID.\n   */\n  callId: string;\n  /**\n   * The props for the {@link LivestreamLayout} component.\n   */\n  layoutProps?: LivestreamLayoutProps;\n};\n\nexport const LivestreamPlayer = (props: LivestreamPlayerProps) => {\n  const { callType, callId, layoutProps } = props;\n  const client = useStreamVideoClient();\n  const [call, setCall] = useState<Call>();\n  useEffect(() => {\n    if (!client) return;\n    const myCall = client.call(callType, callId);\n    setCall(myCall);\n    myCall.join().catch((e) => {\n      console.error('Failed to join call', e);\n    });\n    return () => {\n      myCall.leave().catch((e) => {\n        console.error('Failed to leave call', e);\n      });\n      setCall(undefined);\n    };\n  }, [callId, callType, client]);\n\n  return (\n    <StreamCall call={call}>\n      <LivestreamLayout {...layoutProps} />\n    </StreamCall>\n  );\n};\n", "import { setSdkInfo, SfuModels } from '@stream-io/video-client';\n\nexport * from '@stream-io/video-client';\nexport * from '@stream-io/video-react-bindings';\n\nexport * from './src/core';\n\nexport * from './src/components';\nexport * from './src/wrappers';\nexport * from './src/translations';\nexport {\n  useHorizontalScrollPosition,\n  useVerticalScrollPosition,\n  useRequestPermission,\n  usePersistedDevicePreferences,\n} from './src/hooks';\n\nconst [major, minor, patch] = (\n  process.env.PKG_VERSION || '0.0.0-development'\n).split('.');\n\nsetSdkInfo({\n  type: SfuModels.SdkType.REACT,\n  major,\n  minor,\n  patch,\n});\n"],
  "mappings": "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",
  "names": ["SDPUtils", "index", "sdp", "version", "window", "undefined", "EMPTY", "regexes", "version", "matches", "map", "UAParser", "ua", "sdp", "sdp", "fromByteArray", "len", "i", "len2", "window", "navigator", "name", "window", "navigator", "name", "matches", "window", "window", "name", "t", "sdp", "shimGetDisplayMedia", "shimGetUserMedia", "shimOnTrack", "shimPeerConnection", "shimGetUserMedia", "window", "navigator", "shimGetDisplayMedia", "window", "shimOnTrack", "window", "shimPeerConnection", "shimGetUserMedia", "window", "index", "shimGetUserMedia", "navigator", "RTCPeerConnection", "window", "SDPUtils", "version", "isFirefox", "sdp", "window", "logging", "adapter", "shimPeerConnection", "shimGetUserMedia", "shimOnTrack", "t", "UnknownFieldHandler", "WireType", "shift", "TWO_PWR_32_DBL", "t", "offset", "chunk", "defaultsWrite", "defaultsRead", "ScalarType", "LongType", "RepeatType", "name", "map", "e", "error", "jsonValue", "t", "name", "name", "T", "t", "name", "copy", "DeferredState", "error", "first", "__awaiter", "__awaiter", "__awaiter", "__awaiter", "__awaiter", "error", "TwirpErrorCode", "_a", "error", "instance", "index", "Subscription", "empty", "timeout", "error", "error", "Subscriber", "error", "ConsumerObserver", "error", "SafeSubscriber", "error", "Observable", "observable", "error", "init", "OperatorSubscriber", "err", "ConnectableObservable", "timestamp", "timestamp", "Subject", "observable", "AnonymousSubject", "BehaviorSubject", "ReplaySubject", "copy", "last", "AsyncSubject", "Action", "delay", "timeout", "AsyncAction", "delay", "error", "AsapAction", "delay", "Scheduler", "delay", "AsyncScheduler", "error", "AsapScheduler", "error", "QueueAction", "delay", "QueueScheduler", "AnimationFrameAction", "delay", "AnimationFrameScheduler", "error", "VirtualTimeScheduler", "error", "VirtualAction", "index", "delay", "process", "delay", "repeat", "delay", "delay", "iterator", "iterator", "init", "NotificationKind", "Notification", "error", "error", "index", "isArray", "i", "expand", "buffer", "index", "isArray", "first", "refCount", "windowTime", "refCount", "index", "NullValue", "matches", "PeerType", "ConnectionQuality", "VideoQuality", "TrackType", "ErrorCode", "SdkType", "TrackUnpublishReason", "GoAwayReason", "CallEndedReason", "WebsocketReconnectStrategy", "AndroidThermalState", "AppleThermalState", "CallState", "ICETrickle", "ICETrickle$Type", "Error", "Error$Type", "Call", "ICETrickle$", "Error$", "VisibilityState", "DebounceType", "logger", "level", "isFunction", "max", "min", "sdp", "t", "size", "index", "observable", "error", "CallingState", "RxUtils.setCurrentValue", "RxUtils.getCurrentValue", "count", "patch", "map", "connectionConfig", "sfuClient", "state", "Subscriber", "ws", "timeout", "timeoutId", "config", "platform", "_a", "cleanup", "name", "filter", "AUDIO_LEVEL_THRESHOLD", "ownCapabilities", "type", "members", "client", "isWSFailure", "interval", "WebSocket", "ConnectionState", "retry", "options", "version", "sdkInfo", "instance", "isString", "defer", "copy", "t", "last", "concat", "events", "index", "resolved", "count", "name", "error", "noop", "_jsx", "translations", "t", "isReactNative", "useCallSettings", "useOwnCapabilities", "_Fragment", "import_react", "activeElement", "version", "isSafari", "candidateSelectors", "candidateSelector", "join", "NoElement", "Element", "matches", "prototype", "msMatchesSelector", "webkitMatchesSelector", "getRootNode", "element", "_element$getRootNode", "call", "ownerDocument", "isInert", "node", "lookUp", "_node$getAttribute", "inertAtt", "getAttribute", "inert", "result", "parentNode", "isContentEditable", "_node$getAttribute2", "attValue", "getCandidates", "el", "includeContainer", "filter", "candidates", "Array", "slice", "apply", "querySelectorAll", "unshift", "getCandidatesIteratively", "elements", "options", "elementsToCheck", "from", "length", "shift", "tagName", "assigned", "assignedElements", "content", "children", "nestedCandidates", "flatten", "push", "scopeParent", "validCandidate", "includes", "shadowRoot", "getShadowRoot", "validShadowRoot", "shadowRootFilter", "hasTabIndex", "isNaN", "parseInt", "getTabIndex", "Error", "tabIndex", "test", "getSortOrderTabIndex", "isScope", "sortOrderedTabbables", "a", "b", "documentOrder", "isInput", "isHiddenInput", "type", "isDetailsWithSummary", "r", "some", "child", "getCheckedRadio", "nodes", "form", "i", "checked", "isTabbableRadio", "name", "radioScope", "queryRadios", "radioSet", "window", "CSS", "escape", "err", "console", "error", "message", "isRadio", "isNonTabbableRadio", "isNodeAttached", "_nodeRoot", "nodeRoot", "nodeRootHost", "host", "attached", "_nodeRootHost", "_nodeRootHost$ownerDo", "_node$ownerDocument", "contains", "_nodeRoot2", "_nodeRootHost2", "_nodeRootHost2$ownerD", "isZeroArea", "_node$getBoundingClie", "getBoundingClientRect", "width", "height", "isHidden", "_ref", "displayCheck", "getComputedStyle", "visibility", "isDirectSummary", "nodeUnderDetails", "parentElement", "originalNode", "rootNode", "assignedSlot", "getClientRects", "isDisabledFromFieldset", "disabled", "item", "isNodeMatchingSelectorFocusable", "isNodeMatchingSelectorTabbable", "isValidShadowRootTabbable", "shadowHostNode", "sortByOrder", "regularTabbables", "orderedTabbables", "forEach", "candidateTabindex", "sort", "reduce", "acc", "sortable", "concat", "tabbable", "container", "bind", "isTabbable", "node", "options", "Error", "matches", "call", "candidateSelector", "isNodeMatchingSelectorTabbable", "focusableCandidateSelector", "candidateSelectors", "concat", "join", "index", "offset", "map2", "map", "Composite", "CompositeItem", "count", "FloatingArrow", "arrow", "shift", "transform", "isRTL", "getComputedStyle", "t", "name", "context", "events", "delay", "onOpenChange", "open", "attr", "FocusGuard", "role", "isSafari", "VisuallyHiddenDismiss", "context", "events", "cleanup", "onOpenChange", "open", "FloatingOverlay", "context", "getComputedStyle", "events", "open", "useFloating", "node", "map", "context", "listRef", "indexRef", "item", "isSafari", "index", "props", "role", "context", "index", "isMobile", "buffer", "offset", "index", "SegmentationLevel", "level", "error", "err", "instance", "exports", "size", "version", "cleanup", "_jsx", "_jsxs", "Fragment", "context", "useFloating", "useMicrophoneState", "useCameraState", "useSpeakerState", "useHasPermissions", "error", "MenuVisualType", "_Fragment", "ToggleButton", "offset", "t", "size", "index", "BaseVideo", "name", "DefaultVideoPlaceholder", "DefaultPictureInPicturePlaceholder", "Video", "IconButton", "CompositeButton", "Menu", "ToggleMenuButton", "DefaultToggleMenuButton", "Notification", "timeout", "ToggleEndRecordingMenuButton", "timeoutId", "ToggleReactionsMenuButton", "logger", "useHasOngoingScreenShare", "useScreenShareState", "useCallSettings", "role", "ToggleDeviceSettingsMenuButton", "CancelCallToggleMenuButton", "Status", "useCallStatsReport", "config", "timestamp", "useParticipants", "useAnonymousParticipantCount", "LoadingIndicator", "DefaultLoadingIndicator", "useCallBlockedUserIds", "useCallThumbnail", "CallRecordingListHeader", "DefaultCallRecordingListHeader", "CallRecordingListItem", "DefaultCallRecordingListItem", "DefaultEmptyCallRecordingList", "DefaultLoadingCallRecordingList", "init", "useCallCallingState", "useCallMembers", "self", "useLocalParticipant", "PermissionRequestList", "ParticipantActionsContextMenu", "DefaultParticipantActionsContextMenu", "ParticipantView", "useIncomingVideoSettings", "useRemoteParticipants", "useParticipantCount", "useIsCallLive", "useCallSession", "interval", "major", "minor", "patch"]
}
